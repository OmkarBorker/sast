var Hj = Object.defineProperty;
var $j = (t, e, n) =>
  e in t
    ? Hj(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n })
    : (t[e] = n);
var ae = (t, e, n) => $j(t, typeof e != "symbol" ? e + "" : e, n);
function aE(t, e) {
  for (var n = 0; n < e.length; n++) {
    const r = e[n];
    if (typeof r != "string" && !Array.isArray(r)) {
      for (const i in r)
        if (i !== "default" && !(i in t)) {
          const o = Object.getOwnPropertyDescriptor(r, i);
          o &&
            Object.defineProperty(
              t,
              i,
              o.get ? o : { enumerable: !0, get: () => r[i] }
            );
        }
    }
  }
  return Object.freeze(
    Object.defineProperty(t, Symbol.toStringTag, { value: "Module" })
  );
}
(function () {
  const e = document.createElement("link").relList;
  if (e && e.supports && e.supports("modulepreload")) return;
  for (const i of document.querySelectorAll('link[rel="modulepreload"]')) r(i);
  new MutationObserver((i) => {
    for (const o of i)
      if (o.type === "childList")
        for (const a of o.addedNodes)
          a.tagName === "LINK" && a.rel === "modulepreload" && r(a);
  }).observe(document, { childList: !0, subtree: !0 });
  function n(i) {
    const o = {};
    return (
      i.integrity && (o.integrity = i.integrity),
      i.referrerPolicy && (o.referrerPolicy = i.referrerPolicy),
      i.crossOrigin === "use-credentials"
        ? (o.credentials = "include")
        : i.crossOrigin === "anonymous"
        ? (o.credentials = "omit")
        : (o.credentials = "same-origin"),
      o
    );
  }
  function r(i) {
    if (i.ep) return;
    i.ep = !0;
    const o = n(i);
    fetch(i.href, o);
  }
})();
var ou =
  typeof globalThis < "u"
    ? globalThis
    : typeof window < "u"
    ? window
    : typeof global < "u"
    ? global
    : typeof self < "u"
    ? self
    : {};
function Hi(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default")
    ? t.default
    : t;
}
var sE = { exports: {} },
  Dh = {},
  lE = { exports: {} },
  je = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Rc = Symbol.for("react.element"),
  Kj = Symbol.for("react.portal"),
  qj = Symbol.for("react.fragment"),
  Gj = Symbol.for("react.strict_mode"),
  Wj = Symbol.for("react.profiler"),
  Vj = Symbol.for("react.provider"),
  Qj = Symbol.for("react.context"),
  Yj = Symbol.for("react.forward_ref"),
  Xj = Symbol.for("react.suspense"),
  Jj = Symbol.for("react.memo"),
  Zj = Symbol.for("react.lazy"),
  HC = Symbol.iterator;
function eO(t) {
  return t === null || typeof t != "object"
    ? null
    : ((t = (HC && t[HC]) || t["@@iterator"]),
      typeof t == "function" ? t : null);
}
var cE = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  uE = Object.assign,
  dE = {};
function zs(t, e, n) {
  (this.props = t),
    (this.context = e),
    (this.refs = dE),
    (this.updater = n || cE);
}
zs.prototype.isReactComponent = {};
zs.prototype.setState = function (t, e) {
  if (typeof t != "object" && typeof t != "function" && t != null)
    throw Error(
      "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
    );
  this.updater.enqueueSetState(this, t, e, "setState");
};
zs.prototype.forceUpdate = function (t) {
  this.updater.enqueueForceUpdate(this, t, "forceUpdate");
};
function hE() {}
hE.prototype = zs.prototype;
function by(t, e, n) {
  (this.props = t),
    (this.context = e),
    (this.refs = dE),
    (this.updater = n || cE);
}
var Cy = (by.prototype = new hE());
Cy.constructor = by;
uE(Cy, zs.prototype);
Cy.isPureReactComponent = !0;
var $C = Array.isArray,
  fE = Object.prototype.hasOwnProperty,
  wy = { current: null },
  pE = { key: !0, ref: !0, __self: !0, __source: !0 };
function mE(t, e, n) {
  var r,
    i = {},
    o = null,
    a = null;
  if (e != null)
    for (r in (e.ref !== void 0 && (a = e.ref),
    e.key !== void 0 && (o = "" + e.key),
    e))
      fE.call(e, r) && !pE.hasOwnProperty(r) && (i[r] = e[r]);
  var l = arguments.length - 2;
  if (l === 1) i.children = n;
  else if (1 < l) {
    for (var c = Array(l), u = 0; u < l; u++) c[u] = arguments[u + 2];
    i.children = c;
  }
  if (t && t.defaultProps)
    for (r in ((l = t.defaultProps), l)) i[r] === void 0 && (i[r] = l[r]);
  return {
    $$typeof: Rc,
    type: t,
    key: o,
    ref: a,
    props: i,
    _owner: wy.current,
  };
}
function tO(t, e) {
  return {
    $$typeof: Rc,
    type: t.type,
    key: e,
    ref: t.ref,
    props: t.props,
    _owner: t._owner,
  };
}
function Sy(t) {
  return typeof t == "object" && t !== null && t.$$typeof === Rc;
}
function nO(t) {
  var e = { "=": "=0", ":": "=2" };
  return (
    "$" +
    t.replace(/[=:]/g, function (n) {
      return e[n];
    })
  );
}
var KC = /\/+/g;
function Hf(t, e) {
  return typeof t == "object" && t !== null && t.key != null
    ? nO("" + t.key)
    : e.toString(36);
}
function $u(t, e, n, r, i) {
  var o = typeof t;
  (o === "undefined" || o === "boolean") && (t = null);
  var a = !1;
  if (t === null) a = !0;
  else
    switch (o) {
      case "string":
      case "number":
        a = !0;
        break;
      case "object":
        switch (t.$$typeof) {
          case Rc:
          case Kj:
            a = !0;
        }
    }
  if (a)
    return (
      (a = t),
      (i = i(a)),
      (t = r === "" ? "." + Hf(a, 0) : r),
      $C(i)
        ? ((n = ""),
          t != null && (n = t.replace(KC, "$&/") + "/"),
          $u(i, e, n, "", function (u) {
            return u;
          }))
        : i != null &&
          (Sy(i) &&
            (i = tO(
              i,
              n +
                (!i.key || (a && a.key === i.key)
                  ? ""
                  : ("" + i.key).replace(KC, "$&/") + "/") +
                t
            )),
          e.push(i)),
      1
    );
  if (((a = 0), (r = r === "" ? "." : r + ":"), $C(t)))
    for (var l = 0; l < t.length; l++) {
      o = t[l];
      var c = r + Hf(o, l);
      a += $u(o, e, n, c, i);
    }
  else if (((c = eO(t)), typeof c == "function"))
    for (t = c.call(t), l = 0; !(o = t.next()).done; )
      (o = o.value), (c = r + Hf(o, l++)), (a += $u(o, e, n, c, i));
  else if (o === "object")
    throw (
      ((e = String(t)),
      Error(
        "Objects are not valid as a React child (found: " +
          (e === "[object Object]"
            ? "object with keys {" + Object.keys(t).join(", ") + "}"
            : e) +
          "). If you meant to render a collection of children, use an array instead."
      ))
    );
  return a;
}
function au(t, e, n) {
  if (t == null) return t;
  var r = [],
    i = 0;
  return (
    $u(t, r, "", "", function (o) {
      return e.call(n, o, i++);
    }),
    r
  );
}
function rO(t) {
  if (t._status === -1) {
    var e = t._result;
    (e = e()),
      e.then(
        function (n) {
          (t._status === 0 || t._status === -1) &&
            ((t._status = 1), (t._result = n));
        },
        function (n) {
          (t._status === 0 || t._status === -1) &&
            ((t._status = 2), (t._result = n));
        }
      ),
      t._status === -1 && ((t._status = 0), (t._result = e));
  }
  if (t._status === 1) return t._result.default;
  throw t._result;
}
var Cn = { current: null },
  Ku = { transition: null },
  iO = {
    ReactCurrentDispatcher: Cn,
    ReactCurrentBatchConfig: Ku,
    ReactCurrentOwner: wy,
  };
function gE() {
  throw Error("act(...) is not supported in production builds of React.");
}
je.Children = {
  map: au,
  forEach: function (t, e, n) {
    au(
      t,
      function () {
        e.apply(this, arguments);
      },
      n
    );
  },
  count: function (t) {
    var e = 0;
    return (
      au(t, function () {
        e++;
      }),
      e
    );
  },
  toArray: function (t) {
    return (
      au(t, function (e) {
        return e;
      }) || []
    );
  },
  only: function (t) {
    if (!Sy(t))
      throw Error(
        "React.Children.only expected to receive a single React element child."
      );
    return t;
  },
};
je.Component = zs;
je.Fragment = qj;
je.Profiler = Wj;
je.PureComponent = by;
je.StrictMode = Gj;
je.Suspense = Xj;
je.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = iO;
je.act = gE;
je.cloneElement = function (t, e, n) {
  if (t == null)
    throw Error(
      "React.cloneElement(...): The argument must be a React element, but you passed " +
        t +
        "."
    );
  var r = uE({}, t.props),
    i = t.key,
    o = t.ref,
    a = t._owner;
  if (e != null) {
    if (
      (e.ref !== void 0 && ((o = e.ref), (a = wy.current)),
      e.key !== void 0 && (i = "" + e.key),
      t.type && t.type.defaultProps)
    )
      var l = t.type.defaultProps;
    for (c in e)
      fE.call(e, c) &&
        !pE.hasOwnProperty(c) &&
        (r[c] = e[c] === void 0 && l !== void 0 ? l[c] : e[c]);
  }
  var c = arguments.length - 2;
  if (c === 1) r.children = n;
  else if (1 < c) {
    l = Array(c);
    for (var u = 0; u < c; u++) l[u] = arguments[u + 2];
    r.children = l;
  }
  return { $$typeof: Rc, type: t.type, key: i, ref: o, props: r, _owner: a };
};
je.createContext = function (t) {
  return (
    (t = {
      $$typeof: Qj,
      _currentValue: t,
      _currentValue2: t,
      _threadCount: 0,
      Provider: null,
      Consumer: null,
      _defaultValue: null,
      _globalName: null,
    }),
    (t.Provider = { $$typeof: Vj, _context: t }),
    (t.Consumer = t)
  );
};
je.createElement = mE;
je.createFactory = function (t) {
  var e = mE.bind(null, t);
  return (e.type = t), e;
};
je.createRef = function () {
  return { current: null };
};
je.forwardRef = function (t) {
  return { $$typeof: Yj, render: t };
};
je.isValidElement = Sy;
je.lazy = function (t) {
  return { $$typeof: Zj, _payload: { _status: -1, _result: t }, _init: rO };
};
je.memo = function (t, e) {
  return { $$typeof: Jj, type: t, compare: e === void 0 ? null : e };
};
je.startTransition = function (t) {
  var e = Ku.transition;
  Ku.transition = {};
  try {
    t();
  } finally {
    Ku.transition = e;
  }
};
je.unstable_act = gE;
je.useCallback = function (t, e) {
  return Cn.current.useCallback(t, e);
};
je.useContext = function (t) {
  return Cn.current.useContext(t);
};
je.useDebugValue = function () {};
je.useDeferredValue = function (t) {
  return Cn.current.useDeferredValue(t);
};
je.useEffect = function (t, e) {
  return Cn.current.useEffect(t, e);
};
je.useId = function () {
  return Cn.current.useId();
};
je.useImperativeHandle = function (t, e, n) {
  return Cn.current.useImperativeHandle(t, e, n);
};
je.useInsertionEffect = function (t, e) {
  return Cn.current.useInsertionEffect(t, e);
};
je.useLayoutEffect = function (t, e) {
  return Cn.current.useLayoutEffect(t, e);
};
je.useMemo = function (t, e) {
  return Cn.current.useMemo(t, e);
};
je.useReducer = function (t, e, n) {
  return Cn.current.useReducer(t, e, n);
};
je.useRef = function (t) {
  return Cn.current.useRef(t);
};
je.useState = function (t) {
  return Cn.current.useState(t);
};
je.useSyncExternalStore = function (t, e, n) {
  return Cn.current.useSyncExternalStore(t, e, n);
};
je.useTransition = function () {
  return Cn.current.useTransition();
};
je.version = "18.3.1";
lE.exports = je;
var x = lE.exports;
const k = Hi(x),
  em = aE({ __proto__: null, default: k }, [x]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var oO = x,
  aO = Symbol.for("react.element"),
  sO = Symbol.for("react.fragment"),
  lO = Object.prototype.hasOwnProperty,
  cO = oO.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  uO = { key: !0, ref: !0, __self: !0, __source: !0 };
function yE(t, e, n) {
  var r,
    i = {},
    o = null,
    a = null;
  n !== void 0 && (o = "" + n),
    e.key !== void 0 && (o = "" + e.key),
    e.ref !== void 0 && (a = e.ref);
  for (r in e) lO.call(e, r) && !uO.hasOwnProperty(r) && (i[r] = e[r]);
  if (t && t.defaultProps)
    for (r in ((e = t.defaultProps), e)) i[r] === void 0 && (i[r] = e[r]);
  return {
    $$typeof: aO,
    type: t,
    key: o,
    ref: a,
    props: i,
    _owner: cO.current,
  };
}
Dh.Fragment = sO;
Dh.jsx = yE;
Dh.jsxs = yE;
sE.exports = Dh;
var s = sE.exports,
  tm = {},
  vE = { exports: {} },
  Xn = {},
  bE = { exports: {} },
  CE = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (t) {
  function e(z, Q) {
    var q = z.length;
    z.push(Q);
    e: for (; 0 < q; ) {
      var ie = (q - 1) >>> 1,
        oe = z[ie];
      if (0 < i(oe, Q)) (z[ie] = Q), (z[q] = oe), (q = ie);
      else break e;
    }
  }
  function n(z) {
    return z.length === 0 ? null : z[0];
  }
  function r(z) {
    if (z.length === 0) return null;
    var Q = z[0],
      q = z.pop();
    if (q !== Q) {
      z[0] = q;
      e: for (var ie = 0, oe = z.length, pe = oe >>> 1; ie < pe; ) {
        var Ee = 2 * (ie + 1) - 1,
          ee = z[Ee],
          me = Ee + 1,
          Pe = z[me];
        if (0 > i(ee, q))
          me < oe && 0 > i(Pe, ee)
            ? ((z[ie] = Pe), (z[me] = q), (ie = me))
            : ((z[ie] = ee), (z[Ee] = q), (ie = Ee));
        else if (me < oe && 0 > i(Pe, q)) (z[ie] = Pe), (z[me] = q), (ie = me);
        else break e;
      }
    }
    return Q;
  }
  function i(z, Q) {
    var q = z.sortIndex - Q.sortIndex;
    return q !== 0 ? q : z.id - Q.id;
  }
  if (typeof performance == "object" && typeof performance.now == "function") {
    var o = performance;
    t.unstable_now = function () {
      return o.now();
    };
  } else {
    var a = Date,
      l = a.now();
    t.unstable_now = function () {
      return a.now() - l;
    };
  }
  var c = [],
    u = [],
    d = 1,
    h = null,
    f = 3,
    p = !1,
    m = !1,
    v = !1,
    C = typeof setTimeout == "function" ? setTimeout : null,
    b = typeof clearTimeout == "function" ? clearTimeout : null,
    g = typeof setImmediate < "u" ? setImmediate : null;
  typeof navigator < "u" &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function y(z) {
    for (var Q = n(u); Q !== null; ) {
      if (Q.callback === null) r(u);
      else if (Q.startTime <= z)
        r(u), (Q.sortIndex = Q.expirationTime), e(c, Q);
      else break;
      Q = n(u);
    }
  }
  function w(z) {
    if (((v = !1), y(z), !m))
      if (n(c) !== null) (m = !0), X(E);
      else {
        var Q = n(u);
        Q !== null && W(w, Q.startTime - z);
      }
  }
  function E(z, Q) {
    (m = !1), v && ((v = !1), b(I), (I = -1)), (p = !0);
    var q = f;
    try {
      for (
        y(Q), h = n(c);
        h !== null && (!(h.expirationTime > Q) || (z && !O()));

      ) {
        var ie = h.callback;
        if (typeof ie == "function") {
          (h.callback = null), (f = h.priorityLevel);
          var oe = ie(h.expirationTime <= Q);
          (Q = t.unstable_now()),
            typeof oe == "function" ? (h.callback = oe) : h === n(c) && r(c),
            y(Q);
        } else r(c);
        h = n(c);
      }
      if (h !== null) var pe = !0;
      else {
        var Ee = n(u);
        Ee !== null && W(w, Ee.startTime - Q), (pe = !1);
      }
      return pe;
    } finally {
      (h = null), (f = q), (p = !1);
    }
  }
  var S = !1,
    T = null,
    I = -1,
    R = 5,
    A = -1;
  function O() {
    return !(t.unstable_now() - A < R);
  }
  function _() {
    if (T !== null) {
      var z = t.unstable_now();
      A = z;
      var Q = !0;
      try {
        Q = T(!0, z);
      } finally {
        Q ? F() : ((S = !1), (T = null));
      }
    } else S = !1;
  }
  var F;
  if (typeof g == "function")
    F = function () {
      g(_);
    };
  else if (typeof MessageChannel < "u") {
    var $ = new MessageChannel(),
      Z = $.port2;
    ($.port1.onmessage = _),
      (F = function () {
        Z.postMessage(null);
      });
  } else
    F = function () {
      C(_, 0);
    };
  function X(z) {
    (T = z), S || ((S = !0), F());
  }
  function W(z, Q) {
    I = C(function () {
      z(t.unstable_now());
    }, Q);
  }
  (t.unstable_IdlePriority = 5),
    (t.unstable_ImmediatePriority = 1),
    (t.unstable_LowPriority = 4),
    (t.unstable_NormalPriority = 3),
    (t.unstable_Profiling = null),
    (t.unstable_UserBlockingPriority = 2),
    (t.unstable_cancelCallback = function (z) {
      z.callback = null;
    }),
    (t.unstable_continueExecution = function () {
      m || p || ((m = !0), X(E));
    }),
    (t.unstable_forceFrameRate = function (z) {
      0 > z || 125 < z
        ? console.error(
            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
          )
        : (R = 0 < z ? Math.floor(1e3 / z) : 5);
    }),
    (t.unstable_getCurrentPriorityLevel = function () {
      return f;
    }),
    (t.unstable_getFirstCallbackNode = function () {
      return n(c);
    }),
    (t.unstable_next = function (z) {
      switch (f) {
        case 1:
        case 2:
        case 3:
          var Q = 3;
          break;
        default:
          Q = f;
      }
      var q = f;
      f = Q;
      try {
        return z();
      } finally {
        f = q;
      }
    }),
    (t.unstable_pauseExecution = function () {}),
    (t.unstable_requestPaint = function () {}),
    (t.unstable_runWithPriority = function (z, Q) {
      switch (z) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          z = 3;
      }
      var q = f;
      f = z;
      try {
        return Q();
      } finally {
        f = q;
      }
    }),
    (t.unstable_scheduleCallback = function (z, Q, q) {
      var ie = t.unstable_now();
      switch (
        (typeof q == "object" && q !== null
          ? ((q = q.delay), (q = typeof q == "number" && 0 < q ? ie + q : ie))
          : (q = ie),
        z)
      ) {
        case 1:
          var oe = -1;
          break;
        case 2:
          oe = 250;
          break;
        case 5:
          oe = 1073741823;
          break;
        case 4:
          oe = 1e4;
          break;
        default:
          oe = 5e3;
      }
      return (
        (oe = q + oe),
        (z = {
          id: d++,
          callback: Q,
          priorityLevel: z,
          startTime: q,
          expirationTime: oe,
          sortIndex: -1,
        }),
        q > ie
          ? ((z.sortIndex = q),
            e(u, z),
            n(c) === null &&
              z === n(u) &&
              (v ? (b(I), (I = -1)) : (v = !0), W(w, q - ie)))
          : ((z.sortIndex = oe), e(c, z), m || p || ((m = !0), X(E))),
        z
      );
    }),
    (t.unstable_shouldYield = O),
    (t.unstable_wrapCallback = function (z) {
      var Q = f;
      return function () {
        var q = f;
        f = Q;
        try {
          return z.apply(this, arguments);
        } finally {
          f = q;
        }
      };
    });
})(CE);
bE.exports = CE;
var dO = bE.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var hO = x,
  Gn = dO;
function Y(t) {
  for (
    var e = "https://reactjs.org/docs/error-decoder.html?invariant=" + t, n = 1;
    n < arguments.length;
    n++
  )
    e += "&args[]=" + encodeURIComponent(arguments[n]);
  return (
    "Minified React error #" +
    t +
    "; visit " +
    e +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
  );
}
var wE = new Set(),
  Vl = {};
function ga(t, e) {
  vs(t, e), vs(t + "Capture", e);
}
function vs(t, e) {
  for (Vl[t] = e, t = 0; t < e.length; t++) wE.add(e[t]);
}
var Di = !(
    typeof window > "u" ||
    typeof window.document > "u" ||
    typeof window.document.createElement > "u"
  ),
  nm = Object.prototype.hasOwnProperty,
  fO =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  qC = {},
  GC = {};
function pO(t) {
  return nm.call(GC, t)
    ? !0
    : nm.call(qC, t)
    ? !1
    : fO.test(t)
    ? (GC[t] = !0)
    : ((qC[t] = !0), !1);
}
function mO(t, e, n, r) {
  if (n !== null && n.type === 0) return !1;
  switch (typeof e) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      return r
        ? !1
        : n !== null
        ? !n.acceptsBooleans
        : ((t = t.toLowerCase().slice(0, 5)), t !== "data-" && t !== "aria-");
    default:
      return !1;
  }
}
function gO(t, e, n, r) {
  if (e === null || typeof e > "u" || mO(t, e, n, r)) return !0;
  if (r) return !1;
  if (n !== null)
    switch (n.type) {
      case 3:
        return !e;
      case 4:
        return e === !1;
      case 5:
        return isNaN(e);
      case 6:
        return isNaN(e) || 1 > e;
    }
  return !1;
}
function wn(t, e, n, r, i, o, a) {
  (this.acceptsBooleans = e === 2 || e === 3 || e === 4),
    (this.attributeName = r),
    (this.attributeNamespace = i),
    (this.mustUseProperty = n),
    (this.propertyName = t),
    (this.type = e),
    (this.sanitizeURL = o),
    (this.removeEmptyString = a);
}
var an = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
  .split(" ")
  .forEach(function (t) {
    an[t] = new wn(t, 0, !1, t, null, !1, !1);
  });
[
  ["acceptCharset", "accept-charset"],
  ["className", "class"],
  ["htmlFor", "for"],
  ["httpEquiv", "http-equiv"],
].forEach(function (t) {
  var e = t[0];
  an[e] = new wn(e, 1, !1, t[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (t) {
  an[t] = new wn(t, 2, !1, t.toLowerCase(), null, !1, !1);
});
[
  "autoReverse",
  "externalResourcesRequired",
  "focusable",
  "preserveAlpha",
].forEach(function (t) {
  an[t] = new wn(t, 2, !1, t, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
  .split(" ")
  .forEach(function (t) {
    an[t] = new wn(t, 3, !1, t.toLowerCase(), null, !1, !1);
  });
["checked", "multiple", "muted", "selected"].forEach(function (t) {
  an[t] = new wn(t, 3, !0, t, null, !1, !1);
});
["capture", "download"].forEach(function (t) {
  an[t] = new wn(t, 4, !1, t, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (t) {
  an[t] = new wn(t, 6, !1, t, null, !1, !1);
});
["rowSpan", "start"].forEach(function (t) {
  an[t] = new wn(t, 5, !1, t.toLowerCase(), null, !1, !1);
});
var xy = /[\-:]([a-z])/g;
function Ey(t) {
  return t[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
  .split(" ")
  .forEach(function (t) {
    var e = t.replace(xy, Ey);
    an[e] = new wn(e, 1, !1, t, null, !1, !1);
  });
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
  .split(" ")
  .forEach(function (t) {
    var e = t.replace(xy, Ey);
    an[e] = new wn(e, 1, !1, t, "http://www.w3.org/1999/xlink", !1, !1);
  });
["xml:base", "xml:lang", "xml:space"].forEach(function (t) {
  var e = t.replace(xy, Ey);
  an[e] = new wn(e, 1, !1, t, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (t) {
  an[t] = new wn(t, 1, !1, t.toLowerCase(), null, !1, !1);
});
an.xlinkHref = new wn(
  "xlinkHref",
  1,
  !1,
  "xlink:href",
  "http://www.w3.org/1999/xlink",
  !0,
  !1
);
["src", "href", "action", "formAction"].forEach(function (t) {
  an[t] = new wn(t, 1, !1, t.toLowerCase(), null, !0, !0);
});
function Ty(t, e, n, r) {
  var i = an.hasOwnProperty(e) ? an[e] : null;
  (i !== null
    ? i.type !== 0
    : r ||
      !(2 < e.length) ||
      (e[0] !== "o" && e[0] !== "O") ||
      (e[1] !== "n" && e[1] !== "N")) &&
    (gO(e, n, i, r) && (n = null),
    r || i === null
      ? pO(e) && (n === null ? t.removeAttribute(e) : t.setAttribute(e, "" + n))
      : i.mustUseProperty
      ? (t[i.propertyName] = n === null ? (i.type === 3 ? !1 : "") : n)
      : ((e = i.attributeName),
        (r = i.attributeNamespace),
        n === null
          ? t.removeAttribute(e)
          : ((i = i.type),
            (n = i === 3 || (i === 4 && n === !0) ? "" : "" + n),
            r ? t.setAttributeNS(r, e, n) : t.setAttribute(e, n))));
}
var $i = hO.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  su = Symbol.for("react.element"),
  Ka = Symbol.for("react.portal"),
  qa = Symbol.for("react.fragment"),
  Iy = Symbol.for("react.strict_mode"),
  rm = Symbol.for("react.profiler"),
  SE = Symbol.for("react.provider"),
  xE = Symbol.for("react.context"),
  Ny = Symbol.for("react.forward_ref"),
  im = Symbol.for("react.suspense"),
  om = Symbol.for("react.suspense_list"),
  ky = Symbol.for("react.memo"),
  ro = Symbol.for("react.lazy"),
  EE = Symbol.for("react.offscreen"),
  WC = Symbol.iterator;
function rl(t) {
  return t === null || typeof t != "object"
    ? null
    : ((t = (WC && t[WC]) || t["@@iterator"]),
      typeof t == "function" ? t : null);
}
var Ct = Object.assign,
  $f;
function Cl(t) {
  if ($f === void 0)
    try {
      throw Error();
    } catch (n) {
      var e = n.stack.trim().match(/\n( *(at )?)/);
      $f = (e && e[1]) || "";
    }
  return (
    `
` +
    $f +
    t
  );
}
var Kf = !1;
function qf(t, e) {
  if (!t || Kf) return "";
  Kf = !0;
  var n = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (e)
      if (
        ((e = function () {
          throw Error();
        }),
        Object.defineProperty(e.prototype, "props", {
          set: function () {
            throw Error();
          },
        }),
        typeof Reflect == "object" && Reflect.construct)
      ) {
        try {
          Reflect.construct(e, []);
        } catch (u) {
          var r = u;
        }
        Reflect.construct(t, [], e);
      } else {
        try {
          e.call();
        } catch (u) {
          r = u;
        }
        t.call(e.prototype);
      }
    else {
      try {
        throw Error();
      } catch (u) {
        r = u;
      }
      t();
    }
  } catch (u) {
    if (u && r && typeof u.stack == "string") {
      for (
        var i = u.stack.split(`
`),
          o = r.stack.split(`
`),
          a = i.length - 1,
          l = o.length - 1;
        1 <= a && 0 <= l && i[a] !== o[l];

      )
        l--;
      for (; 1 <= a && 0 <= l; a--, l--)
        if (i[a] !== o[l]) {
          if (a !== 1 || l !== 1)
            do
              if ((a--, l--, 0 > l || i[a] !== o[l])) {
                var c =
                  `
` + i[a].replace(" at new ", " at ");
                return (
                  t.displayName &&
                    c.includes("<anonymous>") &&
                    (c = c.replace("<anonymous>", t.displayName)),
                  c
                );
              }
            while (1 <= a && 0 <= l);
          break;
        }
    }
  } finally {
    (Kf = !1), (Error.prepareStackTrace = n);
  }
  return (t = t ? t.displayName || t.name : "") ? Cl(t) : "";
}
function yO(t) {
  switch (t.tag) {
    case 5:
      return Cl(t.type);
    case 16:
      return Cl("Lazy");
    case 13:
      return Cl("Suspense");
    case 19:
      return Cl("SuspenseList");
    case 0:
    case 2:
    case 15:
      return (t = qf(t.type, !1)), t;
    case 11:
      return (t = qf(t.type.render, !1)), t;
    case 1:
      return (t = qf(t.type, !0)), t;
    default:
      return "";
  }
}
function am(t) {
  if (t == null) return null;
  if (typeof t == "function") return t.displayName || t.name || null;
  if (typeof t == "string") return t;
  switch (t) {
    case qa:
      return "Fragment";
    case Ka:
      return "Portal";
    case rm:
      return "Profiler";
    case Iy:
      return "StrictMode";
    case im:
      return "Suspense";
    case om:
      return "SuspenseList";
  }
  if (typeof t == "object")
    switch (t.$$typeof) {
      case xE:
        return (t.displayName || "Context") + ".Consumer";
      case SE:
        return (t._context.displayName || "Context") + ".Provider";
      case Ny:
        var e = t.render;
        return (
          (t = t.displayName),
          t ||
            ((t = e.displayName || e.name || ""),
            (t = t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef")),
          t
        );
      case ky:
        return (
          (e = t.displayName || null), e !== null ? e : am(t.type) || "Memo"
        );
      case ro:
        (e = t._payload), (t = t._init);
        try {
          return am(t(e));
        } catch {}
    }
  return null;
}
function vO(t) {
  var e = t.type;
  switch (t.tag) {
    case 24:
      return "Cache";
    case 9:
      return (e.displayName || "Context") + ".Consumer";
    case 10:
      return (e._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return (
        (t = e.render),
        (t = t.displayName || t.name || ""),
        e.displayName || (t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef")
      );
    case 7:
      return "Fragment";
    case 5:
      return e;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return am(e);
    case 8:
      return e === Iy ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof e == "function") return e.displayName || e.name || null;
      if (typeof e == "string") return e;
  }
  return null;
}
function wo(t) {
  switch (typeof t) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return t;
    case "object":
      return t;
    default:
      return "";
  }
}
function TE(t) {
  var e = t.type;
  return (
    (t = t.nodeName) &&
    t.toLowerCase() === "input" &&
    (e === "checkbox" || e === "radio")
  );
}
function bO(t) {
  var e = TE(t) ? "checked" : "value",
    n = Object.getOwnPropertyDescriptor(t.constructor.prototype, e),
    r = "" + t[e];
  if (
    !t.hasOwnProperty(e) &&
    typeof n < "u" &&
    typeof n.get == "function" &&
    typeof n.set == "function"
  ) {
    var i = n.get,
      o = n.set;
    return (
      Object.defineProperty(t, e, {
        configurable: !0,
        get: function () {
          return i.call(this);
        },
        set: function (a) {
          (r = "" + a), o.call(this, a);
        },
      }),
      Object.defineProperty(t, e, { enumerable: n.enumerable }),
      {
        getValue: function () {
          return r;
        },
        setValue: function (a) {
          r = "" + a;
        },
        stopTracking: function () {
          (t._valueTracker = null), delete t[e];
        },
      }
    );
  }
}
function lu(t) {
  t._valueTracker || (t._valueTracker = bO(t));
}
function IE(t) {
  if (!t) return !1;
  var e = t._valueTracker;
  if (!e) return !0;
  var n = e.getValue(),
    r = "";
  return (
    t && (r = TE(t) ? (t.checked ? "true" : "false") : t.value),
    (t = r),
    t !== n ? (e.setValue(t), !0) : !1
  );
}
function Nd(t) {
  if (((t = t || (typeof document < "u" ? document : void 0)), typeof t > "u"))
    return null;
  try {
    return t.activeElement || t.body;
  } catch {
    return t.body;
  }
}
function sm(t, e) {
  var n = e.checked;
  return Ct({}, e, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: n ?? t._wrapperState.initialChecked,
  });
}
function VC(t, e) {
  var n = e.defaultValue == null ? "" : e.defaultValue,
    r = e.checked != null ? e.checked : e.defaultChecked;
  (n = wo(e.value != null ? e.value : n)),
    (t._wrapperState = {
      initialChecked: r,
      initialValue: n,
      controlled:
        e.type === "checkbox" || e.type === "radio"
          ? e.checked != null
          : e.value != null,
    });
}
function NE(t, e) {
  (e = e.checked), e != null && Ty(t, "checked", e, !1);
}
function lm(t, e) {
  NE(t, e);
  var n = wo(e.value),
    r = e.type;
  if (n != null)
    r === "number"
      ? ((n === 0 && t.value === "") || t.value != n) && (t.value = "" + n)
      : t.value !== "" + n && (t.value = "" + n);
  else if (r === "submit" || r === "reset") {
    t.removeAttribute("value");
    return;
  }
  e.hasOwnProperty("value")
    ? cm(t, e.type, n)
    : e.hasOwnProperty("defaultValue") && cm(t, e.type, wo(e.defaultValue)),
    e.checked == null &&
      e.defaultChecked != null &&
      (t.defaultChecked = !!e.defaultChecked);
}
function QC(t, e, n) {
  if (e.hasOwnProperty("value") || e.hasOwnProperty("defaultValue")) {
    var r = e.type;
    if (
      !(
        (r !== "submit" && r !== "reset") ||
        (e.value !== void 0 && e.value !== null)
      )
    )
      return;
    (e = "" + t._wrapperState.initialValue),
      n || e === t.value || (t.value = e),
      (t.defaultValue = e);
  }
  (n = t.name),
    n !== "" && (t.name = ""),
    (t.defaultChecked = !!t._wrapperState.initialChecked),
    n !== "" && (t.name = n);
}
function cm(t, e, n) {
  (e !== "number" || Nd(t.ownerDocument) !== t) &&
    (n == null
      ? (t.defaultValue = "" + t._wrapperState.initialValue)
      : t.defaultValue !== "" + n && (t.defaultValue = "" + n));
}
var wl = Array.isArray;
function ls(t, e, n, r) {
  if (((t = t.options), e)) {
    e = {};
    for (var i = 0; i < n.length; i++) e["$" + n[i]] = !0;
    for (n = 0; n < t.length; n++)
      (i = e.hasOwnProperty("$" + t[n].value)),
        t[n].selected !== i && (t[n].selected = i),
        i && r && (t[n].defaultSelected = !0);
  } else {
    for (n = "" + wo(n), e = null, i = 0; i < t.length; i++) {
      if (t[i].value === n) {
        (t[i].selected = !0), r && (t[i].defaultSelected = !0);
        return;
      }
      e !== null || t[i].disabled || (e = t[i]);
    }
    e !== null && (e.selected = !0);
  }
}
function um(t, e) {
  if (e.dangerouslySetInnerHTML != null) throw Error(Y(91));
  return Ct({}, e, {
    value: void 0,
    defaultValue: void 0,
    children: "" + t._wrapperState.initialValue,
  });
}
function YC(t, e) {
  var n = e.value;
  if (n == null) {
    if (((n = e.children), (e = e.defaultValue), n != null)) {
      if (e != null) throw Error(Y(92));
      if (wl(n)) {
        if (1 < n.length) throw Error(Y(93));
        n = n[0];
      }
      e = n;
    }
    e == null && (e = ""), (n = e);
  }
  t._wrapperState = { initialValue: wo(n) };
}
function kE(t, e) {
  var n = wo(e.value),
    r = wo(e.defaultValue);
  n != null &&
    ((n = "" + n),
    n !== t.value && (t.value = n),
    e.defaultValue == null && t.defaultValue !== n && (t.defaultValue = n)),
    r != null && (t.defaultValue = "" + r);
}
function XC(t) {
  var e = t.textContent;
  e === t._wrapperState.initialValue && e !== "" && e !== null && (t.value = e);
}
function RE(t) {
  switch (t) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function dm(t, e) {
  return t == null || t === "http://www.w3.org/1999/xhtml"
    ? RE(e)
    : t === "http://www.w3.org/2000/svg" && e === "foreignObject"
    ? "http://www.w3.org/1999/xhtml"
    : t;
}
var cu,
  AE = (function (t) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
      ? function (e, n, r, i) {
          MSApp.execUnsafeLocalFunction(function () {
            return t(e, n, r, i);
          });
        }
      : t;
  })(function (t, e) {
    if (t.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in t)
      t.innerHTML = e;
    else {
      for (
        cu = cu || document.createElement("div"),
          cu.innerHTML = "<svg>" + e.valueOf().toString() + "</svg>",
          e = cu.firstChild;
        t.firstChild;

      )
        t.removeChild(t.firstChild);
      for (; e.firstChild; ) t.appendChild(e.firstChild);
    }
  });
function Ql(t, e) {
  if (e) {
    var n = t.firstChild;
    if (n && n === t.lastChild && n.nodeType === 3) {
      n.nodeValue = e;
      return;
    }
  }
  t.textContent = e;
}
var Rl = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0,
  },
  CO = ["Webkit", "ms", "Moz", "O"];
Object.keys(Rl).forEach(function (t) {
  CO.forEach(function (e) {
    (e = e + t.charAt(0).toUpperCase() + t.substring(1)), (Rl[e] = Rl[t]);
  });
});
function jE(t, e, n) {
  return e == null || typeof e == "boolean" || e === ""
    ? ""
    : n || typeof e != "number" || e === 0 || (Rl.hasOwnProperty(t) && Rl[t])
    ? ("" + e).trim()
    : e + "px";
}
function OE(t, e) {
  t = t.style;
  for (var n in e)
    if (e.hasOwnProperty(n)) {
      var r = n.indexOf("--") === 0,
        i = jE(n, e[n], r);
      n === "float" && (n = "cssFloat"), r ? t.setProperty(n, i) : (t[n] = i);
    }
}
var wO = Ct(
  { menuitem: !0 },
  {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  }
);
function hm(t, e) {
  if (e) {
    if (wO[t] && (e.children != null || e.dangerouslySetInnerHTML != null))
      throw Error(Y(137, t));
    if (e.dangerouslySetInnerHTML != null) {
      if (e.children != null) throw Error(Y(60));
      if (
        typeof e.dangerouslySetInnerHTML != "object" ||
        !("__html" in e.dangerouslySetInnerHTML)
      )
        throw Error(Y(61));
    }
    if (e.style != null && typeof e.style != "object") throw Error(Y(62));
  }
}
function fm(t, e) {
  if (t.indexOf("-") === -1) return typeof e.is == "string";
  switch (t) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var pm = null;
function Ry(t) {
  return (
    (t = t.target || t.srcElement || window),
    t.correspondingUseElement && (t = t.correspondingUseElement),
    t.nodeType === 3 ? t.parentNode : t
  );
}
var mm = null,
  cs = null,
  us = null;
function JC(t) {
  if ((t = Oc(t))) {
    if (typeof mm != "function") throw Error(Y(280));
    var e = t.stateNode;
    e && ((e = Fh(e)), mm(t.stateNode, t.type, e));
  }
}
function DE(t) {
  cs ? (us ? us.push(t) : (us = [t])) : (cs = t);
}
function LE() {
  if (cs) {
    var t = cs,
      e = us;
    if (((us = cs = null), JC(t), e)) for (t = 0; t < e.length; t++) JC(e[t]);
  }
}
function PE(t, e) {
  return t(e);
}
function _E() {}
var Gf = !1;
function ME(t, e, n) {
  if (Gf) return t(e, n);
  Gf = !0;
  try {
    return PE(t, e, n);
  } finally {
    (Gf = !1), (cs !== null || us !== null) && (_E(), LE());
  }
}
function Yl(t, e) {
  var n = t.stateNode;
  if (n === null) return null;
  var r = Fh(n);
  if (r === null) return null;
  n = r[e];
  e: switch (e) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (r = !r.disabled) ||
        ((t = t.type),
        (r = !(
          t === "button" ||
          t === "input" ||
          t === "select" ||
          t === "textarea"
        ))),
        (t = !r);
      break e;
    default:
      t = !1;
  }
  if (t) return null;
  if (n && typeof n != "function") throw Error(Y(231, e, typeof n));
  return n;
}
var gm = !1;
if (Di)
  try {
    var il = {};
    Object.defineProperty(il, "passive", {
      get: function () {
        gm = !0;
      },
    }),
      window.addEventListener("test", il, il),
      window.removeEventListener("test", il, il);
  } catch {
    gm = !1;
  }
function SO(t, e, n, r, i, o, a, l, c) {
  var u = Array.prototype.slice.call(arguments, 3);
  try {
    e.apply(n, u);
  } catch (d) {
    this.onError(d);
  }
}
var Al = !1,
  kd = null,
  Rd = !1,
  ym = null,
  xO = {
    onError: function (t) {
      (Al = !0), (kd = t);
    },
  };
function EO(t, e, n, r, i, o, a, l, c) {
  (Al = !1), (kd = null), SO.apply(xO, arguments);
}
function TO(t, e, n, r, i, o, a, l, c) {
  if ((EO.apply(this, arguments), Al)) {
    if (Al) {
      var u = kd;
      (Al = !1), (kd = null);
    } else throw Error(Y(198));
    Rd || ((Rd = !0), (ym = u));
  }
}
function ya(t) {
  var e = t,
    n = t;
  if (t.alternate) for (; e.return; ) e = e.return;
  else {
    t = e;
    do (e = t), e.flags & 4098 && (n = e.return), (t = e.return);
    while (t);
  }
  return e.tag === 3 ? n : null;
}
function FE(t) {
  if (t.tag === 13) {
    var e = t.memoizedState;
    if (
      (e === null && ((t = t.alternate), t !== null && (e = t.memoizedState)),
      e !== null)
    )
      return e.dehydrated;
  }
  return null;
}
function ZC(t) {
  if (ya(t) !== t) throw Error(Y(188));
}
function IO(t) {
  var e = t.alternate;
  if (!e) {
    if (((e = ya(t)), e === null)) throw Error(Y(188));
    return e !== t ? null : t;
  }
  for (var n = t, r = e; ; ) {
    var i = n.return;
    if (i === null) break;
    var o = i.alternate;
    if (o === null) {
      if (((r = i.return), r !== null)) {
        n = r;
        continue;
      }
      break;
    }
    if (i.child === o.child) {
      for (o = i.child; o; ) {
        if (o === n) return ZC(i), t;
        if (o === r) return ZC(i), e;
        o = o.sibling;
      }
      throw Error(Y(188));
    }
    if (n.return !== r.return) (n = i), (r = o);
    else {
      for (var a = !1, l = i.child; l; ) {
        if (l === n) {
          (a = !0), (n = i), (r = o);
          break;
        }
        if (l === r) {
          (a = !0), (r = i), (n = o);
          break;
        }
        l = l.sibling;
      }
      if (!a) {
        for (l = o.child; l; ) {
          if (l === n) {
            (a = !0), (n = o), (r = i);
            break;
          }
          if (l === r) {
            (a = !0), (r = o), (n = i);
            break;
          }
          l = l.sibling;
        }
        if (!a) throw Error(Y(189));
      }
    }
    if (n.alternate !== r) throw Error(Y(190));
  }
  if (n.tag !== 3) throw Error(Y(188));
  return n.stateNode.current === n ? t : e;
}
function BE(t) {
  return (t = IO(t)), t !== null ? UE(t) : null;
}
function UE(t) {
  if (t.tag === 5 || t.tag === 6) return t;
  for (t = t.child; t !== null; ) {
    var e = UE(t);
    if (e !== null) return e;
    t = t.sibling;
  }
  return null;
}
var zE = Gn.unstable_scheduleCallback,
  ew = Gn.unstable_cancelCallback,
  NO = Gn.unstable_shouldYield,
  kO = Gn.unstable_requestPaint,
  At = Gn.unstable_now,
  RO = Gn.unstable_getCurrentPriorityLevel,
  Ay = Gn.unstable_ImmediatePriority,
  HE = Gn.unstable_UserBlockingPriority,
  Ad = Gn.unstable_NormalPriority,
  AO = Gn.unstable_LowPriority,
  $E = Gn.unstable_IdlePriority,
  Lh = null,
  Zr = null;
function jO(t) {
  if (Zr && typeof Zr.onCommitFiberRoot == "function")
    try {
      Zr.onCommitFiberRoot(Lh, t, void 0, (t.current.flags & 128) === 128);
    } catch {}
}
var Tr = Math.clz32 ? Math.clz32 : LO,
  OO = Math.log,
  DO = Math.LN2;
function LO(t) {
  return (t >>>= 0), t === 0 ? 32 : (31 - ((OO(t) / DO) | 0)) | 0;
}
var uu = 64,
  du = 4194304;
function Sl(t) {
  switch (t & -t) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return t & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return t & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return t;
  }
}
function jd(t, e) {
  var n = t.pendingLanes;
  if (n === 0) return 0;
  var r = 0,
    i = t.suspendedLanes,
    o = t.pingedLanes,
    a = n & 268435455;
  if (a !== 0) {
    var l = a & ~i;
    l !== 0 ? (r = Sl(l)) : ((o &= a), o !== 0 && (r = Sl(o)));
  } else (a = n & ~i), a !== 0 ? (r = Sl(a)) : o !== 0 && (r = Sl(o));
  if (r === 0) return 0;
  if (
    e !== 0 &&
    e !== r &&
    !(e & i) &&
    ((i = r & -r), (o = e & -e), i >= o || (i === 16 && (o & 4194240) !== 0))
  )
    return e;
  if ((r & 4 && (r |= n & 16), (e = t.entangledLanes), e !== 0))
    for (t = t.entanglements, e &= r; 0 < e; )
      (n = 31 - Tr(e)), (i = 1 << n), (r |= t[n]), (e &= ~i);
  return r;
}
function PO(t, e) {
  switch (t) {
    case 1:
    case 2:
    case 4:
      return e + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return e + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function _O(t, e) {
  for (
    var n = t.suspendedLanes,
      r = t.pingedLanes,
      i = t.expirationTimes,
      o = t.pendingLanes;
    0 < o;

  ) {
    var a = 31 - Tr(o),
      l = 1 << a,
      c = i[a];
    c === -1
      ? (!(l & n) || l & r) && (i[a] = PO(l, e))
      : c <= e && (t.expiredLanes |= l),
      (o &= ~l);
  }
}
function vm(t) {
  return (
    (t = t.pendingLanes & -1073741825),
    t !== 0 ? t : t & 1073741824 ? 1073741824 : 0
  );
}
function KE() {
  var t = uu;
  return (uu <<= 1), !(uu & 4194240) && (uu = 64), t;
}
function Wf(t) {
  for (var e = [], n = 0; 31 > n; n++) e.push(t);
  return e;
}
function Ac(t, e, n) {
  (t.pendingLanes |= e),
    e !== 536870912 && ((t.suspendedLanes = 0), (t.pingedLanes = 0)),
    (t = t.eventTimes),
    (e = 31 - Tr(e)),
    (t[e] = n);
}
function MO(t, e) {
  var n = t.pendingLanes & ~e;
  (t.pendingLanes = e),
    (t.suspendedLanes = 0),
    (t.pingedLanes = 0),
    (t.expiredLanes &= e),
    (t.mutableReadLanes &= e),
    (t.entangledLanes &= e),
    (e = t.entanglements);
  var r = t.eventTimes;
  for (t = t.expirationTimes; 0 < n; ) {
    var i = 31 - Tr(n),
      o = 1 << i;
    (e[i] = 0), (r[i] = -1), (t[i] = -1), (n &= ~o);
  }
}
function jy(t, e) {
  var n = (t.entangledLanes |= e);
  for (t = t.entanglements; n; ) {
    var r = 31 - Tr(n),
      i = 1 << r;
    (i & e) | (t[r] & e) && (t[r] |= e), (n &= ~i);
  }
}
var We = 0;
function qE(t) {
  return (t &= -t), 1 < t ? (4 < t ? (t & 268435455 ? 16 : 536870912) : 4) : 1;
}
var GE,
  Oy,
  WE,
  VE,
  QE,
  bm = !1,
  hu = [],
  uo = null,
  ho = null,
  fo = null,
  Xl = new Map(),
  Jl = new Map(),
  ao = [],
  FO =
    "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
      " "
    );
function tw(t, e) {
  switch (t) {
    case "focusin":
    case "focusout":
      uo = null;
      break;
    case "dragenter":
    case "dragleave":
      ho = null;
      break;
    case "mouseover":
    case "mouseout":
      fo = null;
      break;
    case "pointerover":
    case "pointerout":
      Xl.delete(e.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Jl.delete(e.pointerId);
  }
}
function ol(t, e, n, r, i, o) {
  return t === null || t.nativeEvent !== o
    ? ((t = {
        blockedOn: e,
        domEventName: n,
        eventSystemFlags: r,
        nativeEvent: o,
        targetContainers: [i],
      }),
      e !== null && ((e = Oc(e)), e !== null && Oy(e)),
      t)
    : ((t.eventSystemFlags |= r),
      (e = t.targetContainers),
      i !== null && e.indexOf(i) === -1 && e.push(i),
      t);
}
function BO(t, e, n, r, i) {
  switch (e) {
    case "focusin":
      return (uo = ol(uo, t, e, n, r, i)), !0;
    case "dragenter":
      return (ho = ol(ho, t, e, n, r, i)), !0;
    case "mouseover":
      return (fo = ol(fo, t, e, n, r, i)), !0;
    case "pointerover":
      var o = i.pointerId;
      return Xl.set(o, ol(Xl.get(o) || null, t, e, n, r, i)), !0;
    case "gotpointercapture":
      return (
        (o = i.pointerId), Jl.set(o, ol(Jl.get(o) || null, t, e, n, r, i)), !0
      );
  }
  return !1;
}
function YE(t) {
  var e = Ho(t.target);
  if (e !== null) {
    var n = ya(e);
    if (n !== null) {
      if (((e = n.tag), e === 13)) {
        if (((e = FE(n)), e !== null)) {
          (t.blockedOn = e),
            QE(t.priority, function () {
              WE(n);
            });
          return;
        }
      } else if (e === 3 && n.stateNode.current.memoizedState.isDehydrated) {
        t.blockedOn = n.tag === 3 ? n.stateNode.containerInfo : null;
        return;
      }
    }
  }
  t.blockedOn = null;
}
function qu(t) {
  if (t.blockedOn !== null) return !1;
  for (var e = t.targetContainers; 0 < e.length; ) {
    var n = Cm(t.domEventName, t.eventSystemFlags, e[0], t.nativeEvent);
    if (n === null) {
      n = t.nativeEvent;
      var r = new n.constructor(n.type, n);
      (pm = r), n.target.dispatchEvent(r), (pm = null);
    } else return (e = Oc(n)), e !== null && Oy(e), (t.blockedOn = n), !1;
    e.shift();
  }
  return !0;
}
function nw(t, e, n) {
  qu(t) && n.delete(e);
}
function UO() {
  (bm = !1),
    uo !== null && qu(uo) && (uo = null),
    ho !== null && qu(ho) && (ho = null),
    fo !== null && qu(fo) && (fo = null),
    Xl.forEach(nw),
    Jl.forEach(nw);
}
function al(t, e) {
  t.blockedOn === e &&
    ((t.blockedOn = null),
    bm ||
      ((bm = !0),
      Gn.unstable_scheduleCallback(Gn.unstable_NormalPriority, UO)));
}
function Zl(t) {
  function e(i) {
    return al(i, t);
  }
  if (0 < hu.length) {
    al(hu[0], t);
    for (var n = 1; n < hu.length; n++) {
      var r = hu[n];
      r.blockedOn === t && (r.blockedOn = null);
    }
  }
  for (
    uo !== null && al(uo, t),
      ho !== null && al(ho, t),
      fo !== null && al(fo, t),
      Xl.forEach(e),
      Jl.forEach(e),
      n = 0;
    n < ao.length;
    n++
  )
    (r = ao[n]), r.blockedOn === t && (r.blockedOn = null);
  for (; 0 < ao.length && ((n = ao[0]), n.blockedOn === null); )
    YE(n), n.blockedOn === null && ao.shift();
}
var ds = $i.ReactCurrentBatchConfig,
  Od = !0;
function zO(t, e, n, r) {
  var i = We,
    o = ds.transition;
  ds.transition = null;
  try {
    (We = 1), Dy(t, e, n, r);
  } finally {
    (We = i), (ds.transition = o);
  }
}
function HO(t, e, n, r) {
  var i = We,
    o = ds.transition;
  ds.transition = null;
  try {
    (We = 4), Dy(t, e, n, r);
  } finally {
    (We = i), (ds.transition = o);
  }
}
function Dy(t, e, n, r) {
  if (Od) {
    var i = Cm(t, e, n, r);
    if (i === null) rp(t, e, r, Dd, n), tw(t, r);
    else if (BO(i, t, e, n, r)) r.stopPropagation();
    else if ((tw(t, r), e & 4 && -1 < FO.indexOf(t))) {
      for (; i !== null; ) {
        var o = Oc(i);
        if (
          (o !== null && GE(o),
          (o = Cm(t, e, n, r)),
          o === null && rp(t, e, r, Dd, n),
          o === i)
        )
          break;
        i = o;
      }
      i !== null && r.stopPropagation();
    } else rp(t, e, r, null, n);
  }
}
var Dd = null;
function Cm(t, e, n, r) {
  if (((Dd = null), (t = Ry(r)), (t = Ho(t)), t !== null))
    if (((e = ya(t)), e === null)) t = null;
    else if (((n = e.tag), n === 13)) {
      if (((t = FE(e)), t !== null)) return t;
      t = null;
    } else if (n === 3) {
      if (e.stateNode.current.memoizedState.isDehydrated)
        return e.tag === 3 ? e.stateNode.containerInfo : null;
      t = null;
    } else e !== t && (t = null);
  return (Dd = t), null;
}
function XE(t) {
  switch (t) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (RO()) {
        case Ay:
          return 1;
        case HE:
          return 4;
        case Ad:
        case AO:
          return 16;
        case $E:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var lo = null,
  Ly = null,
  Gu = null;
function JE() {
  if (Gu) return Gu;
  var t,
    e = Ly,
    n = e.length,
    r,
    i = "value" in lo ? lo.value : lo.textContent,
    o = i.length;
  for (t = 0; t < n && e[t] === i[t]; t++);
  var a = n - t;
  for (r = 1; r <= a && e[n - r] === i[o - r]; r++);
  return (Gu = i.slice(t, 1 < r ? 1 - r : void 0));
}
function Wu(t) {
  var e = t.keyCode;
  return (
    "charCode" in t
      ? ((t = t.charCode), t === 0 && e === 13 && (t = 13))
      : (t = e),
    t === 10 && (t = 13),
    32 <= t || t === 13 ? t : 0
  );
}
function fu() {
  return !0;
}
function rw() {
  return !1;
}
function Jn(t) {
  function e(n, r, i, o, a) {
    (this._reactName = n),
      (this._targetInst = i),
      (this.type = r),
      (this.nativeEvent = o),
      (this.target = a),
      (this.currentTarget = null);
    for (var l in t)
      t.hasOwnProperty(l) && ((n = t[l]), (this[l] = n ? n(o) : o[l]));
    return (
      (this.isDefaultPrevented = (
        o.defaultPrevented != null ? o.defaultPrevented : o.returnValue === !1
      )
        ? fu
        : rw),
      (this.isPropagationStopped = rw),
      this
    );
  }
  return (
    Ct(e.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0;
        var n = this.nativeEvent;
        n &&
          (n.preventDefault
            ? n.preventDefault()
            : typeof n.returnValue != "unknown" && (n.returnValue = !1),
          (this.isDefaultPrevented = fu));
      },
      stopPropagation: function () {
        var n = this.nativeEvent;
        n &&
          (n.stopPropagation
            ? n.stopPropagation()
            : typeof n.cancelBubble != "unknown" && (n.cancelBubble = !0),
          (this.isPropagationStopped = fu));
      },
      persist: function () {},
      isPersistent: fu,
    }),
    e
  );
}
var Hs = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (t) {
      return t.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  Py = Jn(Hs),
  jc = Ct({}, Hs, { view: 0, detail: 0 }),
  $O = Jn(jc),
  Vf,
  Qf,
  sl,
  Ph = Ct({}, jc, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: _y,
    button: 0,
    buttons: 0,
    relatedTarget: function (t) {
      return t.relatedTarget === void 0
        ? t.fromElement === t.srcElement
          ? t.toElement
          : t.fromElement
        : t.relatedTarget;
    },
    movementX: function (t) {
      return "movementX" in t
        ? t.movementX
        : (t !== sl &&
            (sl && t.type === "mousemove"
              ? ((Vf = t.screenX - sl.screenX), (Qf = t.screenY - sl.screenY))
              : (Qf = Vf = 0),
            (sl = t)),
          Vf);
    },
    movementY: function (t) {
      return "movementY" in t ? t.movementY : Qf;
    },
  }),
  iw = Jn(Ph),
  KO = Ct({}, Ph, { dataTransfer: 0 }),
  qO = Jn(KO),
  GO = Ct({}, jc, { relatedTarget: 0 }),
  Yf = Jn(GO),
  WO = Ct({}, Hs, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  VO = Jn(WO),
  QO = Ct({}, Hs, {
    clipboardData: function (t) {
      return "clipboardData" in t ? t.clipboardData : window.clipboardData;
    },
  }),
  YO = Jn(QO),
  XO = Ct({}, Hs, { data: 0 }),
  ow = Jn(XO),
  JO = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified",
  },
  ZO = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta",
  },
  eD = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey",
  };
function tD(t) {
  var e = this.nativeEvent;
  return e.getModifierState ? e.getModifierState(t) : (t = eD[t]) ? !!e[t] : !1;
}
function _y() {
  return tD;
}
var nD = Ct({}, jc, {
    key: function (t) {
      if (t.key) {
        var e = JO[t.key] || t.key;
        if (e !== "Unidentified") return e;
      }
      return t.type === "keypress"
        ? ((t = Wu(t)), t === 13 ? "Enter" : String.fromCharCode(t))
        : t.type === "keydown" || t.type === "keyup"
        ? ZO[t.keyCode] || "Unidentified"
        : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: _y,
    charCode: function (t) {
      return t.type === "keypress" ? Wu(t) : 0;
    },
    keyCode: function (t) {
      return t.type === "keydown" || t.type === "keyup" ? t.keyCode : 0;
    },
    which: function (t) {
      return t.type === "keypress"
        ? Wu(t)
        : t.type === "keydown" || t.type === "keyup"
        ? t.keyCode
        : 0;
    },
  }),
  rD = Jn(nD),
  iD = Ct({}, Ph, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  aw = Jn(iD),
  oD = Ct({}, jc, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: _y,
  }),
  aD = Jn(oD),
  sD = Ct({}, Hs, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  lD = Jn(sD),
  cD = Ct({}, Ph, {
    deltaX: function (t) {
      return "deltaX" in t ? t.deltaX : "wheelDeltaX" in t ? -t.wheelDeltaX : 0;
    },
    deltaY: function (t) {
      return "deltaY" in t
        ? t.deltaY
        : "wheelDeltaY" in t
        ? -t.wheelDeltaY
        : "wheelDelta" in t
        ? -t.wheelDelta
        : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  uD = Jn(cD),
  dD = [9, 13, 27, 32],
  My = Di && "CompositionEvent" in window,
  jl = null;
Di && "documentMode" in document && (jl = document.documentMode);
var hD = Di && "TextEvent" in window && !jl,
  ZE = Di && (!My || (jl && 8 < jl && 11 >= jl)),
  sw = " ",
  lw = !1;
function eT(t, e) {
  switch (t) {
    case "keyup":
      return dD.indexOf(e.keyCode) !== -1;
    case "keydown":
      return e.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function tT(t) {
  return (t = t.detail), typeof t == "object" && "data" in t ? t.data : null;
}
var Ga = !1;
function fD(t, e) {
  switch (t) {
    case "compositionend":
      return tT(e);
    case "keypress":
      return e.which !== 32 ? null : ((lw = !0), sw);
    case "textInput":
      return (t = e.data), t === sw && lw ? null : t;
    default:
      return null;
  }
}
function pD(t, e) {
  if (Ga)
    return t === "compositionend" || (!My && eT(t, e))
      ? ((t = JE()), (Gu = Ly = lo = null), (Ga = !1), t)
      : null;
  switch (t) {
    case "paste":
      return null;
    case "keypress":
      if (!(e.ctrlKey || e.altKey || e.metaKey) || (e.ctrlKey && e.altKey)) {
        if (e.char && 1 < e.char.length) return e.char;
        if (e.which) return String.fromCharCode(e.which);
      }
      return null;
    case "compositionend":
      return ZE && e.locale !== "ko" ? null : e.data;
    default:
      return null;
  }
}
var mD = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0,
};
function cw(t) {
  var e = t && t.nodeName && t.nodeName.toLowerCase();
  return e === "input" ? !!mD[t.type] : e === "textarea";
}
function nT(t, e, n, r) {
  DE(r),
    (e = Ld(e, "onChange")),
    0 < e.length &&
      ((n = new Py("onChange", "change", null, n, r)),
      t.push({ event: n, listeners: e }));
}
var Ol = null,
  ec = null;
function gD(t) {
  fT(t, 0);
}
function _h(t) {
  var e = Qa(t);
  if (IE(e)) return t;
}
function yD(t, e) {
  if (t === "change") return e;
}
var rT = !1;
if (Di) {
  var Xf;
  if (Di) {
    var Jf = "oninput" in document;
    if (!Jf) {
      var uw = document.createElement("div");
      uw.setAttribute("oninput", "return;"),
        (Jf = typeof uw.oninput == "function");
    }
    Xf = Jf;
  } else Xf = !1;
  rT = Xf && (!document.documentMode || 9 < document.documentMode);
}
function dw() {
  Ol && (Ol.detachEvent("onpropertychange", iT), (ec = Ol = null));
}
function iT(t) {
  if (t.propertyName === "value" && _h(ec)) {
    var e = [];
    nT(e, ec, t, Ry(t)), ME(gD, e);
  }
}
function vD(t, e, n) {
  t === "focusin"
    ? (dw(), (Ol = e), (ec = n), Ol.attachEvent("onpropertychange", iT))
    : t === "focusout" && dw();
}
function bD(t) {
  if (t === "selectionchange" || t === "keyup" || t === "keydown")
    return _h(ec);
}
function CD(t, e) {
  if (t === "click") return _h(e);
}
function wD(t, e) {
  if (t === "input" || t === "change") return _h(e);
}
function SD(t, e) {
  return (t === e && (t !== 0 || 1 / t === 1 / e)) || (t !== t && e !== e);
}
var Ar = typeof Object.is == "function" ? Object.is : SD;
function tc(t, e) {
  if (Ar(t, e)) return !0;
  if (typeof t != "object" || t === null || typeof e != "object" || e === null)
    return !1;
  var n = Object.keys(t),
    r = Object.keys(e);
  if (n.length !== r.length) return !1;
  for (r = 0; r < n.length; r++) {
    var i = n[r];
    if (!nm.call(e, i) || !Ar(t[i], e[i])) return !1;
  }
  return !0;
}
function hw(t) {
  for (; t && t.firstChild; ) t = t.firstChild;
  return t;
}
function fw(t, e) {
  var n = hw(t);
  t = 0;
  for (var r; n; ) {
    if (n.nodeType === 3) {
      if (((r = t + n.textContent.length), t <= e && r >= e))
        return { node: n, offset: e - t };
      t = r;
    }
    e: {
      for (; n; ) {
        if (n.nextSibling) {
          n = n.nextSibling;
          break e;
        }
        n = n.parentNode;
      }
      n = void 0;
    }
    n = hw(n);
  }
}
function oT(t, e) {
  return t && e
    ? t === e
      ? !0
      : t && t.nodeType === 3
      ? !1
      : e && e.nodeType === 3
      ? oT(t, e.parentNode)
      : "contains" in t
      ? t.contains(e)
      : t.compareDocumentPosition
      ? !!(t.compareDocumentPosition(e) & 16)
      : !1
    : !1;
}
function aT() {
  for (var t = window, e = Nd(); e instanceof t.HTMLIFrameElement; ) {
    try {
      var n = typeof e.contentWindow.location.href == "string";
    } catch {
      n = !1;
    }
    if (n) t = e.contentWindow;
    else break;
    e = Nd(t.document);
  }
  return e;
}
function Fy(t) {
  var e = t && t.nodeName && t.nodeName.toLowerCase();
  return (
    e &&
    ((e === "input" &&
      (t.type === "text" ||
        t.type === "search" ||
        t.type === "tel" ||
        t.type === "url" ||
        t.type === "password")) ||
      e === "textarea" ||
      t.contentEditable === "true")
  );
}
function xD(t) {
  var e = aT(),
    n = t.focusedElem,
    r = t.selectionRange;
  if (
    e !== n &&
    n &&
    n.ownerDocument &&
    oT(n.ownerDocument.documentElement, n)
  ) {
    if (r !== null && Fy(n)) {
      if (
        ((e = r.start),
        (t = r.end),
        t === void 0 && (t = e),
        "selectionStart" in n)
      )
        (n.selectionStart = e), (n.selectionEnd = Math.min(t, n.value.length));
      else if (
        ((t = ((e = n.ownerDocument || document) && e.defaultView) || window),
        t.getSelection)
      ) {
        t = t.getSelection();
        var i = n.textContent.length,
          o = Math.min(r.start, i);
        (r = r.end === void 0 ? o : Math.min(r.end, i)),
          !t.extend && o > r && ((i = r), (r = o), (o = i)),
          (i = fw(n, o));
        var a = fw(n, r);
        i &&
          a &&
          (t.rangeCount !== 1 ||
            t.anchorNode !== i.node ||
            t.anchorOffset !== i.offset ||
            t.focusNode !== a.node ||
            t.focusOffset !== a.offset) &&
          ((e = e.createRange()),
          e.setStart(i.node, i.offset),
          t.removeAllRanges(),
          o > r
            ? (t.addRange(e), t.extend(a.node, a.offset))
            : (e.setEnd(a.node, a.offset), t.addRange(e)));
      }
    }
    for (e = [], t = n; (t = t.parentNode); )
      t.nodeType === 1 &&
        e.push({ element: t, left: t.scrollLeft, top: t.scrollTop });
    for (typeof n.focus == "function" && n.focus(), n = 0; n < e.length; n++)
      (t = e[n]),
        (t.element.scrollLeft = t.left),
        (t.element.scrollTop = t.top);
  }
}
var ED = Di && "documentMode" in document && 11 >= document.documentMode,
  Wa = null,
  wm = null,
  Dl = null,
  Sm = !1;
function pw(t, e, n) {
  var r = n.window === n ? n.document : n.nodeType === 9 ? n : n.ownerDocument;
  Sm ||
    Wa == null ||
    Wa !== Nd(r) ||
    ((r = Wa),
    "selectionStart" in r && Fy(r)
      ? (r = { start: r.selectionStart, end: r.selectionEnd })
      : ((r = (
          (r.ownerDocument && r.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (r = {
          anchorNode: r.anchorNode,
          anchorOffset: r.anchorOffset,
          focusNode: r.focusNode,
          focusOffset: r.focusOffset,
        })),
    (Dl && tc(Dl, r)) ||
      ((Dl = r),
      (r = Ld(wm, "onSelect")),
      0 < r.length &&
        ((e = new Py("onSelect", "select", null, e, n)),
        t.push({ event: e, listeners: r }),
        (e.target = Wa))));
}
function pu(t, e) {
  var n = {};
  return (
    (n[t.toLowerCase()] = e.toLowerCase()),
    (n["Webkit" + t] = "webkit" + e),
    (n["Moz" + t] = "moz" + e),
    n
  );
}
var Va = {
    animationend: pu("Animation", "AnimationEnd"),
    animationiteration: pu("Animation", "AnimationIteration"),
    animationstart: pu("Animation", "AnimationStart"),
    transitionend: pu("Transition", "TransitionEnd"),
  },
  Zf = {},
  sT = {};
Di &&
  ((sT = document.createElement("div").style),
  "AnimationEvent" in window ||
    (delete Va.animationend.animation,
    delete Va.animationiteration.animation,
    delete Va.animationstart.animation),
  "TransitionEvent" in window || delete Va.transitionend.transition);
function Mh(t) {
  if (Zf[t]) return Zf[t];
  if (!Va[t]) return t;
  var e = Va[t],
    n;
  for (n in e) if (e.hasOwnProperty(n) && n in sT) return (Zf[t] = e[n]);
  return t;
}
var lT = Mh("animationend"),
  cT = Mh("animationiteration"),
  uT = Mh("animationstart"),
  dT = Mh("transitionend"),
  hT = new Map(),
  mw =
    "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
      " "
    );
function Ao(t, e) {
  hT.set(t, e), ga(e, [t]);
}
for (var ep = 0; ep < mw.length; ep++) {
  var tp = mw[ep],
    TD = tp.toLowerCase(),
    ID = tp[0].toUpperCase() + tp.slice(1);
  Ao(TD, "on" + ID);
}
Ao(lT, "onAnimationEnd");
Ao(cT, "onAnimationIteration");
Ao(uT, "onAnimationStart");
Ao("dblclick", "onDoubleClick");
Ao("focusin", "onFocus");
Ao("focusout", "onBlur");
Ao(dT, "onTransitionEnd");
vs("onMouseEnter", ["mouseout", "mouseover"]);
vs("onMouseLeave", ["mouseout", "mouseover"]);
vs("onPointerEnter", ["pointerout", "pointerover"]);
vs("onPointerLeave", ["pointerout", "pointerover"]);
ga(
  "onChange",
  "change click focusin focusout input keydown keyup selectionchange".split(" ")
);
ga(
  "onSelect",
  "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
    " "
  )
);
ga("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
ga(
  "onCompositionEnd",
  "compositionend focusout keydown keypress keyup mousedown".split(" ")
);
ga(
  "onCompositionStart",
  "compositionstart focusout keydown keypress keyup mousedown".split(" ")
);
ga(
  "onCompositionUpdate",
  "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
);
var xl =
    "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
      " "
    ),
  ND = new Set("cancel close invalid load scroll toggle".split(" ").concat(xl));
function gw(t, e, n) {
  var r = t.type || "unknown-event";
  (t.currentTarget = n), TO(r, e, void 0, t), (t.currentTarget = null);
}
function fT(t, e) {
  e = (e & 4) !== 0;
  for (var n = 0; n < t.length; n++) {
    var r = t[n],
      i = r.event;
    r = r.listeners;
    e: {
      var o = void 0;
      if (e)
        for (var a = r.length - 1; 0 <= a; a--) {
          var l = r[a],
            c = l.instance,
            u = l.currentTarget;
          if (((l = l.listener), c !== o && i.isPropagationStopped())) break e;
          gw(i, l, u), (o = c);
        }
      else
        for (a = 0; a < r.length; a++) {
          if (
            ((l = r[a]),
            (c = l.instance),
            (u = l.currentTarget),
            (l = l.listener),
            c !== o && i.isPropagationStopped())
          )
            break e;
          gw(i, l, u), (o = c);
        }
    }
  }
  if (Rd) throw ((t = ym), (Rd = !1), (ym = null), t);
}
function ct(t, e) {
  var n = e[Nm];
  n === void 0 && (n = e[Nm] = new Set());
  var r = t + "__bubble";
  n.has(r) || (pT(e, t, 2, !1), n.add(r));
}
function np(t, e, n) {
  var r = 0;
  e && (r |= 4), pT(n, t, r, e);
}
var mu = "_reactListening" + Math.random().toString(36).slice(2);
function nc(t) {
  if (!t[mu]) {
    (t[mu] = !0),
      wE.forEach(function (n) {
        n !== "selectionchange" && (ND.has(n) || np(n, !1, t), np(n, !0, t));
      });
    var e = t.nodeType === 9 ? t : t.ownerDocument;
    e === null || e[mu] || ((e[mu] = !0), np("selectionchange", !1, e));
  }
}
function pT(t, e, n, r) {
  switch (XE(e)) {
    case 1:
      var i = zO;
      break;
    case 4:
      i = HO;
      break;
    default:
      i = Dy;
  }
  (n = i.bind(null, e, n, t)),
    (i = void 0),
    !gm ||
      (e !== "touchstart" && e !== "touchmove" && e !== "wheel") ||
      (i = !0),
    r
      ? i !== void 0
        ? t.addEventListener(e, n, { capture: !0, passive: i })
        : t.addEventListener(e, n, !0)
      : i !== void 0
      ? t.addEventListener(e, n, { passive: i })
      : t.addEventListener(e, n, !1);
}
function rp(t, e, n, r, i) {
  var o = r;
  if (!(e & 1) && !(e & 2) && r !== null)
    e: for (;;) {
      if (r === null) return;
      var a = r.tag;
      if (a === 3 || a === 4) {
        var l = r.stateNode.containerInfo;
        if (l === i || (l.nodeType === 8 && l.parentNode === i)) break;
        if (a === 4)
          for (a = r.return; a !== null; ) {
            var c = a.tag;
            if (
              (c === 3 || c === 4) &&
              ((c = a.stateNode.containerInfo),
              c === i || (c.nodeType === 8 && c.parentNode === i))
            )
              return;
            a = a.return;
          }
        for (; l !== null; ) {
          if (((a = Ho(l)), a === null)) return;
          if (((c = a.tag), c === 5 || c === 6)) {
            r = o = a;
            continue e;
          }
          l = l.parentNode;
        }
      }
      r = r.return;
    }
  ME(function () {
    var u = o,
      d = Ry(n),
      h = [];
    e: {
      var f = hT.get(t);
      if (f !== void 0) {
        var p = Py,
          m = t;
        switch (t) {
          case "keypress":
            if (Wu(n) === 0) break e;
          case "keydown":
          case "keyup":
            p = rD;
            break;
          case "focusin":
            (m = "focus"), (p = Yf);
            break;
          case "focusout":
            (m = "blur"), (p = Yf);
            break;
          case "beforeblur":
          case "afterblur":
            p = Yf;
            break;
          case "click":
            if (n.button === 2) break e;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            p = iw;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            p = qO;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            p = aD;
            break;
          case lT:
          case cT:
          case uT:
            p = VO;
            break;
          case dT:
            p = lD;
            break;
          case "scroll":
            p = $O;
            break;
          case "wheel":
            p = uD;
            break;
          case "copy":
          case "cut":
          case "paste":
            p = YO;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            p = aw;
        }
        var v = (e & 4) !== 0,
          C = !v && t === "scroll",
          b = v ? (f !== null ? f + "Capture" : null) : f;
        v = [];
        for (var g = u, y; g !== null; ) {
          y = g;
          var w = y.stateNode;
          if (
            (y.tag === 5 &&
              w !== null &&
              ((y = w),
              b !== null && ((w = Yl(g, b)), w != null && v.push(rc(g, w, y)))),
            C)
          )
            break;
          g = g.return;
        }
        0 < v.length &&
          ((f = new p(f, m, null, n, d)), h.push({ event: f, listeners: v }));
      }
    }
    if (!(e & 7)) {
      e: {
        if (
          ((f = t === "mouseover" || t === "pointerover"),
          (p = t === "mouseout" || t === "pointerout"),
          f &&
            n !== pm &&
            (m = n.relatedTarget || n.fromElement) &&
            (Ho(m) || m[Li]))
        )
          break e;
        if (
          (p || f) &&
          ((f =
            d.window === d
              ? d
              : (f = d.ownerDocument)
              ? f.defaultView || f.parentWindow
              : window),
          p
            ? ((m = n.relatedTarget || n.toElement),
              (p = u),
              (m = m ? Ho(m) : null),
              m !== null &&
                ((C = ya(m)), m !== C || (m.tag !== 5 && m.tag !== 6)) &&
                (m = null))
            : ((p = null), (m = u)),
          p !== m)
        ) {
          if (
            ((v = iw),
            (w = "onMouseLeave"),
            (b = "onMouseEnter"),
            (g = "mouse"),
            (t === "pointerout" || t === "pointerover") &&
              ((v = aw),
              (w = "onPointerLeave"),
              (b = "onPointerEnter"),
              (g = "pointer")),
            (C = p == null ? f : Qa(p)),
            (y = m == null ? f : Qa(m)),
            (f = new v(w, g + "leave", p, n, d)),
            (f.target = C),
            (f.relatedTarget = y),
            (w = null),
            Ho(d) === u &&
              ((v = new v(b, g + "enter", m, n, d)),
              (v.target = y),
              (v.relatedTarget = C),
              (w = v)),
            (C = w),
            p && m)
          )
            t: {
              for (v = p, b = m, g = 0, y = v; y; y = Aa(y)) g++;
              for (y = 0, w = b; w; w = Aa(w)) y++;
              for (; 0 < g - y; ) (v = Aa(v)), g--;
              for (; 0 < y - g; ) (b = Aa(b)), y--;
              for (; g--; ) {
                if (v === b || (b !== null && v === b.alternate)) break t;
                (v = Aa(v)), (b = Aa(b));
              }
              v = null;
            }
          else v = null;
          p !== null && yw(h, f, p, v, !1),
            m !== null && C !== null && yw(h, C, m, v, !0);
        }
      }
      e: {
        if (
          ((f = u ? Qa(u) : window),
          (p = f.nodeName && f.nodeName.toLowerCase()),
          p === "select" || (p === "input" && f.type === "file"))
        )
          var E = yD;
        else if (cw(f))
          if (rT) E = wD;
          else {
            E = bD;
            var S = vD;
          }
        else
          (p = f.nodeName) &&
            p.toLowerCase() === "input" &&
            (f.type === "checkbox" || f.type === "radio") &&
            (E = CD);
        if (E && (E = E(t, u))) {
          nT(h, E, n, d);
          break e;
        }
        S && S(t, f, u),
          t === "focusout" &&
            (S = f._wrapperState) &&
            S.controlled &&
            f.type === "number" &&
            cm(f, "number", f.value);
      }
      switch (((S = u ? Qa(u) : window), t)) {
        case "focusin":
          (cw(S) || S.contentEditable === "true") &&
            ((Wa = S), (wm = u), (Dl = null));
          break;
        case "focusout":
          Dl = wm = Wa = null;
          break;
        case "mousedown":
          Sm = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          (Sm = !1), pw(h, n, d);
          break;
        case "selectionchange":
          if (ED) break;
        case "keydown":
        case "keyup":
          pw(h, n, d);
      }
      var T;
      if (My)
        e: {
          switch (t) {
            case "compositionstart":
              var I = "onCompositionStart";
              break e;
            case "compositionend":
              I = "onCompositionEnd";
              break e;
            case "compositionupdate":
              I = "onCompositionUpdate";
              break e;
          }
          I = void 0;
        }
      else
        Ga
          ? eT(t, n) && (I = "onCompositionEnd")
          : t === "keydown" && n.keyCode === 229 && (I = "onCompositionStart");
      I &&
        (ZE &&
          n.locale !== "ko" &&
          (Ga || I !== "onCompositionStart"
            ? I === "onCompositionEnd" && Ga && (T = JE())
            : ((lo = d),
              (Ly = "value" in lo ? lo.value : lo.textContent),
              (Ga = !0))),
        (S = Ld(u, I)),
        0 < S.length &&
          ((I = new ow(I, t, null, n, d)),
          h.push({ event: I, listeners: S }),
          T ? (I.data = T) : ((T = tT(n)), T !== null && (I.data = T)))),
        (T = hD ? fD(t, n) : pD(t, n)) &&
          ((u = Ld(u, "onBeforeInput")),
          0 < u.length &&
            ((d = new ow("onBeforeInput", "beforeinput", null, n, d)),
            h.push({ event: d, listeners: u }),
            (d.data = T)));
    }
    fT(h, e);
  });
}
function rc(t, e, n) {
  return { instance: t, listener: e, currentTarget: n };
}
function Ld(t, e) {
  for (var n = e + "Capture", r = []; t !== null; ) {
    var i = t,
      o = i.stateNode;
    i.tag === 5 &&
      o !== null &&
      ((i = o),
      (o = Yl(t, n)),
      o != null && r.unshift(rc(t, o, i)),
      (o = Yl(t, e)),
      o != null && r.push(rc(t, o, i))),
      (t = t.return);
  }
  return r;
}
function Aa(t) {
  if (t === null) return null;
  do t = t.return;
  while (t && t.tag !== 5);
  return t || null;
}
function yw(t, e, n, r, i) {
  for (var o = e._reactName, a = []; n !== null && n !== r; ) {
    var l = n,
      c = l.alternate,
      u = l.stateNode;
    if (c !== null && c === r) break;
    l.tag === 5 &&
      u !== null &&
      ((l = u),
      i
        ? ((c = Yl(n, o)), c != null && a.unshift(rc(n, c, l)))
        : i || ((c = Yl(n, o)), c != null && a.push(rc(n, c, l)))),
      (n = n.return);
  }
  a.length !== 0 && t.push({ event: e, listeners: a });
}
var kD = /\r\n?/g,
  RD = /\u0000|\uFFFD/g;
function vw(t) {
  return (typeof t == "string" ? t : "" + t)
    .replace(
      kD,
      `
`
    )
    .replace(RD, "");
}
function gu(t, e, n) {
  if (((e = vw(e)), vw(t) !== e && n)) throw Error(Y(425));
}
function Pd() {}
var xm = null,
  Em = null;
function Tm(t, e) {
  return (
    t === "textarea" ||
    t === "noscript" ||
    typeof e.children == "string" ||
    typeof e.children == "number" ||
    (typeof e.dangerouslySetInnerHTML == "object" &&
      e.dangerouslySetInnerHTML !== null &&
      e.dangerouslySetInnerHTML.__html != null)
  );
}
var Im = typeof setTimeout == "function" ? setTimeout : void 0,
  AD = typeof clearTimeout == "function" ? clearTimeout : void 0,
  bw = typeof Promise == "function" ? Promise : void 0,
  jD =
    typeof queueMicrotask == "function"
      ? queueMicrotask
      : typeof bw < "u"
      ? function (t) {
          return bw.resolve(null).then(t).catch(OD);
        }
      : Im;
function OD(t) {
  setTimeout(function () {
    throw t;
  });
}
function ip(t, e) {
  var n = e,
    r = 0;
  do {
    var i = n.nextSibling;
    if ((t.removeChild(n), i && i.nodeType === 8))
      if (((n = i.data), n === "/$")) {
        if (r === 0) {
          t.removeChild(i), Zl(e);
          return;
        }
        r--;
      } else (n !== "$" && n !== "$?" && n !== "$!") || r++;
    n = i;
  } while (n);
  Zl(e);
}
function po(t) {
  for (; t != null; t = t.nextSibling) {
    var e = t.nodeType;
    if (e === 1 || e === 3) break;
    if (e === 8) {
      if (((e = t.data), e === "$" || e === "$!" || e === "$?")) break;
      if (e === "/$") return null;
    }
  }
  return t;
}
function Cw(t) {
  t = t.previousSibling;
  for (var e = 0; t; ) {
    if (t.nodeType === 8) {
      var n = t.data;
      if (n === "$" || n === "$!" || n === "$?") {
        if (e === 0) return t;
        e--;
      } else n === "/$" && e++;
    }
    t = t.previousSibling;
  }
  return null;
}
var $s = Math.random().toString(36).slice(2),
  qr = "__reactFiber$" + $s,
  ic = "__reactProps$" + $s,
  Li = "__reactContainer$" + $s,
  Nm = "__reactEvents$" + $s,
  DD = "__reactListeners$" + $s,
  LD = "__reactHandles$" + $s;
function Ho(t) {
  var e = t[qr];
  if (e) return e;
  for (var n = t.parentNode; n; ) {
    if ((e = n[Li] || n[qr])) {
      if (
        ((n = e.alternate),
        e.child !== null || (n !== null && n.child !== null))
      )
        for (t = Cw(t); t !== null; ) {
          if ((n = t[qr])) return n;
          t = Cw(t);
        }
      return e;
    }
    (t = n), (n = t.parentNode);
  }
  return null;
}
function Oc(t) {
  return (
    (t = t[qr] || t[Li]),
    !t || (t.tag !== 5 && t.tag !== 6 && t.tag !== 13 && t.tag !== 3) ? null : t
  );
}
function Qa(t) {
  if (t.tag === 5 || t.tag === 6) return t.stateNode;
  throw Error(Y(33));
}
function Fh(t) {
  return t[ic] || null;
}
var km = [],
  Ya = -1;
function jo(t) {
  return { current: t };
}
function dt(t) {
  0 > Ya || ((t.current = km[Ya]), (km[Ya] = null), Ya--);
}
function lt(t, e) {
  Ya++, (km[Ya] = t.current), (t.current = e);
}
var So = {},
  mn = jo(So),
  Tn = jo(!1),
  ea = So;
function bs(t, e) {
  var n = t.type.contextTypes;
  if (!n) return So;
  var r = t.stateNode;
  if (r && r.__reactInternalMemoizedUnmaskedChildContext === e)
    return r.__reactInternalMemoizedMaskedChildContext;
  var i = {},
    o;
  for (o in n) i[o] = e[o];
  return (
    r &&
      ((t = t.stateNode),
      (t.__reactInternalMemoizedUnmaskedChildContext = e),
      (t.__reactInternalMemoizedMaskedChildContext = i)),
    i
  );
}
function In(t) {
  return (t = t.childContextTypes), t != null;
}
function _d() {
  dt(Tn), dt(mn);
}
function ww(t, e, n) {
  if (mn.current !== So) throw Error(Y(168));
  lt(mn, e), lt(Tn, n);
}
function mT(t, e, n) {
  var r = t.stateNode;
  if (((e = e.childContextTypes), typeof r.getChildContext != "function"))
    return n;
  r = r.getChildContext();
  for (var i in r) if (!(i in e)) throw Error(Y(108, vO(t) || "Unknown", i));
  return Ct({}, n, r);
}
function Md(t) {
  return (
    (t =
      ((t = t.stateNode) && t.__reactInternalMemoizedMergedChildContext) || So),
    (ea = mn.current),
    lt(mn, t),
    lt(Tn, Tn.current),
    !0
  );
}
function Sw(t, e, n) {
  var r = t.stateNode;
  if (!r) throw Error(Y(169));
  n
    ? ((t = mT(t, e, ea)),
      (r.__reactInternalMemoizedMergedChildContext = t),
      dt(Tn),
      dt(mn),
      lt(mn, t))
    : dt(Tn),
    lt(Tn, n);
}
var Ci = null,
  Bh = !1,
  op = !1;
function gT(t) {
  Ci === null ? (Ci = [t]) : Ci.push(t);
}
function PD(t) {
  (Bh = !0), gT(t);
}
function Oo() {
  if (!op && Ci !== null) {
    op = !0;
    var t = 0,
      e = We;
    try {
      var n = Ci;
      for (We = 1; t < n.length; t++) {
        var r = n[t];
        do r = r(!0);
        while (r !== null);
      }
      (Ci = null), (Bh = !1);
    } catch (i) {
      throw (Ci !== null && (Ci = Ci.slice(t + 1)), zE(Ay, Oo), i);
    } finally {
      (We = e), (op = !1);
    }
  }
  return null;
}
var Xa = [],
  Ja = 0,
  Fd = null,
  Bd = 0,
  er = [],
  tr = 0,
  ta = null,
  xi = 1,
  Ei = "";
function _o(t, e) {
  (Xa[Ja++] = Bd), (Xa[Ja++] = Fd), (Fd = t), (Bd = e);
}
function yT(t, e, n) {
  (er[tr++] = xi), (er[tr++] = Ei), (er[tr++] = ta), (ta = t);
  var r = xi;
  t = Ei;
  var i = 32 - Tr(r) - 1;
  (r &= ~(1 << i)), (n += 1);
  var o = 32 - Tr(e) + i;
  if (30 < o) {
    var a = i - (i % 5);
    (o = (r & ((1 << a) - 1)).toString(32)),
      (r >>= a),
      (i -= a),
      (xi = (1 << (32 - Tr(e) + i)) | (n << i) | r),
      (Ei = o + t);
  } else (xi = (1 << o) | (n << i) | r), (Ei = t);
}
function By(t) {
  t.return !== null && (_o(t, 1), yT(t, 1, 0));
}
function Uy(t) {
  for (; t === Fd; )
    (Fd = Xa[--Ja]), (Xa[Ja] = null), (Bd = Xa[--Ja]), (Xa[Ja] = null);
  for (; t === ta; )
    (ta = er[--tr]),
      (er[tr] = null),
      (Ei = er[--tr]),
      (er[tr] = null),
      (xi = er[--tr]),
      (er[tr] = null);
}
var Kn = null,
  Un = null,
  ft = !1,
  xr = null;
function vT(t, e) {
  var n = ir(5, null, null, 0);
  (n.elementType = "DELETED"),
    (n.stateNode = e),
    (n.return = t),
    (e = t.deletions),
    e === null ? ((t.deletions = [n]), (t.flags |= 16)) : e.push(n);
}
function xw(t, e) {
  switch (t.tag) {
    case 5:
      var n = t.type;
      return (
        (e =
          e.nodeType !== 1 || n.toLowerCase() !== e.nodeName.toLowerCase()
            ? null
            : e),
        e !== null
          ? ((t.stateNode = e), (Kn = t), (Un = po(e.firstChild)), !0)
          : !1
      );
    case 6:
      return (
        (e = t.pendingProps === "" || e.nodeType !== 3 ? null : e),
        e !== null ? ((t.stateNode = e), (Kn = t), (Un = null), !0) : !1
      );
    case 13:
      return (
        (e = e.nodeType !== 8 ? null : e),
        e !== null
          ? ((n = ta !== null ? { id: xi, overflow: Ei } : null),
            (t.memoizedState = {
              dehydrated: e,
              treeContext: n,
              retryLane: 1073741824,
            }),
            (n = ir(18, null, null, 0)),
            (n.stateNode = e),
            (n.return = t),
            (t.child = n),
            (Kn = t),
            (Un = null),
            !0)
          : !1
      );
    default:
      return !1;
  }
}
function Rm(t) {
  return (t.mode & 1) !== 0 && (t.flags & 128) === 0;
}
function Am(t) {
  if (ft) {
    var e = Un;
    if (e) {
      var n = e;
      if (!xw(t, e)) {
        if (Rm(t)) throw Error(Y(418));
        e = po(n.nextSibling);
        var r = Kn;
        e && xw(t, e)
          ? vT(r, n)
          : ((t.flags = (t.flags & -4097) | 2), (ft = !1), (Kn = t));
      }
    } else {
      if (Rm(t)) throw Error(Y(418));
      (t.flags = (t.flags & -4097) | 2), (ft = !1), (Kn = t);
    }
  }
}
function Ew(t) {
  for (t = t.return; t !== null && t.tag !== 5 && t.tag !== 3 && t.tag !== 13; )
    t = t.return;
  Kn = t;
}
function yu(t) {
  if (t !== Kn) return !1;
  if (!ft) return Ew(t), (ft = !0), !1;
  var e;
  if (
    ((e = t.tag !== 3) &&
      !(e = t.tag !== 5) &&
      ((e = t.type),
      (e = e !== "head" && e !== "body" && !Tm(t.type, t.memoizedProps))),
    e && (e = Un))
  ) {
    if (Rm(t)) throw (bT(), Error(Y(418)));
    for (; e; ) vT(t, e), (e = po(e.nextSibling));
  }
  if ((Ew(t), t.tag === 13)) {
    if (((t = t.memoizedState), (t = t !== null ? t.dehydrated : null), !t))
      throw Error(Y(317));
    e: {
      for (t = t.nextSibling, e = 0; t; ) {
        if (t.nodeType === 8) {
          var n = t.data;
          if (n === "/$") {
            if (e === 0) {
              Un = po(t.nextSibling);
              break e;
            }
            e--;
          } else (n !== "$" && n !== "$!" && n !== "$?") || e++;
        }
        t = t.nextSibling;
      }
      Un = null;
    }
  } else Un = Kn ? po(t.stateNode.nextSibling) : null;
  return !0;
}
function bT() {
  for (var t = Un; t; ) t = po(t.nextSibling);
}
function Cs() {
  (Un = Kn = null), (ft = !1);
}
function zy(t) {
  xr === null ? (xr = [t]) : xr.push(t);
}
var _D = $i.ReactCurrentBatchConfig;
function ll(t, e, n) {
  if (
    ((t = n.ref), t !== null && typeof t != "function" && typeof t != "object")
  ) {
    if (n._owner) {
      if (((n = n._owner), n)) {
        if (n.tag !== 1) throw Error(Y(309));
        var r = n.stateNode;
      }
      if (!r) throw Error(Y(147, t));
      var i = r,
        o = "" + t;
      return e !== null &&
        e.ref !== null &&
        typeof e.ref == "function" &&
        e.ref._stringRef === o
        ? e.ref
        : ((e = function (a) {
            var l = i.refs;
            a === null ? delete l[o] : (l[o] = a);
          }),
          (e._stringRef = o),
          e);
    }
    if (typeof t != "string") throw Error(Y(284));
    if (!n._owner) throw Error(Y(290, t));
  }
  return t;
}
function vu(t, e) {
  throw (
    ((t = Object.prototype.toString.call(e)),
    Error(
      Y(
        31,
        t === "[object Object]"
          ? "object with keys {" + Object.keys(e).join(", ") + "}"
          : t
      )
    ))
  );
}
function Tw(t) {
  var e = t._init;
  return e(t._payload);
}
function CT(t) {
  function e(b, g) {
    if (t) {
      var y = b.deletions;
      y === null ? ((b.deletions = [g]), (b.flags |= 16)) : y.push(g);
    }
  }
  function n(b, g) {
    if (!t) return null;
    for (; g !== null; ) e(b, g), (g = g.sibling);
    return null;
  }
  function r(b, g) {
    for (b = new Map(); g !== null; )
      g.key !== null ? b.set(g.key, g) : b.set(g.index, g), (g = g.sibling);
    return b;
  }
  function i(b, g) {
    return (b = vo(b, g)), (b.index = 0), (b.sibling = null), b;
  }
  function o(b, g, y) {
    return (
      (b.index = y),
      t
        ? ((y = b.alternate),
          y !== null
            ? ((y = y.index), y < g ? ((b.flags |= 2), g) : y)
            : ((b.flags |= 2), g))
        : ((b.flags |= 1048576), g)
    );
  }
  function a(b) {
    return t && b.alternate === null && (b.flags |= 2), b;
  }
  function l(b, g, y, w) {
    return g === null || g.tag !== 6
      ? ((g = hp(y, b.mode, w)), (g.return = b), g)
      : ((g = i(g, y)), (g.return = b), g);
  }
  function c(b, g, y, w) {
    var E = y.type;
    return E === qa
      ? d(b, g, y.props.children, w, y.key)
      : g !== null &&
        (g.elementType === E ||
          (typeof E == "object" &&
            E !== null &&
            E.$$typeof === ro &&
            Tw(E) === g.type))
      ? ((w = i(g, y.props)), (w.ref = ll(b, g, y)), (w.return = b), w)
      : ((w = ed(y.type, y.key, y.props, null, b.mode, w)),
        (w.ref = ll(b, g, y)),
        (w.return = b),
        w);
  }
  function u(b, g, y, w) {
    return g === null ||
      g.tag !== 4 ||
      g.stateNode.containerInfo !== y.containerInfo ||
      g.stateNode.implementation !== y.implementation
      ? ((g = fp(y, b.mode, w)), (g.return = b), g)
      : ((g = i(g, y.children || [])), (g.return = b), g);
  }
  function d(b, g, y, w, E) {
    return g === null || g.tag !== 7
      ? ((g = Xo(y, b.mode, w, E)), (g.return = b), g)
      : ((g = i(g, y)), (g.return = b), g);
  }
  function h(b, g, y) {
    if ((typeof g == "string" && g !== "") || typeof g == "number")
      return (g = hp("" + g, b.mode, y)), (g.return = b), g;
    if (typeof g == "object" && g !== null) {
      switch (g.$$typeof) {
        case su:
          return (
            (y = ed(g.type, g.key, g.props, null, b.mode, y)),
            (y.ref = ll(b, null, g)),
            (y.return = b),
            y
          );
        case Ka:
          return (g = fp(g, b.mode, y)), (g.return = b), g;
        case ro:
          var w = g._init;
          return h(b, w(g._payload), y);
      }
      if (wl(g) || rl(g))
        return (g = Xo(g, b.mode, y, null)), (g.return = b), g;
      vu(b, g);
    }
    return null;
  }
  function f(b, g, y, w) {
    var E = g !== null ? g.key : null;
    if ((typeof y == "string" && y !== "") || typeof y == "number")
      return E !== null ? null : l(b, g, "" + y, w);
    if (typeof y == "object" && y !== null) {
      switch (y.$$typeof) {
        case su:
          return y.key === E ? c(b, g, y, w) : null;
        case Ka:
          return y.key === E ? u(b, g, y, w) : null;
        case ro:
          return (E = y._init), f(b, g, E(y._payload), w);
      }
      if (wl(y) || rl(y)) return E !== null ? null : d(b, g, y, w, null);
      vu(b, y);
    }
    return null;
  }
  function p(b, g, y, w, E) {
    if ((typeof w == "string" && w !== "") || typeof w == "number")
      return (b = b.get(y) || null), l(g, b, "" + w, E);
    if (typeof w == "object" && w !== null) {
      switch (w.$$typeof) {
        case su:
          return (b = b.get(w.key === null ? y : w.key) || null), c(g, b, w, E);
        case Ka:
          return (b = b.get(w.key === null ? y : w.key) || null), u(g, b, w, E);
        case ro:
          var S = w._init;
          return p(b, g, y, S(w._payload), E);
      }
      if (wl(w) || rl(w)) return (b = b.get(y) || null), d(g, b, w, E, null);
      vu(g, w);
    }
    return null;
  }
  function m(b, g, y, w) {
    for (
      var E = null, S = null, T = g, I = (g = 0), R = null;
      T !== null && I < y.length;
      I++
    ) {
      T.index > I ? ((R = T), (T = null)) : (R = T.sibling);
      var A = f(b, T, y[I], w);
      if (A === null) {
        T === null && (T = R);
        break;
      }
      t && T && A.alternate === null && e(b, T),
        (g = o(A, g, I)),
        S === null ? (E = A) : (S.sibling = A),
        (S = A),
        (T = R);
    }
    if (I === y.length) return n(b, T), ft && _o(b, I), E;
    if (T === null) {
      for (; I < y.length; I++)
        (T = h(b, y[I], w)),
          T !== null &&
            ((g = o(T, g, I)), S === null ? (E = T) : (S.sibling = T), (S = T));
      return ft && _o(b, I), E;
    }
    for (T = r(b, T); I < y.length; I++)
      (R = p(T, b, I, y[I], w)),
        R !== null &&
          (t && R.alternate !== null && T.delete(R.key === null ? I : R.key),
          (g = o(R, g, I)),
          S === null ? (E = R) : (S.sibling = R),
          (S = R));
    return (
      t &&
        T.forEach(function (O) {
          return e(b, O);
        }),
      ft && _o(b, I),
      E
    );
  }
  function v(b, g, y, w) {
    var E = rl(y);
    if (typeof E != "function") throw Error(Y(150));
    if (((y = E.call(y)), y == null)) throw Error(Y(151));
    for (
      var S = (E = null), T = g, I = (g = 0), R = null, A = y.next();
      T !== null && !A.done;
      I++, A = y.next()
    ) {
      T.index > I ? ((R = T), (T = null)) : (R = T.sibling);
      var O = f(b, T, A.value, w);
      if (O === null) {
        T === null && (T = R);
        break;
      }
      t && T && O.alternate === null && e(b, T),
        (g = o(O, g, I)),
        S === null ? (E = O) : (S.sibling = O),
        (S = O),
        (T = R);
    }
    if (A.done) return n(b, T), ft && _o(b, I), E;
    if (T === null) {
      for (; !A.done; I++, A = y.next())
        (A = h(b, A.value, w)),
          A !== null &&
            ((g = o(A, g, I)), S === null ? (E = A) : (S.sibling = A), (S = A));
      return ft && _o(b, I), E;
    }
    for (T = r(b, T); !A.done; I++, A = y.next())
      (A = p(T, b, I, A.value, w)),
        A !== null &&
          (t && A.alternate !== null && T.delete(A.key === null ? I : A.key),
          (g = o(A, g, I)),
          S === null ? (E = A) : (S.sibling = A),
          (S = A));
    return (
      t &&
        T.forEach(function (_) {
          return e(b, _);
        }),
      ft && _o(b, I),
      E
    );
  }
  function C(b, g, y, w) {
    if (
      (typeof y == "object" &&
        y !== null &&
        y.type === qa &&
        y.key === null &&
        (y = y.props.children),
      typeof y == "object" && y !== null)
    ) {
      switch (y.$$typeof) {
        case su:
          e: {
            for (var E = y.key, S = g; S !== null; ) {
              if (S.key === E) {
                if (((E = y.type), E === qa)) {
                  if (S.tag === 7) {
                    n(b, S.sibling),
                      (g = i(S, y.props.children)),
                      (g.return = b),
                      (b = g);
                    break e;
                  }
                } else if (
                  S.elementType === E ||
                  (typeof E == "object" &&
                    E !== null &&
                    E.$$typeof === ro &&
                    Tw(E) === S.type)
                ) {
                  n(b, S.sibling),
                    (g = i(S, y.props)),
                    (g.ref = ll(b, S, y)),
                    (g.return = b),
                    (b = g);
                  break e;
                }
                n(b, S);
                break;
              } else e(b, S);
              S = S.sibling;
            }
            y.type === qa
              ? ((g = Xo(y.props.children, b.mode, w, y.key)),
                (g.return = b),
                (b = g))
              : ((w = ed(y.type, y.key, y.props, null, b.mode, w)),
                (w.ref = ll(b, g, y)),
                (w.return = b),
                (b = w));
          }
          return a(b);
        case Ka:
          e: {
            for (S = y.key; g !== null; ) {
              if (g.key === S)
                if (
                  g.tag === 4 &&
                  g.stateNode.containerInfo === y.containerInfo &&
                  g.stateNode.implementation === y.implementation
                ) {
                  n(b, g.sibling),
                    (g = i(g, y.children || [])),
                    (g.return = b),
                    (b = g);
                  break e;
                } else {
                  n(b, g);
                  break;
                }
              else e(b, g);
              g = g.sibling;
            }
            (g = fp(y, b.mode, w)), (g.return = b), (b = g);
          }
          return a(b);
        case ro:
          return (S = y._init), C(b, g, S(y._payload), w);
      }
      if (wl(y)) return m(b, g, y, w);
      if (rl(y)) return v(b, g, y, w);
      vu(b, y);
    }
    return (typeof y == "string" && y !== "") || typeof y == "number"
      ? ((y = "" + y),
        g !== null && g.tag === 6
          ? (n(b, g.sibling), (g = i(g, y)), (g.return = b), (b = g))
          : (n(b, g), (g = hp(y, b.mode, w)), (g.return = b), (b = g)),
        a(b))
      : n(b, g);
  }
  return C;
}
var ws = CT(!0),
  wT = CT(!1),
  Ud = jo(null),
  zd = null,
  Za = null,
  Hy = null;
function $y() {
  Hy = Za = zd = null;
}
function Ky(t) {
  var e = Ud.current;
  dt(Ud), (t._currentValue = e);
}
function jm(t, e, n) {
  for (; t !== null; ) {
    var r = t.alternate;
    if (
      ((t.childLanes & e) !== e
        ? ((t.childLanes |= e), r !== null && (r.childLanes |= e))
        : r !== null && (r.childLanes & e) !== e && (r.childLanes |= e),
      t === n)
    )
      break;
    t = t.return;
  }
}
function hs(t, e) {
  (zd = t),
    (Hy = Za = null),
    (t = t.dependencies),
    t !== null &&
      t.firstContext !== null &&
      (t.lanes & e && (En = !0), (t.firstContext = null));
}
function hr(t) {
  var e = t._currentValue;
  if (Hy !== t)
    if (((t = { context: t, memoizedValue: e, next: null }), Za === null)) {
      if (zd === null) throw Error(Y(308));
      (Za = t), (zd.dependencies = { lanes: 0, firstContext: t });
    } else Za = Za.next = t;
  return e;
}
var $o = null;
function qy(t) {
  $o === null ? ($o = [t]) : $o.push(t);
}
function ST(t, e, n, r) {
  var i = e.interleaved;
  return (
    i === null ? ((n.next = n), qy(e)) : ((n.next = i.next), (i.next = n)),
    (e.interleaved = n),
    Pi(t, r)
  );
}
function Pi(t, e) {
  t.lanes |= e;
  var n = t.alternate;
  for (n !== null && (n.lanes |= e), n = t, t = t.return; t !== null; )
    (t.childLanes |= e),
      (n = t.alternate),
      n !== null && (n.childLanes |= e),
      (n = t),
      (t = t.return);
  return n.tag === 3 ? n.stateNode : null;
}
var io = !1;
function Gy(t) {
  t.updateQueue = {
    baseState: t.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function xT(t, e) {
  (t = t.updateQueue),
    e.updateQueue === t &&
      (e.updateQueue = {
        baseState: t.baseState,
        firstBaseUpdate: t.firstBaseUpdate,
        lastBaseUpdate: t.lastBaseUpdate,
        shared: t.shared,
        effects: t.effects,
      });
}
function ki(t, e) {
  return {
    eventTime: t,
    lane: e,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function mo(t, e, n) {
  var r = t.updateQueue;
  if (r === null) return null;
  if (((r = r.shared), Le & 2)) {
    var i = r.pending;
    return (
      i === null ? (e.next = e) : ((e.next = i.next), (i.next = e)),
      (r.pending = e),
      Pi(t, n)
    );
  }
  return (
    (i = r.interleaved),
    i === null ? ((e.next = e), qy(r)) : ((e.next = i.next), (i.next = e)),
    (r.interleaved = e),
    Pi(t, n)
  );
}
function Vu(t, e, n) {
  if (
    ((e = e.updateQueue), e !== null && ((e = e.shared), (n & 4194240) !== 0))
  ) {
    var r = e.lanes;
    (r &= t.pendingLanes), (n |= r), (e.lanes = n), jy(t, n);
  }
}
function Iw(t, e) {
  var n = t.updateQueue,
    r = t.alternate;
  if (r !== null && ((r = r.updateQueue), n === r)) {
    var i = null,
      o = null;
    if (((n = n.firstBaseUpdate), n !== null)) {
      do {
        var a = {
          eventTime: n.eventTime,
          lane: n.lane,
          tag: n.tag,
          payload: n.payload,
          callback: n.callback,
          next: null,
        };
        o === null ? (i = o = a) : (o = o.next = a), (n = n.next);
      } while (n !== null);
      o === null ? (i = o = e) : (o = o.next = e);
    } else i = o = e;
    (n = {
      baseState: r.baseState,
      firstBaseUpdate: i,
      lastBaseUpdate: o,
      shared: r.shared,
      effects: r.effects,
    }),
      (t.updateQueue = n);
    return;
  }
  (t = n.lastBaseUpdate),
    t === null ? (n.firstBaseUpdate = e) : (t.next = e),
    (n.lastBaseUpdate = e);
}
function Hd(t, e, n, r) {
  var i = t.updateQueue;
  io = !1;
  var o = i.firstBaseUpdate,
    a = i.lastBaseUpdate,
    l = i.shared.pending;
  if (l !== null) {
    i.shared.pending = null;
    var c = l,
      u = c.next;
    (c.next = null), a === null ? (o = u) : (a.next = u), (a = c);
    var d = t.alternate;
    d !== null &&
      ((d = d.updateQueue),
      (l = d.lastBaseUpdate),
      l !== a &&
        (l === null ? (d.firstBaseUpdate = u) : (l.next = u),
        (d.lastBaseUpdate = c)));
  }
  if (o !== null) {
    var h = i.baseState;
    (a = 0), (d = u = c = null), (l = o);
    do {
      var f = l.lane,
        p = l.eventTime;
      if ((r & f) === f) {
        d !== null &&
          (d = d.next =
            {
              eventTime: p,
              lane: 0,
              tag: l.tag,
              payload: l.payload,
              callback: l.callback,
              next: null,
            });
        e: {
          var m = t,
            v = l;
          switch (((f = e), (p = n), v.tag)) {
            case 1:
              if (((m = v.payload), typeof m == "function")) {
                h = m.call(p, h, f);
                break e;
              }
              h = m;
              break e;
            case 3:
              m.flags = (m.flags & -65537) | 128;
            case 0:
              if (
                ((m = v.payload),
                (f = typeof m == "function" ? m.call(p, h, f) : m),
                f == null)
              )
                break e;
              h = Ct({}, h, f);
              break e;
            case 2:
              io = !0;
          }
        }
        l.callback !== null &&
          l.lane !== 0 &&
          ((t.flags |= 64),
          (f = i.effects),
          f === null ? (i.effects = [l]) : f.push(l));
      } else
        (p = {
          eventTime: p,
          lane: f,
          tag: l.tag,
          payload: l.payload,
          callback: l.callback,
          next: null,
        }),
          d === null ? ((u = d = p), (c = h)) : (d = d.next = p),
          (a |= f);
      if (((l = l.next), l === null)) {
        if (((l = i.shared.pending), l === null)) break;
        (f = l),
          (l = f.next),
          (f.next = null),
          (i.lastBaseUpdate = f),
          (i.shared.pending = null);
      }
    } while (!0);
    if (
      (d === null && (c = h),
      (i.baseState = c),
      (i.firstBaseUpdate = u),
      (i.lastBaseUpdate = d),
      (e = i.shared.interleaved),
      e !== null)
    ) {
      i = e;
      do (a |= i.lane), (i = i.next);
      while (i !== e);
    } else o === null && (i.shared.lanes = 0);
    (ra |= a), (t.lanes = a), (t.memoizedState = h);
  }
}
function Nw(t, e, n) {
  if (((t = e.effects), (e.effects = null), t !== null))
    for (e = 0; e < t.length; e++) {
      var r = t[e],
        i = r.callback;
      if (i !== null) {
        if (((r.callback = null), (r = n), typeof i != "function"))
          throw Error(Y(191, i));
        i.call(r);
      }
    }
}
var Dc = {},
  ei = jo(Dc),
  oc = jo(Dc),
  ac = jo(Dc);
function Ko(t) {
  if (t === Dc) throw Error(Y(174));
  return t;
}
function Wy(t, e) {
  switch ((lt(ac, e), lt(oc, t), lt(ei, Dc), (t = e.nodeType), t)) {
    case 9:
    case 11:
      e = (e = e.documentElement) ? e.namespaceURI : dm(null, "");
      break;
    default:
      (t = t === 8 ? e.parentNode : e),
        (e = t.namespaceURI || null),
        (t = t.tagName),
        (e = dm(e, t));
  }
  dt(ei), lt(ei, e);
}
function Ss() {
  dt(ei), dt(oc), dt(ac);
}
function ET(t) {
  Ko(ac.current);
  var e = Ko(ei.current),
    n = dm(e, t.type);
  e !== n && (lt(oc, t), lt(ei, n));
}
function Vy(t) {
  oc.current === t && (dt(ei), dt(oc));
}
var mt = jo(0);
function $d(t) {
  for (var e = t; e !== null; ) {
    if (e.tag === 13) {
      var n = e.memoizedState;
      if (
        n !== null &&
        ((n = n.dehydrated), n === null || n.data === "$?" || n.data === "$!")
      )
        return e;
    } else if (e.tag === 19 && e.memoizedProps.revealOrder !== void 0) {
      if (e.flags & 128) return e;
    } else if (e.child !== null) {
      (e.child.return = e), (e = e.child);
      continue;
    }
    if (e === t) break;
    for (; e.sibling === null; ) {
      if (e.return === null || e.return === t) return null;
      e = e.return;
    }
    (e.sibling.return = e.return), (e = e.sibling);
  }
  return null;
}
var ap = [];
function Qy() {
  for (var t = 0; t < ap.length; t++)
    ap[t]._workInProgressVersionPrimary = null;
  ap.length = 0;
}
var Qu = $i.ReactCurrentDispatcher,
  sp = $i.ReactCurrentBatchConfig,
  na = 0,
  bt = null,
  zt = null,
  Qt = null,
  Kd = !1,
  Ll = !1,
  sc = 0,
  MD = 0;
function un() {
  throw Error(Y(321));
}
function Yy(t, e) {
  if (e === null) return !1;
  for (var n = 0; n < e.length && n < t.length; n++)
    if (!Ar(t[n], e[n])) return !1;
  return !0;
}
function Xy(t, e, n, r, i, o) {
  if (
    ((na = o),
    (bt = e),
    (e.memoizedState = null),
    (e.updateQueue = null),
    (e.lanes = 0),
    (Qu.current = t === null || t.memoizedState === null ? zD : HD),
    (t = n(r, i)),
    Ll)
  ) {
    o = 0;
    do {
      if (((Ll = !1), (sc = 0), 25 <= o)) throw Error(Y(301));
      (o += 1),
        (Qt = zt = null),
        (e.updateQueue = null),
        (Qu.current = $D),
        (t = n(r, i));
    } while (Ll);
  }
  if (
    ((Qu.current = qd),
    (e = zt !== null && zt.next !== null),
    (na = 0),
    (Qt = zt = bt = null),
    (Kd = !1),
    e)
  )
    throw Error(Y(300));
  return t;
}
function Jy() {
  var t = sc !== 0;
  return (sc = 0), t;
}
function $r() {
  var t = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  return Qt === null ? (bt.memoizedState = Qt = t) : (Qt = Qt.next = t), Qt;
}
function fr() {
  if (zt === null) {
    var t = bt.alternate;
    t = t !== null ? t.memoizedState : null;
  } else t = zt.next;
  var e = Qt === null ? bt.memoizedState : Qt.next;
  if (e !== null) (Qt = e), (zt = t);
  else {
    if (t === null) throw Error(Y(310));
    (zt = t),
      (t = {
        memoizedState: zt.memoizedState,
        baseState: zt.baseState,
        baseQueue: zt.baseQueue,
        queue: zt.queue,
        next: null,
      }),
      Qt === null ? (bt.memoizedState = Qt = t) : (Qt = Qt.next = t);
  }
  return Qt;
}
function lc(t, e) {
  return typeof e == "function" ? e(t) : e;
}
function lp(t) {
  var e = fr(),
    n = e.queue;
  if (n === null) throw Error(Y(311));
  n.lastRenderedReducer = t;
  var r = zt,
    i = r.baseQueue,
    o = n.pending;
  if (o !== null) {
    if (i !== null) {
      var a = i.next;
      (i.next = o.next), (o.next = a);
    }
    (r.baseQueue = i = o), (n.pending = null);
  }
  if (i !== null) {
    (o = i.next), (r = r.baseState);
    var l = (a = null),
      c = null,
      u = o;
    do {
      var d = u.lane;
      if ((na & d) === d)
        c !== null &&
          (c = c.next =
            {
              lane: 0,
              action: u.action,
              hasEagerState: u.hasEagerState,
              eagerState: u.eagerState,
              next: null,
            }),
          (r = u.hasEagerState ? u.eagerState : t(r, u.action));
      else {
        var h = {
          lane: d,
          action: u.action,
          hasEagerState: u.hasEagerState,
          eagerState: u.eagerState,
          next: null,
        };
        c === null ? ((l = c = h), (a = r)) : (c = c.next = h),
          (bt.lanes |= d),
          (ra |= d);
      }
      u = u.next;
    } while (u !== null && u !== o);
    c === null ? (a = r) : (c.next = l),
      Ar(r, e.memoizedState) || (En = !0),
      (e.memoizedState = r),
      (e.baseState = a),
      (e.baseQueue = c),
      (n.lastRenderedState = r);
  }
  if (((t = n.interleaved), t !== null)) {
    i = t;
    do (o = i.lane), (bt.lanes |= o), (ra |= o), (i = i.next);
    while (i !== t);
  } else i === null && (n.lanes = 0);
  return [e.memoizedState, n.dispatch];
}
function cp(t) {
  var e = fr(),
    n = e.queue;
  if (n === null) throw Error(Y(311));
  n.lastRenderedReducer = t;
  var r = n.dispatch,
    i = n.pending,
    o = e.memoizedState;
  if (i !== null) {
    n.pending = null;
    var a = (i = i.next);
    do (o = t(o, a.action)), (a = a.next);
    while (a !== i);
    Ar(o, e.memoizedState) || (En = !0),
      (e.memoizedState = o),
      e.baseQueue === null && (e.baseState = o),
      (n.lastRenderedState = o);
  }
  return [o, r];
}
function TT() {}
function IT(t, e) {
  var n = bt,
    r = fr(),
    i = e(),
    o = !Ar(r.memoizedState, i);
  if (
    (o && ((r.memoizedState = i), (En = !0)),
    (r = r.queue),
    Zy(RT.bind(null, n, r, t), [t]),
    r.getSnapshot !== e || o || (Qt !== null && Qt.memoizedState.tag & 1))
  ) {
    if (
      ((n.flags |= 2048),
      cc(9, kT.bind(null, n, r, i, e), void 0, null),
      Xt === null)
    )
      throw Error(Y(349));
    na & 30 || NT(n, e, i);
  }
  return i;
}
function NT(t, e, n) {
  (t.flags |= 16384),
    (t = { getSnapshot: e, value: n }),
    (e = bt.updateQueue),
    e === null
      ? ((e = { lastEffect: null, stores: null }),
        (bt.updateQueue = e),
        (e.stores = [t]))
      : ((n = e.stores), n === null ? (e.stores = [t]) : n.push(t));
}
function kT(t, e, n, r) {
  (e.value = n), (e.getSnapshot = r), AT(e) && jT(t);
}
function RT(t, e, n) {
  return n(function () {
    AT(e) && jT(t);
  });
}
function AT(t) {
  var e = t.getSnapshot;
  t = t.value;
  try {
    var n = e();
    return !Ar(t, n);
  } catch {
    return !0;
  }
}
function jT(t) {
  var e = Pi(t, 1);
  e !== null && Ir(e, t, 1, -1);
}
function kw(t) {
  var e = $r();
  return (
    typeof t == "function" && (t = t()),
    (e.memoizedState = e.baseState = t),
    (t = {
      pending: null,
      interleaved: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: lc,
      lastRenderedState: t,
    }),
    (e.queue = t),
    (t = t.dispatch = UD.bind(null, bt, t)),
    [e.memoizedState, t]
  );
}
function cc(t, e, n, r) {
  return (
    (t = { tag: t, create: e, destroy: n, deps: r, next: null }),
    (e = bt.updateQueue),
    e === null
      ? ((e = { lastEffect: null, stores: null }),
        (bt.updateQueue = e),
        (e.lastEffect = t.next = t))
      : ((n = e.lastEffect),
        n === null
          ? (e.lastEffect = t.next = t)
          : ((r = n.next), (n.next = t), (t.next = r), (e.lastEffect = t))),
    t
  );
}
function OT() {
  return fr().memoizedState;
}
function Yu(t, e, n, r) {
  var i = $r();
  (bt.flags |= t),
    (i.memoizedState = cc(1 | e, n, void 0, r === void 0 ? null : r));
}
function Uh(t, e, n, r) {
  var i = fr();
  r = r === void 0 ? null : r;
  var o = void 0;
  if (zt !== null) {
    var a = zt.memoizedState;
    if (((o = a.destroy), r !== null && Yy(r, a.deps))) {
      i.memoizedState = cc(e, n, o, r);
      return;
    }
  }
  (bt.flags |= t), (i.memoizedState = cc(1 | e, n, o, r));
}
function Rw(t, e) {
  return Yu(8390656, 8, t, e);
}
function Zy(t, e) {
  return Uh(2048, 8, t, e);
}
function DT(t, e) {
  return Uh(4, 2, t, e);
}
function LT(t, e) {
  return Uh(4, 4, t, e);
}
function PT(t, e) {
  if (typeof e == "function")
    return (
      (t = t()),
      e(t),
      function () {
        e(null);
      }
    );
  if (e != null)
    return (
      (t = t()),
      (e.current = t),
      function () {
        e.current = null;
      }
    );
}
function _T(t, e, n) {
  return (
    (n = n != null ? n.concat([t]) : null), Uh(4, 4, PT.bind(null, e, t), n)
  );
}
function ev() {}
function MT(t, e) {
  var n = fr();
  e = e === void 0 ? null : e;
  var r = n.memoizedState;
  return r !== null && e !== null && Yy(e, r[1])
    ? r[0]
    : ((n.memoizedState = [t, e]), t);
}
function FT(t, e) {
  var n = fr();
  e = e === void 0 ? null : e;
  var r = n.memoizedState;
  return r !== null && e !== null && Yy(e, r[1])
    ? r[0]
    : ((t = t()), (n.memoizedState = [t, e]), t);
}
function BT(t, e, n) {
  return na & 21
    ? (Ar(n, e) || ((n = KE()), (bt.lanes |= n), (ra |= n), (t.baseState = !0)),
      e)
    : (t.baseState && ((t.baseState = !1), (En = !0)), (t.memoizedState = n));
}
function FD(t, e) {
  var n = We;
  (We = n !== 0 && 4 > n ? n : 4), t(!0);
  var r = sp.transition;
  sp.transition = {};
  try {
    t(!1), e();
  } finally {
    (We = n), (sp.transition = r);
  }
}
function UT() {
  return fr().memoizedState;
}
function BD(t, e, n) {
  var r = yo(t);
  if (
    ((n = {
      lane: r,
      action: n,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
    zT(t))
  )
    HT(e, n);
  else if (((n = ST(t, e, n, r)), n !== null)) {
    var i = bn();
    Ir(n, t, r, i), $T(n, e, r);
  }
}
function UD(t, e, n) {
  var r = yo(t),
    i = { lane: r, action: n, hasEagerState: !1, eagerState: null, next: null };
  if (zT(t)) HT(e, i);
  else {
    var o = t.alternate;
    if (
      t.lanes === 0 &&
      (o === null || o.lanes === 0) &&
      ((o = e.lastRenderedReducer), o !== null)
    )
      try {
        var a = e.lastRenderedState,
          l = o(a, n);
        if (((i.hasEagerState = !0), (i.eagerState = l), Ar(l, a))) {
          var c = e.interleaved;
          c === null
            ? ((i.next = i), qy(e))
            : ((i.next = c.next), (c.next = i)),
            (e.interleaved = i);
          return;
        }
      } catch {
      } finally {
      }
    (n = ST(t, e, i, r)),
      n !== null && ((i = bn()), Ir(n, t, r, i), $T(n, e, r));
  }
}
function zT(t) {
  var e = t.alternate;
  return t === bt || (e !== null && e === bt);
}
function HT(t, e) {
  Ll = Kd = !0;
  var n = t.pending;
  n === null ? (e.next = e) : ((e.next = n.next), (n.next = e)),
    (t.pending = e);
}
function $T(t, e, n) {
  if (n & 4194240) {
    var r = e.lanes;
    (r &= t.pendingLanes), (n |= r), (e.lanes = n), jy(t, n);
  }
}
var qd = {
    readContext: hr,
    useCallback: un,
    useContext: un,
    useEffect: un,
    useImperativeHandle: un,
    useInsertionEffect: un,
    useLayoutEffect: un,
    useMemo: un,
    useReducer: un,
    useRef: un,
    useState: un,
    useDebugValue: un,
    useDeferredValue: un,
    useTransition: un,
    useMutableSource: un,
    useSyncExternalStore: un,
    useId: un,
    unstable_isNewReconciler: !1,
  },
  zD = {
    readContext: hr,
    useCallback: function (t, e) {
      return ($r().memoizedState = [t, e === void 0 ? null : e]), t;
    },
    useContext: hr,
    useEffect: Rw,
    useImperativeHandle: function (t, e, n) {
      return (
        (n = n != null ? n.concat([t]) : null),
        Yu(4194308, 4, PT.bind(null, e, t), n)
      );
    },
    useLayoutEffect: function (t, e) {
      return Yu(4194308, 4, t, e);
    },
    useInsertionEffect: function (t, e) {
      return Yu(4, 2, t, e);
    },
    useMemo: function (t, e) {
      var n = $r();
      return (
        (e = e === void 0 ? null : e), (t = t()), (n.memoizedState = [t, e]), t
      );
    },
    useReducer: function (t, e, n) {
      var r = $r();
      return (
        (e = n !== void 0 ? n(e) : e),
        (r.memoizedState = r.baseState = e),
        (t = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: t,
          lastRenderedState: e,
        }),
        (r.queue = t),
        (t = t.dispatch = BD.bind(null, bt, t)),
        [r.memoizedState, t]
      );
    },
    useRef: function (t) {
      var e = $r();
      return (t = { current: t }), (e.memoizedState = t);
    },
    useState: kw,
    useDebugValue: ev,
    useDeferredValue: function (t) {
      return ($r().memoizedState = t);
    },
    useTransition: function () {
      var t = kw(!1),
        e = t[0];
      return (t = FD.bind(null, t[1])), ($r().memoizedState = t), [e, t];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (t, e, n) {
      var r = bt,
        i = $r();
      if (ft) {
        if (n === void 0) throw Error(Y(407));
        n = n();
      } else {
        if (((n = e()), Xt === null)) throw Error(Y(349));
        na & 30 || NT(r, e, n);
      }
      i.memoizedState = n;
      var o = { value: n, getSnapshot: e };
      return (
        (i.queue = o),
        Rw(RT.bind(null, r, o, t), [t]),
        (r.flags |= 2048),
        cc(9, kT.bind(null, r, o, n, e), void 0, null),
        n
      );
    },
    useId: function () {
      var t = $r(),
        e = Xt.identifierPrefix;
      if (ft) {
        var n = Ei,
          r = xi;
        (n = (r & ~(1 << (32 - Tr(r) - 1))).toString(32) + n),
          (e = ":" + e + "R" + n),
          (n = sc++),
          0 < n && (e += "H" + n.toString(32)),
          (e += ":");
      } else (n = MD++), (e = ":" + e + "r" + n.toString(32) + ":");
      return (t.memoizedState = e);
    },
    unstable_isNewReconciler: !1,
  },
  HD = {
    readContext: hr,
    useCallback: MT,
    useContext: hr,
    useEffect: Zy,
    useImperativeHandle: _T,
    useInsertionEffect: DT,
    useLayoutEffect: LT,
    useMemo: FT,
    useReducer: lp,
    useRef: OT,
    useState: function () {
      return lp(lc);
    },
    useDebugValue: ev,
    useDeferredValue: function (t) {
      var e = fr();
      return BT(e, zt.memoizedState, t);
    },
    useTransition: function () {
      var t = lp(lc)[0],
        e = fr().memoizedState;
      return [t, e];
    },
    useMutableSource: TT,
    useSyncExternalStore: IT,
    useId: UT,
    unstable_isNewReconciler: !1,
  },
  $D = {
    readContext: hr,
    useCallback: MT,
    useContext: hr,
    useEffect: Zy,
    useImperativeHandle: _T,
    useInsertionEffect: DT,
    useLayoutEffect: LT,
    useMemo: FT,
    useReducer: cp,
    useRef: OT,
    useState: function () {
      return cp(lc);
    },
    useDebugValue: ev,
    useDeferredValue: function (t) {
      var e = fr();
      return zt === null ? (e.memoizedState = t) : BT(e, zt.memoizedState, t);
    },
    useTransition: function () {
      var t = cp(lc)[0],
        e = fr().memoizedState;
      return [t, e];
    },
    useMutableSource: TT,
    useSyncExternalStore: IT,
    useId: UT,
    unstable_isNewReconciler: !1,
  };
function br(t, e) {
  if (t && t.defaultProps) {
    (e = Ct({}, e)), (t = t.defaultProps);
    for (var n in t) e[n] === void 0 && (e[n] = t[n]);
    return e;
  }
  return e;
}
function Om(t, e, n, r) {
  (e = t.memoizedState),
    (n = n(r, e)),
    (n = n == null ? e : Ct({}, e, n)),
    (t.memoizedState = n),
    t.lanes === 0 && (t.updateQueue.baseState = n);
}
var zh = {
  isMounted: function (t) {
    return (t = t._reactInternals) ? ya(t) === t : !1;
  },
  enqueueSetState: function (t, e, n) {
    t = t._reactInternals;
    var r = bn(),
      i = yo(t),
      o = ki(r, i);
    (o.payload = e),
      n != null && (o.callback = n),
      (e = mo(t, o, i)),
      e !== null && (Ir(e, t, i, r), Vu(e, t, i));
  },
  enqueueReplaceState: function (t, e, n) {
    t = t._reactInternals;
    var r = bn(),
      i = yo(t),
      o = ki(r, i);
    (o.tag = 1),
      (o.payload = e),
      n != null && (o.callback = n),
      (e = mo(t, o, i)),
      e !== null && (Ir(e, t, i, r), Vu(e, t, i));
  },
  enqueueForceUpdate: function (t, e) {
    t = t._reactInternals;
    var n = bn(),
      r = yo(t),
      i = ki(n, r);
    (i.tag = 2),
      e != null && (i.callback = e),
      (e = mo(t, i, r)),
      e !== null && (Ir(e, t, r, n), Vu(e, t, r));
  },
};
function Aw(t, e, n, r, i, o, a) {
  return (
    (t = t.stateNode),
    typeof t.shouldComponentUpdate == "function"
      ? t.shouldComponentUpdate(r, o, a)
      : e.prototype && e.prototype.isPureReactComponent
      ? !tc(n, r) || !tc(i, o)
      : !0
  );
}
function KT(t, e, n) {
  var r = !1,
    i = So,
    o = e.contextType;
  return (
    typeof o == "object" && o !== null
      ? (o = hr(o))
      : ((i = In(e) ? ea : mn.current),
        (r = e.contextTypes),
        (o = (r = r != null) ? bs(t, i) : So)),
    (e = new e(n, o)),
    (t.memoizedState = e.state !== null && e.state !== void 0 ? e.state : null),
    (e.updater = zh),
    (t.stateNode = e),
    (e._reactInternals = t),
    r &&
      ((t = t.stateNode),
      (t.__reactInternalMemoizedUnmaskedChildContext = i),
      (t.__reactInternalMemoizedMaskedChildContext = o)),
    e
  );
}
function jw(t, e, n, r) {
  (t = e.state),
    typeof e.componentWillReceiveProps == "function" &&
      e.componentWillReceiveProps(n, r),
    typeof e.UNSAFE_componentWillReceiveProps == "function" &&
      e.UNSAFE_componentWillReceiveProps(n, r),
    e.state !== t && zh.enqueueReplaceState(e, e.state, null);
}
function Dm(t, e, n, r) {
  var i = t.stateNode;
  (i.props = n), (i.state = t.memoizedState), (i.refs = {}), Gy(t);
  var o = e.contextType;
  typeof o == "object" && o !== null
    ? (i.context = hr(o))
    : ((o = In(e) ? ea : mn.current), (i.context = bs(t, o))),
    (i.state = t.memoizedState),
    (o = e.getDerivedStateFromProps),
    typeof o == "function" && (Om(t, e, o, n), (i.state = t.memoizedState)),
    typeof e.getDerivedStateFromProps == "function" ||
      typeof i.getSnapshotBeforeUpdate == "function" ||
      (typeof i.UNSAFE_componentWillMount != "function" &&
        typeof i.componentWillMount != "function") ||
      ((e = i.state),
      typeof i.componentWillMount == "function" && i.componentWillMount(),
      typeof i.UNSAFE_componentWillMount == "function" &&
        i.UNSAFE_componentWillMount(),
      e !== i.state && zh.enqueueReplaceState(i, i.state, null),
      Hd(t, n, i, r),
      (i.state = t.memoizedState)),
    typeof i.componentDidMount == "function" && (t.flags |= 4194308);
}
function xs(t, e) {
  try {
    var n = "",
      r = e;
    do (n += yO(r)), (r = r.return);
    while (r);
    var i = n;
  } catch (o) {
    i =
      `
Error generating stack: ` +
      o.message +
      `
` +
      o.stack;
  }
  return { value: t, source: e, stack: i, digest: null };
}
function up(t, e, n) {
  return { value: t, source: null, stack: n ?? null, digest: e ?? null };
}
function Lm(t, e) {
  try {
    console.error(e.value);
  } catch (n) {
    setTimeout(function () {
      throw n;
    });
  }
}
var KD = typeof WeakMap == "function" ? WeakMap : Map;
function qT(t, e, n) {
  (n = ki(-1, n)), (n.tag = 3), (n.payload = { element: null });
  var r = e.value;
  return (
    (n.callback = function () {
      Wd || ((Wd = !0), (Km = r)), Lm(t, e);
    }),
    n
  );
}
function GT(t, e, n) {
  (n = ki(-1, n)), (n.tag = 3);
  var r = t.type.getDerivedStateFromError;
  if (typeof r == "function") {
    var i = e.value;
    (n.payload = function () {
      return r(i);
    }),
      (n.callback = function () {
        Lm(t, e);
      });
  }
  var o = t.stateNode;
  return (
    o !== null &&
      typeof o.componentDidCatch == "function" &&
      (n.callback = function () {
        Lm(t, e),
          typeof r != "function" &&
            (go === null ? (go = new Set([this])) : go.add(this));
        var a = e.stack;
        this.componentDidCatch(e.value, {
          componentStack: a !== null ? a : "",
        });
      }),
    n
  );
}
function Ow(t, e, n) {
  var r = t.pingCache;
  if (r === null) {
    r = t.pingCache = new KD();
    var i = new Set();
    r.set(e, i);
  } else (i = r.get(e)), i === void 0 && ((i = new Set()), r.set(e, i));
  i.has(n) || (i.add(n), (t = iL.bind(null, t, e, n)), e.then(t, t));
}
function Dw(t) {
  do {
    var e;
    if (
      ((e = t.tag === 13) &&
        ((e = t.memoizedState), (e = e !== null ? e.dehydrated !== null : !0)),
      e)
    )
      return t;
    t = t.return;
  } while (t !== null);
  return null;
}
function Lw(t, e, n, r, i) {
  return t.mode & 1
    ? ((t.flags |= 65536), (t.lanes = i), t)
    : (t === e
        ? (t.flags |= 65536)
        : ((t.flags |= 128),
          (n.flags |= 131072),
          (n.flags &= -52805),
          n.tag === 1 &&
            (n.alternate === null
              ? (n.tag = 17)
              : ((e = ki(-1, 1)), (e.tag = 2), mo(n, e, 1))),
          (n.lanes |= 1)),
      t);
}
var qD = $i.ReactCurrentOwner,
  En = !1;
function vn(t, e, n, r) {
  e.child = t === null ? wT(e, null, n, r) : ws(e, t.child, n, r);
}
function Pw(t, e, n, r, i) {
  n = n.render;
  var o = e.ref;
  return (
    hs(e, i),
    (r = Xy(t, e, n, r, o, i)),
    (n = Jy()),
    t !== null && !En
      ? ((e.updateQueue = t.updateQueue),
        (e.flags &= -2053),
        (t.lanes &= ~i),
        _i(t, e, i))
      : (ft && n && By(e), (e.flags |= 1), vn(t, e, r, i), e.child)
  );
}
function _w(t, e, n, r, i) {
  if (t === null) {
    var o = n.type;
    return typeof o == "function" &&
      !lv(o) &&
      o.defaultProps === void 0 &&
      n.compare === null &&
      n.defaultProps === void 0
      ? ((e.tag = 15), (e.type = o), WT(t, e, o, r, i))
      : ((t = ed(n.type, null, r, e, e.mode, i)),
        (t.ref = e.ref),
        (t.return = e),
        (e.child = t));
  }
  if (((o = t.child), !(t.lanes & i))) {
    var a = o.memoizedProps;
    if (
      ((n = n.compare), (n = n !== null ? n : tc), n(a, r) && t.ref === e.ref)
    )
      return _i(t, e, i);
  }
  return (
    (e.flags |= 1),
    (t = vo(o, r)),
    (t.ref = e.ref),
    (t.return = e),
    (e.child = t)
  );
}
function WT(t, e, n, r, i) {
  if (t !== null) {
    var o = t.memoizedProps;
    if (tc(o, r) && t.ref === e.ref)
      if (((En = !1), (e.pendingProps = r = o), (t.lanes & i) !== 0))
        t.flags & 131072 && (En = !0);
      else return (e.lanes = t.lanes), _i(t, e, i);
  }
  return Pm(t, e, n, r, i);
}
function VT(t, e, n) {
  var r = e.pendingProps,
    i = r.children,
    o = t !== null ? t.memoizedState : null;
  if (r.mode === "hidden")
    if (!(e.mode & 1))
      (e.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        lt(ts, Fn),
        (Fn |= n);
    else {
      if (!(n & 1073741824))
        return (
          (t = o !== null ? o.baseLanes | n : n),
          (e.lanes = e.childLanes = 1073741824),
          (e.memoizedState = {
            baseLanes: t,
            cachePool: null,
            transitions: null,
          }),
          (e.updateQueue = null),
          lt(ts, Fn),
          (Fn |= t),
          null
        );
      (e.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        (r = o !== null ? o.baseLanes : n),
        lt(ts, Fn),
        (Fn |= r);
    }
  else
    o !== null ? ((r = o.baseLanes | n), (e.memoizedState = null)) : (r = n),
      lt(ts, Fn),
      (Fn |= r);
  return vn(t, e, i, n), e.child;
}
function QT(t, e) {
  var n = e.ref;
  ((t === null && n !== null) || (t !== null && t.ref !== n)) &&
    ((e.flags |= 512), (e.flags |= 2097152));
}
function Pm(t, e, n, r, i) {
  var o = In(n) ? ea : mn.current;
  return (
    (o = bs(e, o)),
    hs(e, i),
    (n = Xy(t, e, n, r, o, i)),
    (r = Jy()),
    t !== null && !En
      ? ((e.updateQueue = t.updateQueue),
        (e.flags &= -2053),
        (t.lanes &= ~i),
        _i(t, e, i))
      : (ft && r && By(e), (e.flags |= 1), vn(t, e, n, i), e.child)
  );
}
function Mw(t, e, n, r, i) {
  if (In(n)) {
    var o = !0;
    Md(e);
  } else o = !1;
  if ((hs(e, i), e.stateNode === null))
    Xu(t, e), KT(e, n, r), Dm(e, n, r, i), (r = !0);
  else if (t === null) {
    var a = e.stateNode,
      l = e.memoizedProps;
    a.props = l;
    var c = a.context,
      u = n.contextType;
    typeof u == "object" && u !== null
      ? (u = hr(u))
      : ((u = In(n) ? ea : mn.current), (u = bs(e, u)));
    var d = n.getDerivedStateFromProps,
      h =
        typeof d == "function" ||
        typeof a.getSnapshotBeforeUpdate == "function";
    h ||
      (typeof a.UNSAFE_componentWillReceiveProps != "function" &&
        typeof a.componentWillReceiveProps != "function") ||
      ((l !== r || c !== u) && jw(e, a, r, u)),
      (io = !1);
    var f = e.memoizedState;
    (a.state = f),
      Hd(e, r, a, i),
      (c = e.memoizedState),
      l !== r || f !== c || Tn.current || io
        ? (typeof d == "function" && (Om(e, n, d, r), (c = e.memoizedState)),
          (l = io || Aw(e, n, l, r, f, c, u))
            ? (h ||
                (typeof a.UNSAFE_componentWillMount != "function" &&
                  typeof a.componentWillMount != "function") ||
                (typeof a.componentWillMount == "function" &&
                  a.componentWillMount(),
                typeof a.UNSAFE_componentWillMount == "function" &&
                  a.UNSAFE_componentWillMount()),
              typeof a.componentDidMount == "function" && (e.flags |= 4194308))
            : (typeof a.componentDidMount == "function" && (e.flags |= 4194308),
              (e.memoizedProps = r),
              (e.memoizedState = c)),
          (a.props = r),
          (a.state = c),
          (a.context = u),
          (r = l))
        : (typeof a.componentDidMount == "function" && (e.flags |= 4194308),
          (r = !1));
  } else {
    (a = e.stateNode),
      xT(t, e),
      (l = e.memoizedProps),
      (u = e.type === e.elementType ? l : br(e.type, l)),
      (a.props = u),
      (h = e.pendingProps),
      (f = a.context),
      (c = n.contextType),
      typeof c == "object" && c !== null
        ? (c = hr(c))
        : ((c = In(n) ? ea : mn.current), (c = bs(e, c)));
    var p = n.getDerivedStateFromProps;
    (d =
      typeof p == "function" ||
      typeof a.getSnapshotBeforeUpdate == "function") ||
      (typeof a.UNSAFE_componentWillReceiveProps != "function" &&
        typeof a.componentWillReceiveProps != "function") ||
      ((l !== h || f !== c) && jw(e, a, r, c)),
      (io = !1),
      (f = e.memoizedState),
      (a.state = f),
      Hd(e, r, a, i);
    var m = e.memoizedState;
    l !== h || f !== m || Tn.current || io
      ? (typeof p == "function" && (Om(e, n, p, r), (m = e.memoizedState)),
        (u = io || Aw(e, n, u, r, f, m, c) || !1)
          ? (d ||
              (typeof a.UNSAFE_componentWillUpdate != "function" &&
                typeof a.componentWillUpdate != "function") ||
              (typeof a.componentWillUpdate == "function" &&
                a.componentWillUpdate(r, m, c),
              typeof a.UNSAFE_componentWillUpdate == "function" &&
                a.UNSAFE_componentWillUpdate(r, m, c)),
            typeof a.componentDidUpdate == "function" && (e.flags |= 4),
            typeof a.getSnapshotBeforeUpdate == "function" && (e.flags |= 1024))
          : (typeof a.componentDidUpdate != "function" ||
              (l === t.memoizedProps && f === t.memoizedState) ||
              (e.flags |= 4),
            typeof a.getSnapshotBeforeUpdate != "function" ||
              (l === t.memoizedProps && f === t.memoizedState) ||
              (e.flags |= 1024),
            (e.memoizedProps = r),
            (e.memoizedState = m)),
        (a.props = r),
        (a.state = m),
        (a.context = c),
        (r = u))
      : (typeof a.componentDidUpdate != "function" ||
          (l === t.memoizedProps && f === t.memoizedState) ||
          (e.flags |= 4),
        typeof a.getSnapshotBeforeUpdate != "function" ||
          (l === t.memoizedProps && f === t.memoizedState) ||
          (e.flags |= 1024),
        (r = !1));
  }
  return _m(t, e, n, r, o, i);
}
function _m(t, e, n, r, i, o) {
  QT(t, e);
  var a = (e.flags & 128) !== 0;
  if (!r && !a) return i && Sw(e, n, !1), _i(t, e, o);
  (r = e.stateNode), (qD.current = e);
  var l =
    a && typeof n.getDerivedStateFromError != "function" ? null : r.render();
  return (
    (e.flags |= 1),
    t !== null && a
      ? ((e.child = ws(e, t.child, null, o)), (e.child = ws(e, null, l, o)))
      : vn(t, e, l, o),
    (e.memoizedState = r.state),
    i && Sw(e, n, !0),
    e.child
  );
}
function YT(t) {
  var e = t.stateNode;
  e.pendingContext
    ? ww(t, e.pendingContext, e.pendingContext !== e.context)
    : e.context && ww(t, e.context, !1),
    Wy(t, e.containerInfo);
}
function Fw(t, e, n, r, i) {
  return Cs(), zy(i), (e.flags |= 256), vn(t, e, n, r), e.child;
}
var Mm = { dehydrated: null, treeContext: null, retryLane: 0 };
function Fm(t) {
  return { baseLanes: t, cachePool: null, transitions: null };
}
function XT(t, e, n) {
  var r = e.pendingProps,
    i = mt.current,
    o = !1,
    a = (e.flags & 128) !== 0,
    l;
  if (
    ((l = a) ||
      (l = t !== null && t.memoizedState === null ? !1 : (i & 2) !== 0),
    l
      ? ((o = !0), (e.flags &= -129))
      : (t === null || t.memoizedState !== null) && (i |= 1),
    lt(mt, i & 1),
    t === null)
  )
    return (
      Am(e),
      (t = e.memoizedState),
      t !== null && ((t = t.dehydrated), t !== null)
        ? (e.mode & 1
            ? t.data === "$!"
              ? (e.lanes = 8)
              : (e.lanes = 1073741824)
            : (e.lanes = 1),
          null)
        : ((a = r.children),
          (t = r.fallback),
          o
            ? ((r = e.mode),
              (o = e.child),
              (a = { mode: "hidden", children: a }),
              !(r & 1) && o !== null
                ? ((o.childLanes = 0), (o.pendingProps = a))
                : (o = Kh(a, r, 0, null)),
              (t = Xo(t, r, n, null)),
              (o.return = e),
              (t.return = e),
              (o.sibling = t),
              (e.child = o),
              (e.child.memoizedState = Fm(n)),
              (e.memoizedState = Mm),
              t)
            : tv(e, a))
    );
  if (((i = t.memoizedState), i !== null && ((l = i.dehydrated), l !== null)))
    return GD(t, e, a, r, l, i, n);
  if (o) {
    (o = r.fallback), (a = e.mode), (i = t.child), (l = i.sibling);
    var c = { mode: "hidden", children: r.children };
    return (
      !(a & 1) && e.child !== i
        ? ((r = e.child),
          (r.childLanes = 0),
          (r.pendingProps = c),
          (e.deletions = null))
        : ((r = vo(i, c)), (r.subtreeFlags = i.subtreeFlags & 14680064)),
      l !== null ? (o = vo(l, o)) : ((o = Xo(o, a, n, null)), (o.flags |= 2)),
      (o.return = e),
      (r.return = e),
      (r.sibling = o),
      (e.child = r),
      (r = o),
      (o = e.child),
      (a = t.child.memoizedState),
      (a =
        a === null
          ? Fm(n)
          : {
              baseLanes: a.baseLanes | n,
              cachePool: null,
              transitions: a.transitions,
            }),
      (o.memoizedState = a),
      (o.childLanes = t.childLanes & ~n),
      (e.memoizedState = Mm),
      r
    );
  }
  return (
    (o = t.child),
    (t = o.sibling),
    (r = vo(o, { mode: "visible", children: r.children })),
    !(e.mode & 1) && (r.lanes = n),
    (r.return = e),
    (r.sibling = null),
    t !== null &&
      ((n = e.deletions),
      n === null ? ((e.deletions = [t]), (e.flags |= 16)) : n.push(t)),
    (e.child = r),
    (e.memoizedState = null),
    r
  );
}
function tv(t, e) {
  return (
    (e = Kh({ mode: "visible", children: e }, t.mode, 0, null)),
    (e.return = t),
    (t.child = e)
  );
}
function bu(t, e, n, r) {
  return (
    r !== null && zy(r),
    ws(e, t.child, null, n),
    (t = tv(e, e.pendingProps.children)),
    (t.flags |= 2),
    (e.memoizedState = null),
    t
  );
}
function GD(t, e, n, r, i, o, a) {
  if (n)
    return e.flags & 256
      ? ((e.flags &= -257), (r = up(Error(Y(422)))), bu(t, e, a, r))
      : e.memoizedState !== null
      ? ((e.child = t.child), (e.flags |= 128), null)
      : ((o = r.fallback),
        (i = e.mode),
        (r = Kh({ mode: "visible", children: r.children }, i, 0, null)),
        (o = Xo(o, i, a, null)),
        (o.flags |= 2),
        (r.return = e),
        (o.return = e),
        (r.sibling = o),
        (e.child = r),
        e.mode & 1 && ws(e, t.child, null, a),
        (e.child.memoizedState = Fm(a)),
        (e.memoizedState = Mm),
        o);
  if (!(e.mode & 1)) return bu(t, e, a, null);
  if (i.data === "$!") {
    if (((r = i.nextSibling && i.nextSibling.dataset), r)) var l = r.dgst;
    return (r = l), (o = Error(Y(419))), (r = up(o, r, void 0)), bu(t, e, a, r);
  }
  if (((l = (a & t.childLanes) !== 0), En || l)) {
    if (((r = Xt), r !== null)) {
      switch (a & -a) {
        case 4:
          i = 2;
          break;
        case 16:
          i = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          i = 32;
          break;
        case 536870912:
          i = 268435456;
          break;
        default:
          i = 0;
      }
      (i = i & (r.suspendedLanes | a) ? 0 : i),
        i !== 0 &&
          i !== o.retryLane &&
          ((o.retryLane = i), Pi(t, i), Ir(r, t, i, -1));
    }
    return sv(), (r = up(Error(Y(421)))), bu(t, e, a, r);
  }
  return i.data === "$?"
    ? ((e.flags |= 128),
      (e.child = t.child),
      (e = oL.bind(null, t)),
      (i._reactRetry = e),
      null)
    : ((t = o.treeContext),
      (Un = po(i.nextSibling)),
      (Kn = e),
      (ft = !0),
      (xr = null),
      t !== null &&
        ((er[tr++] = xi),
        (er[tr++] = Ei),
        (er[tr++] = ta),
        (xi = t.id),
        (Ei = t.overflow),
        (ta = e)),
      (e = tv(e, r.children)),
      (e.flags |= 4096),
      e);
}
function Bw(t, e, n) {
  t.lanes |= e;
  var r = t.alternate;
  r !== null && (r.lanes |= e), jm(t.return, e, n);
}
function dp(t, e, n, r, i) {
  var o = t.memoizedState;
  o === null
    ? (t.memoizedState = {
        isBackwards: e,
        rendering: null,
        renderingStartTime: 0,
        last: r,
        tail: n,
        tailMode: i,
      })
    : ((o.isBackwards = e),
      (o.rendering = null),
      (o.renderingStartTime = 0),
      (o.last = r),
      (o.tail = n),
      (o.tailMode = i));
}
function JT(t, e, n) {
  var r = e.pendingProps,
    i = r.revealOrder,
    o = r.tail;
  if ((vn(t, e, r.children, n), (r = mt.current), r & 2))
    (r = (r & 1) | 2), (e.flags |= 128);
  else {
    if (t !== null && t.flags & 128)
      e: for (t = e.child; t !== null; ) {
        if (t.tag === 13) t.memoizedState !== null && Bw(t, n, e);
        else if (t.tag === 19) Bw(t, n, e);
        else if (t.child !== null) {
          (t.child.return = t), (t = t.child);
          continue;
        }
        if (t === e) break e;
        for (; t.sibling === null; ) {
          if (t.return === null || t.return === e) break e;
          t = t.return;
        }
        (t.sibling.return = t.return), (t = t.sibling);
      }
    r &= 1;
  }
  if ((lt(mt, r), !(e.mode & 1))) e.memoizedState = null;
  else
    switch (i) {
      case "forwards":
        for (n = e.child, i = null; n !== null; )
          (t = n.alternate),
            t !== null && $d(t) === null && (i = n),
            (n = n.sibling);
        (n = i),
          n === null
            ? ((i = e.child), (e.child = null))
            : ((i = n.sibling), (n.sibling = null)),
          dp(e, !1, i, n, o);
        break;
      case "backwards":
        for (n = null, i = e.child, e.child = null; i !== null; ) {
          if (((t = i.alternate), t !== null && $d(t) === null)) {
            e.child = i;
            break;
          }
          (t = i.sibling), (i.sibling = n), (n = i), (i = t);
        }
        dp(e, !0, n, null, o);
        break;
      case "together":
        dp(e, !1, null, null, void 0);
        break;
      default:
        e.memoizedState = null;
    }
  return e.child;
}
function Xu(t, e) {
  !(e.mode & 1) &&
    t !== null &&
    ((t.alternate = null), (e.alternate = null), (e.flags |= 2));
}
function _i(t, e, n) {
  if (
    (t !== null && (e.dependencies = t.dependencies),
    (ra |= e.lanes),
    !(n & e.childLanes))
  )
    return null;
  if (t !== null && e.child !== t.child) throw Error(Y(153));
  if (e.child !== null) {
    for (
      t = e.child, n = vo(t, t.pendingProps), e.child = n, n.return = e;
      t.sibling !== null;

    )
      (t = t.sibling), (n = n.sibling = vo(t, t.pendingProps)), (n.return = e);
    n.sibling = null;
  }
  return e.child;
}
function WD(t, e, n) {
  switch (e.tag) {
    case 3:
      YT(e), Cs();
      break;
    case 5:
      ET(e);
      break;
    case 1:
      In(e.type) && Md(e);
      break;
    case 4:
      Wy(e, e.stateNode.containerInfo);
      break;
    case 10:
      var r = e.type._context,
        i = e.memoizedProps.value;
      lt(Ud, r._currentValue), (r._currentValue = i);
      break;
    case 13:
      if (((r = e.memoizedState), r !== null))
        return r.dehydrated !== null
          ? (lt(mt, mt.current & 1), (e.flags |= 128), null)
          : n & e.child.childLanes
          ? XT(t, e, n)
          : (lt(mt, mt.current & 1),
            (t = _i(t, e, n)),
            t !== null ? t.sibling : null);
      lt(mt, mt.current & 1);
      break;
    case 19:
      if (((r = (n & e.childLanes) !== 0), t.flags & 128)) {
        if (r) return JT(t, e, n);
        e.flags |= 128;
      }
      if (
        ((i = e.memoizedState),
        i !== null &&
          ((i.rendering = null), (i.tail = null), (i.lastEffect = null)),
        lt(mt, mt.current),
        r)
      )
        break;
      return null;
    case 22:
    case 23:
      return (e.lanes = 0), VT(t, e, n);
  }
  return _i(t, e, n);
}
var ZT, Bm, e1, t1;
ZT = function (t, e) {
  for (var n = e.child; n !== null; ) {
    if (n.tag === 5 || n.tag === 6) t.appendChild(n.stateNode);
    else if (n.tag !== 4 && n.child !== null) {
      (n.child.return = n), (n = n.child);
      continue;
    }
    if (n === e) break;
    for (; n.sibling === null; ) {
      if (n.return === null || n.return === e) return;
      n = n.return;
    }
    (n.sibling.return = n.return), (n = n.sibling);
  }
};
Bm = function () {};
e1 = function (t, e, n, r) {
  var i = t.memoizedProps;
  if (i !== r) {
    (t = e.stateNode), Ko(ei.current);
    var o = null;
    switch (n) {
      case "input":
        (i = sm(t, i)), (r = sm(t, r)), (o = []);
        break;
      case "select":
        (i = Ct({}, i, { value: void 0 })),
          (r = Ct({}, r, { value: void 0 })),
          (o = []);
        break;
      case "textarea":
        (i = um(t, i)), (r = um(t, r)), (o = []);
        break;
      default:
        typeof i.onClick != "function" &&
          typeof r.onClick == "function" &&
          (t.onclick = Pd);
    }
    hm(n, r);
    var a;
    n = null;
    for (u in i)
      if (!r.hasOwnProperty(u) && i.hasOwnProperty(u) && i[u] != null)
        if (u === "style") {
          var l = i[u];
          for (a in l) l.hasOwnProperty(a) && (n || (n = {}), (n[a] = ""));
        } else
          u !== "dangerouslySetInnerHTML" &&
            u !== "children" &&
            u !== "suppressContentEditableWarning" &&
            u !== "suppressHydrationWarning" &&
            u !== "autoFocus" &&
            (Vl.hasOwnProperty(u)
              ? o || (o = [])
              : (o = o || []).push(u, null));
    for (u in r) {
      var c = r[u];
      if (
        ((l = i != null ? i[u] : void 0),
        r.hasOwnProperty(u) && c !== l && (c != null || l != null))
      )
        if (u === "style")
          if (l) {
            for (a in l)
              !l.hasOwnProperty(a) ||
                (c && c.hasOwnProperty(a)) ||
                (n || (n = {}), (n[a] = ""));
            for (a in c)
              c.hasOwnProperty(a) &&
                l[a] !== c[a] &&
                (n || (n = {}), (n[a] = c[a]));
          } else n || (o || (o = []), o.push(u, n)), (n = c);
        else
          u === "dangerouslySetInnerHTML"
            ? ((c = c ? c.__html : void 0),
              (l = l ? l.__html : void 0),
              c != null && l !== c && (o = o || []).push(u, c))
            : u === "children"
            ? (typeof c != "string" && typeof c != "number") ||
              (o = o || []).push(u, "" + c)
            : u !== "suppressContentEditableWarning" &&
              u !== "suppressHydrationWarning" &&
              (Vl.hasOwnProperty(u)
                ? (c != null && u === "onScroll" && ct("scroll", t),
                  o || l === c || (o = []))
                : (o = o || []).push(u, c));
    }
    n && (o = o || []).push("style", n);
    var u = o;
    (e.updateQueue = u) && (e.flags |= 4);
  }
};
t1 = function (t, e, n, r) {
  n !== r && (e.flags |= 4);
};
function cl(t, e) {
  if (!ft)
    switch (t.tailMode) {
      case "hidden":
        e = t.tail;
        for (var n = null; e !== null; )
          e.alternate !== null && (n = e), (e = e.sibling);
        n === null ? (t.tail = null) : (n.sibling = null);
        break;
      case "collapsed":
        n = t.tail;
        for (var r = null; n !== null; )
          n.alternate !== null && (r = n), (n = n.sibling);
        r === null
          ? e || t.tail === null
            ? (t.tail = null)
            : (t.tail.sibling = null)
          : (r.sibling = null);
    }
}
function dn(t) {
  var e = t.alternate !== null && t.alternate.child === t.child,
    n = 0,
    r = 0;
  if (e)
    for (var i = t.child; i !== null; )
      (n |= i.lanes | i.childLanes),
        (r |= i.subtreeFlags & 14680064),
        (r |= i.flags & 14680064),
        (i.return = t),
        (i = i.sibling);
  else
    for (i = t.child; i !== null; )
      (n |= i.lanes | i.childLanes),
        (r |= i.subtreeFlags),
        (r |= i.flags),
        (i.return = t),
        (i = i.sibling);
  return (t.subtreeFlags |= r), (t.childLanes = n), e;
}
function VD(t, e, n) {
  var r = e.pendingProps;
  switch ((Uy(e), e.tag)) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return dn(e), null;
    case 1:
      return In(e.type) && _d(), dn(e), null;
    case 3:
      return (
        (r = e.stateNode),
        Ss(),
        dt(Tn),
        dt(mn),
        Qy(),
        r.pendingContext &&
          ((r.context = r.pendingContext), (r.pendingContext = null)),
        (t === null || t.child === null) &&
          (yu(e)
            ? (e.flags |= 4)
            : t === null ||
              (t.memoizedState.isDehydrated && !(e.flags & 256)) ||
              ((e.flags |= 1024), xr !== null && (Wm(xr), (xr = null)))),
        Bm(t, e),
        dn(e),
        null
      );
    case 5:
      Vy(e);
      var i = Ko(ac.current);
      if (((n = e.type), t !== null && e.stateNode != null))
        e1(t, e, n, r, i),
          t.ref !== e.ref && ((e.flags |= 512), (e.flags |= 2097152));
      else {
        if (!r) {
          if (e.stateNode === null) throw Error(Y(166));
          return dn(e), null;
        }
        if (((t = Ko(ei.current)), yu(e))) {
          (r = e.stateNode), (n = e.type);
          var o = e.memoizedProps;
          switch (((r[qr] = e), (r[ic] = o), (t = (e.mode & 1) !== 0), n)) {
            case "dialog":
              ct("cancel", r), ct("close", r);
              break;
            case "iframe":
            case "object":
            case "embed":
              ct("load", r);
              break;
            case "video":
            case "audio":
              for (i = 0; i < xl.length; i++) ct(xl[i], r);
              break;
            case "source":
              ct("error", r);
              break;
            case "img":
            case "image":
            case "link":
              ct("error", r), ct("load", r);
              break;
            case "details":
              ct("toggle", r);
              break;
            case "input":
              VC(r, o), ct("invalid", r);
              break;
            case "select":
              (r._wrapperState = { wasMultiple: !!o.multiple }),
                ct("invalid", r);
              break;
            case "textarea":
              YC(r, o), ct("invalid", r);
          }
          hm(n, o), (i = null);
          for (var a in o)
            if (o.hasOwnProperty(a)) {
              var l = o[a];
              a === "children"
                ? typeof l == "string"
                  ? r.textContent !== l &&
                    (o.suppressHydrationWarning !== !0 &&
                      gu(r.textContent, l, t),
                    (i = ["children", l]))
                  : typeof l == "number" &&
                    r.textContent !== "" + l &&
                    (o.suppressHydrationWarning !== !0 &&
                      gu(r.textContent, l, t),
                    (i = ["children", "" + l]))
                : Vl.hasOwnProperty(a) &&
                  l != null &&
                  a === "onScroll" &&
                  ct("scroll", r);
            }
          switch (n) {
            case "input":
              lu(r), QC(r, o, !0);
              break;
            case "textarea":
              lu(r), XC(r);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof o.onClick == "function" && (r.onclick = Pd);
          }
          (r = i), (e.updateQueue = r), r !== null && (e.flags |= 4);
        } else {
          (a = i.nodeType === 9 ? i : i.ownerDocument),
            t === "http://www.w3.org/1999/xhtml" && (t = RE(n)),
            t === "http://www.w3.org/1999/xhtml"
              ? n === "script"
                ? ((t = a.createElement("div")),
                  (t.innerHTML = "<script></script>"),
                  (t = t.removeChild(t.firstChild)))
                : typeof r.is == "string"
                ? (t = a.createElement(n, { is: r.is }))
                : ((t = a.createElement(n)),
                  n === "select" &&
                    ((a = t),
                    r.multiple
                      ? (a.multiple = !0)
                      : r.size && (a.size = r.size)))
              : (t = a.createElementNS(t, n)),
            (t[qr] = e),
            (t[ic] = r),
            ZT(t, e, !1, !1),
            (e.stateNode = t);
          e: {
            switch (((a = fm(n, r)), n)) {
              case "dialog":
                ct("cancel", t), ct("close", t), (i = r);
                break;
              case "iframe":
              case "object":
              case "embed":
                ct("load", t), (i = r);
                break;
              case "video":
              case "audio":
                for (i = 0; i < xl.length; i++) ct(xl[i], t);
                i = r;
                break;
              case "source":
                ct("error", t), (i = r);
                break;
              case "img":
              case "image":
              case "link":
                ct("error", t), ct("load", t), (i = r);
                break;
              case "details":
                ct("toggle", t), (i = r);
                break;
              case "input":
                VC(t, r), (i = sm(t, r)), ct("invalid", t);
                break;
              case "option":
                i = r;
                break;
              case "select":
                (t._wrapperState = { wasMultiple: !!r.multiple }),
                  (i = Ct({}, r, { value: void 0 })),
                  ct("invalid", t);
                break;
              case "textarea":
                YC(t, r), (i = um(t, r)), ct("invalid", t);
                break;
              default:
                i = r;
            }
            hm(n, i), (l = i);
            for (o in l)
              if (l.hasOwnProperty(o)) {
                var c = l[o];
                o === "style"
                  ? OE(t, c)
                  : o === "dangerouslySetInnerHTML"
                  ? ((c = c ? c.__html : void 0), c != null && AE(t, c))
                  : o === "children"
                  ? typeof c == "string"
                    ? (n !== "textarea" || c !== "") && Ql(t, c)
                    : typeof c == "number" && Ql(t, "" + c)
                  : o !== "suppressContentEditableWarning" &&
                    o !== "suppressHydrationWarning" &&
                    o !== "autoFocus" &&
                    (Vl.hasOwnProperty(o)
                      ? c != null && o === "onScroll" && ct("scroll", t)
                      : c != null && Ty(t, o, c, a));
              }
            switch (n) {
              case "input":
                lu(t), QC(t, r, !1);
                break;
              case "textarea":
                lu(t), XC(t);
                break;
              case "option":
                r.value != null && t.setAttribute("value", "" + wo(r.value));
                break;
              case "select":
                (t.multiple = !!r.multiple),
                  (o = r.value),
                  o != null
                    ? ls(t, !!r.multiple, o, !1)
                    : r.defaultValue != null &&
                      ls(t, !!r.multiple, r.defaultValue, !0);
                break;
              default:
                typeof i.onClick == "function" && (t.onclick = Pd);
            }
            switch (n) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                r = !!r.autoFocus;
                break e;
              case "img":
                r = !0;
                break e;
              default:
                r = !1;
            }
          }
          r && (e.flags |= 4);
        }
        e.ref !== null && ((e.flags |= 512), (e.flags |= 2097152));
      }
      return dn(e), null;
    case 6:
      if (t && e.stateNode != null) t1(t, e, t.memoizedProps, r);
      else {
        if (typeof r != "string" && e.stateNode === null) throw Error(Y(166));
        if (((n = Ko(ac.current)), Ko(ei.current), yu(e))) {
          if (
            ((r = e.stateNode),
            (n = e.memoizedProps),
            (r[qr] = e),
            (o = r.nodeValue !== n) && ((t = Kn), t !== null))
          )
            switch (t.tag) {
              case 3:
                gu(r.nodeValue, n, (t.mode & 1) !== 0);
                break;
              case 5:
                t.memoizedProps.suppressHydrationWarning !== !0 &&
                  gu(r.nodeValue, n, (t.mode & 1) !== 0);
            }
          o && (e.flags |= 4);
        } else
          (r = (n.nodeType === 9 ? n : n.ownerDocument).createTextNode(r)),
            (r[qr] = e),
            (e.stateNode = r);
      }
      return dn(e), null;
    case 13:
      if (
        (dt(mt),
        (r = e.memoizedState),
        t === null ||
          (t.memoizedState !== null && t.memoizedState.dehydrated !== null))
      ) {
        if (ft && Un !== null && e.mode & 1 && !(e.flags & 128))
          bT(), Cs(), (e.flags |= 98560), (o = !1);
        else if (((o = yu(e)), r !== null && r.dehydrated !== null)) {
          if (t === null) {
            if (!o) throw Error(Y(318));
            if (
              ((o = e.memoizedState),
              (o = o !== null ? o.dehydrated : null),
              !o)
            )
              throw Error(Y(317));
            o[qr] = e;
          } else
            Cs(), !(e.flags & 128) && (e.memoizedState = null), (e.flags |= 4);
          dn(e), (o = !1);
        } else xr !== null && (Wm(xr), (xr = null)), (o = !0);
        if (!o) return e.flags & 65536 ? e : null;
      }
      return e.flags & 128
        ? ((e.lanes = n), e)
        : ((r = r !== null),
          r !== (t !== null && t.memoizedState !== null) &&
            r &&
            ((e.child.flags |= 8192),
            e.mode & 1 &&
              (t === null || mt.current & 1 ? $t === 0 && ($t = 3) : sv())),
          e.updateQueue !== null && (e.flags |= 4),
          dn(e),
          null);
    case 4:
      return (
        Ss(), Bm(t, e), t === null && nc(e.stateNode.containerInfo), dn(e), null
      );
    case 10:
      return Ky(e.type._context), dn(e), null;
    case 17:
      return In(e.type) && _d(), dn(e), null;
    case 19:
      if ((dt(mt), (o = e.memoizedState), o === null)) return dn(e), null;
      if (((r = (e.flags & 128) !== 0), (a = o.rendering), a === null))
        if (r) cl(o, !1);
        else {
          if ($t !== 0 || (t !== null && t.flags & 128))
            for (t = e.child; t !== null; ) {
              if (((a = $d(t)), a !== null)) {
                for (
                  e.flags |= 128,
                    cl(o, !1),
                    r = a.updateQueue,
                    r !== null && ((e.updateQueue = r), (e.flags |= 4)),
                    e.subtreeFlags = 0,
                    r = n,
                    n = e.child;
                  n !== null;

                )
                  (o = n),
                    (t = r),
                    (o.flags &= 14680066),
                    (a = o.alternate),
                    a === null
                      ? ((o.childLanes = 0),
                        (o.lanes = t),
                        (o.child = null),
                        (o.subtreeFlags = 0),
                        (o.memoizedProps = null),
                        (o.memoizedState = null),
                        (o.updateQueue = null),
                        (o.dependencies = null),
                        (o.stateNode = null))
                      : ((o.childLanes = a.childLanes),
                        (o.lanes = a.lanes),
                        (o.child = a.child),
                        (o.subtreeFlags = 0),
                        (o.deletions = null),
                        (o.memoizedProps = a.memoizedProps),
                        (o.memoizedState = a.memoizedState),
                        (o.updateQueue = a.updateQueue),
                        (o.type = a.type),
                        (t = a.dependencies),
                        (o.dependencies =
                          t === null
                            ? null
                            : {
                                lanes: t.lanes,
                                firstContext: t.firstContext,
                              })),
                    (n = n.sibling);
                return lt(mt, (mt.current & 1) | 2), e.child;
              }
              t = t.sibling;
            }
          o.tail !== null &&
            At() > Es &&
            ((e.flags |= 128), (r = !0), cl(o, !1), (e.lanes = 4194304));
        }
      else {
        if (!r)
          if (((t = $d(a)), t !== null)) {
            if (
              ((e.flags |= 128),
              (r = !0),
              (n = t.updateQueue),
              n !== null && ((e.updateQueue = n), (e.flags |= 4)),
              cl(o, !0),
              o.tail === null && o.tailMode === "hidden" && !a.alternate && !ft)
            )
              return dn(e), null;
          } else
            2 * At() - o.renderingStartTime > Es &&
              n !== 1073741824 &&
              ((e.flags |= 128), (r = !0), cl(o, !1), (e.lanes = 4194304));
        o.isBackwards
          ? ((a.sibling = e.child), (e.child = a))
          : ((n = o.last),
            n !== null ? (n.sibling = a) : (e.child = a),
            (o.last = a));
      }
      return o.tail !== null
        ? ((e = o.tail),
          (o.rendering = e),
          (o.tail = e.sibling),
          (o.renderingStartTime = At()),
          (e.sibling = null),
          (n = mt.current),
          lt(mt, r ? (n & 1) | 2 : n & 1),
          e)
        : (dn(e), null);
    case 22:
    case 23:
      return (
        av(),
        (r = e.memoizedState !== null),
        t !== null && (t.memoizedState !== null) !== r && (e.flags |= 8192),
        r && e.mode & 1
          ? Fn & 1073741824 && (dn(e), e.subtreeFlags & 6 && (e.flags |= 8192))
          : dn(e),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(Y(156, e.tag));
}
function QD(t, e) {
  switch ((Uy(e), e.tag)) {
    case 1:
      return (
        In(e.type) && _d(),
        (t = e.flags),
        t & 65536 ? ((e.flags = (t & -65537) | 128), e) : null
      );
    case 3:
      return (
        Ss(),
        dt(Tn),
        dt(mn),
        Qy(),
        (t = e.flags),
        t & 65536 && !(t & 128) ? ((e.flags = (t & -65537) | 128), e) : null
      );
    case 5:
      return Vy(e), null;
    case 13:
      if (
        (dt(mt), (t = e.memoizedState), t !== null && t.dehydrated !== null)
      ) {
        if (e.alternate === null) throw Error(Y(340));
        Cs();
      }
      return (
        (t = e.flags), t & 65536 ? ((e.flags = (t & -65537) | 128), e) : null
      );
    case 19:
      return dt(mt), null;
    case 4:
      return Ss(), null;
    case 10:
      return Ky(e.type._context), null;
    case 22:
    case 23:
      return av(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Cu = !1,
  fn = !1,
  YD = typeof WeakSet == "function" ? WeakSet : Set,
  ue = null;
function es(t, e) {
  var n = t.ref;
  if (n !== null)
    if (typeof n == "function")
      try {
        n(null);
      } catch (r) {
        Tt(t, e, r);
      }
    else n.current = null;
}
function Um(t, e, n) {
  try {
    n();
  } catch (r) {
    Tt(t, e, r);
  }
}
var Uw = !1;
function XD(t, e) {
  if (((xm = Od), (t = aT()), Fy(t))) {
    if ("selectionStart" in t)
      var n = { start: t.selectionStart, end: t.selectionEnd };
    else
      e: {
        n = ((n = t.ownerDocument) && n.defaultView) || window;
        var r = n.getSelection && n.getSelection();
        if (r && r.rangeCount !== 0) {
          n = r.anchorNode;
          var i = r.anchorOffset,
            o = r.focusNode;
          r = r.focusOffset;
          try {
            n.nodeType, o.nodeType;
          } catch {
            n = null;
            break e;
          }
          var a = 0,
            l = -1,
            c = -1,
            u = 0,
            d = 0,
            h = t,
            f = null;
          t: for (;;) {
            for (
              var p;
              h !== n || (i !== 0 && h.nodeType !== 3) || (l = a + i),
                h !== o || (r !== 0 && h.nodeType !== 3) || (c = a + r),
                h.nodeType === 3 && (a += h.nodeValue.length),
                (p = h.firstChild) !== null;

            )
              (f = h), (h = p);
            for (;;) {
              if (h === t) break t;
              if (
                (f === n && ++u === i && (l = a),
                f === o && ++d === r && (c = a),
                (p = h.nextSibling) !== null)
              )
                break;
              (h = f), (f = h.parentNode);
            }
            h = p;
          }
          n = l === -1 || c === -1 ? null : { start: l, end: c };
        } else n = null;
      }
    n = n || { start: 0, end: 0 };
  } else n = null;
  for (
    Em = { focusedElem: t, selectionRange: n }, Od = !1, ue = e;
    ue !== null;

  )
    if (((e = ue), (t = e.child), (e.subtreeFlags & 1028) !== 0 && t !== null))
      (t.return = e), (ue = t);
    else
      for (; ue !== null; ) {
        e = ue;
        try {
          var m = e.alternate;
          if (e.flags & 1024)
            switch (e.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (m !== null) {
                  var v = m.memoizedProps,
                    C = m.memoizedState,
                    b = e.stateNode,
                    g = b.getSnapshotBeforeUpdate(
                      e.elementType === e.type ? v : br(e.type, v),
                      C
                    );
                  b.__reactInternalSnapshotBeforeUpdate = g;
                }
                break;
              case 3:
                var y = e.stateNode.containerInfo;
                y.nodeType === 1
                  ? (y.textContent = "")
                  : y.nodeType === 9 &&
                    y.documentElement &&
                    y.removeChild(y.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(Y(163));
            }
        } catch (w) {
          Tt(e, e.return, w);
        }
        if (((t = e.sibling), t !== null)) {
          (t.return = e.return), (ue = t);
          break;
        }
        ue = e.return;
      }
  return (m = Uw), (Uw = !1), m;
}
function Pl(t, e, n) {
  var r = e.updateQueue;
  if (((r = r !== null ? r.lastEffect : null), r !== null)) {
    var i = (r = r.next);
    do {
      if ((i.tag & t) === t) {
        var o = i.destroy;
        (i.destroy = void 0), o !== void 0 && Um(e, n, o);
      }
      i = i.next;
    } while (i !== r);
  }
}
function Hh(t, e) {
  if (
    ((e = e.updateQueue), (e = e !== null ? e.lastEffect : null), e !== null)
  ) {
    var n = (e = e.next);
    do {
      if ((n.tag & t) === t) {
        var r = n.create;
        n.destroy = r();
      }
      n = n.next;
    } while (n !== e);
  }
}
function zm(t) {
  var e = t.ref;
  if (e !== null) {
    var n = t.stateNode;
    switch (t.tag) {
      case 5:
        t = n;
        break;
      default:
        t = n;
    }
    typeof e == "function" ? e(t) : (e.current = t);
  }
}
function n1(t) {
  var e = t.alternate;
  e !== null && ((t.alternate = null), n1(e)),
    (t.child = null),
    (t.deletions = null),
    (t.sibling = null),
    t.tag === 5 &&
      ((e = t.stateNode),
      e !== null &&
        (delete e[qr], delete e[ic], delete e[Nm], delete e[DD], delete e[LD])),
    (t.stateNode = null),
    (t.return = null),
    (t.dependencies = null),
    (t.memoizedProps = null),
    (t.memoizedState = null),
    (t.pendingProps = null),
    (t.stateNode = null),
    (t.updateQueue = null);
}
function r1(t) {
  return t.tag === 5 || t.tag === 3 || t.tag === 4;
}
function zw(t) {
  e: for (;;) {
    for (; t.sibling === null; ) {
      if (t.return === null || r1(t.return)) return null;
      t = t.return;
    }
    for (
      t.sibling.return = t.return, t = t.sibling;
      t.tag !== 5 && t.tag !== 6 && t.tag !== 18;

    ) {
      if (t.flags & 2 || t.child === null || t.tag === 4) continue e;
      (t.child.return = t), (t = t.child);
    }
    if (!(t.flags & 2)) return t.stateNode;
  }
}
function Hm(t, e, n) {
  var r = t.tag;
  if (r === 5 || r === 6)
    (t = t.stateNode),
      e
        ? n.nodeType === 8
          ? n.parentNode.insertBefore(t, e)
          : n.insertBefore(t, e)
        : (n.nodeType === 8
            ? ((e = n.parentNode), e.insertBefore(t, n))
            : ((e = n), e.appendChild(t)),
          (n = n._reactRootContainer),
          n != null || e.onclick !== null || (e.onclick = Pd));
  else if (r !== 4 && ((t = t.child), t !== null))
    for (Hm(t, e, n), t = t.sibling; t !== null; ) Hm(t, e, n), (t = t.sibling);
}
function $m(t, e, n) {
  var r = t.tag;
  if (r === 5 || r === 6)
    (t = t.stateNode), e ? n.insertBefore(t, e) : n.appendChild(t);
  else if (r !== 4 && ((t = t.child), t !== null))
    for ($m(t, e, n), t = t.sibling; t !== null; ) $m(t, e, n), (t = t.sibling);
}
var nn = null,
  Cr = !1;
function Yi(t, e, n) {
  for (n = n.child; n !== null; ) i1(t, e, n), (n = n.sibling);
}
function i1(t, e, n) {
  if (Zr && typeof Zr.onCommitFiberUnmount == "function")
    try {
      Zr.onCommitFiberUnmount(Lh, n);
    } catch {}
  switch (n.tag) {
    case 5:
      fn || es(n, e);
    case 6:
      var r = nn,
        i = Cr;
      (nn = null),
        Yi(t, e, n),
        (nn = r),
        (Cr = i),
        nn !== null &&
          (Cr
            ? ((t = nn),
              (n = n.stateNode),
              t.nodeType === 8 ? t.parentNode.removeChild(n) : t.removeChild(n))
            : nn.removeChild(n.stateNode));
      break;
    case 18:
      nn !== null &&
        (Cr
          ? ((t = nn),
            (n = n.stateNode),
            t.nodeType === 8
              ? ip(t.parentNode, n)
              : t.nodeType === 1 && ip(t, n),
            Zl(t))
          : ip(nn, n.stateNode));
      break;
    case 4:
      (r = nn),
        (i = Cr),
        (nn = n.stateNode.containerInfo),
        (Cr = !0),
        Yi(t, e, n),
        (nn = r),
        (Cr = i);
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !fn &&
        ((r = n.updateQueue), r !== null && ((r = r.lastEffect), r !== null))
      ) {
        i = r = r.next;
        do {
          var o = i,
            a = o.destroy;
          (o = o.tag),
            a !== void 0 && (o & 2 || o & 4) && Um(n, e, a),
            (i = i.next);
        } while (i !== r);
      }
      Yi(t, e, n);
      break;
    case 1:
      if (
        !fn &&
        (es(n, e),
        (r = n.stateNode),
        typeof r.componentWillUnmount == "function")
      )
        try {
          (r.props = n.memoizedProps),
            (r.state = n.memoizedState),
            r.componentWillUnmount();
        } catch (l) {
          Tt(n, e, l);
        }
      Yi(t, e, n);
      break;
    case 21:
      Yi(t, e, n);
      break;
    case 22:
      n.mode & 1
        ? ((fn = (r = fn) || n.memoizedState !== null), Yi(t, e, n), (fn = r))
        : Yi(t, e, n);
      break;
    default:
      Yi(t, e, n);
  }
}
function Hw(t) {
  var e = t.updateQueue;
  if (e !== null) {
    t.updateQueue = null;
    var n = t.stateNode;
    n === null && (n = t.stateNode = new YD()),
      e.forEach(function (r) {
        var i = aL.bind(null, t, r);
        n.has(r) || (n.add(r), r.then(i, i));
      });
  }
}
function vr(t, e) {
  var n = e.deletions;
  if (n !== null)
    for (var r = 0; r < n.length; r++) {
      var i = n[r];
      try {
        var o = t,
          a = e,
          l = a;
        e: for (; l !== null; ) {
          switch (l.tag) {
            case 5:
              (nn = l.stateNode), (Cr = !1);
              break e;
            case 3:
              (nn = l.stateNode.containerInfo), (Cr = !0);
              break e;
            case 4:
              (nn = l.stateNode.containerInfo), (Cr = !0);
              break e;
          }
          l = l.return;
        }
        if (nn === null) throw Error(Y(160));
        i1(o, a, i), (nn = null), (Cr = !1);
        var c = i.alternate;
        c !== null && (c.return = null), (i.return = null);
      } catch (u) {
        Tt(i, e, u);
      }
    }
  if (e.subtreeFlags & 12854)
    for (e = e.child; e !== null; ) o1(e, t), (e = e.sibling);
}
function o1(t, e) {
  var n = t.alternate,
    r = t.flags;
  switch (t.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      if ((vr(e, t), Br(t), r & 4)) {
        try {
          Pl(3, t, t.return), Hh(3, t);
        } catch (v) {
          Tt(t, t.return, v);
        }
        try {
          Pl(5, t, t.return);
        } catch (v) {
          Tt(t, t.return, v);
        }
      }
      break;
    case 1:
      vr(e, t), Br(t), r & 512 && n !== null && es(n, n.return);
      break;
    case 5:
      if (
        (vr(e, t),
        Br(t),
        r & 512 && n !== null && es(n, n.return),
        t.flags & 32)
      ) {
        var i = t.stateNode;
        try {
          Ql(i, "");
        } catch (v) {
          Tt(t, t.return, v);
        }
      }
      if (r & 4 && ((i = t.stateNode), i != null)) {
        var o = t.memoizedProps,
          a = n !== null ? n.memoizedProps : o,
          l = t.type,
          c = t.updateQueue;
        if (((t.updateQueue = null), c !== null))
          try {
            l === "input" && o.type === "radio" && o.name != null && NE(i, o),
              fm(l, a);
            var u = fm(l, o);
            for (a = 0; a < c.length; a += 2) {
              var d = c[a],
                h = c[a + 1];
              d === "style"
                ? OE(i, h)
                : d === "dangerouslySetInnerHTML"
                ? AE(i, h)
                : d === "children"
                ? Ql(i, h)
                : Ty(i, d, h, u);
            }
            switch (l) {
              case "input":
                lm(i, o);
                break;
              case "textarea":
                kE(i, o);
                break;
              case "select":
                var f = i._wrapperState.wasMultiple;
                i._wrapperState.wasMultiple = !!o.multiple;
                var p = o.value;
                p != null
                  ? ls(i, !!o.multiple, p, !1)
                  : f !== !!o.multiple &&
                    (o.defaultValue != null
                      ? ls(i, !!o.multiple, o.defaultValue, !0)
                      : ls(i, !!o.multiple, o.multiple ? [] : "", !1));
            }
            i[ic] = o;
          } catch (v) {
            Tt(t, t.return, v);
          }
      }
      break;
    case 6:
      if ((vr(e, t), Br(t), r & 4)) {
        if (t.stateNode === null) throw Error(Y(162));
        (i = t.stateNode), (o = t.memoizedProps);
        try {
          i.nodeValue = o;
        } catch (v) {
          Tt(t, t.return, v);
        }
      }
      break;
    case 3:
      if (
        (vr(e, t), Br(t), r & 4 && n !== null && n.memoizedState.isDehydrated)
      )
        try {
          Zl(e.containerInfo);
        } catch (v) {
          Tt(t, t.return, v);
        }
      break;
    case 4:
      vr(e, t), Br(t);
      break;
    case 13:
      vr(e, t),
        Br(t),
        (i = t.child),
        i.flags & 8192 &&
          ((o = i.memoizedState !== null),
          (i.stateNode.isHidden = o),
          !o ||
            (i.alternate !== null && i.alternate.memoizedState !== null) ||
            (iv = At())),
        r & 4 && Hw(t);
      break;
    case 22:
      if (
        ((d = n !== null && n.memoizedState !== null),
        t.mode & 1 ? ((fn = (u = fn) || d), vr(e, t), (fn = u)) : vr(e, t),
        Br(t),
        r & 8192)
      ) {
        if (
          ((u = t.memoizedState !== null),
          (t.stateNode.isHidden = u) && !d && t.mode & 1)
        )
          for (ue = t, d = t.child; d !== null; ) {
            for (h = ue = d; ue !== null; ) {
              switch (((f = ue), (p = f.child), f.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Pl(4, f, f.return);
                  break;
                case 1:
                  es(f, f.return);
                  var m = f.stateNode;
                  if (typeof m.componentWillUnmount == "function") {
                    (r = f), (n = f.return);
                    try {
                      (e = r),
                        (m.props = e.memoizedProps),
                        (m.state = e.memoizedState),
                        m.componentWillUnmount();
                    } catch (v) {
                      Tt(r, n, v);
                    }
                  }
                  break;
                case 5:
                  es(f, f.return);
                  break;
                case 22:
                  if (f.memoizedState !== null) {
                    Kw(h);
                    continue;
                  }
              }
              p !== null ? ((p.return = f), (ue = p)) : Kw(h);
            }
            d = d.sibling;
          }
        e: for (d = null, h = t; ; ) {
          if (h.tag === 5) {
            if (d === null) {
              d = h;
              try {
                (i = h.stateNode),
                  u
                    ? ((o = i.style),
                      typeof o.setProperty == "function"
                        ? o.setProperty("display", "none", "important")
                        : (o.display = "none"))
                    : ((l = h.stateNode),
                      (c = h.memoizedProps.style),
                      (a =
                        c != null && c.hasOwnProperty("display")
                          ? c.display
                          : null),
                      (l.style.display = jE("display", a)));
              } catch (v) {
                Tt(t, t.return, v);
              }
            }
          } else if (h.tag === 6) {
            if (d === null)
              try {
                h.stateNode.nodeValue = u ? "" : h.memoizedProps;
              } catch (v) {
                Tt(t, t.return, v);
              }
          } else if (
            ((h.tag !== 22 && h.tag !== 23) ||
              h.memoizedState === null ||
              h === t) &&
            h.child !== null
          ) {
            (h.child.return = h), (h = h.child);
            continue;
          }
          if (h === t) break e;
          for (; h.sibling === null; ) {
            if (h.return === null || h.return === t) break e;
            d === h && (d = null), (h = h.return);
          }
          d === h && (d = null), (h.sibling.return = h.return), (h = h.sibling);
        }
      }
      break;
    case 19:
      vr(e, t), Br(t), r & 4 && Hw(t);
      break;
    case 21:
      break;
    default:
      vr(e, t), Br(t);
  }
}
function Br(t) {
  var e = t.flags;
  if (e & 2) {
    try {
      e: {
        for (var n = t.return; n !== null; ) {
          if (r1(n)) {
            var r = n;
            break e;
          }
          n = n.return;
        }
        throw Error(Y(160));
      }
      switch (r.tag) {
        case 5:
          var i = r.stateNode;
          r.flags & 32 && (Ql(i, ""), (r.flags &= -33));
          var o = zw(t);
          $m(t, o, i);
          break;
        case 3:
        case 4:
          var a = r.stateNode.containerInfo,
            l = zw(t);
          Hm(t, l, a);
          break;
        default:
          throw Error(Y(161));
      }
    } catch (c) {
      Tt(t, t.return, c);
    }
    t.flags &= -3;
  }
  e & 4096 && (t.flags &= -4097);
}
function JD(t, e, n) {
  (ue = t), a1(t);
}
function a1(t, e, n) {
  for (var r = (t.mode & 1) !== 0; ue !== null; ) {
    var i = ue,
      o = i.child;
    if (i.tag === 22 && r) {
      var a = i.memoizedState !== null || Cu;
      if (!a) {
        var l = i.alternate,
          c = (l !== null && l.memoizedState !== null) || fn;
        l = Cu;
        var u = fn;
        if (((Cu = a), (fn = c) && !u))
          for (ue = i; ue !== null; )
            (a = ue),
              (c = a.child),
              a.tag === 22 && a.memoizedState !== null
                ? qw(i)
                : c !== null
                ? ((c.return = a), (ue = c))
                : qw(i);
        for (; o !== null; ) (ue = o), a1(o), (o = o.sibling);
        (ue = i), (Cu = l), (fn = u);
      }
      $w(t);
    } else
      i.subtreeFlags & 8772 && o !== null ? ((o.return = i), (ue = o)) : $w(t);
  }
}
function $w(t) {
  for (; ue !== null; ) {
    var e = ue;
    if (e.flags & 8772) {
      var n = e.alternate;
      try {
        if (e.flags & 8772)
          switch (e.tag) {
            case 0:
            case 11:
            case 15:
              fn || Hh(5, e);
              break;
            case 1:
              var r = e.stateNode;
              if (e.flags & 4 && !fn)
                if (n === null) r.componentDidMount();
                else {
                  var i =
                    e.elementType === e.type
                      ? n.memoizedProps
                      : br(e.type, n.memoizedProps);
                  r.componentDidUpdate(
                    i,
                    n.memoizedState,
                    r.__reactInternalSnapshotBeforeUpdate
                  );
                }
              var o = e.updateQueue;
              o !== null && Nw(e, o, r);
              break;
            case 3:
              var a = e.updateQueue;
              if (a !== null) {
                if (((n = null), e.child !== null))
                  switch (e.child.tag) {
                    case 5:
                      n = e.child.stateNode;
                      break;
                    case 1:
                      n = e.child.stateNode;
                  }
                Nw(e, a, n);
              }
              break;
            case 5:
              var l = e.stateNode;
              if (n === null && e.flags & 4) {
                n = l;
                var c = e.memoizedProps;
                switch (e.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    c.autoFocus && n.focus();
                    break;
                  case "img":
                    c.src && (n.src = c.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (e.memoizedState === null) {
                var u = e.alternate;
                if (u !== null) {
                  var d = u.memoizedState;
                  if (d !== null) {
                    var h = d.dehydrated;
                    h !== null && Zl(h);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(Y(163));
          }
        fn || (e.flags & 512 && zm(e));
      } catch (f) {
        Tt(e, e.return, f);
      }
    }
    if (e === t) {
      ue = null;
      break;
    }
    if (((n = e.sibling), n !== null)) {
      (n.return = e.return), (ue = n);
      break;
    }
    ue = e.return;
  }
}
function Kw(t) {
  for (; ue !== null; ) {
    var e = ue;
    if (e === t) {
      ue = null;
      break;
    }
    var n = e.sibling;
    if (n !== null) {
      (n.return = e.return), (ue = n);
      break;
    }
    ue = e.return;
  }
}
function qw(t) {
  for (; ue !== null; ) {
    var e = ue;
    try {
      switch (e.tag) {
        case 0:
        case 11:
        case 15:
          var n = e.return;
          try {
            Hh(4, e);
          } catch (c) {
            Tt(e, n, c);
          }
          break;
        case 1:
          var r = e.stateNode;
          if (typeof r.componentDidMount == "function") {
            var i = e.return;
            try {
              r.componentDidMount();
            } catch (c) {
              Tt(e, i, c);
            }
          }
          var o = e.return;
          try {
            zm(e);
          } catch (c) {
            Tt(e, o, c);
          }
          break;
        case 5:
          var a = e.return;
          try {
            zm(e);
          } catch (c) {
            Tt(e, a, c);
          }
      }
    } catch (c) {
      Tt(e, e.return, c);
    }
    if (e === t) {
      ue = null;
      break;
    }
    var l = e.sibling;
    if (l !== null) {
      (l.return = e.return), (ue = l);
      break;
    }
    ue = e.return;
  }
}
var ZD = Math.ceil,
  Gd = $i.ReactCurrentDispatcher,
  nv = $i.ReactCurrentOwner,
  lr = $i.ReactCurrentBatchConfig,
  Le = 0,
  Xt = null,
  Ft = null,
  on = 0,
  Fn = 0,
  ts = jo(0),
  $t = 0,
  uc = null,
  ra = 0,
  $h = 0,
  rv = 0,
  _l = null,
  xn = null,
  iv = 0,
  Es = 1 / 0,
  vi = null,
  Wd = !1,
  Km = null,
  go = null,
  wu = !1,
  co = null,
  Vd = 0,
  Ml = 0,
  qm = null,
  Ju = -1,
  Zu = 0;
function bn() {
  return Le & 6 ? At() : Ju !== -1 ? Ju : (Ju = At());
}
function yo(t) {
  return t.mode & 1
    ? Le & 2 && on !== 0
      ? on & -on
      : _D.transition !== null
      ? (Zu === 0 && (Zu = KE()), Zu)
      : ((t = We),
        t !== 0 || ((t = window.event), (t = t === void 0 ? 16 : XE(t.type))),
        t)
    : 1;
}
function Ir(t, e, n, r) {
  if (50 < Ml) throw ((Ml = 0), (qm = null), Error(Y(185)));
  Ac(t, n, r),
    (!(Le & 2) || t !== Xt) &&
      (t === Xt && (!(Le & 2) && ($h |= n), $t === 4 && so(t, on)),
      Nn(t, r),
      n === 1 && Le === 0 && !(e.mode & 1) && ((Es = At() + 500), Bh && Oo()));
}
function Nn(t, e) {
  var n = t.callbackNode;
  _O(t, e);
  var r = jd(t, t === Xt ? on : 0);
  if (r === 0)
    n !== null && ew(n), (t.callbackNode = null), (t.callbackPriority = 0);
  else if (((e = r & -r), t.callbackPriority !== e)) {
    if ((n != null && ew(n), e === 1))
      t.tag === 0 ? PD(Gw.bind(null, t)) : gT(Gw.bind(null, t)),
        jD(function () {
          !(Le & 6) && Oo();
        }),
        (n = null);
    else {
      switch (qE(r)) {
        case 1:
          n = Ay;
          break;
        case 4:
          n = HE;
          break;
        case 16:
          n = Ad;
          break;
        case 536870912:
          n = $E;
          break;
        default:
          n = Ad;
      }
      n = p1(n, s1.bind(null, t));
    }
    (t.callbackPriority = e), (t.callbackNode = n);
  }
}
function s1(t, e) {
  if (((Ju = -1), (Zu = 0), Le & 6)) throw Error(Y(327));
  var n = t.callbackNode;
  if (fs() && t.callbackNode !== n) return null;
  var r = jd(t, t === Xt ? on : 0);
  if (r === 0) return null;
  if (r & 30 || r & t.expiredLanes || e) e = Qd(t, r);
  else {
    e = r;
    var i = Le;
    Le |= 2;
    var o = c1();
    (Xt !== t || on !== e) && ((vi = null), (Es = At() + 500), Yo(t, e));
    do
      try {
        nL();
        break;
      } catch (l) {
        l1(t, l);
      }
    while (!0);
    $y(),
      (Gd.current = o),
      (Le = i),
      Ft !== null ? (e = 0) : ((Xt = null), (on = 0), (e = $t));
  }
  if (e !== 0) {
    if (
      (e === 2 && ((i = vm(t)), i !== 0 && ((r = i), (e = Gm(t, i)))), e === 1)
    )
      throw ((n = uc), Yo(t, 0), so(t, r), Nn(t, At()), n);
    if (e === 6) so(t, r);
    else {
      if (
        ((i = t.current.alternate),
        !(r & 30) &&
          !eL(i) &&
          ((e = Qd(t, r)),
          e === 2 && ((o = vm(t)), o !== 0 && ((r = o), (e = Gm(t, o)))),
          e === 1))
      )
        throw ((n = uc), Yo(t, 0), so(t, r), Nn(t, At()), n);
      switch (((t.finishedWork = i), (t.finishedLanes = r), e)) {
        case 0:
        case 1:
          throw Error(Y(345));
        case 2:
          Mo(t, xn, vi);
          break;
        case 3:
          if (
            (so(t, r), (r & 130023424) === r && ((e = iv + 500 - At()), 10 < e))
          ) {
            if (jd(t, 0) !== 0) break;
            if (((i = t.suspendedLanes), (i & r) !== r)) {
              bn(), (t.pingedLanes |= t.suspendedLanes & i);
              break;
            }
            t.timeoutHandle = Im(Mo.bind(null, t, xn, vi), e);
            break;
          }
          Mo(t, xn, vi);
          break;
        case 4:
          if ((so(t, r), (r & 4194240) === r)) break;
          for (e = t.eventTimes, i = -1; 0 < r; ) {
            var a = 31 - Tr(r);
            (o = 1 << a), (a = e[a]), a > i && (i = a), (r &= ~o);
          }
          if (
            ((r = i),
            (r = At() - r),
            (r =
              (120 > r
                ? 120
                : 480 > r
                ? 480
                : 1080 > r
                ? 1080
                : 1920 > r
                ? 1920
                : 3e3 > r
                ? 3e3
                : 4320 > r
                ? 4320
                : 1960 * ZD(r / 1960)) - r),
            10 < r)
          ) {
            t.timeoutHandle = Im(Mo.bind(null, t, xn, vi), r);
            break;
          }
          Mo(t, xn, vi);
          break;
        case 5:
          Mo(t, xn, vi);
          break;
        default:
          throw Error(Y(329));
      }
    }
  }
  return Nn(t, At()), t.callbackNode === n ? s1.bind(null, t) : null;
}
function Gm(t, e) {
  var n = _l;
  return (
    t.current.memoizedState.isDehydrated && (Yo(t, e).flags |= 256),
    (t = Qd(t, e)),
    t !== 2 && ((e = xn), (xn = n), e !== null && Wm(e)),
    t
  );
}
function Wm(t) {
  xn === null ? (xn = t) : xn.push.apply(xn, t);
}
function eL(t) {
  for (var e = t; ; ) {
    if (e.flags & 16384) {
      var n = e.updateQueue;
      if (n !== null && ((n = n.stores), n !== null))
        for (var r = 0; r < n.length; r++) {
          var i = n[r],
            o = i.getSnapshot;
          i = i.value;
          try {
            if (!Ar(o(), i)) return !1;
          } catch {
            return !1;
          }
        }
    }
    if (((n = e.child), e.subtreeFlags & 16384 && n !== null))
      (n.return = e), (e = n);
    else {
      if (e === t) break;
      for (; e.sibling === null; ) {
        if (e.return === null || e.return === t) return !0;
        e = e.return;
      }
      (e.sibling.return = e.return), (e = e.sibling);
    }
  }
  return !0;
}
function so(t, e) {
  for (
    e &= ~rv,
      e &= ~$h,
      t.suspendedLanes |= e,
      t.pingedLanes &= ~e,
      t = t.expirationTimes;
    0 < e;

  ) {
    var n = 31 - Tr(e),
      r = 1 << n;
    (t[n] = -1), (e &= ~r);
  }
}
function Gw(t) {
  if (Le & 6) throw Error(Y(327));
  fs();
  var e = jd(t, 0);
  if (!(e & 1)) return Nn(t, At()), null;
  var n = Qd(t, e);
  if (t.tag !== 0 && n === 2) {
    var r = vm(t);
    r !== 0 && ((e = r), (n = Gm(t, r)));
  }
  if (n === 1) throw ((n = uc), Yo(t, 0), so(t, e), Nn(t, At()), n);
  if (n === 6) throw Error(Y(345));
  return (
    (t.finishedWork = t.current.alternate),
    (t.finishedLanes = e),
    Mo(t, xn, vi),
    Nn(t, At()),
    null
  );
}
function ov(t, e) {
  var n = Le;
  Le |= 1;
  try {
    return t(e);
  } finally {
    (Le = n), Le === 0 && ((Es = At() + 500), Bh && Oo());
  }
}
function ia(t) {
  co !== null && co.tag === 0 && !(Le & 6) && fs();
  var e = Le;
  Le |= 1;
  var n = lr.transition,
    r = We;
  try {
    if (((lr.transition = null), (We = 1), t)) return t();
  } finally {
    (We = r), (lr.transition = n), (Le = e), !(Le & 6) && Oo();
  }
}
function av() {
  (Fn = ts.current), dt(ts);
}
function Yo(t, e) {
  (t.finishedWork = null), (t.finishedLanes = 0);
  var n = t.timeoutHandle;
  if ((n !== -1 && ((t.timeoutHandle = -1), AD(n)), Ft !== null))
    for (n = Ft.return; n !== null; ) {
      var r = n;
      switch ((Uy(r), r.tag)) {
        case 1:
          (r = r.type.childContextTypes), r != null && _d();
          break;
        case 3:
          Ss(), dt(Tn), dt(mn), Qy();
          break;
        case 5:
          Vy(r);
          break;
        case 4:
          Ss();
          break;
        case 13:
          dt(mt);
          break;
        case 19:
          dt(mt);
          break;
        case 10:
          Ky(r.type._context);
          break;
        case 22:
        case 23:
          av();
      }
      n = n.return;
    }
  if (
    ((Xt = t),
    (Ft = t = vo(t.current, null)),
    (on = Fn = e),
    ($t = 0),
    (uc = null),
    (rv = $h = ra = 0),
    (xn = _l = null),
    $o !== null)
  ) {
    for (e = 0; e < $o.length; e++)
      if (((n = $o[e]), (r = n.interleaved), r !== null)) {
        n.interleaved = null;
        var i = r.next,
          o = n.pending;
        if (o !== null) {
          var a = o.next;
          (o.next = i), (r.next = a);
        }
        n.pending = r;
      }
    $o = null;
  }
  return t;
}
function l1(t, e) {
  do {
    var n = Ft;
    try {
      if (($y(), (Qu.current = qd), Kd)) {
        for (var r = bt.memoizedState; r !== null; ) {
          var i = r.queue;
          i !== null && (i.pending = null), (r = r.next);
        }
        Kd = !1;
      }
      if (
        ((na = 0),
        (Qt = zt = bt = null),
        (Ll = !1),
        (sc = 0),
        (nv.current = null),
        n === null || n.return === null)
      ) {
        ($t = 1), (uc = e), (Ft = null);
        break;
      }
      e: {
        var o = t,
          a = n.return,
          l = n,
          c = e;
        if (
          ((e = on),
          (l.flags |= 32768),
          c !== null && typeof c == "object" && typeof c.then == "function")
        ) {
          var u = c,
            d = l,
            h = d.tag;
          if (!(d.mode & 1) && (h === 0 || h === 11 || h === 15)) {
            var f = d.alternate;
            f
              ? ((d.updateQueue = f.updateQueue),
                (d.memoizedState = f.memoizedState),
                (d.lanes = f.lanes))
              : ((d.updateQueue = null), (d.memoizedState = null));
          }
          var p = Dw(a);
          if (p !== null) {
            (p.flags &= -257),
              Lw(p, a, l, o, e),
              p.mode & 1 && Ow(o, u, e),
              (e = p),
              (c = u);
            var m = e.updateQueue;
            if (m === null) {
              var v = new Set();
              v.add(c), (e.updateQueue = v);
            } else m.add(c);
            break e;
          } else {
            if (!(e & 1)) {
              Ow(o, u, e), sv();
              break e;
            }
            c = Error(Y(426));
          }
        } else if (ft && l.mode & 1) {
          var C = Dw(a);
          if (C !== null) {
            !(C.flags & 65536) && (C.flags |= 256),
              Lw(C, a, l, o, e),
              zy(xs(c, l));
            break e;
          }
        }
        (o = c = xs(c, l)),
          $t !== 4 && ($t = 2),
          _l === null ? (_l = [o]) : _l.push(o),
          (o = a);
        do {
          switch (o.tag) {
            case 3:
              (o.flags |= 65536), (e &= -e), (o.lanes |= e);
              var b = qT(o, c, e);
              Iw(o, b);
              break e;
            case 1:
              l = c;
              var g = o.type,
                y = o.stateNode;
              if (
                !(o.flags & 128) &&
                (typeof g.getDerivedStateFromError == "function" ||
                  (y !== null &&
                    typeof y.componentDidCatch == "function" &&
                    (go === null || !go.has(y))))
              ) {
                (o.flags |= 65536), (e &= -e), (o.lanes |= e);
                var w = GT(o, l, e);
                Iw(o, w);
                break e;
              }
          }
          o = o.return;
        } while (o !== null);
      }
      d1(n);
    } catch (E) {
      (e = E), Ft === n && n !== null && (Ft = n = n.return);
      continue;
    }
    break;
  } while (!0);
}
function c1() {
  var t = Gd.current;
  return (Gd.current = qd), t === null ? qd : t;
}
function sv() {
  ($t === 0 || $t === 3 || $t === 2) && ($t = 4),
    Xt === null || (!(ra & 268435455) && !($h & 268435455)) || so(Xt, on);
}
function Qd(t, e) {
  var n = Le;
  Le |= 2;
  var r = c1();
  (Xt !== t || on !== e) && ((vi = null), Yo(t, e));
  do
    try {
      tL();
      break;
    } catch (i) {
      l1(t, i);
    }
  while (!0);
  if (($y(), (Le = n), (Gd.current = r), Ft !== null)) throw Error(Y(261));
  return (Xt = null), (on = 0), $t;
}
function tL() {
  for (; Ft !== null; ) u1(Ft);
}
function nL() {
  for (; Ft !== null && !NO(); ) u1(Ft);
}
function u1(t) {
  var e = f1(t.alternate, t, Fn);
  (t.memoizedProps = t.pendingProps),
    e === null ? d1(t) : (Ft = e),
    (nv.current = null);
}
function d1(t) {
  var e = t;
  do {
    var n = e.alternate;
    if (((t = e.return), e.flags & 32768)) {
      if (((n = QD(n, e)), n !== null)) {
        (n.flags &= 32767), (Ft = n);
        return;
      }
      if (t !== null)
        (t.flags |= 32768), (t.subtreeFlags = 0), (t.deletions = null);
      else {
        ($t = 6), (Ft = null);
        return;
      }
    } else if (((n = VD(n, e, Fn)), n !== null)) {
      Ft = n;
      return;
    }
    if (((e = e.sibling), e !== null)) {
      Ft = e;
      return;
    }
    Ft = e = t;
  } while (e !== null);
  $t === 0 && ($t = 5);
}
function Mo(t, e, n) {
  var r = We,
    i = lr.transition;
  try {
    (lr.transition = null), (We = 1), rL(t, e, n, r);
  } finally {
    (lr.transition = i), (We = r);
  }
  return null;
}
function rL(t, e, n, r) {
  do fs();
  while (co !== null);
  if (Le & 6) throw Error(Y(327));
  n = t.finishedWork;
  var i = t.finishedLanes;
  if (n === null) return null;
  if (((t.finishedWork = null), (t.finishedLanes = 0), n === t.current))
    throw Error(Y(177));
  (t.callbackNode = null), (t.callbackPriority = 0);
  var o = n.lanes | n.childLanes;
  if (
    (MO(t, o),
    t === Xt && ((Ft = Xt = null), (on = 0)),
    (!(n.subtreeFlags & 2064) && !(n.flags & 2064)) ||
      wu ||
      ((wu = !0),
      p1(Ad, function () {
        return fs(), null;
      })),
    (o = (n.flags & 15990) !== 0),
    n.subtreeFlags & 15990 || o)
  ) {
    (o = lr.transition), (lr.transition = null);
    var a = We;
    We = 1;
    var l = Le;
    (Le |= 4),
      (nv.current = null),
      XD(t, n),
      o1(n, t),
      xD(Em),
      (Od = !!xm),
      (Em = xm = null),
      (t.current = n),
      JD(n),
      kO(),
      (Le = l),
      (We = a),
      (lr.transition = o);
  } else t.current = n;
  if (
    (wu && ((wu = !1), (co = t), (Vd = i)),
    (o = t.pendingLanes),
    o === 0 && (go = null),
    jO(n.stateNode),
    Nn(t, At()),
    e !== null)
  )
    for (r = t.onRecoverableError, n = 0; n < e.length; n++)
      (i = e[n]), r(i.value, { componentStack: i.stack, digest: i.digest });
  if (Wd) throw ((Wd = !1), (t = Km), (Km = null), t);
  return (
    Vd & 1 && t.tag !== 0 && fs(),
    (o = t.pendingLanes),
    o & 1 ? (t === qm ? Ml++ : ((Ml = 0), (qm = t))) : (Ml = 0),
    Oo(),
    null
  );
}
function fs() {
  if (co !== null) {
    var t = qE(Vd),
      e = lr.transition,
      n = We;
    try {
      if (((lr.transition = null), (We = 16 > t ? 16 : t), co === null))
        var r = !1;
      else {
        if (((t = co), (co = null), (Vd = 0), Le & 6)) throw Error(Y(331));
        var i = Le;
        for (Le |= 4, ue = t.current; ue !== null; ) {
          var o = ue,
            a = o.child;
          if (ue.flags & 16) {
            var l = o.deletions;
            if (l !== null) {
              for (var c = 0; c < l.length; c++) {
                var u = l[c];
                for (ue = u; ue !== null; ) {
                  var d = ue;
                  switch (d.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Pl(8, d, o);
                  }
                  var h = d.child;
                  if (h !== null) (h.return = d), (ue = h);
                  else
                    for (; ue !== null; ) {
                      d = ue;
                      var f = d.sibling,
                        p = d.return;
                      if ((n1(d), d === u)) {
                        ue = null;
                        break;
                      }
                      if (f !== null) {
                        (f.return = p), (ue = f);
                        break;
                      }
                      ue = p;
                    }
                }
              }
              var m = o.alternate;
              if (m !== null) {
                var v = m.child;
                if (v !== null) {
                  m.child = null;
                  do {
                    var C = v.sibling;
                    (v.sibling = null), (v = C);
                  } while (v !== null);
                }
              }
              ue = o;
            }
          }
          if (o.subtreeFlags & 2064 && a !== null) (a.return = o), (ue = a);
          else
            e: for (; ue !== null; ) {
              if (((o = ue), o.flags & 2048))
                switch (o.tag) {
                  case 0:
                  case 11:
                  case 15:
                    Pl(9, o, o.return);
                }
              var b = o.sibling;
              if (b !== null) {
                (b.return = o.return), (ue = b);
                break e;
              }
              ue = o.return;
            }
        }
        var g = t.current;
        for (ue = g; ue !== null; ) {
          a = ue;
          var y = a.child;
          if (a.subtreeFlags & 2064 && y !== null) (y.return = a), (ue = y);
          else
            e: for (a = g; ue !== null; ) {
              if (((l = ue), l.flags & 2048))
                try {
                  switch (l.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Hh(9, l);
                  }
                } catch (E) {
                  Tt(l, l.return, E);
                }
              if (l === a) {
                ue = null;
                break e;
              }
              var w = l.sibling;
              if (w !== null) {
                (w.return = l.return), (ue = w);
                break e;
              }
              ue = l.return;
            }
        }
        if (
          ((Le = i), Oo(), Zr && typeof Zr.onPostCommitFiberRoot == "function")
        )
          try {
            Zr.onPostCommitFiberRoot(Lh, t);
          } catch {}
        r = !0;
      }
      return r;
    } finally {
      (We = n), (lr.transition = e);
    }
  }
  return !1;
}
function Ww(t, e, n) {
  (e = xs(n, e)),
    (e = qT(t, e, 1)),
    (t = mo(t, e, 1)),
    (e = bn()),
    t !== null && (Ac(t, 1, e), Nn(t, e));
}
function Tt(t, e, n) {
  if (t.tag === 3) Ww(t, t, n);
  else
    for (; e !== null; ) {
      if (e.tag === 3) {
        Ww(e, t, n);
        break;
      } else if (e.tag === 1) {
        var r = e.stateNode;
        if (
          typeof e.type.getDerivedStateFromError == "function" ||
          (typeof r.componentDidCatch == "function" &&
            (go === null || !go.has(r)))
        ) {
          (t = xs(n, t)),
            (t = GT(e, t, 1)),
            (e = mo(e, t, 1)),
            (t = bn()),
            e !== null && (Ac(e, 1, t), Nn(e, t));
          break;
        }
      }
      e = e.return;
    }
}
function iL(t, e, n) {
  var r = t.pingCache;
  r !== null && r.delete(e),
    (e = bn()),
    (t.pingedLanes |= t.suspendedLanes & n),
    Xt === t &&
      (on & n) === n &&
      ($t === 4 || ($t === 3 && (on & 130023424) === on && 500 > At() - iv)
        ? Yo(t, 0)
        : (rv |= n)),
    Nn(t, e);
}
function h1(t, e) {
  e === 0 &&
    (t.mode & 1
      ? ((e = du), (du <<= 1), !(du & 130023424) && (du = 4194304))
      : (e = 1));
  var n = bn();
  (t = Pi(t, e)), t !== null && (Ac(t, e, n), Nn(t, n));
}
function oL(t) {
  var e = t.memoizedState,
    n = 0;
  e !== null && (n = e.retryLane), h1(t, n);
}
function aL(t, e) {
  var n = 0;
  switch (t.tag) {
    case 13:
      var r = t.stateNode,
        i = t.memoizedState;
      i !== null && (n = i.retryLane);
      break;
    case 19:
      r = t.stateNode;
      break;
    default:
      throw Error(Y(314));
  }
  r !== null && r.delete(e), h1(t, n);
}
var f1;
f1 = function (t, e, n) {
  if (t !== null)
    if (t.memoizedProps !== e.pendingProps || Tn.current) En = !0;
    else {
      if (!(t.lanes & n) && !(e.flags & 128)) return (En = !1), WD(t, e, n);
      En = !!(t.flags & 131072);
    }
  else (En = !1), ft && e.flags & 1048576 && yT(e, Bd, e.index);
  switch (((e.lanes = 0), e.tag)) {
    case 2:
      var r = e.type;
      Xu(t, e), (t = e.pendingProps);
      var i = bs(e, mn.current);
      hs(e, n), (i = Xy(null, e, r, t, i, n));
      var o = Jy();
      return (
        (e.flags |= 1),
        typeof i == "object" &&
        i !== null &&
        typeof i.render == "function" &&
        i.$$typeof === void 0
          ? ((e.tag = 1),
            (e.memoizedState = null),
            (e.updateQueue = null),
            In(r) ? ((o = !0), Md(e)) : (o = !1),
            (e.memoizedState =
              i.state !== null && i.state !== void 0 ? i.state : null),
            Gy(e),
            (i.updater = zh),
            (e.stateNode = i),
            (i._reactInternals = e),
            Dm(e, r, t, n),
            (e = _m(null, e, r, !0, o, n)))
          : ((e.tag = 0), ft && o && By(e), vn(null, e, i, n), (e = e.child)),
        e
      );
    case 16:
      r = e.elementType;
      e: {
        switch (
          (Xu(t, e),
          (t = e.pendingProps),
          (i = r._init),
          (r = i(r._payload)),
          (e.type = r),
          (i = e.tag = lL(r)),
          (t = br(r, t)),
          i)
        ) {
          case 0:
            e = Pm(null, e, r, t, n);
            break e;
          case 1:
            e = Mw(null, e, r, t, n);
            break e;
          case 11:
            e = Pw(null, e, r, t, n);
            break e;
          case 14:
            e = _w(null, e, r, br(r.type, t), n);
            break e;
        }
        throw Error(Y(306, r, ""));
      }
      return e;
    case 0:
      return (
        (r = e.type),
        (i = e.pendingProps),
        (i = e.elementType === r ? i : br(r, i)),
        Pm(t, e, r, i, n)
      );
    case 1:
      return (
        (r = e.type),
        (i = e.pendingProps),
        (i = e.elementType === r ? i : br(r, i)),
        Mw(t, e, r, i, n)
      );
    case 3:
      e: {
        if ((YT(e), t === null)) throw Error(Y(387));
        (r = e.pendingProps),
          (o = e.memoizedState),
          (i = o.element),
          xT(t, e),
          Hd(e, r, null, n);
        var a = e.memoizedState;
        if (((r = a.element), o.isDehydrated))
          if (
            ((o = {
              element: r,
              isDehydrated: !1,
              cache: a.cache,
              pendingSuspenseBoundaries: a.pendingSuspenseBoundaries,
              transitions: a.transitions,
            }),
            (e.updateQueue.baseState = o),
            (e.memoizedState = o),
            e.flags & 256)
          ) {
            (i = xs(Error(Y(423)), e)), (e = Fw(t, e, r, n, i));
            break e;
          } else if (r !== i) {
            (i = xs(Error(Y(424)), e)), (e = Fw(t, e, r, n, i));
            break e;
          } else
            for (
              Un = po(e.stateNode.containerInfo.firstChild),
                Kn = e,
                ft = !0,
                xr = null,
                n = wT(e, null, r, n),
                e.child = n;
              n;

            )
              (n.flags = (n.flags & -3) | 4096), (n = n.sibling);
        else {
          if ((Cs(), r === i)) {
            e = _i(t, e, n);
            break e;
          }
          vn(t, e, r, n);
        }
        e = e.child;
      }
      return e;
    case 5:
      return (
        ET(e),
        t === null && Am(e),
        (r = e.type),
        (i = e.pendingProps),
        (o = t !== null ? t.memoizedProps : null),
        (a = i.children),
        Tm(r, i) ? (a = null) : o !== null && Tm(r, o) && (e.flags |= 32),
        QT(t, e),
        vn(t, e, a, n),
        e.child
      );
    case 6:
      return t === null && Am(e), null;
    case 13:
      return XT(t, e, n);
    case 4:
      return (
        Wy(e, e.stateNode.containerInfo),
        (r = e.pendingProps),
        t === null ? (e.child = ws(e, null, r, n)) : vn(t, e, r, n),
        e.child
      );
    case 11:
      return (
        (r = e.type),
        (i = e.pendingProps),
        (i = e.elementType === r ? i : br(r, i)),
        Pw(t, e, r, i, n)
      );
    case 7:
      return vn(t, e, e.pendingProps, n), e.child;
    case 8:
      return vn(t, e, e.pendingProps.children, n), e.child;
    case 12:
      return vn(t, e, e.pendingProps.children, n), e.child;
    case 10:
      e: {
        if (
          ((r = e.type._context),
          (i = e.pendingProps),
          (o = e.memoizedProps),
          (a = i.value),
          lt(Ud, r._currentValue),
          (r._currentValue = a),
          o !== null)
        )
          if (Ar(o.value, a)) {
            if (o.children === i.children && !Tn.current) {
              e = _i(t, e, n);
              break e;
            }
          } else
            for (o = e.child, o !== null && (o.return = e); o !== null; ) {
              var l = o.dependencies;
              if (l !== null) {
                a = o.child;
                for (var c = l.firstContext; c !== null; ) {
                  if (c.context === r) {
                    if (o.tag === 1) {
                      (c = ki(-1, n & -n)), (c.tag = 2);
                      var u = o.updateQueue;
                      if (u !== null) {
                        u = u.shared;
                        var d = u.pending;
                        d === null
                          ? (c.next = c)
                          : ((c.next = d.next), (d.next = c)),
                          (u.pending = c);
                      }
                    }
                    (o.lanes |= n),
                      (c = o.alternate),
                      c !== null && (c.lanes |= n),
                      jm(o.return, n, e),
                      (l.lanes |= n);
                    break;
                  }
                  c = c.next;
                }
              } else if (o.tag === 10) a = o.type === e.type ? null : o.child;
              else if (o.tag === 18) {
                if (((a = o.return), a === null)) throw Error(Y(341));
                (a.lanes |= n),
                  (l = a.alternate),
                  l !== null && (l.lanes |= n),
                  jm(a, n, e),
                  (a = o.sibling);
              } else a = o.child;
              if (a !== null) a.return = o;
              else
                for (a = o; a !== null; ) {
                  if (a === e) {
                    a = null;
                    break;
                  }
                  if (((o = a.sibling), o !== null)) {
                    (o.return = a.return), (a = o);
                    break;
                  }
                  a = a.return;
                }
              o = a;
            }
        vn(t, e, i.children, n), (e = e.child);
      }
      return e;
    case 9:
      return (
        (i = e.type),
        (r = e.pendingProps.children),
        hs(e, n),
        (i = hr(i)),
        (r = r(i)),
        (e.flags |= 1),
        vn(t, e, r, n),
        e.child
      );
    case 14:
      return (
        (r = e.type),
        (i = br(r, e.pendingProps)),
        (i = br(r.type, i)),
        _w(t, e, r, i, n)
      );
    case 15:
      return WT(t, e, e.type, e.pendingProps, n);
    case 17:
      return (
        (r = e.type),
        (i = e.pendingProps),
        (i = e.elementType === r ? i : br(r, i)),
        Xu(t, e),
        (e.tag = 1),
        In(r) ? ((t = !0), Md(e)) : (t = !1),
        hs(e, n),
        KT(e, r, i),
        Dm(e, r, i, n),
        _m(null, e, r, !0, t, n)
      );
    case 19:
      return JT(t, e, n);
    case 22:
      return VT(t, e, n);
  }
  throw Error(Y(156, e.tag));
};
function p1(t, e) {
  return zE(t, e);
}
function sL(t, e, n, r) {
  (this.tag = t),
    (this.key = n),
    (this.sibling =
      this.child =
      this.return =
      this.stateNode =
      this.type =
      this.elementType =
        null),
    (this.index = 0),
    (this.ref = null),
    (this.pendingProps = e),
    (this.dependencies =
      this.memoizedState =
      this.updateQueue =
      this.memoizedProps =
        null),
    (this.mode = r),
    (this.subtreeFlags = this.flags = 0),
    (this.deletions = null),
    (this.childLanes = this.lanes = 0),
    (this.alternate = null);
}
function ir(t, e, n, r) {
  return new sL(t, e, n, r);
}
function lv(t) {
  return (t = t.prototype), !(!t || !t.isReactComponent);
}
function lL(t) {
  if (typeof t == "function") return lv(t) ? 1 : 0;
  if (t != null) {
    if (((t = t.$$typeof), t === Ny)) return 11;
    if (t === ky) return 14;
  }
  return 2;
}
function vo(t, e) {
  var n = t.alternate;
  return (
    n === null
      ? ((n = ir(t.tag, e, t.key, t.mode)),
        (n.elementType = t.elementType),
        (n.type = t.type),
        (n.stateNode = t.stateNode),
        (n.alternate = t),
        (t.alternate = n))
      : ((n.pendingProps = e),
        (n.type = t.type),
        (n.flags = 0),
        (n.subtreeFlags = 0),
        (n.deletions = null)),
    (n.flags = t.flags & 14680064),
    (n.childLanes = t.childLanes),
    (n.lanes = t.lanes),
    (n.child = t.child),
    (n.memoizedProps = t.memoizedProps),
    (n.memoizedState = t.memoizedState),
    (n.updateQueue = t.updateQueue),
    (e = t.dependencies),
    (n.dependencies =
      e === null ? null : { lanes: e.lanes, firstContext: e.firstContext }),
    (n.sibling = t.sibling),
    (n.index = t.index),
    (n.ref = t.ref),
    n
  );
}
function ed(t, e, n, r, i, o) {
  var a = 2;
  if (((r = t), typeof t == "function")) lv(t) && (a = 1);
  else if (typeof t == "string") a = 5;
  else
    e: switch (t) {
      case qa:
        return Xo(n.children, i, o, e);
      case Iy:
        (a = 8), (i |= 8);
        break;
      case rm:
        return (
          (t = ir(12, n, e, i | 2)), (t.elementType = rm), (t.lanes = o), t
        );
      case im:
        return (t = ir(13, n, e, i)), (t.elementType = im), (t.lanes = o), t;
      case om:
        return (t = ir(19, n, e, i)), (t.elementType = om), (t.lanes = o), t;
      case EE:
        return Kh(n, i, o, e);
      default:
        if (typeof t == "object" && t !== null)
          switch (t.$$typeof) {
            case SE:
              a = 10;
              break e;
            case xE:
              a = 9;
              break e;
            case Ny:
              a = 11;
              break e;
            case ky:
              a = 14;
              break e;
            case ro:
              (a = 16), (r = null);
              break e;
          }
        throw Error(Y(130, t == null ? t : typeof t, ""));
    }
  return (
    (e = ir(a, n, e, i)), (e.elementType = t), (e.type = r), (e.lanes = o), e
  );
}
function Xo(t, e, n, r) {
  return (t = ir(7, t, r, e)), (t.lanes = n), t;
}
function Kh(t, e, n, r) {
  return (
    (t = ir(22, t, r, e)),
    (t.elementType = EE),
    (t.lanes = n),
    (t.stateNode = { isHidden: !1 }),
    t
  );
}
function hp(t, e, n) {
  return (t = ir(6, t, null, e)), (t.lanes = n), t;
}
function fp(t, e, n) {
  return (
    (e = ir(4, t.children !== null ? t.children : [], t.key, e)),
    (e.lanes = n),
    (e.stateNode = {
      containerInfo: t.containerInfo,
      pendingChildren: null,
      implementation: t.implementation,
    }),
    e
  );
}
function cL(t, e, n, r, i) {
  (this.tag = e),
    (this.containerInfo = t),
    (this.finishedWork =
      this.pingCache =
      this.current =
      this.pendingChildren =
        null),
    (this.timeoutHandle = -1),
    (this.callbackNode = this.pendingContext = this.context = null),
    (this.callbackPriority = 0),
    (this.eventTimes = Wf(0)),
    (this.expirationTimes = Wf(-1)),
    (this.entangledLanes =
      this.finishedLanes =
      this.mutableReadLanes =
      this.expiredLanes =
      this.pingedLanes =
      this.suspendedLanes =
      this.pendingLanes =
        0),
    (this.entanglements = Wf(0)),
    (this.identifierPrefix = r),
    (this.onRecoverableError = i),
    (this.mutableSourceEagerHydrationData = null);
}
function cv(t, e, n, r, i, o, a, l, c) {
  return (
    (t = new cL(t, e, n, l, c)),
    e === 1 ? ((e = 1), o === !0 && (e |= 8)) : (e = 0),
    (o = ir(3, null, null, e)),
    (t.current = o),
    (o.stateNode = t),
    (o.memoizedState = {
      element: r,
      isDehydrated: n,
      cache: null,
      transitions: null,
      pendingSuspenseBoundaries: null,
    }),
    Gy(o),
    t
  );
}
function uL(t, e, n) {
  var r = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {
    $$typeof: Ka,
    key: r == null ? null : "" + r,
    children: t,
    containerInfo: e,
    implementation: n,
  };
}
function m1(t) {
  if (!t) return So;
  t = t._reactInternals;
  e: {
    if (ya(t) !== t || t.tag !== 1) throw Error(Y(170));
    var e = t;
    do {
      switch (e.tag) {
        case 3:
          e = e.stateNode.context;
          break e;
        case 1:
          if (In(e.type)) {
            e = e.stateNode.__reactInternalMemoizedMergedChildContext;
            break e;
          }
      }
      e = e.return;
    } while (e !== null);
    throw Error(Y(171));
  }
  if (t.tag === 1) {
    var n = t.type;
    if (In(n)) return mT(t, n, e);
  }
  return e;
}
function g1(t, e, n, r, i, o, a, l, c) {
  return (
    (t = cv(n, r, !0, t, i, o, a, l, c)),
    (t.context = m1(null)),
    (n = t.current),
    (r = bn()),
    (i = yo(n)),
    (o = ki(r, i)),
    (o.callback = e ?? null),
    mo(n, o, i),
    (t.current.lanes = i),
    Ac(t, i, r),
    Nn(t, r),
    t
  );
}
function qh(t, e, n, r) {
  var i = e.current,
    o = bn(),
    a = yo(i);
  return (
    (n = m1(n)),
    e.context === null ? (e.context = n) : (e.pendingContext = n),
    (e = ki(o, a)),
    (e.payload = { element: t }),
    (r = r === void 0 ? null : r),
    r !== null && (e.callback = r),
    (t = mo(i, e, a)),
    t !== null && (Ir(t, i, a, o), Vu(t, i, a)),
    a
  );
}
function Yd(t) {
  if (((t = t.current), !t.child)) return null;
  switch (t.child.tag) {
    case 5:
      return t.child.stateNode;
    default:
      return t.child.stateNode;
  }
}
function Vw(t, e) {
  if (((t = t.memoizedState), t !== null && t.dehydrated !== null)) {
    var n = t.retryLane;
    t.retryLane = n !== 0 && n < e ? n : e;
  }
}
function uv(t, e) {
  Vw(t, e), (t = t.alternate) && Vw(t, e);
}
function dL() {
  return null;
}
var y1 =
  typeof reportError == "function"
    ? reportError
    : function (t) {
        console.error(t);
      };
function dv(t) {
  this._internalRoot = t;
}
Gh.prototype.render = dv.prototype.render = function (t) {
  var e = this._internalRoot;
  if (e === null) throw Error(Y(409));
  qh(t, e, null, null);
};
Gh.prototype.unmount = dv.prototype.unmount = function () {
  var t = this._internalRoot;
  if (t !== null) {
    this._internalRoot = null;
    var e = t.containerInfo;
    ia(function () {
      qh(null, t, null, null);
    }),
      (e[Li] = null);
  }
};
function Gh(t) {
  this._internalRoot = t;
}
Gh.prototype.unstable_scheduleHydration = function (t) {
  if (t) {
    var e = VE();
    t = { blockedOn: null, target: t, priority: e };
    for (var n = 0; n < ao.length && e !== 0 && e < ao[n].priority; n++);
    ao.splice(n, 0, t), n === 0 && YE(t);
  }
};
function hv(t) {
  return !(!t || (t.nodeType !== 1 && t.nodeType !== 9 && t.nodeType !== 11));
}
function Wh(t) {
  return !(
    !t ||
    (t.nodeType !== 1 &&
      t.nodeType !== 9 &&
      t.nodeType !== 11 &&
      (t.nodeType !== 8 || t.nodeValue !== " react-mount-point-unstable "))
  );
}
function Qw() {}
function hL(t, e, n, r, i) {
  if (i) {
    if (typeof r == "function") {
      var o = r;
      r = function () {
        var u = Yd(a);
        o.call(u);
      };
    }
    var a = g1(e, r, t, 0, null, !1, !1, "", Qw);
    return (
      (t._reactRootContainer = a),
      (t[Li] = a.current),
      nc(t.nodeType === 8 ? t.parentNode : t),
      ia(),
      a
    );
  }
  for (; (i = t.lastChild); ) t.removeChild(i);
  if (typeof r == "function") {
    var l = r;
    r = function () {
      var u = Yd(c);
      l.call(u);
    };
  }
  var c = cv(t, 0, !1, null, null, !1, !1, "", Qw);
  return (
    (t._reactRootContainer = c),
    (t[Li] = c.current),
    nc(t.nodeType === 8 ? t.parentNode : t),
    ia(function () {
      qh(e, c, n, r);
    }),
    c
  );
}
function Vh(t, e, n, r, i) {
  var o = n._reactRootContainer;
  if (o) {
    var a = o;
    if (typeof i == "function") {
      var l = i;
      i = function () {
        var c = Yd(a);
        l.call(c);
      };
    }
    qh(e, a, t, i);
  } else a = hL(n, e, t, i, r);
  return Yd(a);
}
GE = function (t) {
  switch (t.tag) {
    case 3:
      var e = t.stateNode;
      if (e.current.memoizedState.isDehydrated) {
        var n = Sl(e.pendingLanes);
        n !== 0 &&
          (jy(e, n | 1), Nn(e, At()), !(Le & 6) && ((Es = At() + 500), Oo()));
      }
      break;
    case 13:
      ia(function () {
        var r = Pi(t, 1);
        if (r !== null) {
          var i = bn();
          Ir(r, t, 1, i);
        }
      }),
        uv(t, 1);
  }
};
Oy = function (t) {
  if (t.tag === 13) {
    var e = Pi(t, 134217728);
    if (e !== null) {
      var n = bn();
      Ir(e, t, 134217728, n);
    }
    uv(t, 134217728);
  }
};
WE = function (t) {
  if (t.tag === 13) {
    var e = yo(t),
      n = Pi(t, e);
    if (n !== null) {
      var r = bn();
      Ir(n, t, e, r);
    }
    uv(t, e);
  }
};
VE = function () {
  return We;
};
QE = function (t, e) {
  var n = We;
  try {
    return (We = t), e();
  } finally {
    We = n;
  }
};
mm = function (t, e, n) {
  switch (e) {
    case "input":
      if ((lm(t, n), (e = n.name), n.type === "radio" && e != null)) {
        for (n = t; n.parentNode; ) n = n.parentNode;
        for (
          n = n.querySelectorAll(
            "input[name=" + JSON.stringify("" + e) + '][type="radio"]'
          ),
            e = 0;
          e < n.length;
          e++
        ) {
          var r = n[e];
          if (r !== t && r.form === t.form) {
            var i = Fh(r);
            if (!i) throw Error(Y(90));
            IE(r), lm(r, i);
          }
        }
      }
      break;
    case "textarea":
      kE(t, n);
      break;
    case "select":
      (e = n.value), e != null && ls(t, !!n.multiple, e, !1);
  }
};
PE = ov;
_E = ia;
var fL = { usingClientEntryPoint: !1, Events: [Oc, Qa, Fh, DE, LE, ov] },
  ul = {
    findFiberByHostInstance: Ho,
    bundleType: 0,
    version: "18.3.1",
    rendererPackageName: "react-dom",
  },
  pL = {
    bundleType: ul.bundleType,
    version: ul.version,
    rendererPackageName: ul.rendererPackageName,
    rendererConfig: ul.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: $i.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (t) {
      return (t = BE(t)), t === null ? null : t.stateNode;
    },
    findFiberByHostInstance: ul.findFiberByHostInstance || dL,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.3.1-next-f1338f8080-20240426",
  };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
  var Su = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!Su.isDisabled && Su.supportsFiber)
    try {
      (Lh = Su.inject(pL)), (Zr = Su);
    } catch {}
}
Xn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = fL;
Xn.createPortal = function (t, e) {
  var n = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!hv(e)) throw Error(Y(200));
  return uL(t, e, null, n);
};
Xn.createRoot = function (t, e) {
  if (!hv(t)) throw Error(Y(299));
  var n = !1,
    r = "",
    i = y1;
  return (
    e != null &&
      (e.unstable_strictMode === !0 && (n = !0),
      e.identifierPrefix !== void 0 && (r = e.identifierPrefix),
      e.onRecoverableError !== void 0 && (i = e.onRecoverableError)),
    (e = cv(t, 1, !1, null, null, n, !1, r, i)),
    (t[Li] = e.current),
    nc(t.nodeType === 8 ? t.parentNode : t),
    new dv(e)
  );
};
Xn.findDOMNode = function (t) {
  if (t == null) return null;
  if (t.nodeType === 1) return t;
  var e = t._reactInternals;
  if (e === void 0)
    throw typeof t.render == "function"
      ? Error(Y(188))
      : ((t = Object.keys(t).join(",")), Error(Y(268, t)));
  return (t = BE(e)), (t = t === null ? null : t.stateNode), t;
};
Xn.flushSync = function (t) {
  return ia(t);
};
Xn.hydrate = function (t, e, n) {
  if (!Wh(e)) throw Error(Y(200));
  return Vh(null, t, e, !0, n);
};
Xn.hydrateRoot = function (t, e, n) {
  if (!hv(t)) throw Error(Y(405));
  var r = (n != null && n.hydratedSources) || null,
    i = !1,
    o = "",
    a = y1;
  if (
    (n != null &&
      (n.unstable_strictMode === !0 && (i = !0),
      n.identifierPrefix !== void 0 && (o = n.identifierPrefix),
      n.onRecoverableError !== void 0 && (a = n.onRecoverableError)),
    (e = g1(e, null, t, 1, n ?? null, i, !1, o, a)),
    (t[Li] = e.current),
    nc(t),
    r)
  )
    for (t = 0; t < r.length; t++)
      (n = r[t]),
        (i = n._getVersion),
        (i = i(n._source)),
        e.mutableSourceEagerHydrationData == null
          ? (e.mutableSourceEagerHydrationData = [n, i])
          : e.mutableSourceEagerHydrationData.push(n, i);
  return new Gh(e);
};
Xn.render = function (t, e, n) {
  if (!Wh(e)) throw Error(Y(200));
  return Vh(null, t, e, !1, n);
};
Xn.unmountComponentAtNode = function (t) {
  if (!Wh(t)) throw Error(Y(40));
  return t._reactRootContainer
    ? (ia(function () {
        Vh(null, null, t, !1, function () {
          (t._reactRootContainer = null), (t[Li] = null);
        });
      }),
      !0)
    : !1;
};
Xn.unstable_batchedUpdates = ov;
Xn.unstable_renderSubtreeIntoContainer = function (t, e, n, r) {
  if (!Wh(n)) throw Error(Y(200));
  if (t == null || t._reactInternals === void 0) throw Error(Y(38));
  return Vh(t, e, n, !1, r);
};
Xn.version = "18.3.1-next-f1338f8080-20240426";
function v1() {
  if (
    !(
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
    )
  )
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(v1);
    } catch (t) {
      console.error(t);
    }
}
v1(), (vE.exports = Xn);
var Qh = vE.exports;
const Ti = Hi(Qh),
  mL = aE({ __proto__: null, default: Ti }, [Qh]);
var Yw = Qh;
(tm.createRoot = Yw.createRoot), (tm.hydrateRoot = Yw.hydrateRoot);
/*! @azure/msal-common v14.14.0 2024-07-23 */ const H = {
    LIBRARY_NAME: "MSAL.JS",
    SKU: "msal.js.common",
    CACHE_PREFIX: "msal",
    DEFAULT_AUTHORITY: "https://login.microsoftonline.com/common/",
    DEFAULT_AUTHORITY_HOST: "login.microsoftonline.com",
    DEFAULT_COMMON_TENANT: "common",
    ADFS: "adfs",
    DSTS: "dstsv2",
    AAD_INSTANCE_DISCOVERY_ENDPT:
      "https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",
    CIAM_AUTH_URL: ".ciamlogin.com",
    AAD_TENANT_DOMAIN_SUFFIX: ".onmicrosoft.com",
    RESOURCE_DELIM: "|",
    NO_ACCOUNT: "NO_ACCOUNT",
    CLAIMS: "claims",
    CONSUMER_UTID: "9188040d-6c67-4c5b-b112-36a304b66dad",
    OPENID_SCOPE: "openid",
    PROFILE_SCOPE: "profile",
    OFFLINE_ACCESS_SCOPE: "offline_access",
    EMAIL_SCOPE: "email",
    CODE_RESPONSE_TYPE: "code",
    CODE_GRANT_TYPE: "authorization_code",
    RT_GRANT_TYPE: "refresh_token",
    FRAGMENT_RESPONSE_MODE: "fragment",
    S256_CODE_CHALLENGE_METHOD: "S256",
    URL_FORM_CONTENT_TYPE: "application/x-www-form-urlencoded;charset=utf-8",
    AUTHORIZATION_PENDING: "authorization_pending",
    NOT_DEFINED: "not_defined",
    EMPTY_STRING: "",
    NOT_APPLICABLE: "N/A",
    NOT_AVAILABLE: "Not Available",
    FORWARD_SLASH: "/",
    IMDS_ENDPOINT: "http://169.254.169.254/metadata/instance/compute/location",
    IMDS_VERSION: "2020-06-01",
    IMDS_TIMEOUT: 2e3,
    AZURE_REGION_AUTO_DISCOVER_FLAG: "TryAutoDetect",
    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: "login.microsoft.com",
    KNOWN_PUBLIC_CLOUDS: [
      "login.microsoftonline.com",
      "login.windows.net",
      "login.microsoft.com",
      "sts.windows.net",
    ],
    TOKEN_RESPONSE_TYPE: "token",
    ID_TOKEN_RESPONSE_TYPE: "id_token",
    SHR_NONCE_VALIDITY: 240,
    INVALID_INSTANCE: "invalid_instance",
  },
  xu = {
    SUCCESS: 200,
    SUCCESS_RANGE_START: 200,
    SUCCESS_RANGE_END: 299,
    REDIRECT: 302,
    CLIENT_ERROR: 400,
    CLIENT_ERROR_RANGE_START: 400,
    BAD_REQUEST: 400,
    UNAUTHORIZED: 401,
    NOT_FOUND: 404,
    REQUEST_TIMEOUT: 408,
    TOO_MANY_REQUESTS: 429,
    CLIENT_ERROR_RANGE_END: 499,
    SERVER_ERROR: 500,
    SERVER_ERROR_RANGE_START: 500,
    SERVICE_UNAVAILABLE: 503,
    GATEWAY_TIMEOUT: 504,
    SERVER_ERROR_RANGE_END: 599,
    MULTI_SIDED_ERROR: 600,
  },
  Ks = [H.OPENID_SCOPE, H.PROFILE_SCOPE, H.OFFLINE_ACCESS_SCOPE],
  Xw = [...Ks, H.EMAIL_SCOPE],
  Xr = {
    CONTENT_TYPE: "Content-Type",
    RETRY_AFTER: "Retry-After",
    CCS_HEADER: "X-AnchorMailbox",
    WWWAuthenticate: "WWW-Authenticate",
    AuthenticationInfo: "Authentication-Info",
    X_MS_REQUEST_ID: "x-ms-request-id",
    X_MS_HTTP_VERSION: "x-ms-httpver",
  },
  Wt = {
    ID_TOKEN: "idtoken",
    CLIENT_INFO: "client.info",
    ADAL_ID_TOKEN: "adal.idtoken",
    ERROR: "error",
    ERROR_DESC: "error.description",
    ACTIVE_ACCOUNT: "active-account",
    ACTIVE_ACCOUNT_FILTERS: "active-account-filters",
  },
  bo = {
    COMMON: "common",
    ORGANIZATIONS: "organizations",
    CONSUMERS: "consumers",
  },
  Eu = { ACCESS_TOKEN: "access_token", XMS_CC: "xms_cc" },
  Yt = {
    LOGIN: "login",
    SELECT_ACCOUNT: "select_account",
    CONSENT: "consent",
    NONE: "none",
    CREATE: "create",
    NO_SESSION: "no_session",
  },
  Jw = { PLAIN: "plain", S256: "S256" },
  Lc = { QUERY: "query", FRAGMENT: "fragment" },
  gL = { ...Lc, FORM_POST: "form_post" },
  b1 = {
    IMPLICIT_GRANT: "implicit",
    AUTHORIZATION_CODE_GRANT: "authorization_code",
    CLIENT_CREDENTIALS_GRANT: "client_credentials",
    RESOURCE_OWNER_PASSWORD_GRANT: "password",
    REFRESH_TOKEN_GRANT: "refresh_token",
    DEVICE_CODE_GRANT: "device_code",
    JWT_BEARER: "urn:ietf:params:oauth:grant-type:jwt-bearer",
  },
  Tu = {
    MSSTS_ACCOUNT_TYPE: "MSSTS",
    ADFS_ACCOUNT_TYPE: "ADFS",
    MSAV1_ACCOUNT_TYPE: "MSA",
    GENERIC_ACCOUNT_TYPE: "Generic",
  },
  pn = { CACHE_KEY_SEPARATOR: "-", CLIENT_INFO_SEPARATOR: "." },
  we = {
    ID_TOKEN: "IdToken",
    ACCESS_TOKEN: "AccessToken",
    ACCESS_TOKEN_WITH_AUTH_SCHEME: "AccessToken_With_AuthScheme",
    REFRESH_TOKEN: "RefreshToken",
  },
  fv = "appmetadata",
  yL = "client_info",
  Fl = "1",
  Xd = { CACHE_KEY: "authority-metadata", REFRESH_TIME_SECONDS: 3600 * 24 },
  _n = {
    CONFIG: "config",
    CACHE: "cache",
    NETWORK: "network",
    HARDCODED_VALUES: "hardcoded_values",
  },
  en = {
    SCHEMA_VERSION: 5,
    MAX_CUR_HEADER_BYTES: 80,
    MAX_LAST_HEADER_BYTES: 330,
    MAX_CACHED_ERRORS: 50,
    CACHE_KEY: "server-telemetry",
    CATEGORY_SEPARATOR: "|",
    VALUE_SEPARATOR: ",",
    OVERFLOW_TRUE: "1",
    OVERFLOW_FALSE: "0",
    UNKNOWN_ERROR: "unknown_error",
  },
  Ze = { BEARER: "Bearer", POP: "pop", SSH: "ssh-cert" },
  Bl = {
    DEFAULT_THROTTLE_TIME_SECONDS: 60,
    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,
    THROTTLING_PREFIX: "throttling",
    X_MS_LIB_CAPABILITY_VALUE: "retry-after, h429",
  },
  Zw = {
    INVALID_GRANT_ERROR: "invalid_grant",
    CLIENT_MISMATCH_ERROR: "client_mismatch",
  },
  e0 = { username: "username", password: "password" },
  Iu = { httpSuccess: 200, httpBadRequest: 400 },
  ja = {
    FAILED_AUTO_DETECTION: "1",
    INTERNAL_CACHE: "2",
    ENVIRONMENT_VARIABLE: "3",
    IMDS: "4",
  },
  pp = {
    CONFIGURED_MATCHES_DETECTED: "1",
    CONFIGURED_NO_AUTO_DETECTION: "2",
    CONFIGURED_NOT_DETECTED: "3",
    AUTO_DETECTION_REQUESTED_SUCCESSFUL: "4",
    AUTO_DETECTION_REQUESTED_FAILED: "5",
  },
  to = {
    NOT_APPLICABLE: "0",
    FORCE_REFRESH_OR_CLAIMS: "1",
    NO_CACHED_ACCESS_TOKEN: "2",
    CACHED_ACCESS_TOKEN_EXPIRED: "3",
    PROACTIVELY_REFRESHED: "4",
  },
  vL = { Jwt: "JWT", Jwk: "JWK", Pop: "pop" },
  bL = 300;
/*! @azure/msal-common v14.14.0 2024-07-23 */ const pv = "unexpected_error",
  CL = "post_request_failed";
/*! @azure/msal-common v14.14.0 2024-07-23 */ const t0 = {
  [pv]: "Unexpected error in authentication.",
  [CL]: "Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.",
};
class Nt extends Error {
  constructor(e, n, r) {
    const i = n ? `${e}: ${n}` : e;
    super(i),
      Object.setPrototypeOf(this, Nt.prototype),
      (this.errorCode = e || H.EMPTY_STRING),
      (this.errorMessage = n || H.EMPTY_STRING),
      (this.subError = r || H.EMPTY_STRING),
      (this.name = "AuthError");
  }
  setCorrelationId(e) {
    this.correlationId = e;
  }
}
function C1(t, e) {
  return new Nt(t, e ? `${t0[t]} ${e}` : t0[t]);
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const mv =
    "client_info_decoding_error",
  w1 = "client_info_empty_error",
  gv = "token_parsing_error",
  S1 = "null_or_empty_token",
  bi = "endpoints_resolution_error",
  x1 = "network_error",
  E1 = "openid_config_error",
  T1 = "hash_not_deserialized",
  Ts = "invalid_state",
  I1 = "state_mismatch",
  Jd = "state_not_found",
  N1 = "nonce_mismatch",
  yv = "auth_time_not_found",
  k1 = "max_age_transpired",
  wL = "multiple_matching_tokens",
  SL = "multiple_matching_accounts",
  R1 = "multiple_matching_appMetadata",
  A1 = "request_cannot_be_made",
  j1 = "cannot_remove_empty_scope",
  O1 = "cannot_append_scopeset",
  Vm = "empty_input_scopeset",
  xL = "device_code_polling_cancelled",
  EL = "device_code_expired",
  TL = "device_code_unknown_error",
  vv = "no_account_in_silent_request",
  D1 = "invalid_cache_record",
  bv = "invalid_cache_environment",
  Qm = "no_account_found",
  Ym = "no_crypto_object",
  Xm = "unexpected_credential_type",
  IL = "invalid_assertion",
  NL = "invalid_client_credential",
  Ii = "token_refresh_required",
  kL = "user_timeout_reached",
  L1 = "token_claims_cnf_required_for_signedjwt",
  P1 = "authorization_code_missing_from_server_response",
  _1 = "binding_key_not_removed",
  M1 = "end_session_endpoint_not_supported",
  Cv = "key_id_missing",
  RL = "no_network_connectivity",
  AL = "user_canceled",
  jL = "missing_tenant_id_error",
  ke = "method_not_implemented",
  OL = "nested_app_auth_bridge_disabled";
/*! @azure/msal-common v14.14.0 2024-07-23 */ const n0 = {
  [mv]: "The client info could not be parsed/decoded correctly",
  [w1]: "The client info was empty",
  [gv]: "Token cannot be parsed",
  [S1]: "The token is null or empty",
  [bi]: "Endpoints cannot be resolved",
  [x1]: "Network request failed",
  [E1]: "Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",
  [T1]: "The hash parameters could not be deserialized",
  [Ts]: "State was not the expected format",
  [I1]: "State mismatch error",
  [Jd]: "State not found",
  [N1]: "Nonce mismatch error",
  [yv]: "Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",
  [k1]: "Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",
  [wL]: "The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",
  [SL]: "The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",
  [R1]: "The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",
  [A1]: "Token request cannot be made without authorization code or refresh token.",
  [j1]: "Cannot remove null or empty scope from ScopeSet",
  [O1]: "Cannot append ScopeSet",
  [Vm]: "Empty input ScopeSet cannot be processed",
  [xL]: "Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",
  [EL]: "Device code is expired.",
  [TL]: "Device code stopped polling for unknown reasons.",
  [vv]: "Please pass an account object, silent flow is not supported without account information",
  [D1]: "Cache record object was null or undefined.",
  [bv]: "Invalid environment when attempting to create cache entry",
  [Qm]: "No account found in cache for given key.",
  [Ym]: "No crypto object detected.",
  [Xm]: "Unexpected credential type.",
  [IL]: "Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",
  [NL]: "Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",
  [Ii]: "Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",
  [kL]: "User defined timeout for device code polling reached",
  [L1]: "Cannot generate a POP jwt if the token_claims are not populated",
  [P1]: "Server response does not contain an authorization code to proceed",
  [_1]: "Could not remove the credential's binding key from storage.",
  [M1]: "The provided authority does not support logout",
  [Cv]: "A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",
  [RL]: "No network connectivity. Check your internet connection.",
  [AL]: "User cancelled the flow.",
  [jL]: "A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",
  [ke]: "This method has not been implemented",
  [OL]: "The nested app auth bridge is disabled",
};
class Yh extends Nt {
  constructor(e, n) {
    super(e, n ? `${n0[e]}: ${n}` : n0[e]),
      (this.name = "ClientAuthError"),
      Object.setPrototypeOf(this, Yh.prototype);
  }
}
function V(t, e) {
  return new Yh(t, e);
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ function va(t, e) {
  const n = DL(t);
  try {
    const r = e(n);
    return JSON.parse(r);
  } catch {
    throw V(gv);
  }
}
function DL(t) {
  if (!t) throw V(S1);
  const n = /^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(t);
  if (!n || n.length < 4) throw V(gv);
  return n[2];
}
function F1(t, e) {
  if (e === 0 || Date.now() - 3e5 > t + e) throw V(k1);
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const wr = {
  Default: 0,
  Adfs: 1,
  Dsts: 2,
  Ciam: 3,
};
/*! @azure/msal-common v14.14.0 2024-07-23 */ function LL(t) {
  return (
    t.hasOwnProperty("authorization_endpoint") &&
    t.hasOwnProperty("token_endpoint") &&
    t.hasOwnProperty("issuer") &&
    t.hasOwnProperty("jwks_uri")
  );
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const B1 = "redirect_uri_empty",
  PL = "claims_request_parsing_error",
  U1 = "authority_uri_insecure",
  El = "url_parse_error",
  z1 = "empty_url_error",
  H1 = "empty_input_scopes_error",
  $1 = "invalid_prompt_value",
  wv = "invalid_claims",
  K1 = "token_request_empty",
  q1 = "logout_request_empty",
  G1 = "invalid_code_challenge_method",
  Sv = "pkce_params_missing",
  xv = "invalid_cloud_discovery_metadata",
  W1 = "invalid_authority_metadata",
  V1 = "untrusted_authority",
  Xh = "missing_ssh_jwk",
  Q1 = "missing_ssh_kid",
  _L = "missing_nonce_authentication_header",
  ML = "invalid_authentication_header",
  Y1 = "cannot_set_OIDCOptions",
  X1 = "cannot_allow_native_broker",
  J1 = "authority_mismatch";
/*! @azure/msal-common v14.14.0 2024-07-23 */ const FL = {
  [B1]: "A redirect URI is required for all calls, and none has been set.",
  [PL]: "Could not parse the given claims request object.",
  [U1]: "Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",
  [El]: "URL could not be parsed into appropriate segments.",
  [z1]: "URL was empty or null.",
  [H1]: "Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",
  [$1]: "Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",
  [wv]: "Given claims parameter must be a stringified JSON object.",
  [K1]: "Token request was empty and not found in cache.",
  [q1]: "The logout request was null or undefined.",
  [G1]: 'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',
  [Sv]: "Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",
  [xv]: "Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",
  [W1]: "Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",
  [V1]: "The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",
  [Xh]: "Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",
  [Q1]: "Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",
  [_L]: "Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",
  [ML]: "Invalid authentication header provided",
  [Y1]: "Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",
  [X1]: "Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",
  [J1]: "Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.",
};
class Ev extends Nt {
  constructor(e) {
    super(e, FL[e]),
      (this.name = "ClientConfigurationError"),
      Object.setPrototypeOf(this, Ev.prototype);
  }
}
function tt(t) {
  return new Ev(t);
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class Nr {
  static isEmptyObj(e) {
    if (e)
      try {
        const n = JSON.parse(e);
        return Object.keys(n).length === 0;
      } catch {}
    return !0;
  }
  static startsWith(e, n) {
    return e.indexOf(n) === 0;
  }
  static endsWith(e, n) {
    return e.length >= n.length && e.lastIndexOf(n) === e.length - n.length;
  }
  static queryStringToObject(e) {
    const n = {},
      r = e.split("&"),
      i = (o) => decodeURIComponent(o.replace(/\+/g, " "));
    return (
      r.forEach((o) => {
        if (o.trim()) {
          const [a, l] = o.split(/=(.+)/g, 2);
          a && l && (n[i(a)] = i(l));
        }
      }),
      n
    );
  }
  static trimArrayEntries(e) {
    return e.map((n) => n.trim());
  }
  static removeEmptyStringsFromArray(e) {
    return e.filter((n) => !!n);
  }
  static jsonParseHelper(e) {
    try {
      return JSON.parse(e);
    } catch {
      return null;
    }
  }
  static matchPattern(e, n) {
    return new RegExp(
      e.replace(/\\/g, "\\\\").replace(/\*/g, "[^ ]*").replace(/\?/g, "\\?")
    ).test(n);
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ function Z1(t) {
  return t.startsWith("#/")
    ? t.substring(2)
    : t.startsWith("#") || t.startsWith("?")
    ? t.substring(1)
    : t;
}
function Zd(t) {
  if (!t || t.indexOf("=") < 0) return null;
  try {
    const e = Z1(t),
      n = Object.fromEntries(new URLSearchParams(e));
    if (n.code || n.error || n.error_description || n.state) return n;
  } catch {
    throw V(T1);
  }
  return null;
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class De {
  get urlString() {
    return this._urlString;
  }
  constructor(e) {
    if (((this._urlString = e), !this._urlString)) throw tt(z1);
    e.includes("#") || (this._urlString = De.canonicalizeUri(e));
  }
  static canonicalizeUri(e) {
    if (e) {
      let n = e.toLowerCase();
      return (
        Nr.endsWith(n, "?")
          ? (n = n.slice(0, -1))
          : Nr.endsWith(n, "?/") && (n = n.slice(0, -2)),
        Nr.endsWith(n, "/") || (n += "/"),
        n
      );
    }
    return e;
  }
  validateAsUri() {
    let e;
    try {
      e = this.getUrlComponents();
    } catch {
      throw tt(El);
    }
    if (!e.HostNameAndPort || !e.PathSegments) throw tt(El);
    if (!e.Protocol || e.Protocol.toLowerCase() !== "https:") throw tt(U1);
  }
  static appendQueryString(e, n) {
    return n ? (e.indexOf("?") < 0 ? `${e}?${n}` : `${e}&${n}`) : e;
  }
  static removeHashFromUrl(e) {
    return De.canonicalizeUri(e.split("#")[0]);
  }
  replaceTenantPath(e) {
    const n = this.getUrlComponents(),
      r = n.PathSegments;
    return (
      e &&
        r.length !== 0 &&
        (r[0] === bo.COMMON || r[0] === bo.ORGANIZATIONS) &&
        (r[0] = e),
      De.constructAuthorityUriFromObject(n)
    );
  }
  getUrlComponents() {
    const e = RegExp(
        "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"
      ),
      n = this.urlString.match(e);
    if (!n) throw tt(El);
    const r = {
      Protocol: n[1],
      HostNameAndPort: n[4],
      AbsolutePath: n[5],
      QueryString: n[7],
    };
    let i = r.AbsolutePath.split("/");
    return (
      (i = i.filter((o) => o && o.length > 0)),
      (r.PathSegments = i),
      r.QueryString &&
        r.QueryString.endsWith("/") &&
        (r.QueryString = r.QueryString.substring(0, r.QueryString.length - 1)),
      r
    );
  }
  static getDomainFromUrl(e) {
    const n = RegExp("^([^:/?#]+://)?([^/?#]*)"),
      r = e.match(n);
    if (!r) throw tt(El);
    return r[2];
  }
  static getAbsoluteUrl(e, n) {
    if (e[0] === H.FORWARD_SLASH) {
      const i = new De(n).getUrlComponents();
      return i.Protocol + "//" + i.HostNameAndPort + e;
    }
    return e;
  }
  static constructAuthorityUriFromObject(e) {
    return new De(
      e.Protocol + "//" + e.HostNameAndPort + "/" + e.PathSegments.join("/")
    );
  }
  static hashContainsKnownProperties(e) {
    return !!Zd(e);
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const eI = {
    endpointMetadata: {
      "login.microsoftonline.com": {
        token_endpoint:
          "https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",
        jwks_uri:
          "https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",
        issuer: "https://login.microsoftonline.com/{tenantid}/v2.0",
        authorization_endpoint:
          "https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",
        end_session_endpoint:
          "https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout",
      },
      "login.chinacloudapi.cn": {
        token_endpoint:
          "https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",
        jwks_uri:
          "https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",
        issuer: "https://login.partner.microsoftonline.cn/{tenantid}/v2.0",
        authorization_endpoint:
          "https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",
        end_session_endpoint:
          "https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout",
      },
      "login.microsoftonline.us": {
        token_endpoint:
          "https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",
        jwks_uri:
          "https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",
        issuer: "https://login.microsoftonline.us/{tenantid}/v2.0",
        authorization_endpoint:
          "https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",
        end_session_endpoint:
          "https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout",
      },
    },
    instanceDiscoveryMetadata: {
      tenant_discovery_endpoint:
        "https://{canonicalAuthority}/v2.0/.well-known/openid-configuration",
      metadata: [
        {
          preferred_network: "login.microsoftonline.com",
          preferred_cache: "login.windows.net",
          aliases: [
            "login.microsoftonline.com",
            "login.windows.net",
            "login.microsoft.com",
            "sts.windows.net",
          ],
        },
        {
          preferred_network: "login.partner.microsoftonline.cn",
          preferred_cache: "login.partner.microsoftonline.cn",
          aliases: [
            "login.partner.microsoftonline.cn",
            "login.chinacloudapi.cn",
          ],
        },
        {
          preferred_network: "login.microsoftonline.de",
          preferred_cache: "login.microsoftonline.de",
          aliases: ["login.microsoftonline.de"],
        },
        {
          preferred_network: "login.microsoftonline.us",
          preferred_cache: "login.microsoftonline.us",
          aliases: ["login.microsoftonline.us", "login.usgovcloudapi.net"],
        },
        {
          preferred_network: "login-us.microsoftonline.com",
          preferred_cache: "login-us.microsoftonline.com",
          aliases: ["login-us.microsoftonline.com"],
        },
      ],
    },
  },
  r0 = eI.endpointMetadata,
  Tv = eI.instanceDiscoveryMetadata,
  tI = new Set();
Tv.metadata.forEach((t) => {
  t.aliases.forEach((e) => {
    tI.add(e);
  });
});
function BL(t, e) {
  var i;
  let n;
  const r = t.canonicalAuthority;
  if (r) {
    const o = new De(r).getUrlComponents().HostNameAndPort;
    n =
      i0(
        o,
        (i = t.cloudDiscoveryMetadata) == null ? void 0 : i.metadata,
        _n.CONFIG,
        e
      ) ||
      i0(o, Tv.metadata, _n.HARDCODED_VALUES, e) ||
      t.knownAuthorities;
  }
  return n || [];
}
function i0(t, e, n, r) {
  if (
    (r == null || r.trace(`getAliasesFromMetadata called with source: ${n}`),
    t && e)
  ) {
    const i = eh(e, t);
    if (i)
      return (
        r == null ||
          r.trace(
            `getAliasesFromMetadata: found cloud discovery metadata in ${n}, returning aliases`
          ),
        i.aliases
      );
    r == null ||
      r.trace(
        `getAliasesFromMetadata: did not find cloud discovery metadata in ${n}`
      );
  }
  return null;
}
function UL(t) {
  return eh(Tv.metadata, t);
}
function eh(t, e) {
  for (let n = 0; n < t.length; n++) {
    const r = t[n];
    if (r.aliases.includes(e)) return r;
  }
  return null;
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const Ri = {
  AAD: "AAD",
  OIDC: "OIDC",
};
/*! @azure/msal-common v14.14.0 2024-07-23 */ const Iv = {
  None: "none",
  AzurePublic: "https://login.microsoftonline.com",
  AzurePpe: "https://login.windows-ppe.net",
  AzureChina: "https://login.chinacloudapi.cn",
  AzureGermany: "https://login.microsoftonline.de",
  AzureUsGovernment: "https://login.microsoftonline.us",
};
/*! @azure/msal-common v14.14.0 2024-07-23 */ function zL(t) {
  return (
    t.hasOwnProperty("tenant_discovery_endpoint") &&
    t.hasOwnProperty("metadata")
  );
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ function HL(t) {
  return t.hasOwnProperty("error") && t.hasOwnProperty("error_description");
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const B = {
    AcquireTokenByCode: "acquireTokenByCode",
    AcquireTokenByRefreshToken: "acquireTokenByRefreshToken",
    AcquireTokenSilent: "acquireTokenSilent",
    AcquireTokenSilentAsync: "acquireTokenSilentAsync",
    AcquireTokenPopup: "acquireTokenPopup",
    AcquireTokenPreRedirect: "acquireTokenPreRedirect",
    AcquireTokenRedirect: "acquireTokenRedirect",
    CryptoOptsGetPublicKeyThumbprint: "cryptoOptsGetPublicKeyThumbprint",
    CryptoOptsSignJwt: "cryptoOptsSignJwt",
    SilentCacheClientAcquireToken: "silentCacheClientAcquireToken",
    SilentIframeClientAcquireToken: "silentIframeClientAcquireToken",
    AwaitConcurrentIframe: "awaitConcurrentIframe",
    SilentRefreshClientAcquireToken: "silentRefreshClientAcquireToken",
    SsoSilent: "ssoSilent",
    StandardInteractionClientGetDiscoveredAuthority:
      "standardInteractionClientGetDiscoveredAuthority",
    FetchAccountIdWithNativeBroker: "fetchAccountIdWithNativeBroker",
    NativeInteractionClientAcquireToken: "nativeInteractionClientAcquireToken",
    BaseClientCreateTokenRequestHeaders: "baseClientCreateTokenRequestHeaders",
    RefreshTokenClientExecutePostToTokenEndpoint:
      "refreshTokenClientExecutePostToTokenEndpoint",
    AuthorizationCodeClientExecutePostToTokenEndpoint:
      "authorizationCodeClientExecutePostToTokenEndpoint",
    BrokerHandhshake: "brokerHandshake",
    AcquireTokenByRefreshTokenInBroker: "acquireTokenByRefreshTokenInBroker",
    AcquireTokenByBroker: "acquireTokenByBroker",
    RefreshTokenClientExecuteTokenRequest:
      "refreshTokenClientExecuteTokenRequest",
    RefreshTokenClientAcquireToken: "refreshTokenClientAcquireToken",
    RefreshTokenClientAcquireTokenWithCachedRefreshToken:
      "refreshTokenClientAcquireTokenWithCachedRefreshToken",
    RefreshTokenClientAcquireTokenByRefreshToken:
      "refreshTokenClientAcquireTokenByRefreshToken",
    RefreshTokenClientCreateTokenRequestBody:
      "refreshTokenClientCreateTokenRequestBody",
    AcquireTokenFromCache: "acquireTokenFromCache",
    SilentFlowClientAcquireCachedToken: "silentFlowClientAcquireCachedToken",
    SilentFlowClientGenerateResultFromCacheRecord:
      "silentFlowClientGenerateResultFromCacheRecord",
    AcquireTokenBySilentIframe: "acquireTokenBySilentIframe",
    InitializeBaseRequest: "initializeBaseRequest",
    InitializeSilentRequest: "initializeSilentRequest",
    InitializeClientApplication: "initializeClientApplication",
    SilentIframeClientTokenHelper: "silentIframeClientTokenHelper",
    SilentHandlerInitiateAuthRequest: "silentHandlerInitiateAuthRequest",
    SilentHandlerMonitorIframeForHash: "silentHandlerMonitorIframeForHash",
    SilentHandlerLoadFrame: "silentHandlerLoadFrame",
    SilentHandlerLoadFrameSync: "silentHandlerLoadFrameSync",
    StandardInteractionClientCreateAuthCodeClient:
      "standardInteractionClientCreateAuthCodeClient",
    StandardInteractionClientGetClientConfiguration:
      "standardInteractionClientGetClientConfiguration",
    StandardInteractionClientInitializeAuthorizationRequest:
      "standardInteractionClientInitializeAuthorizationRequest",
    StandardInteractionClientInitializeAuthorizationCodeRequest:
      "standardInteractionClientInitializeAuthorizationCodeRequest",
    GetAuthCodeUrl: "getAuthCodeUrl",
    HandleCodeResponseFromServer: "handleCodeResponseFromServer",
    HandleCodeResponse: "handleCodeResponse",
    UpdateTokenEndpointAuthority: "updateTokenEndpointAuthority",
    AuthClientAcquireToken: "authClientAcquireToken",
    AuthClientExecuteTokenRequest: "authClientExecuteTokenRequest",
    AuthClientCreateTokenRequestBody: "authClientCreateTokenRequestBody",
    AuthClientCreateQueryString: "authClientCreateQueryString",
    PopTokenGenerateCnf: "popTokenGenerateCnf",
    PopTokenGenerateKid: "popTokenGenerateKid",
    HandleServerTokenResponse: "handleServerTokenResponse",
    DeserializeResponse: "deserializeResponse",
    AuthorityFactoryCreateDiscoveredInstance:
      "authorityFactoryCreateDiscoveredInstance",
    AuthorityResolveEndpointsAsync: "authorityResolveEndpointsAsync",
    AuthorityResolveEndpointsFromLocalSources:
      "authorityResolveEndpointsFromLocalSources",
    AuthorityGetCloudDiscoveryMetadataFromNetwork:
      "authorityGetCloudDiscoveryMetadataFromNetwork",
    AuthorityUpdateCloudDiscoveryMetadata:
      "authorityUpdateCloudDiscoveryMetadata",
    AuthorityGetEndpointMetadataFromNetwork:
      "authorityGetEndpointMetadataFromNetwork",
    AuthorityUpdateEndpointMetadata: "authorityUpdateEndpointMetadata",
    AuthorityUpdateMetadataWithRegionalInformation:
      "authorityUpdateMetadataWithRegionalInformation",
    RegionDiscoveryDetectRegion: "regionDiscoveryDetectRegion",
    RegionDiscoveryGetRegionFromIMDS: "regionDiscoveryGetRegionFromIMDS",
    RegionDiscoveryGetCurrentVersion: "regionDiscoveryGetCurrentVersion",
    AcquireTokenByCodeAsync: "acquireTokenByCodeAsync",
    GetEndpointMetadataFromNetwork: "getEndpointMetadataFromNetwork",
    GetCloudDiscoveryMetadataFromNetworkMeasurement:
      "getCloudDiscoveryMetadataFromNetworkMeasurement",
    HandleRedirectPromiseMeasurement: "handleRedirectPromise",
    HandleNativeRedirectPromiseMeasurement: "handleNativeRedirectPromise",
    UpdateCloudDiscoveryMetadataMeasurement:
      "updateCloudDiscoveryMetadataMeasurement",
    UsernamePasswordClientAcquireToken: "usernamePasswordClientAcquireToken",
    NativeMessageHandlerHandshake: "nativeMessageHandlerHandshake",
    NativeGenerateAuthResult: "nativeGenerateAuthResult",
    RemoveHiddenIframe: "removeHiddenIframe",
    ClearTokensAndKeysWithClaims: "clearTokensAndKeysWithClaims",
    CacheManagerGetRefreshToken: "cacheManagerGetRefreshToken",
    GeneratePkceCodes: "generatePkceCodes",
    GenerateCodeVerifier: "generateCodeVerifier",
    GenerateCodeChallengeFromVerifier: "generateCodeChallengeFromVerifier",
    Sha256Digest: "sha256Digest",
    GetRandomValues: "getRandomValues",
  },
  $L = { NotStarted: 0, InProgress: 1, Completed: 2 };
/*! @azure/msal-common v14.14.0 2024-07-23 */ const ba =
    (t, e, n, r, i) =>
    (...o) => {
      n.trace(`Executing function ${e}`);
      const a = r == null ? void 0 : r.startMeasurement(e, i);
      if (i) {
        const l = e + "CallCount";
        r == null || r.incrementFields({ [l]: 1 }, i);
      }
      try {
        const l = t(...o);
        return (
          a == null || a.end({ success: !0 }),
          n.trace(`Returning result from ${e}`),
          l
        );
      } catch (l) {
        n.trace(`Error occurred in ${e}`);
        try {
          n.trace(JSON.stringify(l));
        } catch {
          n.trace("Unable to print error message.");
        }
        throw (a == null || a.end({ success: !1 }, l), l);
      }
    },
  te =
    (t, e, n, r, i) =>
    (...o) => {
      n.trace(`Executing function ${e}`);
      const a = r == null ? void 0 : r.startMeasurement(e, i);
      if (i) {
        const l = e + "CallCount";
        r == null || r.incrementFields({ [l]: 1 }, i);
      }
      return (
        r == null || r.setPreQueueTime(e, i),
        t(...o)
          .then(
            (l) => (
              n.trace(`Returning result from ${e}`),
              a == null || a.end({ success: !0 }),
              l
            )
          )
          .catch((l) => {
            n.trace(`Error occurred in ${e}`);
            try {
              n.trace(JSON.stringify(l));
            } catch {
              n.trace("Unable to print error message.");
            }
            throw (a == null || a.end({ success: !1 }, l), l);
          })
      );
    };
/*! @azure/msal-common v14.14.0 2024-07-23 */ class Jh {
  constructor(e, n, r, i) {
    (this.networkInterface = e),
      (this.logger = n),
      (this.performanceClient = r),
      (this.correlationId = i);
  }
  async detectRegion(e, n) {
    var i;
    (i = this.performanceClient) == null ||
      i.addQueueMeasurement(B.RegionDiscoveryDetectRegion, this.correlationId);
    let r = e;
    if (r) n.region_source = ja.ENVIRONMENT_VARIABLE;
    else {
      const o = Jh.IMDS_OPTIONS;
      try {
        const a = await te(
          this.getRegionFromIMDS.bind(this),
          B.RegionDiscoveryGetRegionFromIMDS,
          this.logger,
          this.performanceClient,
          this.correlationId
        )(H.IMDS_VERSION, o);
        if (
          (a.status === Iu.httpSuccess &&
            ((r = a.body), (n.region_source = ja.IMDS)),
          a.status === Iu.httpBadRequest)
        ) {
          const l = await te(
            this.getCurrentVersion.bind(this),
            B.RegionDiscoveryGetCurrentVersion,
            this.logger,
            this.performanceClient,
            this.correlationId
          )(o);
          if (!l) return (n.region_source = ja.FAILED_AUTO_DETECTION), null;
          const c = await te(
            this.getRegionFromIMDS.bind(this),
            B.RegionDiscoveryGetRegionFromIMDS,
            this.logger,
            this.performanceClient,
            this.correlationId
          )(l, o);
          c.status === Iu.httpSuccess &&
            ((r = c.body), (n.region_source = ja.IMDS));
        }
      } catch {
        return (n.region_source = ja.FAILED_AUTO_DETECTION), null;
      }
    }
    return r || (n.region_source = ja.FAILED_AUTO_DETECTION), r || null;
  }
  async getRegionFromIMDS(e, n) {
    var r;
    return (
      (r = this.performanceClient) == null ||
        r.addQueueMeasurement(
          B.RegionDiscoveryGetRegionFromIMDS,
          this.correlationId
        ),
      this.networkInterface.sendGetRequestAsync(
        `${H.IMDS_ENDPOINT}?api-version=${e}&format=text`,
        n,
        H.IMDS_TIMEOUT
      )
    );
  }
  async getCurrentVersion(e) {
    var n;
    (n = this.performanceClient) == null ||
      n.addQueueMeasurement(
        B.RegionDiscoveryGetCurrentVersion,
        this.correlationId
      );
    try {
      const r = await this.networkInterface.sendGetRequestAsync(
        `${H.IMDS_ENDPOINT}?format=json`,
        e
      );
      return r.status === Iu.httpBadRequest &&
        r.body &&
        r.body["newest-versions"] &&
        r.body["newest-versions"].length > 0
        ? r.body["newest-versions"][0]
        : null;
    } catch {
      return null;
    }
  }
}
Jh.IMDS_OPTIONS = { headers: { Metadata: "true" } };
/*! @azure/msal-common v14.14.0 2024-07-23 */ function oi() {
  return Math.round(new Date().getTime() / 1e3);
}
function Jm(t, e) {
  const n = Number(t) || 0;
  return oi() + e > n;
}
function KL(t) {
  return Number(t) > oi();
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ function ns(t) {
  return [qL(t), GL(t), WL(t), VL(t), QL(t)]
    .join(pn.CACHE_KEY_SEPARATOR)
    .toLowerCase();
}
function Zh(t, e, n, r, i) {
  return {
    credentialType: we.ID_TOKEN,
    homeAccountId: t,
    environment: e,
    clientId: r,
    secret: n,
    realm: i,
  };
}
function ef(t, e, n, r, i, o, a, l, c, u, d, h, f, p, m) {
  var C, b;
  const v = {
    homeAccountId: t,
    credentialType: we.ACCESS_TOKEN,
    secret: n,
    cachedAt: oi().toString(),
    expiresOn: a.toString(),
    extendedExpiresOn: l.toString(),
    environment: e,
    clientId: r,
    realm: i,
    target: o,
    tokenType: d || Ze.BEARER,
  };
  if (
    (h && (v.userAssertionHash = h),
    u && (v.refreshOn = u.toString()),
    p && ((v.requestedClaims = p), (v.requestedClaimsHash = m)),
    ((C = v.tokenType) == null ? void 0 : C.toLowerCase()) !==
      Ze.BEARER.toLowerCase())
  )
    switch (
      ((v.credentialType = we.ACCESS_TOKEN_WITH_AUTH_SCHEME), v.tokenType)
    ) {
      case Ze.POP:
        const g = va(n, c);
        if (!((b = g == null ? void 0 : g.cnf) != null && b.kid)) throw V(L1);
        v.keyId = g.cnf.kid;
        break;
      case Ze.SSH:
        v.keyId = f;
    }
  return v;
}
function nI(t, e, n, r, i, o, a) {
  const l = {
    credentialType: we.REFRESH_TOKEN,
    homeAccountId: t,
    environment: e,
    clientId: r,
    secret: n,
  };
  return (
    o && (l.userAssertionHash = o),
    i && (l.familyId = i),
    a && (l.expiresOn = a.toString()),
    l
  );
}
function Nv(t) {
  return (
    t.hasOwnProperty("homeAccountId") &&
    t.hasOwnProperty("environment") &&
    t.hasOwnProperty("credentialType") &&
    t.hasOwnProperty("clientId") &&
    t.hasOwnProperty("secret")
  );
}
function o0(t) {
  return t
    ? Nv(t) &&
        t.hasOwnProperty("realm") &&
        t.hasOwnProperty("target") &&
        (t.credentialType === we.ACCESS_TOKEN ||
          t.credentialType === we.ACCESS_TOKEN_WITH_AUTH_SCHEME)
    : !1;
}
function a0(t) {
  return t
    ? Nv(t) && t.hasOwnProperty("realm") && t.credentialType === we.ID_TOKEN
    : !1;
}
function s0(t) {
  return t ? Nv(t) && t.credentialType === we.REFRESH_TOKEN : !1;
}
function qL(t) {
  return [t.homeAccountId, t.environment]
    .join(pn.CACHE_KEY_SEPARATOR)
    .toLowerCase();
}
function GL(t) {
  const e = (t.credentialType === we.REFRESH_TOKEN && t.familyId) || t.clientId;
  return [t.credentialType, e, t.realm || ""]
    .join(pn.CACHE_KEY_SEPARATOR)
    .toLowerCase();
}
function WL(t) {
  return (t.target || "").toLowerCase();
}
function VL(t) {
  return (t.requestedClaimsHash || "").toLowerCase();
}
function QL(t) {
  return t.tokenType && t.tokenType.toLowerCase() !== Ze.BEARER.toLowerCase()
    ? t.tokenType.toLowerCase()
    : "";
}
function YL(t, e) {
  const n = t.indexOf(en.CACHE_KEY) === 0;
  let r = !0;
  return (
    e &&
      (r =
        e.hasOwnProperty("failedRequests") &&
        e.hasOwnProperty("errors") &&
        e.hasOwnProperty("cacheHits")),
    n && r
  );
}
function XL(t, e) {
  let n = !1;
  t && (n = t.indexOf(Bl.THROTTLING_PREFIX) === 0);
  let r = !0;
  return e && (r = e.hasOwnProperty("throttleTime")), n && r;
}
function JL({ environment: t, clientId: e }) {
  return [fv, t, e].join(pn.CACHE_KEY_SEPARATOR).toLowerCase();
}
function ZL(t, e) {
  return e
    ? t.indexOf(fv) === 0 &&
        e.hasOwnProperty("clientId") &&
        e.hasOwnProperty("environment")
    : !1;
}
function eP(t, e) {
  return e
    ? t.indexOf(Xd.CACHE_KEY) === 0 &&
        e.hasOwnProperty("aliases") &&
        e.hasOwnProperty("preferred_cache") &&
        e.hasOwnProperty("preferred_network") &&
        e.hasOwnProperty("canonical_authority") &&
        e.hasOwnProperty("authorization_endpoint") &&
        e.hasOwnProperty("token_endpoint") &&
        e.hasOwnProperty("issuer") &&
        e.hasOwnProperty("aliasesFromNetwork") &&
        e.hasOwnProperty("endpointsFromNetwork") &&
        e.hasOwnProperty("expiresAt") &&
        e.hasOwnProperty("jwks_uri")
    : !1;
}
function l0() {
  return oi() + Xd.REFRESH_TIME_SECONDS;
}
function Nu(t, e, n) {
  (t.authorization_endpoint = e.authorization_endpoint),
    (t.token_endpoint = e.token_endpoint),
    (t.end_session_endpoint = e.end_session_endpoint),
    (t.issuer = e.issuer),
    (t.endpointsFromNetwork = n),
    (t.jwks_uri = e.jwks_uri);
}
function mp(t, e, n) {
  (t.aliases = e.aliases),
    (t.preferred_cache = e.preferred_cache),
    (t.preferred_network = e.preferred_network),
    (t.aliasesFromNetwork = n);
}
function c0(t) {
  return t.expiresAt <= oi();
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class hn {
  constructor(e, n, r, i, o, a, l, c) {
    (this.canonicalAuthority = e),
      this._canonicalAuthority.validateAsUri(),
      (this.networkInterface = n),
      (this.cacheManager = r),
      (this.authorityOptions = i),
      (this.regionDiscoveryMetadata = {
        region_used: void 0,
        region_source: void 0,
        region_outcome: void 0,
      }),
      (this.logger = o),
      (this.performanceClient = l),
      (this.correlationId = a),
      (this.managedIdentity = c || !1),
      (this.regionDiscovery = new Jh(
        n,
        this.logger,
        this.performanceClient,
        this.correlationId
      ));
  }
  getAuthorityType(e) {
    if (e.HostNameAndPort.endsWith(H.CIAM_AUTH_URL)) return wr.Ciam;
    const n = e.PathSegments;
    if (n.length)
      switch (n[0].toLowerCase()) {
        case H.ADFS:
          return wr.Adfs;
        case H.DSTS:
          return wr.Dsts;
      }
    return wr.Default;
  }
  get authorityType() {
    return this.getAuthorityType(this.canonicalAuthorityUrlComponents);
  }
  get protocolMode() {
    return this.authorityOptions.protocolMode;
  }
  get options() {
    return this.authorityOptions;
  }
  get canonicalAuthority() {
    return this._canonicalAuthority.urlString;
  }
  set canonicalAuthority(e) {
    (this._canonicalAuthority = new De(e)),
      this._canonicalAuthority.validateAsUri(),
      (this._canonicalAuthorityUrlComponents = null);
  }
  get canonicalAuthorityUrlComponents() {
    return (
      this._canonicalAuthorityUrlComponents ||
        (this._canonicalAuthorityUrlComponents =
          this._canonicalAuthority.getUrlComponents()),
      this._canonicalAuthorityUrlComponents
    );
  }
  get hostnameAndPort() {
    return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();
  }
  get tenant() {
    return this.canonicalAuthorityUrlComponents.PathSegments[0];
  }
  get authorizationEndpoint() {
    if (this.discoveryComplete())
      return this.replacePath(this.metadata.authorization_endpoint);
    throw V(bi);
  }
  get tokenEndpoint() {
    if (this.discoveryComplete())
      return this.replacePath(this.metadata.token_endpoint);
    throw V(bi);
  }
  get deviceCodeEndpoint() {
    if (this.discoveryComplete())
      return this.replacePath(
        this.metadata.token_endpoint.replace("/token", "/devicecode")
      );
    throw V(bi);
  }
  get endSessionEndpoint() {
    if (this.discoveryComplete()) {
      if (!this.metadata.end_session_endpoint) throw V(M1);
      return this.replacePath(this.metadata.end_session_endpoint);
    } else throw V(bi);
  }
  get selfSignedJwtAudience() {
    if (this.discoveryComplete()) return this.replacePath(this.metadata.issuer);
    throw V(bi);
  }
  get jwksUri() {
    if (this.discoveryComplete())
      return this.replacePath(this.metadata.jwks_uri);
    throw V(bi);
  }
  canReplaceTenant(e) {
    return (
      e.PathSegments.length === 1 &&
      !hn.reservedTenantDomains.has(e.PathSegments[0]) &&
      this.getAuthorityType(e) === wr.Default &&
      this.protocolMode === Ri.AAD
    );
  }
  replaceTenant(e) {
    return e.replace(/{tenant}|{tenantid}/g, this.tenant);
  }
  replacePath(e) {
    let n = e;
    const i = new De(this.metadata.canonical_authority).getUrlComponents(),
      o = i.PathSegments;
    return (
      this.canonicalAuthorityUrlComponents.PathSegments.forEach((l, c) => {
        let u = o[c];
        if (c === 0 && this.canReplaceTenant(i)) {
          const d = new De(
            this.metadata.authorization_endpoint
          ).getUrlComponents().PathSegments[0];
          u !== d &&
            (this.logger.verbose(
              `Replacing tenant domain name ${u} with id ${d}`
            ),
            (u = d));
        }
        l !== u && (n = n.replace(`/${u}/`, `/${l}/`));
      }),
      this.replaceTenant(n)
    );
  }
  get defaultOpenIdConfigurationEndpoint() {
    const e = this.hostnameAndPort;
    return this.canonicalAuthority.endsWith("v2.0/") ||
      this.authorityType === wr.Adfs ||
      (this.protocolMode !== Ri.AAD &&
        !this.isAliasOfKnownMicrosoftAuthority(e))
      ? `${this.canonicalAuthority}.well-known/openid-configuration`
      : `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;
  }
  discoveryComplete() {
    return !!this.metadata;
  }
  async resolveEndpointsAsync() {
    var i, o;
    (i = this.performanceClient) == null ||
      i.addQueueMeasurement(
        B.AuthorityResolveEndpointsAsync,
        this.correlationId
      );
    const e = this.getCurrentMetadataEntity(),
      n = await te(
        this.updateCloudDiscoveryMetadata.bind(this),
        B.AuthorityUpdateCloudDiscoveryMetadata,
        this.logger,
        this.performanceClient,
        this.correlationId
      )(e);
    this.canonicalAuthority = this.canonicalAuthority.replace(
      this.hostnameAndPort,
      e.preferred_network
    );
    const r = await te(
      this.updateEndpointMetadata.bind(this),
      B.AuthorityUpdateEndpointMetadata,
      this.logger,
      this.performanceClient,
      this.correlationId
    )(e);
    this.updateCachedMetadata(e, n, { source: r }),
      (o = this.performanceClient) == null ||
        o.addFields(
          { cloudDiscoverySource: n, authorityEndpointSource: r },
          this.correlationId
        );
  }
  getCurrentMetadataEntity() {
    let e = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);
    return (
      e ||
        (e = {
          aliases: [],
          preferred_cache: this.hostnameAndPort,
          preferred_network: this.hostnameAndPort,
          canonical_authority: this.canonicalAuthority,
          authorization_endpoint: "",
          token_endpoint: "",
          end_session_endpoint: "",
          issuer: "",
          aliasesFromNetwork: !1,
          endpointsFromNetwork: !1,
          expiresAt: l0(),
          jwks_uri: "",
        }),
      e
    );
  }
  updateCachedMetadata(e, n, r) {
    n !== _n.CACHE &&
      (r == null ? void 0 : r.source) !== _n.CACHE &&
      ((e.expiresAt = l0()), (e.canonical_authority = this.canonicalAuthority));
    const i = this.cacheManager.generateAuthorityMetadataCacheKey(
      e.preferred_cache
    );
    this.cacheManager.setAuthorityMetadata(i, e), (this.metadata = e);
  }
  async updateEndpointMetadata(e) {
    var i, o, a;
    (i = this.performanceClient) == null ||
      i.addQueueMeasurement(
        B.AuthorityUpdateEndpointMetadata,
        this.correlationId
      );
    const n = this.updateEndpointMetadataFromLocalSources(e);
    if (n) {
      if (
        n.source === _n.HARDCODED_VALUES &&
        (o = this.authorityOptions.azureRegionConfiguration) != null &&
        o.azureRegion &&
        n.metadata
      ) {
        const l = await te(
          this.updateMetadataWithRegionalInformation.bind(this),
          B.AuthorityUpdateMetadataWithRegionalInformation,
          this.logger,
          this.performanceClient,
          this.correlationId
        )(n.metadata);
        Nu(e, l, !1), (e.canonical_authority = this.canonicalAuthority);
      }
      return n.source;
    }
    let r = await te(
      this.getEndpointMetadataFromNetwork.bind(this),
      B.AuthorityGetEndpointMetadataFromNetwork,
      this.logger,
      this.performanceClient,
      this.correlationId
    )();
    if (r)
      return (
        (a = this.authorityOptions.azureRegionConfiguration) != null &&
          a.azureRegion &&
          (r = await te(
            this.updateMetadataWithRegionalInformation.bind(this),
            B.AuthorityUpdateMetadataWithRegionalInformation,
            this.logger,
            this.performanceClient,
            this.correlationId
          )(r)),
        Nu(e, r, !0),
        _n.NETWORK
      );
    throw V(E1, this.defaultOpenIdConfigurationEndpoint);
  }
  updateEndpointMetadataFromLocalSources(e) {
    this.logger.verbose(
      "Attempting to get endpoint metadata from authority configuration"
    );
    const n = this.getEndpointMetadataFromConfig();
    if (n)
      return (
        this.logger.verbose(
          "Found endpoint metadata in authority configuration"
        ),
        Nu(e, n, !1),
        { source: _n.CONFIG }
      );
    if (
      (this.logger.verbose(
        "Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."
      ),
      this.authorityOptions.skipAuthorityMetadataCache)
    )
      this.logger.verbose(
        "Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache."
      );
    else {
      const i = this.getEndpointMetadataFromHardcodedValues();
      if (i) return Nu(e, i, !1), { source: _n.HARDCODED_VALUES, metadata: i };
      this.logger.verbose(
        "Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache."
      );
    }
    const r = c0(e);
    return this.isAuthoritySameType(e) && e.endpointsFromNetwork && !r
      ? (this.logger.verbose("Found endpoint metadata in the cache."),
        { source: _n.CACHE })
      : (r && this.logger.verbose("The metadata entity is expired."), null);
  }
  isAuthoritySameType(e) {
    return (
      new De(e.canonical_authority).getUrlComponents().PathSegments.length ===
      this.canonicalAuthorityUrlComponents.PathSegments.length
    );
  }
  getEndpointMetadataFromConfig() {
    if (this.authorityOptions.authorityMetadata)
      try {
        return JSON.parse(this.authorityOptions.authorityMetadata);
      } catch {
        throw tt(W1);
      }
    return null;
  }
  async getEndpointMetadataFromNetwork() {
    var r;
    (r = this.performanceClient) == null ||
      r.addQueueMeasurement(
        B.AuthorityGetEndpointMetadataFromNetwork,
        this.correlationId
      );
    const e = {},
      n = this.defaultOpenIdConfigurationEndpoint;
    this.logger.verbose(
      `Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${n}`
    );
    try {
      const i = await this.networkInterface.sendGetRequestAsync(n, e);
      return LL(i.body)
        ? i.body
        : (this.logger.verbose(
            "Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"
          ),
          null);
    } catch (i) {
      return (
        this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${i}`),
        null
      );
    }
  }
  getEndpointMetadataFromHardcodedValues() {
    return this.hostnameAndPort in r0 ? r0[this.hostnameAndPort] : null;
  }
  async updateMetadataWithRegionalInformation(e) {
    var r, i, o;
    (r = this.performanceClient) == null ||
      r.addQueueMeasurement(
        B.AuthorityUpdateMetadataWithRegionalInformation,
        this.correlationId
      );
    const n =
      (i = this.authorityOptions.azureRegionConfiguration) == null
        ? void 0
        : i.azureRegion;
    if (n) {
      if (n !== H.AZURE_REGION_AUTO_DISCOVER_FLAG)
        return (
          (this.regionDiscoveryMetadata.region_outcome =
            pp.CONFIGURED_NO_AUTO_DETECTION),
          (this.regionDiscoveryMetadata.region_used = n),
          hn.replaceWithRegionalInformation(e, n)
        );
      const a = await te(
        this.regionDiscovery.detectRegion.bind(this.regionDiscovery),
        B.RegionDiscoveryDetectRegion,
        this.logger,
        this.performanceClient,
        this.correlationId
      )(
        (o = this.authorityOptions.azureRegionConfiguration) == null
          ? void 0
          : o.environmentRegion,
        this.regionDiscoveryMetadata
      );
      if (a)
        return (
          (this.regionDiscoveryMetadata.region_outcome =
            pp.AUTO_DETECTION_REQUESTED_SUCCESSFUL),
          (this.regionDiscoveryMetadata.region_used = a),
          hn.replaceWithRegionalInformation(e, a)
        );
      this.regionDiscoveryMetadata.region_outcome =
        pp.AUTO_DETECTION_REQUESTED_FAILED;
    }
    return e;
  }
  async updateCloudDiscoveryMetadata(e) {
    var i;
    (i = this.performanceClient) == null ||
      i.addQueueMeasurement(
        B.AuthorityUpdateCloudDiscoveryMetadata,
        this.correlationId
      );
    const n = this.updateCloudDiscoveryMetadataFromLocalSources(e);
    if (n) return n;
    const r = await te(
      this.getCloudDiscoveryMetadataFromNetwork.bind(this),
      B.AuthorityGetCloudDiscoveryMetadataFromNetwork,
      this.logger,
      this.performanceClient,
      this.correlationId
    )();
    if (r) return mp(e, r, !0), _n.NETWORK;
    throw tt(V1);
  }
  updateCloudDiscoveryMetadataFromLocalSources(e) {
    this.logger.verbose(
      "Attempting to get cloud discovery metadata  from authority configuration"
    ),
      this.logger.verbosePii(
        `Known Authorities: ${
          this.authorityOptions.knownAuthorities || H.NOT_APPLICABLE
        }`
      ),
      this.logger.verbosePii(
        `Authority Metadata: ${
          this.authorityOptions.authorityMetadata || H.NOT_APPLICABLE
        }`
      ),
      this.logger.verbosePii(
        `Canonical Authority: ${e.canonical_authority || H.NOT_APPLICABLE}`
      );
    const n = this.getCloudDiscoveryMetadataFromConfig();
    if (n)
      return (
        this.logger.verbose(
          "Found cloud discovery metadata in authority configuration"
        ),
        mp(e, n, !1),
        _n.CONFIG
      );
    if (
      (this.logger.verbose(
        "Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."
      ),
      this.options.skipAuthorityMetadataCache)
    )
      this.logger.verbose(
        "Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache."
      );
    else {
      const i = UL(this.hostnameAndPort);
      if (i)
        return (
          this.logger.verbose(
            "Found cloud discovery metadata from hardcoded values."
          ),
          mp(e, i, !1),
          _n.HARDCODED_VALUES
        );
      this.logger.verbose(
        "Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache."
      );
    }
    const r = c0(e);
    return this.isAuthoritySameType(e) && e.aliasesFromNetwork && !r
      ? (this.logger.verbose("Found cloud discovery metadata in the cache."),
        _n.CACHE)
      : (r && this.logger.verbose("The metadata entity is expired."), null);
  }
  getCloudDiscoveryMetadataFromConfig() {
    if (this.authorityType === wr.Ciam)
      return (
        this.logger.verbose(
          "CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."
        ),
        hn.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)
      );
    if (this.authorityOptions.cloudDiscoveryMetadata) {
      this.logger.verbose(
        "The cloud discovery metadata has been provided as a network response, in the config."
      );
      try {
        this.logger.verbose(
          "Attempting to parse the cloud discovery metadata."
        );
        const e = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),
          n = eh(e.metadata, this.hostnameAndPort);
        if ((this.logger.verbose("Parsed the cloud discovery metadata."), n))
          return (
            this.logger.verbose(
              "There is returnable metadata attached to the parsed cloud discovery metadata."
            ),
            n
          );
        this.logger.verbose(
          "There is no metadata attached to the parsed cloud discovery metadata."
        );
      } catch {
        throw (
          (this.logger.verbose(
            "Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."
          ),
          tt(xv))
        );
      }
    }
    return this.isInKnownAuthorities()
      ? (this.logger.verbose(
          "The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."
        ),
        hn.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort))
      : null;
  }
  async getCloudDiscoveryMetadataFromNetwork() {
    var i;
    (i = this.performanceClient) == null ||
      i.addQueueMeasurement(
        B.AuthorityGetCloudDiscoveryMetadataFromNetwork,
        this.correlationId
      );
    const e = `${H.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,
      n = {};
    let r = null;
    try {
      const o = await this.networkInterface.sendGetRequestAsync(e, n);
      let a, l;
      if (zL(o.body))
        (a = o.body),
          (l = a.metadata),
          this.logger.verbosePii(
            `tenant_discovery_endpoint is: ${a.tenant_discovery_endpoint}`
          );
      else if (HL(o.body)) {
        if (
          (this.logger.warning(
            `A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${o.status}`
          ),
          (a = o.body),
          a.error === H.INVALID_INSTANCE)
        )
          return (
            this.logger.error(
              "The CloudInstanceDiscoveryErrorResponse error is invalid_instance."
            ),
            null
          );
        this.logger.warning(
          `The CloudInstanceDiscoveryErrorResponse error is ${a.error}`
        ),
          this.logger.warning(
            `The CloudInstanceDiscoveryErrorResponse error description is ${a.error_description}`
          ),
          this.logger.warning(
            "Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"
          ),
          (l = []);
      } else
        return (
          this.logger.error(
            "AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"
          ),
          null
        );
      this.logger.verbose(
        "Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."
      ),
        (r = eh(l, this.hostnameAndPort));
    } catch (o) {
      if (o instanceof Nt)
        this.logger
          .error(`There was a network error while attempting to get the cloud discovery instance metadata.
Error: ${o.errorCode}
Error Description: ${o.errorMessage}`);
      else {
        const a = o;
        this.logger
          .error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.
Error: ${a.name}
Error Description: ${a.message}`);
      }
      return null;
    }
    return (
      r ||
        (this.logger.warning(
          "The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."
        ),
        this.logger.verbose(
          "Creating custom Authority for custom domain scenario."
        ),
        (r = hn.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort))),
      r
    );
  }
  isInKnownAuthorities() {
    return (
      this.authorityOptions.knownAuthorities.filter(
        (n) =>
          n && De.getDomainFromUrl(n).toLowerCase() === this.hostnameAndPort
      ).length > 0
    );
  }
  static generateAuthority(e, n) {
    let r;
    if (n && n.azureCloudInstance !== Iv.None) {
      const i = n.tenant ? n.tenant : H.DEFAULT_COMMON_TENANT;
      r = `${n.azureCloudInstance}/${i}/`;
    }
    return r || e;
  }
  static createCloudDiscoveryMetadataFromHost(e) {
    return { preferred_network: e, preferred_cache: e, aliases: [e] };
  }
  getPreferredCache() {
    if (this.managedIdentity) return H.DEFAULT_AUTHORITY_HOST;
    if (this.discoveryComplete()) return this.metadata.preferred_cache;
    throw V(bi);
  }
  isAlias(e) {
    return this.metadata.aliases.indexOf(e) > -1;
  }
  isAliasOfKnownMicrosoftAuthority(e) {
    return tI.has(e);
  }
  static isPublicCloudAuthority(e) {
    return H.KNOWN_PUBLIC_CLOUDS.indexOf(e) >= 0;
  }
  static buildRegionalAuthorityString(e, n, r) {
    const i = new De(e);
    i.validateAsUri();
    const o = i.getUrlComponents();
    let a = `${n}.${o.HostNameAndPort}`;
    this.isPublicCloudAuthority(o.HostNameAndPort) &&
      (a = `${n}.${H.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);
    const l = De.constructAuthorityUriFromObject({
      ...i.getUrlComponents(),
      HostNameAndPort: a,
    }).urlString;
    return r ? `${l}?${r}` : l;
  }
  static replaceWithRegionalInformation(e, n) {
    const r = { ...e };
    return (
      (r.authorization_endpoint = hn.buildRegionalAuthorityString(
        r.authorization_endpoint,
        n
      )),
      (r.token_endpoint = hn.buildRegionalAuthorityString(r.token_endpoint, n)),
      r.end_session_endpoint &&
        (r.end_session_endpoint = hn.buildRegionalAuthorityString(
          r.end_session_endpoint,
          n
        )),
      r
    );
  }
  static transformCIAMAuthority(e) {
    let n = e;
    const i = new De(e).getUrlComponents();
    if (
      i.PathSegments.length === 0 &&
      i.HostNameAndPort.endsWith(H.CIAM_AUTH_URL)
    ) {
      const o = i.HostNameAndPort.split(".")[0];
      n = `${n}${o}${H.AAD_TENANT_DOMAIN_SUFFIX}`;
    }
    return n;
  }
}
hn.reservedTenantDomains = new Set([
  "{tenant}",
  "{tenantid}",
  bo.COMMON,
  bo.CONSUMERS,
  bo.ORGANIZATIONS,
]);
function tP(t) {
  var i;
  const r =
    (i = new De(t).getUrlComponents().PathSegments.slice(-1)[0]) == null
      ? void 0
      : i.toLowerCase();
  switch (r) {
    case bo.COMMON:
    case bo.ORGANIZATIONS:
    case bo.CONSUMERS:
      return;
    default:
      return r;
  }
}
function rI(t) {
  return t.endsWith(H.FORWARD_SLASH) ? t : `${t}${H.FORWARD_SLASH}`;
}
function nP(t) {
  const e = t.cloudDiscoveryMetadata;
  let n;
  if (e)
    try {
      n = JSON.parse(e);
    } catch {
      throw tt(xv);
    }
  return {
    canonicalAuthority: t.authority ? rI(t.authority) : void 0,
    knownAuthorities: t.knownAuthorities,
    cloudDiscoveryMetadata: n,
  };
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ async function iI(
  t,
  e,
  n,
  r,
  i,
  o,
  a
) {
  a == null ||
    a.addQueueMeasurement(B.AuthorityFactoryCreateDiscoveredInstance, o);
  const l = hn.transformCIAMAuthority(rI(t)),
    c = new hn(l, e, n, r, i, o, a);
  try {
    return (
      await te(
        c.resolveEndpointsAsync.bind(c),
        B.AuthorityResolveEndpointsAsync,
        i,
        a,
        o
      )(),
      c
    );
  } catch {
    throw V(bi);
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ async function oI(t, e, n) {
  return typeof t == "string" ? t : t({ clientId: e, tokenEndpoint: n });
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const Is = "client_id",
  rP = "redirect_uri",
  u0 = "response_type",
  iP = "response_mode",
  oP = "grant_type",
  aP = "claims",
  sP = "scope",
  lP = "refresh_token",
  cP = "state",
  uP = "nonce",
  dP = "prompt",
  hP = "code",
  fP = "code_challenge",
  pP = "code_challenge_method",
  mP = "code_verifier",
  gP = "client-request-id",
  yP = "x-client-SKU",
  vP = "x-client-VER",
  bP = "x-client-OS",
  CP = "x-client-CPU",
  wP = "x-client-current-telemetry",
  SP = "x-client-last-telemetry",
  xP = "x-ms-lib-capability",
  EP = "x-app-name",
  TP = "x-app-ver",
  IP = "post_logout_redirect_uri",
  NP = "id_token_hint",
  kP = "device_code",
  RP = "client_secret",
  AP = "client_assertion",
  jP = "client_assertion_type",
  d0 = "token_type",
  h0 = "req_cnf",
  OP = "assertion",
  DP = "requested_token_use",
  f0 = "return_spa_code",
  LP = "nativebroker",
  PP = "logout_hint",
  _P = "sid",
  MP = "login_hint",
  FP = "domain_hint",
  BP = "x-client-xtra-sku";
/*! @azure/msal-common v14.14.0 2024-07-23 */ const th = {
  createNewGuid: () => {
    throw V(ke);
  },
  base64Decode: () => {
    throw V(ke);
  },
  base64Encode: () => {
    throw V(ke);
  },
  base64UrlEncode: () => {
    throw V(ke);
  },
  encodeKid: () => {
    throw V(ke);
  },
  async getPublicKeyThumbprint() {
    throw V(ke);
  },
  async removeTokenBindingKey() {
    throw V(ke);
  },
  async clearKeystore() {
    throw V(ke);
  },
  async signJwt() {
    throw V(ke);
  },
  async hashString() {
    throw V(ke);
  },
};
/*! @azure/msal-common v14.14.0 2024-07-23 */ var Xe;
(function (t) {
  (t[(t.Error = 0)] = "Error"),
    (t[(t.Warning = 1)] = "Warning"),
    (t[(t.Info = 2)] = "Info"),
    (t[(t.Verbose = 3)] = "Verbose"),
    (t[(t.Trace = 4)] = "Trace");
})(Xe || (Xe = {}));
class xo {
  constructor(e, n, r) {
    this.level = Xe.Info;
    const i = () => {},
      o = e || xo.createDefaultLoggerOptions();
    (this.localCallback = o.loggerCallback || i),
      (this.piiLoggingEnabled = o.piiLoggingEnabled || !1),
      (this.level = typeof o.logLevel == "number" ? o.logLevel : Xe.Info),
      (this.correlationId = o.correlationId || H.EMPTY_STRING),
      (this.packageName = n || H.EMPTY_STRING),
      (this.packageVersion = r || H.EMPTY_STRING);
  }
  static createDefaultLoggerOptions() {
    return {
      loggerCallback: () => {},
      piiLoggingEnabled: !1,
      logLevel: Xe.Info,
    };
  }
  clone(e, n, r) {
    return new xo(
      {
        loggerCallback: this.localCallback,
        piiLoggingEnabled: this.piiLoggingEnabled,
        logLevel: this.level,
        correlationId: r || this.correlationId,
      },
      e,
      n
    );
  }
  logMessage(e, n) {
    if (n.logLevel > this.level || (!this.piiLoggingEnabled && n.containsPii))
      return;
    const o = `${`[${new Date().toUTCString()}] : [${
      n.correlationId || this.correlationId || ""
    }]`} : ${this.packageName}@${this.packageVersion} : ${
      Xe[n.logLevel]
    } - ${e}`;
    this.executeCallback(n.logLevel, o, n.containsPii || !1);
  }
  executeCallback(e, n, r) {
    this.localCallback && this.localCallback(e, n, r);
  }
  error(e, n) {
    this.logMessage(e, {
      logLevel: Xe.Error,
      containsPii: !1,
      correlationId: n || H.EMPTY_STRING,
    });
  }
  errorPii(e, n) {
    this.logMessage(e, {
      logLevel: Xe.Error,
      containsPii: !0,
      correlationId: n || H.EMPTY_STRING,
    });
  }
  warning(e, n) {
    this.logMessage(e, {
      logLevel: Xe.Warning,
      containsPii: !1,
      correlationId: n || H.EMPTY_STRING,
    });
  }
  warningPii(e, n) {
    this.logMessage(e, {
      logLevel: Xe.Warning,
      containsPii: !0,
      correlationId: n || H.EMPTY_STRING,
    });
  }
  info(e, n) {
    this.logMessage(e, {
      logLevel: Xe.Info,
      containsPii: !1,
      correlationId: n || H.EMPTY_STRING,
    });
  }
  infoPii(e, n) {
    this.logMessage(e, {
      logLevel: Xe.Info,
      containsPii: !0,
      correlationId: n || H.EMPTY_STRING,
    });
  }
  verbose(e, n) {
    this.logMessage(e, {
      logLevel: Xe.Verbose,
      containsPii: !1,
      correlationId: n || H.EMPTY_STRING,
    });
  }
  verbosePii(e, n) {
    this.logMessage(e, {
      logLevel: Xe.Verbose,
      containsPii: !0,
      correlationId: n || H.EMPTY_STRING,
    });
  }
  trace(e, n) {
    this.logMessage(e, {
      logLevel: Xe.Trace,
      containsPii: !1,
      correlationId: n || H.EMPTY_STRING,
    });
  }
  tracePii(e, n) {
    this.logMessage(e, {
      logLevel: Xe.Trace,
      containsPii: !0,
      correlationId: n || H.EMPTY_STRING,
    });
  }
  isPiiLoggingEnabled() {
    return this.piiLoggingEnabled || !1;
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const aI = "@azure/msal-common",
  kv = "14.14.0";
/*! @azure/msal-common v14.14.0 2024-07-23 */ class jt {
  constructor(e) {
    const n = e ? Nr.trimArrayEntries([...e]) : [],
      r = n ? Nr.removeEmptyStringsFromArray(n) : [];
    this.validateInputScopes(r),
      (this.scopes = new Set()),
      r.forEach((i) => this.scopes.add(i));
  }
  static fromString(e) {
    const r = (e || H.EMPTY_STRING).split(" ");
    return new jt(r);
  }
  static createSearchScopes(e) {
    const n = new jt(e);
    return (
      n.containsOnlyOIDCScopes()
        ? n.removeScope(H.OFFLINE_ACCESS_SCOPE)
        : n.removeOIDCScopes(),
      n
    );
  }
  validateInputScopes(e) {
    if (!e || e.length < 1) throw tt(H1);
  }
  containsScope(e) {
    const n = this.printScopesLowerCase().split(" "),
      r = new jt(n);
    return e ? r.scopes.has(e.toLowerCase()) : !1;
  }
  containsScopeSet(e) {
    return !e || e.scopes.size <= 0
      ? !1
      : this.scopes.size >= e.scopes.size &&
          e.asArray().every((n) => this.containsScope(n));
  }
  containsOnlyOIDCScopes() {
    let e = 0;
    return (
      Xw.forEach((n) => {
        this.containsScope(n) && (e += 1);
      }),
      this.scopes.size === e
    );
  }
  appendScope(e) {
    e && this.scopes.add(e.trim());
  }
  appendScopes(e) {
    try {
      e.forEach((n) => this.appendScope(n));
    } catch {
      throw V(O1);
    }
  }
  removeScope(e) {
    if (!e) throw V(j1);
    this.scopes.delete(e.trim());
  }
  removeOIDCScopes() {
    Xw.forEach((e) => {
      this.scopes.delete(e);
    });
  }
  unionScopeSets(e) {
    if (!e) throw V(Vm);
    const n = new Set();
    return (
      e.scopes.forEach((r) => n.add(r.toLowerCase())),
      this.scopes.forEach((r) => n.add(r.toLowerCase())),
      n
    );
  }
  intersectingScopeSets(e) {
    if (!e) throw V(Vm);
    e.containsOnlyOIDCScopes() || e.removeOIDCScopes();
    const n = this.unionScopeSets(e),
      r = e.getScopeCount(),
      i = this.getScopeCount();
    return n.size < i + r;
  }
  getScopeCount() {
    return this.scopes.size;
  }
  asArray() {
    const e = [];
    return this.scopes.forEach((n) => e.push(n)), e;
  }
  printScopes() {
    return this.scopes ? this.asArray().join(" ") : H.EMPTY_STRING;
  }
  printScopesLowerCase() {
    return this.printScopes().toLowerCase();
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ function nh(t, e) {
  if (!t) throw V(w1);
  try {
    const n = e(t);
    return JSON.parse(n);
  } catch {
    throw V(mv);
  }
}
function rs(t) {
  if (!t) throw V(mv);
  const e = t.split(pn.CLIENT_INFO_SEPARATOR, 2);
  return { uid: e[0], utid: e.length < 2 ? H.EMPTY_STRING : e[1] };
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ function rh(t, e) {
  return !!t && !!e && t === e.split(".")[1];
}
function Rv(t, e, n, r) {
  if (r) {
    const { oid: i, sub: o, tid: a, name: l, tfp: c, acr: u } = r,
      d = a || c || u || "";
    return {
      tenantId: d,
      localAccountId: i || o || "",
      name: l,
      isHomeTenant: rh(d, t),
    };
  } else return { tenantId: n, localAccountId: e, isHomeTenant: rh(n, t) };
}
function Av(t, e, n, r) {
  let i = t;
  if (e) {
    const { isHomeTenant: o, ...a } = e;
    i = { ...t, ...a };
  }
  if (n) {
    const { isHomeTenant: o, ...a } = Rv(
      t.homeAccountId,
      t.localAccountId,
      t.tenantId,
      n
    );
    return (i = { ...i, ...a, idTokenClaims: n, idToken: r }), i;
  }
  return i;
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ function sI(t) {
  return (t && (t.tid || t.tfp || t.acr)) || null;
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class Kt {
  generateAccountId() {
    return [this.homeAccountId, this.environment]
      .join(pn.CACHE_KEY_SEPARATOR)
      .toLowerCase();
  }
  generateAccountKey() {
    return Kt.generateAccountCacheKey({
      homeAccountId: this.homeAccountId,
      environment: this.environment,
      tenantId: this.realm,
      username: this.username,
      localAccountId: this.localAccountId,
    });
  }
  getAccountInfo() {
    return {
      homeAccountId: this.homeAccountId,
      environment: this.environment,
      tenantId: this.realm,
      username: this.username,
      localAccountId: this.localAccountId,
      name: this.name,
      nativeAccountId: this.nativeAccountId,
      authorityType: this.authorityType,
      tenantProfiles: new Map(
        (this.tenantProfiles || []).map((e) => [e.tenantId, e])
      ),
    };
  }
  isSingleTenant() {
    return !this.tenantProfiles;
  }
  static generateAccountCacheKey(e) {
    const n = e.homeAccountId.split(".")[1];
    return [e.homeAccountId, e.environment || "", n || e.tenantId || ""]
      .join(pn.CACHE_KEY_SEPARATOR)
      .toLowerCase();
  }
  static createAccount(e, n, r) {
    var u, d, h, f, p, m;
    const i = new Kt();
    n.authorityType === wr.Adfs
      ? (i.authorityType = Tu.ADFS_ACCOUNT_TYPE)
      : n.protocolMode === Ri.AAD
      ? (i.authorityType = Tu.MSSTS_ACCOUNT_TYPE)
      : (i.authorityType = Tu.GENERIC_ACCOUNT_TYPE);
    let o;
    e.clientInfo && r && (o = nh(e.clientInfo, r)),
      (i.clientInfo = e.clientInfo),
      (i.homeAccountId = e.homeAccountId),
      (i.nativeAccountId = e.nativeAccountId);
    const a = e.environment || (n && n.getPreferredCache());
    if (!a) throw V(bv);
    (i.environment = a),
      (i.realm = (o == null ? void 0 : o.utid) || sI(e.idTokenClaims) || ""),
      (i.localAccountId =
        (o == null ? void 0 : o.uid) ||
        ((u = e.idTokenClaims) == null ? void 0 : u.oid) ||
        ((d = e.idTokenClaims) == null ? void 0 : d.sub) ||
        "");
    const l =
        ((h = e.idTokenClaims) == null ? void 0 : h.preferred_username) ||
        ((f = e.idTokenClaims) == null ? void 0 : f.upn),
      c =
        (p = e.idTokenClaims) != null && p.emails
          ? e.idTokenClaims.emails[0]
          : null;
    if (
      ((i.username = l || c || ""),
      (i.name = ((m = e.idTokenClaims) == null ? void 0 : m.name) || ""),
      (i.cloudGraphHostName = e.cloudGraphHostName),
      (i.msGraphHost = e.msGraphHost),
      e.tenantProfiles)
    )
      i.tenantProfiles = e.tenantProfiles;
    else {
      const v = Rv(e.homeAccountId, i.localAccountId, i.realm, e.idTokenClaims);
      i.tenantProfiles = [v];
    }
    return i;
  }
  static createFromAccountInfo(e, n, r) {
    var o;
    const i = new Kt();
    return (
      (i.authorityType = e.authorityType || Tu.GENERIC_ACCOUNT_TYPE),
      (i.homeAccountId = e.homeAccountId),
      (i.localAccountId = e.localAccountId),
      (i.nativeAccountId = e.nativeAccountId),
      (i.realm = e.tenantId),
      (i.environment = e.environment),
      (i.username = e.username),
      (i.name = e.name),
      (i.cloudGraphHostName = n),
      (i.msGraphHost = r),
      (i.tenantProfiles = Array.from(
        ((o = e.tenantProfiles) == null ? void 0 : o.values()) || []
      )),
      i
    );
  }
  static generateHomeAccountId(e, n, r, i, o) {
    if (!(n === wr.Adfs || n === wr.Dsts)) {
      if (e)
        try {
          const a = nh(e, i.base64Decode);
          if (a.uid && a.utid) return `${a.uid}.${a.utid}`;
        } catch {}
      r.warning("No client info in response");
    }
    return (o == null ? void 0 : o.sub) || "";
  }
  static isAccountEntity(e) {
    return e
      ? e.hasOwnProperty("homeAccountId") &&
          e.hasOwnProperty("environment") &&
          e.hasOwnProperty("realm") &&
          e.hasOwnProperty("localAccountId") &&
          e.hasOwnProperty("username") &&
          e.hasOwnProperty("authorityType")
      : !1;
  }
  static accountInfoIsEqual(e, n, r) {
    if (!e || !n) return !1;
    let i = !0;
    if (r) {
      const o = e.idTokenClaims || {},
        a = n.idTokenClaims || {};
      i = o.iat === a.iat && o.nonce === a.nonce;
    }
    return (
      e.homeAccountId === n.homeAccountId &&
      e.localAccountId === n.localAccountId &&
      e.username === n.username &&
      e.tenantId === n.tenantId &&
      e.environment === n.environment &&
      e.nativeAccountId === n.nativeAccountId &&
      i
    );
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const lI = "cache_quota_exceeded",
  jv = "cache_error_unknown";
/*! @azure/msal-common v14.14.0 2024-07-23 */ const gp = {
  [lI]: "Exceeded cache storage capacity.",
  [jv]: "Unexpected error occurred when using cache storage.",
};
class ps extends Error {
  constructor(e, n) {
    const r = n || (gp[e] ? gp[e] : gp[jv]);
    super(`${e}: ${r}`),
      Object.setPrototypeOf(this, ps.prototype),
      (this.name = "CacheError"),
      (this.errorCode = e),
      (this.errorMessage = r);
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class Ns {
  constructor(e, n, r, i) {
    (this.clientId = e),
      (this.cryptoImpl = n),
      (this.commonLogger = r.clone(aI, kv)),
      (this.staticAuthorityOptions = i);
  }
  getAllAccounts(e) {
    return this.buildTenantProfiles(this.getAccountsFilteredBy(e || {}), e);
  }
  getAccountInfoFilteredBy(e) {
    const n = this.getAllAccounts(e);
    return n.length > 1
      ? n.sort((i) => (i.idTokenClaims ? -1 : 1))[0]
      : n.length === 1
      ? n[0]
      : null;
  }
  getBaseAccountInfo(e) {
    const n = this.getAccountsFilteredBy(e);
    return n.length > 0 ? n[0].getAccountInfo() : null;
  }
  buildTenantProfiles(e, n) {
    return e.flatMap((r) =>
      this.getTenantProfilesFromAccountEntity(
        r,
        n == null ? void 0 : n.tenantId,
        n
      )
    );
  }
  getTenantedAccountInfoByFilter(e, n, r, i) {
    let o = null,
      a;
    if (i && !this.tenantProfileMatchesFilter(r, i)) return null;
    const l = this.getIdToken(e, n, r.tenantId);
    return l &&
      ((a = va(l.secret, this.cryptoImpl.base64Decode)),
      !this.idTokenClaimsMatchTenantProfileFilter(a, i))
      ? null
      : ((o = Av(e, r, a, l == null ? void 0 : l.secret)), o);
  }
  getTenantProfilesFromAccountEntity(e, n, r) {
    const i = e.getAccountInfo();
    let o = i.tenantProfiles || new Map();
    const a = this.getTokenKeys();
    if (n) {
      const c = o.get(n);
      if (c) o = new Map([[n, c]]);
      else return [];
    }
    const l = [];
    return (
      o.forEach((c) => {
        const u = this.getTenantedAccountInfoByFilter(i, a, c, r);
        u && l.push(u);
      }),
      l
    );
  }
  tenantProfileMatchesFilter(e, n) {
    return !(
      (n.localAccountId &&
        !this.matchLocalAccountIdFromTenantProfile(e, n.localAccountId)) ||
      (n.name && e.name !== n.name) ||
      (n.isHomeTenant !== void 0 && e.isHomeTenant !== n.isHomeTenant)
    );
  }
  idTokenClaimsMatchTenantProfileFilter(e, n) {
    return !(
      n &&
      ((n.localAccountId &&
        !this.matchLocalAccountIdFromTokenClaims(e, n.localAccountId)) ||
        (n.loginHint && !this.matchLoginHintFromTokenClaims(e, n.loginHint)) ||
        (n.username && !this.matchUsername(e.preferred_username, n.username)) ||
        (n.name && !this.matchName(e, n.name)) ||
        (n.sid && !this.matchSid(e, n.sid)))
    );
  }
  async saveCacheRecord(e, n, r) {
    var i, o, a, l;
    if (!e) throw V(D1);
    try {
      e.account && this.setAccount(e.account),
        e.idToken &&
          (n == null ? void 0 : n.idToken) !== !1 &&
          this.setIdTokenCredential(e.idToken),
        e.accessToken &&
          (n == null ? void 0 : n.accessToken) !== !1 &&
          (await this.saveAccessToken(e.accessToken)),
        e.refreshToken &&
          (n == null ? void 0 : n.refreshToken) !== !1 &&
          this.setRefreshTokenCredential(e.refreshToken),
        e.appMetadata && this.setAppMetadata(e.appMetadata);
    } catch (c) {
      throw (
        ((i = this.commonLogger) == null ||
          i.error("CacheManager.saveCacheRecord: failed"),
        c instanceof Error
          ? ((o = this.commonLogger) == null ||
              o.errorPii(`CacheManager.saveCacheRecord: ${c.message}`, r),
            c.name === "QuotaExceededError" ||
            c.name === "NS_ERROR_DOM_QUOTA_REACHED" ||
            c.message.includes("exceeded the quota")
              ? ((a = this.commonLogger) == null ||
                  a.error(
                    "CacheManager.saveCacheRecord: exceeded storage quota",
                    r
                  ),
                new ps(lI))
              : new ps(c.name, c.message))
          : ((l = this.commonLogger) == null ||
              l.errorPii(`CacheManager.saveCacheRecord: ${c}`, r),
            new ps(jv)))
      );
    }
  }
  async saveAccessToken(e) {
    const n = {
        clientId: e.clientId,
        credentialType: e.credentialType,
        environment: e.environment,
        homeAccountId: e.homeAccountId,
        realm: e.realm,
        tokenType: e.tokenType,
        requestedClaimsHash: e.requestedClaimsHash,
      },
      r = this.getTokenKeys(),
      i = jt.fromString(e.target),
      o = [];
    r.accessToken.forEach((a) => {
      if (!this.accessTokenKeyMatchesFilter(a, n, !1)) return;
      const l = this.getAccessTokenCredential(a);
      l &&
        this.credentialMatchesFilter(l, n) &&
        jt.fromString(l.target).intersectingScopeSets(i) &&
        o.push(this.removeAccessToken(a));
    }),
      await Promise.all(o),
      this.setAccessTokenCredential(e);
  }
  getAccountsFilteredBy(e) {
    const n = this.getAccountKeys(),
      r = [];
    return (
      n.forEach((i) => {
        var c;
        if (!this.isAccountKey(i, e.homeAccountId)) return;
        const o = this.getAccount(i, this.commonLogger);
        if (
          !o ||
          (e.homeAccountId && !this.matchHomeAccountId(o, e.homeAccountId)) ||
          (e.username && !this.matchUsername(o.username, e.username)) ||
          (e.environment && !this.matchEnvironment(o, e.environment)) ||
          (e.realm && !this.matchRealm(o, e.realm)) ||
          (e.nativeAccountId &&
            !this.matchNativeAccountId(o, e.nativeAccountId)) ||
          (e.authorityType && !this.matchAuthorityType(o, e.authorityType))
        )
          return;
        const a = {
            localAccountId: e == null ? void 0 : e.localAccountId,
            name: e == null ? void 0 : e.name,
          },
          l =
            (c = o.tenantProfiles) == null
              ? void 0
              : c.filter((u) => this.tenantProfileMatchesFilter(u, a));
        (l && l.length === 0) || r.push(o);
      }),
      r
    );
  }
  isAccountKey(e, n, r) {
    return !(
      e.split(pn.CACHE_KEY_SEPARATOR).length < 3 ||
      (n && !e.toLowerCase().includes(n.toLowerCase())) ||
      (r && !e.toLowerCase().includes(r.toLowerCase()))
    );
  }
  isCredentialKey(e) {
    if (e.split(pn.CACHE_KEY_SEPARATOR).length < 6) return !1;
    const n = e.toLowerCase();
    if (
      n.indexOf(we.ID_TOKEN.toLowerCase()) === -1 &&
      n.indexOf(we.ACCESS_TOKEN.toLowerCase()) === -1 &&
      n.indexOf(we.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) === -1 &&
      n.indexOf(we.REFRESH_TOKEN.toLowerCase()) === -1
    )
      return !1;
    if (n.indexOf(we.REFRESH_TOKEN.toLowerCase()) > -1) {
      const r = `${we.REFRESH_TOKEN}${pn.CACHE_KEY_SEPARATOR}${this.clientId}${pn.CACHE_KEY_SEPARATOR}`,
        i = `${we.REFRESH_TOKEN}${pn.CACHE_KEY_SEPARATOR}${Fl}${pn.CACHE_KEY_SEPARATOR}`;
      if (
        n.indexOf(r.toLowerCase()) === -1 &&
        n.indexOf(i.toLowerCase()) === -1
      )
        return !1;
    } else if (n.indexOf(this.clientId.toLowerCase()) === -1) return !1;
    return !0;
  }
  credentialMatchesFilter(e, n) {
    return !(
      (n.clientId && !this.matchClientId(e, n.clientId)) ||
      (n.userAssertionHash &&
        !this.matchUserAssertionHash(e, n.userAssertionHash)) ||
      (typeof n.homeAccountId == "string" &&
        !this.matchHomeAccountId(e, n.homeAccountId)) ||
      (n.environment && !this.matchEnvironment(e, n.environment)) ||
      (n.realm && !this.matchRealm(e, n.realm)) ||
      (n.credentialType && !this.matchCredentialType(e, n.credentialType)) ||
      (n.familyId && !this.matchFamilyId(e, n.familyId)) ||
      (n.target && !this.matchTarget(e, n.target)) ||
      ((n.requestedClaimsHash || e.requestedClaimsHash) &&
        e.requestedClaimsHash !== n.requestedClaimsHash) ||
      (e.credentialType === we.ACCESS_TOKEN_WITH_AUTH_SCHEME &&
        ((n.tokenType && !this.matchTokenType(e, n.tokenType)) ||
          (n.tokenType === Ze.SSH && n.keyId && !this.matchKeyId(e, n.keyId))))
    );
  }
  getAppMetadataFilteredBy(e) {
    const n = this.getKeys(),
      r = {};
    return (
      n.forEach((i) => {
        if (!this.isAppMetadata(i)) return;
        const o = this.getAppMetadata(i);
        o &&
          ((e.environment && !this.matchEnvironment(o, e.environment)) ||
            (e.clientId && !this.matchClientId(o, e.clientId)) ||
            (r[i] = o));
      }),
      r
    );
  }
  getAuthorityMetadataByAlias(e) {
    const n = this.getAuthorityMetadataKeys();
    let r = null;
    return (
      n.forEach((i) => {
        if (!this.isAuthorityMetadata(i) || i.indexOf(this.clientId) === -1)
          return;
        const o = this.getAuthorityMetadata(i);
        o && o.aliases.indexOf(e) !== -1 && (r = o);
      }),
      r
    );
  }
  async removeAllAccounts() {
    const e = this.getAccountKeys(),
      n = [];
    e.forEach((r) => {
      n.push(this.removeAccount(r));
    }),
      await Promise.all(n);
  }
  async removeAccount(e) {
    const n = this.getAccount(e, this.commonLogger);
    n && (await this.removeAccountContext(n), this.removeItem(e));
  }
  async removeAccountContext(e) {
    const n = this.getTokenKeys(),
      r = e.generateAccountId(),
      i = [];
    n.idToken.forEach((o) => {
      o.indexOf(r) === 0 && this.removeIdToken(o);
    }),
      n.accessToken.forEach((o) => {
        o.indexOf(r) === 0 && i.push(this.removeAccessToken(o));
      }),
      n.refreshToken.forEach((o) => {
        o.indexOf(r) === 0 && this.removeRefreshToken(o);
      }),
      await Promise.all(i);
  }
  updateOutdatedCachedAccount(e, n, r) {
    var i;
    if (n && n.isSingleTenant()) {
      (i = this.commonLogger) == null ||
        i.verbose(
          "updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity"
        );
      const o = this.getAccountKeys().filter((d) =>
          d.startsWith(n.homeAccountId)
        ),
        a = [];
      o.forEach((d) => {
        const h = this.getCachedAccountEntity(d);
        h && a.push(h);
      });
      const l = a.find((d) => rh(d.realm, d.homeAccountId)) || a[0];
      l.tenantProfiles = a.map((d) => ({
        tenantId: d.realm,
        localAccountId: d.localAccountId,
        name: d.name,
        isHomeTenant: rh(d.realm, d.homeAccountId),
      }));
      const c = Ns.toObject(new Kt(), { ...l }),
        u = c.generateAccountKey();
      return (
        o.forEach((d) => {
          d !== u && this.removeOutdatedAccount(e);
        }),
        this.setAccount(c),
        r == null ||
          r.verbose("Updated an outdated account entity in the cache"),
        c
      );
    }
    return n;
  }
  async removeAccessToken(e) {
    const n = this.getAccessTokenCredential(e);
    if (n) {
      if (
        n.credentialType.toLowerCase() ===
          we.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase() &&
        n.tokenType === Ze.POP
      ) {
        const i = n.keyId;
        if (i)
          try {
            await this.cryptoImpl.removeTokenBindingKey(i);
          } catch {
            throw V(_1);
          }
      }
      return this.removeItem(e);
    }
  }
  removeAppMetadata() {
    return (
      this.getKeys().forEach((n) => {
        this.isAppMetadata(n) && this.removeItem(n);
      }),
      !0
    );
  }
  readAccountFromCache(e) {
    const n = Kt.generateAccountCacheKey(e);
    return this.getAccount(n, this.commonLogger);
  }
  getIdToken(e, n, r, i, o) {
    this.commonLogger.trace("CacheManager - getIdToken called");
    const a = {
        homeAccountId: e.homeAccountId,
        environment: e.environment,
        credentialType: we.ID_TOKEN,
        clientId: this.clientId,
        realm: r,
      },
      l = this.getIdTokensByFilter(a, n),
      c = l.size;
    if (c < 1)
      return (
        this.commonLogger.info("CacheManager:getIdToken - No token found"), null
      );
    if (c > 1) {
      let u = l;
      if (!r) {
        const d = new Map();
        l.forEach((f, p) => {
          f.realm === e.tenantId && d.set(p, f);
        });
        const h = d.size;
        if (h < 1)
          return (
            this.commonLogger.info(
              "CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"
            ),
            l.values().next().value
          );
        if (h === 1)
          return (
            this.commonLogger.info(
              "CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"
            ),
            d.values().next().value
          );
        u = d;
      }
      return (
        this.commonLogger.info(
          "CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"
        ),
        u.forEach((d, h) => {
          this.removeIdToken(h);
        }),
        i && o && i.addFields({ multiMatchedID: l.size }, o),
        null
      );
    }
    return (
      this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),
      l.values().next().value
    );
  }
  getIdTokensByFilter(e, n) {
    const r = (n && n.idToken) || this.getTokenKeys().idToken,
      i = new Map();
    return (
      r.forEach((o) => {
        if (!this.idTokenKeyMatchesFilter(o, { clientId: this.clientId, ...e }))
          return;
        const a = this.getIdTokenCredential(o);
        a && this.credentialMatchesFilter(a, e) && i.set(o, a);
      }),
      i
    );
  }
  idTokenKeyMatchesFilter(e, n) {
    const r = e.toLowerCase();
    return !(
      (n.clientId && r.indexOf(n.clientId.toLowerCase()) === -1) ||
      (n.homeAccountId && r.indexOf(n.homeAccountId.toLowerCase()) === -1)
    );
  }
  removeIdToken(e) {
    this.removeItem(e);
  }
  removeRefreshToken(e) {
    this.removeItem(e);
  }
  getAccessToken(e, n, r, i, o, a) {
    this.commonLogger.trace("CacheManager - getAccessToken called");
    const l = jt.createSearchScopes(n.scopes),
      c = n.authenticationScheme || Ze.BEARER,
      u =
        c && c.toLowerCase() !== Ze.BEARER.toLowerCase()
          ? we.ACCESS_TOKEN_WITH_AUTH_SCHEME
          : we.ACCESS_TOKEN,
      d = {
        homeAccountId: e.homeAccountId,
        environment: e.environment,
        credentialType: u,
        clientId: this.clientId,
        realm: i || e.tenantId,
        target: l,
        tokenType: c,
        keyId: n.sshKid,
        requestedClaimsHash: n.requestedClaimsHash,
      },
      h = (r && r.accessToken) || this.getTokenKeys().accessToken,
      f = [];
    h.forEach((m) => {
      if (this.accessTokenKeyMatchesFilter(m, d, !0)) {
        const v = this.getAccessTokenCredential(m);
        v && this.credentialMatchesFilter(v, d) && f.push(v);
      }
    });
    const p = f.length;
    return p < 1
      ? (this.commonLogger.info("CacheManager:getAccessToken - No token found"),
        null)
      : p > 1
      ? (this.commonLogger.info(
          "CacheManager:getAccessToken - Multiple access tokens found, clearing them"
        ),
        f.forEach((m) => {
          this.removeAccessToken(ns(m));
        }),
        o && a && o.addFields({ multiMatchedAT: f.length }, a),
        null)
      : (this.commonLogger.info(
          "CacheManager:getAccessToken - Returning access token"
        ),
        f[0]);
  }
  accessTokenKeyMatchesFilter(e, n, r) {
    const i = e.toLowerCase();
    if (
      (n.clientId && i.indexOf(n.clientId.toLowerCase()) === -1) ||
      (n.homeAccountId && i.indexOf(n.homeAccountId.toLowerCase()) === -1) ||
      (n.realm && i.indexOf(n.realm.toLowerCase()) === -1) ||
      (n.requestedClaimsHash &&
        i.indexOf(n.requestedClaimsHash.toLowerCase()) === -1)
    )
      return !1;
    if (n.target) {
      const o = n.target.asArray();
      for (let a = 0; a < o.length; a++) {
        if (r && !i.includes(o[a].toLowerCase())) return !1;
        if (!r && i.includes(o[a].toLowerCase())) return !0;
      }
    }
    return !0;
  }
  getAccessTokensByFilter(e) {
    const n = this.getTokenKeys(),
      r = [];
    return (
      n.accessToken.forEach((i) => {
        if (!this.accessTokenKeyMatchesFilter(i, e, !0)) return;
        const o = this.getAccessTokenCredential(i);
        o && this.credentialMatchesFilter(o, e) && r.push(o);
      }),
      r
    );
  }
  getRefreshToken(e, n, r, i, o) {
    this.commonLogger.trace("CacheManager - getRefreshToken called");
    const a = n ? Fl : void 0,
      l = {
        homeAccountId: e.homeAccountId,
        environment: e.environment,
        credentialType: we.REFRESH_TOKEN,
        clientId: this.clientId,
        familyId: a,
      },
      c = (r && r.refreshToken) || this.getTokenKeys().refreshToken,
      u = [];
    c.forEach((h) => {
      if (this.refreshTokenKeyMatchesFilter(h, l)) {
        const f = this.getRefreshTokenCredential(h);
        f && this.credentialMatchesFilter(f, l) && u.push(f);
      }
    });
    const d = u.length;
    return d < 1
      ? (this.commonLogger.info(
          "CacheManager:getRefreshToken - No refresh token found."
        ),
        null)
      : (d > 1 && i && o && i.addFields({ multiMatchedRT: d }, o),
        this.commonLogger.info(
          "CacheManager:getRefreshToken - returning refresh token"
        ),
        u[0]);
  }
  refreshTokenKeyMatchesFilter(e, n) {
    const r = e.toLowerCase();
    return !(
      (n.familyId && r.indexOf(n.familyId.toLowerCase()) === -1) ||
      (!n.familyId &&
        n.clientId &&
        r.indexOf(n.clientId.toLowerCase()) === -1) ||
      (n.homeAccountId && r.indexOf(n.homeAccountId.toLowerCase()) === -1)
    );
  }
  readAppMetadataFromCache(e) {
    const n = { environment: e, clientId: this.clientId },
      r = this.getAppMetadataFilteredBy(n),
      i = Object.keys(r).map((a) => r[a]),
      o = i.length;
    if (o < 1) return null;
    if (o > 1) throw V(R1);
    return i[0];
  }
  isAppMetadataFOCI(e) {
    const n = this.readAppMetadataFromCache(e);
    return !!(n && n.familyId === Fl);
  }
  matchHomeAccountId(e, n) {
    return typeof e.homeAccountId == "string" && n === e.homeAccountId;
  }
  matchLocalAccountIdFromTokenClaims(e, n) {
    const r = e.oid || e.sub;
    return n === r;
  }
  matchLocalAccountIdFromTenantProfile(e, n) {
    return e.localAccountId === n;
  }
  matchName(e, n) {
    var r;
    return (
      n.toLowerCase() === ((r = e.name) == null ? void 0 : r.toLowerCase())
    );
  }
  matchUsername(e, n) {
    return !!(
      e &&
      typeof e == "string" &&
      (n == null ? void 0 : n.toLowerCase()) === e.toLowerCase()
    );
  }
  matchUserAssertionHash(e, n) {
    return !!(e.userAssertionHash && n === e.userAssertionHash);
  }
  matchEnvironment(e, n) {
    if (this.staticAuthorityOptions) {
      const i = BL(this.staticAuthorityOptions, this.commonLogger);
      if (i.includes(n) && i.includes(e.environment)) return !0;
    }
    const r = this.getAuthorityMetadataByAlias(n);
    return !!(r && r.aliases.indexOf(e.environment) > -1);
  }
  matchCredentialType(e, n) {
    return (
      e.credentialType && n.toLowerCase() === e.credentialType.toLowerCase()
    );
  }
  matchClientId(e, n) {
    return !!(e.clientId && n === e.clientId);
  }
  matchFamilyId(e, n) {
    return !!(e.familyId && n === e.familyId);
  }
  matchRealm(e, n) {
    var r;
    return (
      ((r = e.realm) == null ? void 0 : r.toLowerCase()) === n.toLowerCase()
    );
  }
  matchNativeAccountId(e, n) {
    return !!(e.nativeAccountId && n === e.nativeAccountId);
  }
  matchLoginHintFromTokenClaims(e, n) {
    return e.login_hint === n || e.preferred_username === n || e.upn === n;
  }
  matchSid(e, n) {
    return e.sid === n;
  }
  matchAuthorityType(e, n) {
    return !!(
      e.authorityType && n.toLowerCase() === e.authorityType.toLowerCase()
    );
  }
  matchTarget(e, n) {
    return (e.credentialType !== we.ACCESS_TOKEN &&
      e.credentialType !== we.ACCESS_TOKEN_WITH_AUTH_SCHEME) ||
      !e.target
      ? !1
      : jt.fromString(e.target).containsScopeSet(n);
  }
  matchTokenType(e, n) {
    return !!(e.tokenType && e.tokenType === n);
  }
  matchKeyId(e, n) {
    return !!(e.keyId && e.keyId === n);
  }
  isAppMetadata(e) {
    return e.indexOf(fv) !== -1;
  }
  isAuthorityMetadata(e) {
    return e.indexOf(Xd.CACHE_KEY) !== -1;
  }
  generateAuthorityMetadataCacheKey(e) {
    return `${Xd.CACHE_KEY}-${this.clientId}-${e}`;
  }
  static toObject(e, n) {
    for (const r in n) e[r] = n[r];
    return e;
  }
}
class UP extends Ns {
  setAccount() {
    throw V(ke);
  }
  getAccount() {
    throw V(ke);
  }
  getCachedAccountEntity() {
    throw V(ke);
  }
  setIdTokenCredential() {
    throw V(ke);
  }
  getIdTokenCredential() {
    throw V(ke);
  }
  setAccessTokenCredential() {
    throw V(ke);
  }
  getAccessTokenCredential() {
    throw V(ke);
  }
  setRefreshTokenCredential() {
    throw V(ke);
  }
  getRefreshTokenCredential() {
    throw V(ke);
  }
  setAppMetadata() {
    throw V(ke);
  }
  getAppMetadata() {
    throw V(ke);
  }
  setServerTelemetry() {
    throw V(ke);
  }
  getServerTelemetry() {
    throw V(ke);
  }
  setAuthorityMetadata() {
    throw V(ke);
  }
  getAuthorityMetadata() {
    throw V(ke);
  }
  getAuthorityMetadataKeys() {
    throw V(ke);
  }
  setThrottlingCache() {
    throw V(ke);
  }
  getThrottlingCache() {
    throw V(ke);
  }
  removeItem() {
    throw V(ke);
  }
  getKeys() {
    throw V(ke);
  }
  getAccountKeys() {
    throw V(ke);
  }
  getTokenKeys() {
    throw V(ke);
  }
  async clear() {
    throw V(ke);
  }
  updateCredentialCacheKey() {
    throw V(ke);
  }
  removeOutdatedAccount() {
    throw V(ke);
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const cI = {
    tokenRenewalOffsetSeconds: bL,
    preventCorsPreflight: !1,
  },
  zP = {
    loggerCallback: () => {},
    piiLoggingEnabled: !1,
    logLevel: Xe.Info,
    correlationId: H.EMPTY_STRING,
  },
  HP = { claimsBasedCachingEnabled: !1 },
  $P = {
    async sendGetRequestAsync() {
      throw V(ke);
    },
    async sendPostRequestAsync() {
      throw V(ke);
    },
  },
  KP = { sku: H.SKU, version: kv, cpu: H.EMPTY_STRING, os: H.EMPTY_STRING },
  qP = { clientSecret: H.EMPTY_STRING, clientAssertion: void 0 },
  GP = { azureCloudInstance: Iv.None, tenant: `${H.DEFAULT_COMMON_TENANT}` },
  WP = { application: { appName: "", appVersion: "" } };
function VP({
  authOptions: t,
  systemOptions: e,
  loggerOptions: n,
  cacheOptions: r,
  storageInterface: i,
  networkInterface: o,
  cryptoInterface: a,
  clientCredentials: l,
  libraryInfo: c,
  telemetry: u,
  serverTelemetryManager: d,
  persistencePlugin: h,
  serializableCache: f,
}) {
  const p = { ...zP, ...n };
  return {
    authOptions: QP(t),
    systemOptions: { ...cI, ...e },
    loggerOptions: p,
    cacheOptions: { ...HP, ...r },
    storageInterface: i || new UP(t.clientId, th, new xo(p)),
    networkInterface: o || $P,
    cryptoInterface: a || th,
    clientCredentials: l || qP,
    libraryInfo: { ...KP, ...c },
    telemetry: { ...WP, ...u },
    serverTelemetryManager: d || null,
    persistencePlugin: h || null,
    serializableCache: f || null,
  };
}
function QP(t) {
  return {
    clientCapabilities: [],
    azureCloudOptions: GP,
    skipAuthorityMetadataCache: !1,
    ...t,
  };
}
function Zm(t) {
  return t.authOptions.authority.options.protocolMode === Ri.OIDC;
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class Eo extends Nt {
  constructor(e, n, r, i, o) {
    super(e, n, r),
      (this.name = "ServerError"),
      (this.errorNo = i),
      (this.status = o),
      Object.setPrototypeOf(this, Eo.prototype);
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class Gr {
  static generateThrottlingStorageKey(e) {
    return `${Bl.THROTTLING_PREFIX}.${JSON.stringify(e)}`;
  }
  static preProcess(e, n) {
    var o;
    const r = Gr.generateThrottlingStorageKey(n),
      i = e.getThrottlingCache(r);
    if (i) {
      if (i.throttleTime < Date.now()) {
        e.removeItem(r);
        return;
      }
      throw new Eo(
        ((o = i.errorCodes) == null ? void 0 : o.join(" ")) || H.EMPTY_STRING,
        i.errorMessage,
        i.subError
      );
    }
  }
  static postProcess(e, n, r) {
    if (Gr.checkResponseStatus(r) || Gr.checkResponseForRetryAfter(r)) {
      const i = {
        throttleTime: Gr.calculateThrottleTime(
          parseInt(r.headers[Xr.RETRY_AFTER])
        ),
        error: r.body.error,
        errorCodes: r.body.error_codes,
        errorMessage: r.body.error_description,
        subError: r.body.suberror,
      };
      e.setThrottlingCache(Gr.generateThrottlingStorageKey(n), i);
    }
  }
  static checkResponseStatus(e) {
    return e.status === 429 || (e.status >= 500 && e.status < 600);
  }
  static checkResponseForRetryAfter(e) {
    return e.headers
      ? e.headers.hasOwnProperty(Xr.RETRY_AFTER) &&
          (e.status < 200 || e.status >= 300)
      : !1;
  }
  static calculateThrottleTime(e) {
    const n = e <= 0 ? 0 : e,
      r = Date.now() / 1e3;
    return Math.floor(
      Math.min(
        r + (n || Bl.DEFAULT_THROTTLE_TIME_SECONDS),
        r + Bl.DEFAULT_MAX_THROTTLE_TIME_SECONDS
      ) * 1e3
    );
  }
  static removeThrottle(e, n, r, i) {
    const o = {
        clientId: n,
        authority: r.authority,
        scopes: r.scopes,
        homeAccountIdentifier: i,
        claims: r.claims,
        authenticationScheme: r.authenticationScheme,
        resourceRequestMethod: r.resourceRequestMethod,
        resourceRequestUri: r.resourceRequestUri,
        shrClaims: r.shrClaims,
        sshKid: r.sshKid,
      },
      a = this.generateThrottlingStorageKey(o);
    e.removeItem(a);
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class YP {
  constructor(e, n) {
    (this.networkClient = e), (this.cacheManager = n);
  }
  async sendPostRequest(e, n, r) {
    Gr.preProcess(this.cacheManager, e);
    let i;
    try {
      i = await this.networkClient.sendPostRequestAsync(n, r);
    } catch (o) {
      throw o instanceof Nt ? o : V(x1);
    }
    return Gr.postProcess(this.cacheManager, e, i), i;
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const zn = {
  HOME_ACCOUNT_ID: "home_account_id",
  UPN: "UPN",
};
/*! @azure/msal-common v14.14.0 2024-07-23 */ class Ua {
  static validateRedirectUri(e) {
    if (!e) throw tt(B1);
  }
  static validatePrompt(e) {
    const n = [];
    for (const r in Yt) n.push(Yt[r]);
    if (n.indexOf(e) < 0) throw tt($1);
  }
  static validateClaims(e) {
    try {
      JSON.parse(e);
    } catch {
      throw tt(wv);
    }
  }
  static validateCodeChallengeParams(e, n) {
    if (!e || !n) throw tt(Sv);
    this.validateCodeChallengeMethod(n);
  }
  static validateCodeChallengeMethod(e) {
    if ([Jw.PLAIN, Jw.S256].indexOf(e) < 0) throw tt(G1);
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class Ul {
  constructor() {
    this.parameters = new Map();
  }
  addResponseTypeCode() {
    this.parameters.set(u0, encodeURIComponent(H.CODE_RESPONSE_TYPE));
  }
  addResponseTypeForTokenAndIdToken() {
    this.parameters.set(
      u0,
      encodeURIComponent(`${H.TOKEN_RESPONSE_TYPE} ${H.ID_TOKEN_RESPONSE_TYPE}`)
    );
  }
  addResponseMode(e) {
    this.parameters.set(iP, encodeURIComponent(e || gL.QUERY));
  }
  addNativeBroker() {
    this.parameters.set(LP, encodeURIComponent("1"));
  }
  addScopes(e, n = !0, r = Ks) {
    n && !r.includes("openid") && !e.includes("openid") && r.push("openid");
    const i = n ? [...(e || []), ...r] : e || [],
      o = new jt(i);
    this.parameters.set(sP, encodeURIComponent(o.printScopes()));
  }
  addClientId(e) {
    this.parameters.set(Is, encodeURIComponent(e));
  }
  addRedirectUri(e) {
    Ua.validateRedirectUri(e), this.parameters.set(rP, encodeURIComponent(e));
  }
  addPostLogoutRedirectUri(e) {
    Ua.validateRedirectUri(e), this.parameters.set(IP, encodeURIComponent(e));
  }
  addIdTokenHint(e) {
    this.parameters.set(NP, encodeURIComponent(e));
  }
  addDomainHint(e) {
    this.parameters.set(FP, encodeURIComponent(e));
  }
  addLoginHint(e) {
    this.parameters.set(MP, encodeURIComponent(e));
  }
  addCcsUpn(e) {
    this.parameters.set(Xr.CCS_HEADER, encodeURIComponent(`UPN:${e}`));
  }
  addCcsOid(e) {
    this.parameters.set(
      Xr.CCS_HEADER,
      encodeURIComponent(`Oid:${e.uid}@${e.utid}`)
    );
  }
  addSid(e) {
    this.parameters.set(_P, encodeURIComponent(e));
  }
  addClaims(e, n) {
    const r = this.addClientCapabilitiesToClaims(e, n);
    Ua.validateClaims(r), this.parameters.set(aP, encodeURIComponent(r));
  }
  addCorrelationId(e) {
    this.parameters.set(gP, encodeURIComponent(e));
  }
  addLibraryInfo(e) {
    this.parameters.set(yP, e.sku),
      this.parameters.set(vP, e.version),
      e.os && this.parameters.set(bP, e.os),
      e.cpu && this.parameters.set(CP, e.cpu);
  }
  addApplicationTelemetry(e) {
    e != null && e.appName && this.parameters.set(EP, e.appName),
      e != null && e.appVersion && this.parameters.set(TP, e.appVersion);
  }
  addPrompt(e) {
    Ua.validatePrompt(e), this.parameters.set(`${dP}`, encodeURIComponent(e));
  }
  addState(e) {
    e && this.parameters.set(cP, encodeURIComponent(e));
  }
  addNonce(e) {
    this.parameters.set(uP, encodeURIComponent(e));
  }
  addCodeChallengeParams(e, n) {
    if ((Ua.validateCodeChallengeParams(e, n), e && n))
      this.parameters.set(fP, encodeURIComponent(e)),
        this.parameters.set(pP, encodeURIComponent(n));
    else throw tt(Sv);
  }
  addAuthorizationCode(e) {
    this.parameters.set(hP, encodeURIComponent(e));
  }
  addDeviceCode(e) {
    this.parameters.set(kP, encodeURIComponent(e));
  }
  addRefreshToken(e) {
    this.parameters.set(lP, encodeURIComponent(e));
  }
  addCodeVerifier(e) {
    this.parameters.set(mP, encodeURIComponent(e));
  }
  addClientSecret(e) {
    this.parameters.set(RP, encodeURIComponent(e));
  }
  addClientAssertion(e) {
    e && this.parameters.set(AP, encodeURIComponent(e));
  }
  addClientAssertionType(e) {
    e && this.parameters.set(jP, encodeURIComponent(e));
  }
  addOboAssertion(e) {
    this.parameters.set(OP, encodeURIComponent(e));
  }
  addRequestTokenUse(e) {
    this.parameters.set(DP, encodeURIComponent(e));
  }
  addGrantType(e) {
    this.parameters.set(oP, encodeURIComponent(e));
  }
  addClientInfo() {
    this.parameters.set(yL, "1");
  }
  addExtraQueryParameters(e) {
    Object.entries(e).forEach(([n, r]) => {
      !this.parameters.has(n) && r && this.parameters.set(n, r);
    });
  }
  addClientCapabilitiesToClaims(e, n) {
    let r;
    if (!e) r = {};
    else
      try {
        r = JSON.parse(e);
      } catch {
        throw tt(wv);
      }
    return (
      n &&
        n.length > 0 &&
        (r.hasOwnProperty(Eu.ACCESS_TOKEN) || (r[Eu.ACCESS_TOKEN] = {}),
        (r[Eu.ACCESS_TOKEN][Eu.XMS_CC] = { values: n })),
      JSON.stringify(r)
    );
  }
  addUsername(e) {
    this.parameters.set(e0.username, encodeURIComponent(e));
  }
  addPassword(e) {
    this.parameters.set(e0.password, encodeURIComponent(e));
  }
  addPopToken(e) {
    e &&
      (this.parameters.set(d0, Ze.POP),
      this.parameters.set(h0, encodeURIComponent(e)));
  }
  addSshJwk(e) {
    e &&
      (this.parameters.set(d0, Ze.SSH),
      this.parameters.set(h0, encodeURIComponent(e)));
  }
  addServerTelemetry(e) {
    this.parameters.set(wP, e.generateCurrentRequestHeaderValue()),
      this.parameters.set(SP, e.generateLastRequestHeaderValue());
  }
  addThrottling() {
    this.parameters.set(xP, Bl.X_MS_LIB_CAPABILITY_VALUE);
  }
  addLogoutHint(e) {
    this.parameters.set(PP, encodeURIComponent(e));
  }
  createQueryString() {
    const e = new Array();
    return (
      this.parameters.forEach((n, r) => {
        e.push(`${r}=${n}`);
      }),
      e.join("&")
    );
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class Ov {
  constructor(e, n) {
    (this.config = VP(e)),
      (this.logger = new xo(this.config.loggerOptions, aI, kv)),
      (this.cryptoUtils = this.config.cryptoInterface),
      (this.cacheManager = this.config.storageInterface),
      (this.networkClient = this.config.networkInterface),
      (this.networkManager = new YP(this.networkClient, this.cacheManager)),
      (this.serverTelemetryManager = this.config.serverTelemetryManager),
      (this.authority = this.config.authOptions.authority),
      (this.performanceClient = n);
  }
  createTokenRequestHeaders(e) {
    const n = {};
    if (
      ((n[Xr.CONTENT_TYPE] = H.URL_FORM_CONTENT_TYPE),
      !this.config.systemOptions.preventCorsPreflight && e)
    )
      switch (e.type) {
        case zn.HOME_ACCOUNT_ID:
          try {
            const r = rs(e.credential);
            n[Xr.CCS_HEADER] = `Oid:${r.uid}@${r.utid}`;
          } catch (r) {
            this.logger.verbose(
              "Could not parse home account ID for CCS Header: " + r
            );
          }
          break;
        case zn.UPN:
          n[Xr.CCS_HEADER] = `UPN: ${e.credential}`;
          break;
      }
    return n;
  }
  async executePostToTokenEndpoint(e, n, r, i, o, a) {
    var c, u, d, h;
    a && ((c = this.performanceClient) == null || c.addQueueMeasurement(a, o));
    const l = await this.networkManager.sendPostRequest(i, e, {
      body: n,
      headers: r,
    });
    return (
      (h = this.performanceClient) == null ||
        h.addFields(
          {
            refreshTokenSize:
              ((u = l.body.refresh_token) == null ? void 0 : u.length) || 0,
            httpVerToken:
              ((d = l.headers) == null ? void 0 : d[Xr.X_MS_HTTP_VERSION]) ||
              "",
          },
          o
        ),
      this.config.serverTelemetryManager &&
        l.status < 500 &&
        l.status !== 429 &&
        this.config.serverTelemetryManager.clearTelemetryCache(),
      l
    );
  }
  async updateAuthority(e, n) {
    var o;
    (o = this.performanceClient) == null ||
      o.addQueueMeasurement(B.UpdateTokenEndpointAuthority, n);
    const r = `https://${e}/${this.authority.tenant}/`,
      i = await iI(
        r,
        this.networkClient,
        this.cacheManager,
        this.authority.options,
        this.logger,
        n,
        this.performanceClient
      );
    this.authority = i;
  }
  createTokenQueryParameters(e) {
    const n = new Ul();
    return (
      e.tokenQueryParameters &&
        n.addExtraQueryParameters(e.tokenQueryParameters),
      n.createQueryString()
    );
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const ih = "no_tokens_found",
  uI = "native_account_unavailable",
  Dv = "refresh_token_expired",
  XP = "interaction_required",
  JP = "consent_required",
  ZP = "login_required",
  tf = "bad_token";
/*! @azure/msal-common v14.14.0 2024-07-23 */ const p0 = [XP, JP, ZP, tf],
  e_ = [
    "message_only",
    "additional_action",
    "basic_action",
    "user_password_expired",
    "consent_required",
    "bad_token",
  ],
  t_ = {
    [ih]: "No refresh token found in the cache. Please sign-in.",
    [uI]: "The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",
    [Dv]: "Refresh token has expired.",
    [tf]: "Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.",
  };
class jr extends Nt {
  constructor(e, n, r, i, o, a, l, c) {
    super(e, n, r),
      Object.setPrototypeOf(this, jr.prototype),
      (this.timestamp = i || H.EMPTY_STRING),
      (this.traceId = o || H.EMPTY_STRING),
      (this.correlationId = a || H.EMPTY_STRING),
      (this.claims = l || H.EMPTY_STRING),
      (this.name = "InteractionRequiredAuthError"),
      (this.errorNo = c);
  }
}
function m0(t, e, n) {
  const r = !!t && p0.indexOf(t) > -1,
    i = !!n && e_.indexOf(n) > -1,
    o = !!e && p0.some((a) => e.indexOf(a) > -1);
  return r || o || i;
}
function eg(t) {
  return new jr(t, t_[t]);
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class kr {
  static setRequestState(e, n, r) {
    const i = kr.generateLibraryState(e, r);
    return n ? `${i}${H.RESOURCE_DELIM}${n}` : i;
  }
  static generateLibraryState(e, n) {
    if (!e) throw V(Ym);
    const r = { id: e.createNewGuid() };
    n && (r.meta = n);
    const i = JSON.stringify(r);
    return e.base64Encode(i);
  }
  static parseRequestState(e, n) {
    if (!e) throw V(Ym);
    if (!n) throw V(Ts);
    try {
      const r = n.split(H.RESOURCE_DELIM),
        i = r[0],
        o = r.length > 1 ? r.slice(1).join(H.RESOURCE_DELIM) : H.EMPTY_STRING,
        a = e.base64Decode(i),
        l = JSON.parse(a);
      return { userRequestState: o || H.EMPTY_STRING, libraryState: l };
    } catch {
      throw V(Ts);
    }
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const n_ = {
  SW: "sw",
  UHW: "uhw",
};
class ks {
  constructor(e, n) {
    (this.cryptoUtils = e), (this.performanceClient = n);
  }
  async generateCnf(e, n) {
    var o;
    (o = this.performanceClient) == null ||
      o.addQueueMeasurement(B.PopTokenGenerateCnf, e.correlationId);
    const r = await te(
        this.generateKid.bind(this),
        B.PopTokenGenerateCnf,
        n,
        this.performanceClient,
        e.correlationId
      )(e),
      i = this.cryptoUtils.base64UrlEncode(JSON.stringify(r));
    return { kid: r.kid, reqCnfString: i };
  }
  async generateKid(e) {
    var r;
    return (
      (r = this.performanceClient) == null ||
        r.addQueueMeasurement(B.PopTokenGenerateKid, e.correlationId),
      { kid: await this.cryptoUtils.getPublicKeyThumbprint(e), xms_ksl: n_.SW }
    );
  }
  async signPopToken(e, n, r) {
    return this.signPayload(e, n, r);
  }
  async signPayload(e, n, r, i) {
    const {
        resourceRequestMethod: o,
        resourceRequestUri: a,
        shrClaims: l,
        shrNonce: c,
        shrOptions: u,
      } = r,
      d = a ? new De(a) : void 0,
      h = d == null ? void 0 : d.getUrlComponents();
    return this.cryptoUtils.signJwt(
      {
        at: e,
        ts: oi(),
        m: o == null ? void 0 : o.toUpperCase(),
        u: h == null ? void 0 : h.HostNameAndPort,
        nonce: c || this.cryptoUtils.createNewGuid(),
        p: h == null ? void 0 : h.AbsolutePath,
        q: h != null && h.QueryString ? [[], h.QueryString] : void 0,
        client_claims: l || void 0,
        ...i,
      },
      n,
      u,
      r.correlationId
    );
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class r_ {
  constructor(e, n) {
    (this.cache = e), (this.hasChanged = n);
  }
  get cacheHasChanged() {
    return this.hasChanged;
  }
  get tokenCache() {
    return this.cache;
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ function i_(t) {
  var r, i;
  const e = "code=",
    n = (r = t.error_uri) == null ? void 0 : r.lastIndexOf(e);
  return n && n >= 0
    ? (i = t.error_uri) == null
      ? void 0
      : i.substring(n + e.length)
    : void 0;
}
class oa {
  constructor(e, n, r, i, o, a, l) {
    (this.clientId = e),
      (this.cacheStorage = n),
      (this.cryptoObj = r),
      (this.logger = i),
      (this.serializableCache = o),
      (this.persistencePlugin = a),
      (this.performanceClient = l);
  }
  validateServerAuthorizationCodeResponse(e, n) {
    if (!e.state || !n)
      throw e.state ? V(Jd, "Cached State") : V(Jd, "Server State");
    let r, i;
    try {
      r = decodeURIComponent(e.state);
    } catch {
      throw V(Ts, e.state);
    }
    try {
      i = decodeURIComponent(n);
    } catch {
      throw V(Ts, e.state);
    }
    if (r !== i) throw V(I1);
    if (e.error || e.error_description || e.suberror) {
      const o = i_(e);
      throw m0(e.error, e.error_description, e.suberror)
        ? new jr(
            e.error || "",
            e.error_description,
            e.suberror,
            e.timestamp || "",
            e.trace_id || "",
            e.correlation_id || "",
            e.claims || "",
            o
          )
        : new Eo(e.error || "", e.error_description, e.suberror, o);
    }
  }
  validateTokenResponse(e, n) {
    var r;
    if (e.error || e.error_description || e.suberror) {
      const i = `Error(s): ${e.error_codes || H.NOT_AVAILABLE} - Timestamp: ${
          e.timestamp || H.NOT_AVAILABLE
        } - Description: ${
          e.error_description || H.NOT_AVAILABLE
        } - Correlation ID: ${
          e.correlation_id || H.NOT_AVAILABLE
        } - Trace ID: ${e.trace_id || H.NOT_AVAILABLE}`,
        o = (r = e.error_codes) != null && r.length ? e.error_codes[0] : void 0,
        a = new Eo(e.error, i, e.suberror, o, e.status);
      if (
        n &&
        e.status &&
        e.status >= xu.SERVER_ERROR_RANGE_START &&
        e.status <= xu.SERVER_ERROR_RANGE_END
      ) {
        this.logger
          .warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.
${a}`);
        return;
      } else if (
        n &&
        e.status &&
        e.status >= xu.CLIENT_ERROR_RANGE_START &&
        e.status <= xu.CLIENT_ERROR_RANGE_END
      ) {
        this.logger
          .warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.
${a}`);
        return;
      }
      throw m0(e.error, e.error_description, e.suberror)
        ? new jr(
            e.error,
            e.error_description,
            e.suberror,
            e.timestamp || H.EMPTY_STRING,
            e.trace_id || H.EMPTY_STRING,
            e.correlation_id || H.EMPTY_STRING,
            e.claims || H.EMPTY_STRING,
            o
          )
        : a;
    }
  }
  async handleServerTokenResponse(e, n, r, i, o, a, l, c, u) {
    var m;
    (m = this.performanceClient) == null ||
      m.addQueueMeasurement(B.HandleServerTokenResponse, e.correlation_id);
    let d;
    if (e.id_token) {
      if (
        ((d = va(e.id_token || H.EMPTY_STRING, this.cryptoObj.base64Decode)),
        o && o.nonce && d.nonce !== o.nonce)
      )
        throw V(N1);
      if (i.maxAge || i.maxAge === 0) {
        const v = d.auth_time;
        if (!v) throw V(yv);
        F1(v, i.maxAge);
      }
    }
    this.homeAccountIdentifier = Kt.generateHomeAccountId(
      e.client_info || H.EMPTY_STRING,
      n.authorityType,
      this.logger,
      this.cryptoObj,
      d
    );
    let h;
    o && o.state && (h = kr.parseRequestState(this.cryptoObj, o.state)),
      (e.key_id = e.key_id || i.sshKid || void 0);
    const f = this.generateCacheRecord(e, n, r, i, d, a, o);
    let p;
    try {
      if (
        (this.persistencePlugin &&
          this.serializableCache &&
          (this.logger.verbose(
            "Persistence enabled, calling beforeCacheAccess"
          ),
          (p = new r_(this.serializableCache, !0)),
          await this.persistencePlugin.beforeCacheAccess(p)),
        l && !c && f.account)
      ) {
        const v = f.account.generateAccountKey();
        if (!this.cacheStorage.getAccount(v, this.logger))
          return (
            this.logger.warning(
              "Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"
            ),
            await oa.generateAuthenticationResult(
              this.cryptoObj,
              n,
              f,
              !1,
              i,
              d,
              h,
              void 0,
              u
            )
          );
      }
      await this.cacheStorage.saveCacheRecord(
        f,
        i.storeInCache,
        i.correlationId
      );
    } finally {
      this.persistencePlugin &&
        this.serializableCache &&
        p &&
        (this.logger.verbose("Persistence enabled, calling afterCacheAccess"),
        await this.persistencePlugin.afterCacheAccess(p));
    }
    return oa.generateAuthenticationResult(
      this.cryptoObj,
      n,
      f,
      !1,
      i,
      d,
      h,
      e,
      u
    );
  }
  generateCacheRecord(e, n, r, i, o, a, l) {
    const c = n.getPreferredCache();
    if (!c) throw V(bv);
    const u = sI(o);
    let d, h;
    e.id_token &&
      o &&
      ((d = Zh(
        this.homeAccountIdentifier,
        c,
        e.id_token,
        this.clientId,
        u || ""
      )),
      (h = Lv(
        this.cacheStorage,
        n,
        this.homeAccountIdentifier,
        this.cryptoObj.base64Decode,
        o,
        e.client_info,
        c,
        u,
        l,
        void 0,
        this.logger
      )));
    let f = null;
    if (e.access_token) {
      const v = e.scope ? jt.fromString(e.scope) : new jt(i.scopes || []),
        C =
          (typeof e.expires_in == "string"
            ? parseInt(e.expires_in, 10)
            : e.expires_in) || 0,
        b =
          (typeof e.ext_expires_in == "string"
            ? parseInt(e.ext_expires_in, 10)
            : e.ext_expires_in) || 0,
        g =
          (typeof e.refresh_in == "string"
            ? parseInt(e.refresh_in, 10)
            : e.refresh_in) || void 0,
        y = r + C,
        w = y + b,
        E = g && g > 0 ? r + g : void 0;
      f = ef(
        this.homeAccountIdentifier,
        c,
        e.access_token,
        this.clientId,
        u || n.tenant || "",
        v.printScopes(),
        y,
        w,
        this.cryptoObj.base64Decode,
        E,
        e.token_type,
        a,
        e.key_id,
        i.claims,
        i.requestedClaimsHash
      );
    }
    let p = null;
    if (e.refresh_token) {
      let v;
      if (e.refresh_token_expires_in) {
        const C =
          typeof e.refresh_token_expires_in == "string"
            ? parseInt(e.refresh_token_expires_in, 10)
            : e.refresh_token_expires_in;
        v = r + C;
      }
      p = nI(
        this.homeAccountIdentifier,
        c,
        e.refresh_token,
        this.clientId,
        e.foci,
        a,
        v
      );
    }
    let m = null;
    return (
      e.foci &&
        (m = { clientId: this.clientId, environment: c, familyId: e.foci }),
      {
        account: h,
        idToken: d,
        accessToken: f,
        refreshToken: p,
        appMetadata: m,
      }
    );
  }
  static async generateAuthenticationResult(e, n, r, i, o, a, l, c, u) {
    var y, w, E, S, T;
    let d = H.EMPTY_STRING,
      h = [],
      f = null,
      p,
      m,
      v = H.EMPTY_STRING;
    if (r.accessToken) {
      if (r.accessToken.tokenType === Ze.POP && !o.popKid) {
        const I = new ks(e),
          { secret: R, keyId: A } = r.accessToken;
        if (!A) throw V(Cv);
        d = await I.signPopToken(R, A, o);
      } else d = r.accessToken.secret;
      (h = jt.fromString(r.accessToken.target).asArray()),
        (f = new Date(Number(r.accessToken.expiresOn) * 1e3)),
        (p = new Date(Number(r.accessToken.extendedExpiresOn) * 1e3)),
        r.accessToken.refreshOn &&
          (m = new Date(Number(r.accessToken.refreshOn) * 1e3));
    }
    r.appMetadata && (v = r.appMetadata.familyId === Fl ? Fl : "");
    const C =
        (a == null ? void 0 : a.oid) || (a == null ? void 0 : a.sub) || "",
      b = (a == null ? void 0 : a.tid) || "";
    c != null &&
      c.spa_accountid &&
      r.account &&
      (r.account.nativeAccountId = c == null ? void 0 : c.spa_accountid);
    const g = r.account
      ? Av(
          r.account.getAccountInfo(),
          void 0,
          a,
          (y = r.idToken) == null ? void 0 : y.secret
        )
      : null;
    return {
      authority: n.canonicalAuthority,
      uniqueId: C,
      tenantId: b,
      scopes: h,
      account: g,
      idToken:
        ((w = r == null ? void 0 : r.idToken) == null ? void 0 : w.secret) ||
        "",
      idTokenClaims: a || {},
      accessToken: d,
      fromCache: i,
      expiresOn: f,
      extExpiresOn: p,
      refreshOn: m,
      correlationId: o.correlationId,
      requestId: u || H.EMPTY_STRING,
      familyId: v,
      tokenType:
        ((E = r.accessToken) == null ? void 0 : E.tokenType) || H.EMPTY_STRING,
      state: l ? l.userRequestState : H.EMPTY_STRING,
      cloudGraphHostName:
        ((S = r.account) == null ? void 0 : S.cloudGraphHostName) ||
        H.EMPTY_STRING,
      msGraphHost:
        ((T = r.account) == null ? void 0 : T.msGraphHost) || H.EMPTY_STRING,
      code: c == null ? void 0 : c.spa_code,
      fromNativeBroker: !1,
    };
  }
}
function Lv(t, e, n, r, i, o, a, l, c, u, d) {
  d == null || d.verbose("setCachedAccount called");
  const f = t.getAccountKeys().find((b) => b.startsWith(n));
  let p = null;
  f && (p = t.getAccount(f, d));
  const m =
      p ||
      Kt.createAccount(
        {
          homeAccountId: n,
          idTokenClaims: i,
          clientInfo: o,
          environment: a,
          cloudGraphHostName: c == null ? void 0 : c.cloud_graph_host_name,
          msGraphHost: c == null ? void 0 : c.msgraph_host,
          nativeAccountId: u,
        },
        e,
        r
      ),
    v = m.tenantProfiles || [],
    C = l || m.realm;
  if (C && !v.find((b) => b.tenantId === C)) {
    const b = Rv(n, m.localAccountId, C, i);
    v.push(b);
  }
  return (m.tenantProfiles = v), m;
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class dI extends Ov {
  constructor(e, n) {
    var r;
    super(e, n),
      (this.includeRedirectUri = !0),
      (this.oidcDefaultScopes =
        (r = this.config.authOptions.authority.options.OIDCOptions) == null
          ? void 0
          : r.defaultScopes);
  }
  async getAuthCodeUrl(e) {
    var r;
    (r = this.performanceClient) == null ||
      r.addQueueMeasurement(B.GetAuthCodeUrl, e.correlationId);
    const n = await te(
      this.createAuthCodeUrlQueryString.bind(this),
      B.AuthClientCreateQueryString,
      this.logger,
      this.performanceClient,
      e.correlationId
    )(e);
    return De.appendQueryString(this.authority.authorizationEndpoint, n);
  }
  async acquireToken(e, n) {
    var l, c;
    if (
      ((l = this.performanceClient) == null ||
        l.addQueueMeasurement(B.AuthClientAcquireToken, e.correlationId),
      !e.code)
    )
      throw V(A1);
    const r = oi(),
      i = await te(
        this.executeTokenRequest.bind(this),
        B.AuthClientExecuteTokenRequest,
        this.logger,
        this.performanceClient,
        e.correlationId
      )(this.authority, e),
      o = (c = i.headers) == null ? void 0 : c[Xr.X_MS_REQUEST_ID],
      a = new oa(
        this.config.authOptions.clientId,
        this.cacheManager,
        this.cryptoUtils,
        this.logger,
        this.config.serializableCache,
        this.config.persistencePlugin,
        this.performanceClient
      );
    return (
      a.validateTokenResponse(i.body),
      te(
        a.handleServerTokenResponse.bind(a),
        B.HandleServerTokenResponse,
        this.logger,
        this.performanceClient,
        e.correlationId
      )(i.body, this.authority, r, e, n, void 0, void 0, void 0, o)
    );
  }
  handleFragmentResponse(e, n) {
    if (
      (new oa(
        this.config.authOptions.clientId,
        this.cacheManager,
        this.cryptoUtils,
        this.logger,
        null,
        null
      ).validateServerAuthorizationCodeResponse(e, n),
      !e.code)
    )
      throw V(P1);
    return e;
  }
  getLogoutUri(e) {
    if (!e) throw tt(q1);
    const n = this.createLogoutUrlQueryString(e);
    return De.appendQueryString(this.authority.endSessionEndpoint, n);
  }
  async executeTokenRequest(e, n) {
    var u, d;
    (u = this.performanceClient) == null ||
      u.addQueueMeasurement(B.AuthClientExecuteTokenRequest, n.correlationId);
    const r = this.createTokenQueryParameters(n),
      i = De.appendQueryString(e.tokenEndpoint, r),
      o = await te(
        this.createTokenRequestBody.bind(this),
        B.AuthClientCreateTokenRequestBody,
        this.logger,
        this.performanceClient,
        n.correlationId
      )(n);
    let a;
    if (n.clientInfo)
      try {
        const h = nh(n.clientInfo, this.cryptoUtils.base64Decode);
        a = {
          credential: `${h.uid}${pn.CLIENT_INFO_SEPARATOR}${h.utid}`,
          type: zn.HOME_ACCOUNT_ID,
        };
      } catch (h) {
        this.logger.verbose("Could not parse client info for CCS Header: " + h);
      }
    const l = this.createTokenRequestHeaders(a || n.ccsCredential),
      c = {
        clientId:
          ((d = n.tokenBodyParameters) == null ? void 0 : d.clientId) ||
          this.config.authOptions.clientId,
        authority: e.canonicalAuthority,
        scopes: n.scopes,
        claims: n.claims,
        authenticationScheme: n.authenticationScheme,
        resourceRequestMethod: n.resourceRequestMethod,
        resourceRequestUri: n.resourceRequestUri,
        shrClaims: n.shrClaims,
        sshKid: n.sshKid,
      };
    return te(
      this.executePostToTokenEndpoint.bind(this),
      B.AuthorizationCodeClientExecutePostToTokenEndpoint,
      this.logger,
      this.performanceClient,
      n.correlationId
    )(
      i,
      o,
      l,
      c,
      n.correlationId,
      B.AuthorizationCodeClientExecutePostToTokenEndpoint
    );
  }
  async createTokenRequestBody(e) {
    var o, a;
    (o = this.performanceClient) == null ||
      o.addQueueMeasurement(
        B.AuthClientCreateTokenRequestBody,
        e.correlationId
      );
    const n = new Ul();
    if (
      (n.addClientId(
        ((a = e.tokenBodyParameters) == null ? void 0 : a[Is]) ||
          this.config.authOptions.clientId
      ),
      this.includeRedirectUri
        ? n.addRedirectUri(e.redirectUri)
        : Ua.validateRedirectUri(e.redirectUri),
      n.addScopes(e.scopes, !0, this.oidcDefaultScopes),
      n.addAuthorizationCode(e.code),
      n.addLibraryInfo(this.config.libraryInfo),
      n.addApplicationTelemetry(this.config.telemetry.application),
      n.addThrottling(),
      this.serverTelemetryManager &&
        !Zm(this.config) &&
        n.addServerTelemetry(this.serverTelemetryManager),
      e.codeVerifier && n.addCodeVerifier(e.codeVerifier),
      this.config.clientCredentials.clientSecret &&
        n.addClientSecret(this.config.clientCredentials.clientSecret),
      this.config.clientCredentials.clientAssertion)
    ) {
      const l = this.config.clientCredentials.clientAssertion;
      n.addClientAssertion(
        await oI(
          l.assertion,
          this.config.authOptions.clientId,
          e.resourceRequestUri
        )
      ),
        n.addClientAssertionType(l.assertionType);
    }
    if (
      (n.addGrantType(b1.AUTHORIZATION_CODE_GRANT),
      n.addClientInfo(),
      e.authenticationScheme === Ze.POP)
    ) {
      const l = new ks(this.cryptoUtils, this.performanceClient);
      let c;
      e.popKid
        ? (c = this.cryptoUtils.encodeKid(e.popKid))
        : (c = (
            await te(
              l.generateCnf.bind(l),
              B.PopTokenGenerateCnf,
              this.logger,
              this.performanceClient,
              e.correlationId
            )(e, this.logger)
          ).reqCnfString),
        n.addPopToken(c);
    } else if (e.authenticationScheme === Ze.SSH)
      if (e.sshJwk) n.addSshJwk(e.sshJwk);
      else throw tt(Xh);
    const r = e.correlationId || this.config.cryptoInterface.createNewGuid();
    n.addCorrelationId(r),
      (!Nr.isEmptyObj(e.claims) ||
        (this.config.authOptions.clientCapabilities &&
          this.config.authOptions.clientCapabilities.length > 0)) &&
        n.addClaims(e.claims, this.config.authOptions.clientCapabilities);
    let i;
    if (e.clientInfo)
      try {
        const l = nh(e.clientInfo, this.cryptoUtils.base64Decode);
        i = {
          credential: `${l.uid}${pn.CLIENT_INFO_SEPARATOR}${l.utid}`,
          type: zn.HOME_ACCOUNT_ID,
        };
      } catch (l) {
        this.logger.verbose("Could not parse client info for CCS Header: " + l);
      }
    else i = e.ccsCredential;
    if (this.config.systemOptions.preventCorsPreflight && i)
      switch (i.type) {
        case zn.HOME_ACCOUNT_ID:
          try {
            const l = rs(i.credential);
            n.addCcsOid(l);
          } catch (l) {
            this.logger.verbose(
              "Could not parse home account ID for CCS Header: " + l
            );
          }
          break;
        case zn.UPN:
          n.addCcsUpn(i.credential);
          break;
      }
    return (
      e.tokenBodyParameters && n.addExtraQueryParameters(e.tokenBodyParameters),
      e.enableSpaAuthorizationCode &&
        (!e.tokenBodyParameters || !e.tokenBodyParameters[f0]) &&
        n.addExtraQueryParameters({ [f0]: "1" }),
      n.createQueryString()
    );
  }
  async createAuthCodeUrlQueryString(e) {
    var o, a;
    (o = this.performanceClient) == null ||
      o.addQueueMeasurement(B.AuthClientCreateQueryString, e.correlationId);
    const n = new Ul();
    n.addClientId(
      ((a = e.extraQueryParameters) == null ? void 0 : a[Is]) ||
        this.config.authOptions.clientId
    );
    const r = [...(e.scopes || []), ...(e.extraScopesToConsent || [])];
    n.addScopes(r, !0, this.oidcDefaultScopes), n.addRedirectUri(e.redirectUri);
    const i = e.correlationId || this.config.cryptoInterface.createNewGuid();
    if (
      (n.addCorrelationId(i),
      n.addResponseMode(e.responseMode),
      n.addResponseTypeCode(),
      n.addLibraryInfo(this.config.libraryInfo),
      Zm(this.config) ||
        n.addApplicationTelemetry(this.config.telemetry.application),
      n.addClientInfo(),
      e.codeChallenge &&
        e.codeChallengeMethod &&
        n.addCodeChallengeParams(e.codeChallenge, e.codeChallengeMethod),
      e.prompt && n.addPrompt(e.prompt),
      e.domainHint && n.addDomainHint(e.domainHint),
      e.prompt !== Yt.SELECT_ACCOUNT)
    )
      if (e.sid && e.prompt === Yt.NONE)
        this.logger.verbose(
          "createAuthCodeUrlQueryString: Prompt is none, adding sid from request"
        ),
          n.addSid(e.sid);
      else if (e.account) {
        const l = this.extractAccountSid(e.account);
        let c = this.extractLoginHint(e.account);
        if (
          (c &&
            e.domainHint &&
            (this.logger.warning(
              'AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'
            ),
            (c = null)),
          c)
        ) {
          this.logger.verbose(
            "createAuthCodeUrlQueryString: login_hint claim present on account"
          ),
            n.addLoginHint(c);
          try {
            const u = rs(e.account.homeAccountId);
            n.addCcsOid(u);
          } catch {
            this.logger.verbose(
              "createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header"
            );
          }
        } else if (l && e.prompt === Yt.NONE) {
          this.logger.verbose(
            "createAuthCodeUrlQueryString: Prompt is none, adding sid from account"
          ),
            n.addSid(l);
          try {
            const u = rs(e.account.homeAccountId);
            n.addCcsOid(u);
          } catch {
            this.logger.verbose(
              "createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header"
            );
          }
        } else if (e.loginHint)
          this.logger.verbose(
            "createAuthCodeUrlQueryString: Adding login_hint from request"
          ),
            n.addLoginHint(e.loginHint),
            n.addCcsUpn(e.loginHint);
        else if (e.account.username) {
          this.logger.verbose(
            "createAuthCodeUrlQueryString: Adding login_hint from account"
          ),
            n.addLoginHint(e.account.username);
          try {
            const u = rs(e.account.homeAccountId);
            n.addCcsOid(u);
          } catch {
            this.logger.verbose(
              "createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header"
            );
          }
        }
      } else
        e.loginHint &&
          (this.logger.verbose(
            "createAuthCodeUrlQueryString: No account, adding login_hint from request"
          ),
          n.addLoginHint(e.loginHint),
          n.addCcsUpn(e.loginHint));
    else
      this.logger.verbose(
        "createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints"
      );
    if (
      (e.nonce && n.addNonce(e.nonce),
      e.state && n.addState(e.state),
      (e.claims ||
        (this.config.authOptions.clientCapabilities &&
          this.config.authOptions.clientCapabilities.length > 0)) &&
        n.addClaims(e.claims, this.config.authOptions.clientCapabilities),
      e.extraQueryParameters &&
        n.addExtraQueryParameters(e.extraQueryParameters),
      e.nativeBroker &&
        (n.addNativeBroker(), e.authenticationScheme === Ze.POP))
    ) {
      const l = new ks(this.cryptoUtils);
      let c;
      e.popKid
        ? (c = this.cryptoUtils.encodeKid(e.popKid))
        : (c = (
            await te(
              l.generateCnf.bind(l),
              B.PopTokenGenerateCnf,
              this.logger,
              this.performanceClient,
              e.correlationId
            )(e, this.logger)
          ).reqCnfString),
        n.addPopToken(c);
    }
    return n.createQueryString();
  }
  createLogoutUrlQueryString(e) {
    const n = new Ul();
    return (
      e.postLogoutRedirectUri &&
        n.addPostLogoutRedirectUri(e.postLogoutRedirectUri),
      e.correlationId && n.addCorrelationId(e.correlationId),
      e.idTokenHint && n.addIdTokenHint(e.idTokenHint),
      e.state && n.addState(e.state),
      e.logoutHint && n.addLogoutHint(e.logoutHint),
      e.extraQueryParameters &&
        n.addExtraQueryParameters(e.extraQueryParameters),
      n.createQueryString()
    );
  }
  extractAccountSid(e) {
    var n;
    return ((n = e.idTokenClaims) == null ? void 0 : n.sid) || null;
  }
  extractLoginHint(e) {
    var n;
    return ((n = e.idTokenClaims) == null ? void 0 : n.login_hint) || null;
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const o_ = 300;
class tg extends Ov {
  constructor(e, n) {
    super(e, n);
  }
  async acquireToken(e) {
    var a, l;
    (a = this.performanceClient) == null ||
      a.addQueueMeasurement(B.RefreshTokenClientAcquireToken, e.correlationId);
    const n = oi(),
      r = await te(
        this.executeTokenRequest.bind(this),
        B.RefreshTokenClientExecuteTokenRequest,
        this.logger,
        this.performanceClient,
        e.correlationId
      )(e, this.authority),
      i = (l = r.headers) == null ? void 0 : l[Xr.X_MS_REQUEST_ID],
      o = new oa(
        this.config.authOptions.clientId,
        this.cacheManager,
        this.cryptoUtils,
        this.logger,
        this.config.serializableCache,
        this.config.persistencePlugin
      );
    return (
      o.validateTokenResponse(r.body),
      te(
        o.handleServerTokenResponse.bind(o),
        B.HandleServerTokenResponse,
        this.logger,
        this.performanceClient,
        e.correlationId
      )(r.body, this.authority, n, e, void 0, void 0, !0, e.forceCache, i)
    );
  }
  async acquireTokenByRefreshToken(e) {
    var r;
    if (!e) throw tt(K1);
    if (
      ((r = this.performanceClient) == null ||
        r.addQueueMeasurement(
          B.RefreshTokenClientAcquireTokenByRefreshToken,
          e.correlationId
        ),
      !e.account)
    )
      throw V(vv);
    if (this.cacheManager.isAppMetadataFOCI(e.account.environment))
      try {
        return await te(
          this.acquireTokenWithCachedRefreshToken.bind(this),
          B.RefreshTokenClientAcquireTokenWithCachedRefreshToken,
          this.logger,
          this.performanceClient,
          e.correlationId
        )(e, !0);
      } catch (i) {
        const o = i instanceof jr && i.errorCode === ih,
          a =
            i instanceof Eo &&
            i.errorCode === Zw.INVALID_GRANT_ERROR &&
            i.subError === Zw.CLIENT_MISMATCH_ERROR;
        if (o || a)
          return te(
            this.acquireTokenWithCachedRefreshToken.bind(this),
            B.RefreshTokenClientAcquireTokenWithCachedRefreshToken,
            this.logger,
            this.performanceClient,
            e.correlationId
          )(e, !1);
        throw i;
      }
    return te(
      this.acquireTokenWithCachedRefreshToken.bind(this),
      B.RefreshTokenClientAcquireTokenWithCachedRefreshToken,
      this.logger,
      this.performanceClient,
      e.correlationId
    )(e, !1);
  }
  async acquireTokenWithCachedRefreshToken(e, n) {
    var o;
    (o = this.performanceClient) == null ||
      o.addQueueMeasurement(
        B.RefreshTokenClientAcquireTokenWithCachedRefreshToken,
        e.correlationId
      );
    const r = ba(
      this.cacheManager.getRefreshToken.bind(this.cacheManager),
      B.CacheManagerGetRefreshToken,
      this.logger,
      this.performanceClient,
      e.correlationId
    )(e.account, n, void 0, this.performanceClient, e.correlationId);
    if (!r) throw eg(ih);
    if (
      r.expiresOn &&
      Jm(r.expiresOn, e.refreshTokenExpirationOffsetSeconds || o_)
    )
      throw eg(Dv);
    const i = {
      ...e,
      refreshToken: r.secret,
      authenticationScheme: e.authenticationScheme || Ze.BEARER,
      ccsCredential: {
        credential: e.account.homeAccountId,
        type: zn.HOME_ACCOUNT_ID,
      },
    };
    try {
      return await te(
        this.acquireToken.bind(this),
        B.RefreshTokenClientAcquireToken,
        this.logger,
        this.performanceClient,
        e.correlationId
      )(i);
    } catch (a) {
      if (a instanceof jr && a.subError === tf) {
        this.logger.verbose(
          "acquireTokenWithRefreshToken: bad refresh token, removing from cache"
        );
        const l = ns(r);
        this.cacheManager.removeRefreshToken(l);
      }
      throw a;
    }
  }
  async executeTokenRequest(e, n) {
    var c, u;
    (c = this.performanceClient) == null ||
      c.addQueueMeasurement(
        B.RefreshTokenClientExecuteTokenRequest,
        e.correlationId
      );
    const r = this.createTokenQueryParameters(e),
      i = De.appendQueryString(n.tokenEndpoint, r),
      o = await te(
        this.createTokenRequestBody.bind(this),
        B.RefreshTokenClientCreateTokenRequestBody,
        this.logger,
        this.performanceClient,
        e.correlationId
      )(e),
      a = this.createTokenRequestHeaders(e.ccsCredential),
      l = {
        clientId:
          ((u = e.tokenBodyParameters) == null ? void 0 : u.clientId) ||
          this.config.authOptions.clientId,
        authority: n.canonicalAuthority,
        scopes: e.scopes,
        claims: e.claims,
        authenticationScheme: e.authenticationScheme,
        resourceRequestMethod: e.resourceRequestMethod,
        resourceRequestUri: e.resourceRequestUri,
        shrClaims: e.shrClaims,
        sshKid: e.sshKid,
      };
    return te(
      this.executePostToTokenEndpoint.bind(this),
      B.RefreshTokenClientExecutePostToTokenEndpoint,
      this.logger,
      this.performanceClient,
      e.correlationId
    )(
      i,
      o,
      a,
      l,
      e.correlationId,
      B.RefreshTokenClientExecutePostToTokenEndpoint
    );
  }
  async createTokenRequestBody(e) {
    var i, o, a;
    (i = this.performanceClient) == null ||
      i.addQueueMeasurement(
        B.RefreshTokenClientCreateTokenRequestBody,
        e.correlationId
      );
    const n = e.correlationId,
      r = new Ul();
    if (
      (r.addClientId(
        ((o = e.tokenBodyParameters) == null ? void 0 : o[Is]) ||
          this.config.authOptions.clientId
      ),
      e.redirectUri && r.addRedirectUri(e.redirectUri),
      r.addScopes(
        e.scopes,
        !0,
        (a = this.config.authOptions.authority.options.OIDCOptions) == null
          ? void 0
          : a.defaultScopes
      ),
      r.addGrantType(b1.REFRESH_TOKEN_GRANT),
      r.addClientInfo(),
      r.addLibraryInfo(this.config.libraryInfo),
      r.addApplicationTelemetry(this.config.telemetry.application),
      r.addThrottling(),
      this.serverTelemetryManager &&
        !Zm(this.config) &&
        r.addServerTelemetry(this.serverTelemetryManager),
      r.addCorrelationId(n),
      r.addRefreshToken(e.refreshToken),
      this.config.clientCredentials.clientSecret &&
        r.addClientSecret(this.config.clientCredentials.clientSecret),
      this.config.clientCredentials.clientAssertion)
    ) {
      const l = this.config.clientCredentials.clientAssertion;
      r.addClientAssertion(
        await oI(
          l.assertion,
          this.config.authOptions.clientId,
          e.resourceRequestUri
        )
      ),
        r.addClientAssertionType(l.assertionType);
    }
    if (e.authenticationScheme === Ze.POP) {
      const l = new ks(this.cryptoUtils, this.performanceClient);
      let c;
      e.popKid
        ? (c = this.cryptoUtils.encodeKid(e.popKid))
        : (c = (
            await te(
              l.generateCnf.bind(l),
              B.PopTokenGenerateCnf,
              this.logger,
              this.performanceClient,
              e.correlationId
            )(e, this.logger)
          ).reqCnfString),
        r.addPopToken(c);
    } else if (e.authenticationScheme === Ze.SSH)
      if (e.sshJwk) r.addSshJwk(e.sshJwk);
      else throw tt(Xh);
    if (
      ((!Nr.isEmptyObj(e.claims) ||
        (this.config.authOptions.clientCapabilities &&
          this.config.authOptions.clientCapabilities.length > 0)) &&
        r.addClaims(e.claims, this.config.authOptions.clientCapabilities),
      this.config.systemOptions.preventCorsPreflight && e.ccsCredential)
    )
      switch (e.ccsCredential.type) {
        case zn.HOME_ACCOUNT_ID:
          try {
            const l = rs(e.ccsCredential.credential);
            r.addCcsOid(l);
          } catch (l) {
            this.logger.verbose(
              "Could not parse home account ID for CCS Header: " + l
            );
          }
          break;
        case zn.UPN:
          r.addCcsUpn(e.ccsCredential.credential);
          break;
      }
    return (
      e.tokenBodyParameters && r.addExtraQueryParameters(e.tokenBodyParameters),
      r.createQueryString()
    );
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class a_ extends Ov {
  constructor(e, n) {
    super(e, n);
  }
  async acquireToken(e) {
    var n;
    try {
      const [r, i] = await this.acquireCachedToken({
        ...e,
        scopes: (n = e.scopes) != null && n.length ? e.scopes : [...Ks],
      });
      return (
        i === to.PROACTIVELY_REFRESHED &&
          (this.logger.info(
            "SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."
          ),
          new tg(this.config, this.performanceClient)
            .acquireTokenByRefreshToken(e)
            .catch(() => {})),
        r
      );
    } catch (r) {
      if (r instanceof Yh && r.errorCode === Ii)
        return new tg(
          this.config,
          this.performanceClient
        ).acquireTokenByRefreshToken(e);
      throw r;
    }
  }
  async acquireCachedToken(e) {
    var c;
    (c = this.performanceClient) == null ||
      c.addQueueMeasurement(
        B.SilentFlowClientAcquireCachedToken,
        e.correlationId
      );
    let n = to.NOT_APPLICABLE;
    if (
      e.forceRefresh ||
      (!this.config.cacheOptions.claimsBasedCachingEnabled &&
        !Nr.isEmptyObj(e.claims))
    )
      throw (
        (this.setCacheOutcome(to.FORCE_REFRESH_OR_CLAIMS, e.correlationId),
        V(Ii))
      );
    if (!e.account) throw V(vv);
    const r = e.account.tenantId || tP(e.authority),
      i = this.cacheManager.getTokenKeys(),
      o = this.cacheManager.getAccessToken(
        e.account,
        e,
        i,
        r,
        this.performanceClient,
        e.correlationId
      );
    if (o) {
      if (
        KL(o.cachedAt) ||
        Jm(o.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)
      )
        throw (
          (this.setCacheOutcome(
            to.CACHED_ACCESS_TOKEN_EXPIRED,
            e.correlationId
          ),
          V(Ii))
        );
      o.refreshOn && Jm(o.refreshOn, 0) && (n = to.PROACTIVELY_REFRESHED);
    } else
      throw (
        (this.setCacheOutcome(to.NO_CACHED_ACCESS_TOKEN, e.correlationId),
        V(Ii))
      );
    const a = e.authority || this.authority.getPreferredCache(),
      l = {
        account: this.cacheManager.readAccountFromCache(e.account),
        accessToken: o,
        idToken: this.cacheManager.getIdToken(
          e.account,
          i,
          r,
          this.performanceClient,
          e.correlationId
        ),
        refreshToken: null,
        appMetadata: this.cacheManager.readAppMetadataFromCache(a),
      };
    return (
      this.setCacheOutcome(n, e.correlationId),
      this.config.serverTelemetryManager &&
        this.config.serverTelemetryManager.incrementCacheHits(),
      [
        await te(
          this.generateResultFromCacheRecord.bind(this),
          B.SilentFlowClientGenerateResultFromCacheRecord,
          this.logger,
          this.performanceClient,
          e.correlationId
        )(l, e),
        n,
      ]
    );
  }
  setCacheOutcome(e, n) {
    var r, i;
    (r = this.serverTelemetryManager) == null || r.setCacheOutcome(e),
      (i = this.performanceClient) == null ||
        i.addFields({ cacheOutcome: e }, n),
      e !== to.NOT_APPLICABLE &&
        this.logger.info(
          `Token refresh is required due to cache outcome: ${e}`
        );
  }
  async generateResultFromCacheRecord(e, n) {
    var i;
    (i = this.performanceClient) == null ||
      i.addQueueMeasurement(
        B.SilentFlowClientGenerateResultFromCacheRecord,
        n.correlationId
      );
    let r;
    if (
      (e.idToken &&
        (r = va(e.idToken.secret, this.config.cryptoInterface.base64Decode)),
      n.maxAge || n.maxAge === 0)
    ) {
      const o = r == null ? void 0 : r.auth_time;
      if (!o) throw V(yv);
      F1(o, n.maxAge);
    }
    return oa.generateAuthenticationResult(
      this.cryptoUtils,
      this.authority,
      e,
      !0,
      n,
      r
    );
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const s_ = {
  sendGetRequestAsync: () => Promise.reject(V(ke)),
  sendPostRequestAsync: () => Promise.reject(V(ke)),
};
/*! @azure/msal-common v14.14.0 2024-07-23 */ const hI = "missing_kid_error",
  fI = "missing_alg_error";
/*! @azure/msal-common v14.14.0 2024-07-23 */ const l_ = {
  [hI]: "The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",
  [fI]: "The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.",
};
class Pv extends Nt {
  constructor(e, n) {
    super(e, n),
      (this.name = "JoseHeaderError"),
      Object.setPrototypeOf(this, Pv.prototype);
  }
}
function g0(t) {
  return new Pv(t, l_[t]);
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class _v {
  constructor(e) {
    (this.typ = e.typ), (this.alg = e.alg), (this.kid = e.kid);
  }
  static getShrHeaderString(e) {
    if (!e.kid) throw g0(hI);
    if (!e.alg) throw g0(fI);
    const n = new _v({ typ: e.typ || vL.Pop, kid: e.kid, alg: e.alg });
    return JSON.stringify(n);
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ const y0 = ",",
  pI = "|";
function c_(t) {
  const {
      skus: e,
      libraryName: n,
      libraryVersion: r,
      extensionName: i,
      extensionVersion: o,
    } = t,
    a = new Map([
      [0, [n, r]],
      [2, [i, o]],
    ]);
  let l = [];
  if (e != null && e.length) {
    if (((l = e.split(y0)), l.length < 4)) return e;
  } else l = Array.from({ length: 4 }, () => pI);
  return (
    a.forEach((c, u) => {
      var d, h;
      c.length === 2 &&
        (d = c[0]) != null &&
        d.length &&
        (h = c[1]) != null &&
        h.length &&
        u_({ skuArr: l, index: u, skuName: c[0], skuVersion: c[1] });
    }),
    l.join(y0)
  );
}
function u_(t) {
  const { skuArr: e, index: n, skuName: r, skuVersion: i } = t;
  n >= e.length || (e[n] = [r, i].join(pI));
}
class dc {
  constructor(e, n) {
    (this.cacheOutcome = to.NOT_APPLICABLE),
      (this.cacheManager = n),
      (this.apiId = e.apiId),
      (this.correlationId = e.correlationId),
      (this.wrapperSKU = e.wrapperSKU || H.EMPTY_STRING),
      (this.wrapperVer = e.wrapperVer || H.EMPTY_STRING),
      (this.telemetryCacheKey =
        en.CACHE_KEY + pn.CACHE_KEY_SEPARATOR + e.clientId);
  }
  generateCurrentRequestHeaderValue() {
    const e = `${this.apiId}${en.VALUE_SEPARATOR}${this.cacheOutcome}`,
      n = [this.wrapperSKU, this.wrapperVer],
      r = this.getNativeBrokerErrorCode();
    r != null && r.length && n.push(`broker_error=${r}`);
    const i = n.join(en.VALUE_SEPARATOR),
      o = this.getRegionDiscoveryFields(),
      a = [e, o].join(en.VALUE_SEPARATOR);
    return [en.SCHEMA_VERSION, a, i].join(en.CATEGORY_SEPARATOR);
  }
  generateLastRequestHeaderValue() {
    const e = this.getLastRequests(),
      n = dc.maxErrorsToSend(e),
      r = e.failedRequests.slice(0, 2 * n).join(en.VALUE_SEPARATOR),
      i = e.errors.slice(0, n).join(en.VALUE_SEPARATOR),
      o = e.errors.length,
      a = n < o ? en.OVERFLOW_TRUE : en.OVERFLOW_FALSE,
      l = [o, a].join(en.VALUE_SEPARATOR);
    return [en.SCHEMA_VERSION, e.cacheHits, r, i, l].join(
      en.CATEGORY_SEPARATOR
    );
  }
  cacheFailedRequest(e) {
    const n = this.getLastRequests();
    n.errors.length >= en.MAX_CACHED_ERRORS &&
      (n.failedRequests.shift(), n.failedRequests.shift(), n.errors.shift()),
      n.failedRequests.push(this.apiId, this.correlationId),
      e instanceof Error && e && e.toString()
        ? e instanceof Nt
          ? e.subError
            ? n.errors.push(e.subError)
            : e.errorCode
            ? n.errors.push(e.errorCode)
            : n.errors.push(e.toString())
          : n.errors.push(e.toString())
        : n.errors.push(en.UNKNOWN_ERROR),
      this.cacheManager.setServerTelemetry(this.telemetryCacheKey, n);
  }
  incrementCacheHits() {
    const e = this.getLastRequests();
    return (
      (e.cacheHits += 1),
      this.cacheManager.setServerTelemetry(this.telemetryCacheKey, e),
      e.cacheHits
    );
  }
  getLastRequests() {
    const e = { failedRequests: [], errors: [], cacheHits: 0 };
    return this.cacheManager.getServerTelemetry(this.telemetryCacheKey) || e;
  }
  clearTelemetryCache() {
    const e = this.getLastRequests(),
      n = dc.maxErrorsToSend(e),
      r = e.errors.length;
    if (n === r) this.cacheManager.removeItem(this.telemetryCacheKey);
    else {
      const i = {
        failedRequests: e.failedRequests.slice(n * 2),
        errors: e.errors.slice(n),
        cacheHits: 0,
      };
      this.cacheManager.setServerTelemetry(this.telemetryCacheKey, i);
    }
  }
  static maxErrorsToSend(e) {
    let n,
      r = 0,
      i = 0;
    const o = e.errors.length;
    for (n = 0; n < o; n++) {
      const a = e.failedRequests[2 * n] || H.EMPTY_STRING,
        l = e.failedRequests[2 * n + 1] || H.EMPTY_STRING,
        c = e.errors[n] || H.EMPTY_STRING;
      if (
        ((i += a.toString().length + l.toString().length + c.length + 3),
        i < en.MAX_LAST_HEADER_BYTES)
      )
        r += 1;
      else break;
    }
    return r;
  }
  getRegionDiscoveryFields() {
    const e = [];
    return (
      e.push(this.regionUsed || H.EMPTY_STRING),
      e.push(this.regionSource || H.EMPTY_STRING),
      e.push(this.regionOutcome || H.EMPTY_STRING),
      e.join(",")
    );
  }
  updateRegionDiscoveryMetadata(e) {
    (this.regionUsed = e.region_used),
      (this.regionSource = e.region_source),
      (this.regionOutcome = e.region_outcome);
  }
  setCacheOutcome(e) {
    this.cacheOutcome = e;
  }
  setNativeBrokerErrorCode(e) {
    const n = this.getLastRequests();
    (n.nativeBrokerErrorCode = e),
      this.cacheManager.setServerTelemetry(this.telemetryCacheKey, n);
  }
  getNativeBrokerErrorCode() {
    return this.getLastRequests().nativeBrokerErrorCode;
  }
  clearNativeBrokerErrorCode() {
    const e = this.getLastRequests();
    delete e.nativeBrokerErrorCode,
      this.cacheManager.setServerTelemetry(this.telemetryCacheKey, e);
  }
  static makeExtraSkuString(e) {
    return c_(e);
  }
}
/*! @azure/msal-common v14.14.0 2024-07-23 */ class v0 {
  startMeasurement() {}
  endMeasurement() {}
  flushMeasurement() {
    return null;
  }
}
class d_ {
  generateId() {
    return "callback-id";
  }
  startMeasurement(e, n) {
    return {
      end: () => null,
      discard: () => {},
      add: () => {},
      increment: () => {},
      event: {
        eventId: this.generateId(),
        status: $L.InProgress,
        authority: "",
        libraryName: "",
        libraryVersion: "",
        clientId: "",
        name: e,
        startTimeMs: Date.now(),
        correlationId: n || "",
      },
      measurement: new v0(),
    };
  }
  startPerformanceMeasurement() {
    return new v0();
  }
  calculateQueuedTime() {
    return 0;
  }
  addQueueMeasurement() {}
  setPreQueueTime() {}
  endMeasurement() {
    return null;
  }
  discardMeasurements() {}
  removePerformanceCallback() {
    return !0;
  }
  addPerformanceCallback() {
    return "";
  }
  emitEvents() {}
  addFields() {}
  incrementFields() {}
  cacheEventByCorrelationId() {}
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const Mv = "pkce_not_created",
  mI = "crypto_nonexistent",
  nf = "empty_navigate_uri",
  gI = "hash_empty_error",
  Fv = "no_state_in_hash",
  yI = "hash_does_not_contain_known_properties",
  vI = "unable_to_parse_state",
  bI = "state_interaction_type_mismatch",
  CI = "interaction_in_progress",
  wI = "popup_window_error",
  SI = "empty_window_error",
  aa = "user_cancelled",
  h_ = "monitor_popup_timeout",
  xI = "monitor_window_timeout",
  EI = "redirect_in_iframe",
  TI = "block_iframe_reload",
  II = "block_nested_popups",
  f_ = "iframe_closed_prematurely",
  rf = "silent_logout_unsupported",
  NI = "no_account_error",
  p_ = "silent_prompt_value_error",
  kI = "no_token_request_cache_error",
  RI = "unable_to_parse_token_request_cache_error",
  Bv = "no_cached_authority_error",
  m_ = "auth_request_not_set_error",
  g_ = "invalid_cache_type",
  Uv = "non_browser_environment",
  za = "database_not_open",
  oh = "no_network_connectivity",
  AI = "post_request_failed",
  jI = "get_request_failed",
  ng = "failed_to_parse_response",
  OI = "unable_to_load_token",
  zv = "crypto_key_not_found",
  DI = "auth_code_required",
  LI = "auth_code_or_nativeAccountId_required",
  PI = "spa_code_and_nativeAccountId_present",
  Hv = "database_unavailable",
  _I = "unable_to_acquire_token_from_native_platform",
  MI = "native_handshake_timeout",
  FI = "native_extension_not_installed",
  Pc = "native_connection_not_established",
  BI = "uninitialized_public_client_application",
  UI = "native_prompt_not_supported",
  zI = "invalid_base64_string",
  HI = "invalid_pop_token_request";
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const gi =
    "For more visit: aka.ms/msaljs/browser-errors",
  y_ = {
    [Mv]: "The PKCE code challenge and verifier could not be generated.",
    [mI]: "The crypto object or function is not available.",
    [nf]: "Navigation URI is empty. Please check stack trace for more info.",
    [gI]: `Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${gi}`,
    [Fv]: "Hash does not contain state. Please verify that the request originated from msal.",
    [yI]: `Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${gi}`,
    [vI]: "Unable to parse state. Please verify that the request originated from msal.",
    [bI]: "Hash contains state but the interaction type does not match the caller.",
    [CI]: `Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${gi}`,
    [wI]: "Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",
    [SI]: "window.open returned null or undefined window object.",
    [aa]: "User cancelled the flow.",
    [h_]: `Token acquisition in popup failed due to timeout.  ${gi}`,
    [xI]: `Token acquisition in iframe failed due to timeout.  ${gi}`,
    [EI]: "Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",
    [TI]: `Request was blocked inside an iframe because MSAL detected an authentication response.  ${gi}`,
    [II]: "Request was blocked inside a popup because MSAL detected it was running in a popup.",
    [f_]: "The iframe being monitored was closed prematurely.",
    [rf]: "Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",
    [NI]: "No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",
    [p_]: "The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",
    [kI]: "No token request found in cache.",
    [RI]: "The cached token request could not be parsed.",
    [Bv]: "No cached authority found.",
    [m_]: "Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",
    [g_]: "Invalid cache type",
    [Uv]: "Login and token requests are not supported in non-browser environments.",
    [za]: "Database is not open!",
    [oh]: "No network connectivity. Check your internet connection.",
    [AI]: "Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",
    [jI]: "Network request failed. Please check the network trace to determine root cause.",
    [ng]: "Failed to parse network response. Check network trace.",
    [OI]: "Error loading token to cache.",
    [zv]: "Cryptographic Key or Keypair not found in browser storage.",
    [DI]: "An authorization code must be provided (as the `code` property on the request) to this flow.",
    [LI]: "An authorization code or nativeAccountId must be provided to this flow.",
    [PI]: "Request cannot contain both spa code and native account id.",
    [Hv]: "IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",
    [_I]: `Unable to acquire token from native platform.  ${gi}`,
    [MI]: "Timed out while attempting to establish connection to browser extension",
    [FI]: "Native extension is not installed. If you think this is a mistake call the initialize function.",
    [Pc]: `Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${gi}`,
    [BI]: `You must call and await the initialize function before attempting to call any other MSAL API.  ${gi}`,
    [UI]: "The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",
    [zI]: "Invalid base64 encoded string.",
    [HI]: "Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.",
  };
class _c extends Nt {
  constructor(e) {
    super(e, y_[e]),
      Object.setPrototypeOf(this, _c.prototype),
      (this.name = "BrowserAuthError");
  }
}
function he(t) {
  return new _c(t);
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const nr = {
    INTERACTION_IN_PROGRESS_VALUE: "interaction_in_progress",
    INVALID_GRANT_ERROR: "invalid_grant",
    POPUP_WIDTH: 483,
    POPUP_HEIGHT: 600,
    POPUP_NAME_PREFIX: "msal",
    DEFAULT_POLL_INTERVAL_MS: 30,
    MSAL_SKU: "msal.js.browser",
  },
  is = {
    CHANNEL_ID: "53ee284d-920a-4b59-9d30-a60315b26836",
    PREFERRED_EXTENSION_ID: "ppnbnpeolgkicgegkbkbjmhlideopiji",
    MATS_TELEMETRY: "MATS",
  },
  qo = {
    HandshakeRequest: "Handshake",
    HandshakeResponse: "HandshakeResponse",
    GetToken: "GetToken",
    Response: "Response",
  },
  Ht = {
    LocalStorage: "localStorage",
    SessionStorage: "sessionStorage",
    MemoryStorage: "memoryStorage",
  },
  b0 = { GET: "GET", POST: "POST" },
  Ke = {
    AUTHORITY: "authority",
    ACQUIRE_TOKEN_ACCOUNT: "acquireToken.account",
    SESSION_STATE: "session.state",
    REQUEST_STATE: "request.state",
    NONCE_IDTOKEN: "nonce.id_token",
    ORIGIN_URI: "request.origin",
    RENEW_STATUS: "token.renew.status",
    URL_HASH: "urlHash",
    REQUEST_PARAMS: "request.params",
    SCOPES: "scopes",
    INTERACTION_STATUS_KEY: "interaction.status",
    CCS_CREDENTIAL: "ccs.credential",
    CORRELATION_ID: "request.correlationId",
    NATIVE_REQUEST: "request.native",
    REDIRECT_CONTEXT: "request.redirect.context",
  },
  Xi = { ACCOUNT_KEYS: "msal.account.keys", TOKEN_KEYS: "msal.token.keys" },
  ku = { WRAPPER_SKU: "wrapper.sku", WRAPPER_VER: "wrapper.version" },
  ut = {
    acquireTokenRedirect: 861,
    acquireTokenPopup: 862,
    ssoSilent: 863,
    acquireTokenSilent_authCode: 864,
    handleRedirectPromise: 865,
    acquireTokenByCode: 866,
    acquireTokenSilent_silentFlow: 61,
    logout: 961,
    logoutPopup: 962,
  };
var ye;
(function (t) {
  (t.Redirect = "redirect"),
    (t.Popup = "popup"),
    (t.Silent = "silent"),
    (t.None = "none");
})(ye || (ye = {}));
const Et = {
    Startup: "startup",
    Login: "login",
    Logout: "logout",
    AcquireToken: "acquireToken",
    SsoSilent: "ssoSilent",
    HandleRedirect: "handleRedirect",
    None: "none",
  },
  C0 = { scopes: Ks },
  $I = "jwk",
  v_ = { React: "@azure/msal-react", Angular: "@azure/msal-angular" },
  rg = "msal.db",
  b_ = 1,
  C_ = `${rg}.keys`,
  Mn = {
    Default: 0,
    AccessToken: 1,
    AccessTokenAndRefreshToken: 2,
    RefreshToken: 3,
    RefreshTokenAndNetwork: 4,
    Skip: 5,
  },
  w_ = [Mn.Default, Mn.Skip, Mn.RefreshTokenAndNetwork],
  S_ = "msal.browser.log.level",
  x_ = "msal.browser.log.pii";
/*! @azure/msal-browser v3.20.0 2024-07-23 */ function Ru(t) {
  return encodeURIComponent(
    $v(t).replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_")
  );
}
function of(t) {
  return KI(t).replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
}
function $v(t) {
  return KI(new TextEncoder().encode(t));
}
function KI(t) {
  const e = Array.from(t, (n) => String.fromCodePoint(n)).join("");
  return btoa(e);
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const E_ = "RSASSA-PKCS1-v1_5",
  qI = "SHA-256",
  T_ = 2048,
  I_ = new Uint8Array([1, 0, 1]),
  w0 = "0123456789abcdef",
  S0 = new Uint32Array(1),
  Kv = { name: E_, hash: qI, modulusLength: T_, publicExponent: I_ };
function N_(t) {
  if ("crypto" in window)
    t.verbose("BrowserCrypto: modern crypto interface available");
  else
    throw (t.error("BrowserCrypto: crypto interface is unavailable"), he(mI));
}
async function GI(t, e, n) {
  e == null || e.addQueueMeasurement(B.Sha256Digest, n);
  const i = new TextEncoder().encode(t);
  return window.crypto.subtle.digest(qI, i);
}
function k_(t) {
  return window.crypto.getRandomValues(t);
}
function yp() {
  return window.crypto.getRandomValues(S0), S0[0];
}
function Mi() {
  const t = Date.now(),
    e = yp() * 1024 + (yp() & 1023),
    n = new Uint8Array(16),
    r = Math.trunc(e / 2 ** 30),
    i = e & (2 ** 30 - 1),
    o = yp();
  (n[0] = t / 2 ** 40),
    (n[1] = t / 2 ** 32),
    (n[2] = t / 2 ** 24),
    (n[3] = t / 2 ** 16),
    (n[4] = t / 2 ** 8),
    (n[5] = t),
    (n[6] = 112 | (r >>> 8)),
    (n[7] = r),
    (n[8] = 128 | (i >>> 24)),
    (n[9] = i >>> 16),
    (n[10] = i >>> 8),
    (n[11] = i),
    (n[12] = o >>> 24),
    (n[13] = o >>> 16),
    (n[14] = o >>> 8),
    (n[15] = o);
  let a = "";
  for (let l = 0; l < n.length; l++)
    (a += w0.charAt(n[l] >>> 4)),
      (a += w0.charAt(n[l] & 15)),
      (l === 3 || l === 5 || l === 7 || l === 9) && (a += "-");
  return a;
}
async function R_(t, e) {
  return window.crypto.subtle.generateKey(Kv, t, e);
}
async function vp(t) {
  return window.crypto.subtle.exportKey($I, t);
}
async function A_(t, e, n) {
  return window.crypto.subtle.importKey($I, t, Kv, e, n);
}
async function j_(t, e) {
  return window.crypto.subtle.sign(Kv, t, e);
}
async function WI(t) {
  const e = await GI(t),
    n = new Uint8Array(e);
  return of(n);
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const ah =
    "storage_not_supported",
  _t = "stubbed_public_client_application_called",
  sh = "in_mem_redirect_unavailable";
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const td = {
  [ah]: "Given storage configuration option was not supported.",
  [_t]: "Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",
  [sh]: "Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.",
};
td[ah], td[_t], td[sh];
class qv extends Nt {
  constructor(e, n) {
    super(e, n),
      (this.name = "BrowserConfigurationAuthError"),
      Object.setPrototypeOf(this, qv.prototype);
  }
}
function Ut(t) {
  return new qv(t, td[t]);
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ function O_(t) {
  (t.location.hash = ""),
    typeof t.history.replaceState == "function" &&
      t.history.replaceState(
        null,
        "",
        `${t.location.origin}${t.location.pathname}${t.location.search}`
      );
}
function D_(t) {
  const e = t.split("#");
  e.shift(), (window.location.hash = e.length > 0 ? e.join("#") : "");
}
function Gv() {
  return window.parent !== window;
}
function L_() {
  return (
    typeof window < "u" &&
    !!window.opener &&
    window.opener !== window &&
    typeof window.name == "string" &&
    window.name.indexOf(`${nr.POPUP_NAME_PREFIX}.`) === 0
  );
}
function Ni() {
  return window.location.href.split("?")[0].split("#")[0];
}
function P_() {
  const e = new De(window.location.href).getUrlComponents();
  return `${e.Protocol}//${e.HostNameAndPort}/`;
}
function __() {
  if (De.hashContainsKnownProperties(window.location.hash) && Gv())
    throw he(TI);
}
function M_(t) {
  if (Gv() && !t) throw he(EI);
}
function F_() {
  if (L_()) throw he(II);
}
function B_() {
  if (typeof window > "u") throw he(Uv);
}
function VI(t) {
  if (!t) throw he(BI);
}
function Wv(t) {
  B_(), __(), F_(), VI(t);
}
function x0(t, e) {
  if (
    (Wv(t),
    M_(e.system.allowRedirectInIframe),
    e.cache.cacheLocation === Ht.MemoryStorage &&
      !e.cache.storeAuthStateInCookie)
  )
    throw Ut(sh);
}
function QI(t) {
  const e = document.createElement("link");
  (e.rel = "preconnect"),
    (e.href = new URL(t).origin),
    (e.crossOrigin = "anonymous"),
    document.head.appendChild(e),
    window.setTimeout(() => {
      try {
        document.head.removeChild(e);
      } catch {}
    }, 1e4);
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class lh {
  navigateInternal(e, n) {
    return lh.defaultNavigateWindow(e, n);
  }
  navigateExternal(e, n) {
    return lh.defaultNavigateWindow(e, n);
  }
  static defaultNavigateWindow(e, n) {
    return (
      n.noHistory ? window.location.replace(e) : window.location.assign(e),
      new Promise((r) => {
        setTimeout(() => {
          r(!0);
        }, n.timeout);
      })
    );
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class U_ {
  async sendGetRequestAsync(e, n) {
    let r;
    try {
      r = await fetch(e, { method: b0.GET, headers: this.getFetchHeaders(n) });
    } catch {
      throw window.navigator.onLine ? he(jI) : he(oh);
    }
    try {
      return {
        headers: this.getHeaderDict(r.headers),
        body: await r.json(),
        status: r.status,
      };
    } catch {
      throw he(ng);
    }
  }
  async sendPostRequestAsync(e, n) {
    const r = (n && n.body) || H.EMPTY_STRING;
    let i;
    try {
      i = await fetch(e, {
        method: b0.POST,
        headers: this.getFetchHeaders(n),
        body: r,
      });
    } catch {
      throw window.navigator.onLine ? he(AI) : he(oh);
    }
    try {
      return {
        headers: this.getHeaderDict(i.headers),
        body: await i.json(),
        status: i.status,
      };
    } catch {
      throw he(ng);
    }
  }
  getFetchHeaders(e) {
    const n = new Headers();
    if (!(e && e.headers)) return n;
    const r = e.headers;
    return (
      Object.keys(r).forEach((i) => {
        n.append(i, r[i]);
      }),
      n
    );
  }
  getHeaderDict(e) {
    const n = {};
    return (
      e.forEach((r, i) => {
        n[i] = r;
      }),
      n
    );
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const z_ = 6e4,
  ig = 1e4,
  H_ = 3e4,
  $_ = 2e3;
function K_({ auth: t, cache: e, system: n, telemetry: r }, i) {
  const o = {
      clientId: H.EMPTY_STRING,
      authority: `${H.DEFAULT_AUTHORITY}`,
      knownAuthorities: [],
      cloudDiscoveryMetadata: H.EMPTY_STRING,
      authorityMetadata: H.EMPTY_STRING,
      redirectUri: H.EMPTY_STRING,
      postLogoutRedirectUri: H.EMPTY_STRING,
      navigateToLoginRequestUrl: !0,
      clientCapabilities: [],
      protocolMode: Ri.AAD,
      OIDCOptions: {
        serverResponseType: Lc.FRAGMENT,
        defaultScopes: [
          H.OPENID_SCOPE,
          H.PROFILE_SCOPE,
          H.OFFLINE_ACCESS_SCOPE,
        ],
      },
      azureCloudOptions: {
        azureCloudInstance: Iv.None,
        tenant: H.EMPTY_STRING,
      },
      skipAuthorityMetadataCache: !1,
      supportsNestedAppAuth: !1,
    },
    a = {
      cacheLocation: Ht.SessionStorage,
      temporaryCacheLocation: Ht.SessionStorage,
      storeAuthStateInCookie: !1,
      secureCookies: !1,
      cacheMigrationEnabled: !!(e && e.cacheLocation === Ht.LocalStorage),
      claimsBasedCachingEnabled: !1,
    },
    l = { loggerCallback: () => {}, logLevel: Xe.Info, piiLoggingEnabled: !1 },
    u = {
      ...{
        ...cI,
        loggerOptions: l,
        networkClient: i ? new U_() : s_,
        navigationClient: new lh(),
        loadFrameTimeout: 0,
        windowHashTimeout: (n == null ? void 0 : n.loadFrameTimeout) || z_,
        iframeHashTimeout: (n == null ? void 0 : n.loadFrameTimeout) || ig,
        navigateFrameWait: 0,
        redirectNavigationTimeout: H_,
        asyncPopups: !1,
        allowRedirectInIframe: !1,
        allowNativeBroker: !1,
        nativeBrokerHandshakeTimeout:
          (n == null ? void 0 : n.nativeBrokerHandshakeTimeout) || $_,
        pollIntervalMilliseconds: nr.DEFAULT_POLL_INTERVAL_MS,
      },
      ...n,
      loggerOptions: (n == null ? void 0 : n.loggerOptions) || l,
    },
    d = {
      application: { appName: H.EMPTY_STRING, appVersion: H.EMPTY_STRING },
      client: new d_(),
    };
  if (
    ((t == null ? void 0 : t.protocolMode) !== Ri.OIDC &&
      t != null &&
      t.OIDCOptions &&
      new xo(u.loggerOptions).warning(JSON.stringify(tt(Y1))),
    t != null &&
      t.protocolMode &&
      t.protocolMode !== Ri.AAD &&
      u != null &&
      u.allowNativeBroker)
  )
    throw tt(X1);
  return {
    auth: {
      ...o,
      ...t,
      OIDCOptions: {
        ...o.OIDCOptions,
        ...(t == null ? void 0 : t.OIDCOptions),
      },
    },
    cache: { ...a, ...e },
    system: u,
    telemetry: { ...d, ...r },
  };
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const q_ = "@azure/msal-browser",
  af = "3.20.0";
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class Vv {
  static loggerCallback(e, n) {
    switch (e) {
      case Xe.Error:
        console.error(n);
        return;
      case Xe.Info:
        console.info(n);
        return;
      case Xe.Verbose:
        console.debug(n);
        return;
      case Xe.Warning:
        console.warn(n);
        return;
      default:
        console.log(n);
        return;
    }
  }
  constructor(e) {
    var c;
    (this.browserEnvironment = typeof window < "u"),
      (this.config = K_(e, this.browserEnvironment));
    let n;
    try {
      n = window[Ht.SessionStorage];
    } catch {}
    const r = n == null ? void 0 : n.getItem(S_),
      i =
        (c = n == null ? void 0 : n.getItem(x_)) == null
          ? void 0
          : c.toLowerCase(),
      o = i === "true" ? !0 : i === "false" ? !1 : void 0,
      a = { ...this.config.system.loggerOptions },
      l = r && Object.keys(Xe).includes(r) ? Xe[r] : void 0;
    l && ((a.loggerCallback = Vv.loggerCallback), (a.logLevel = l)),
      o !== void 0 && (a.piiLoggingEnabled = o),
      (this.logger = new xo(a, q_, af)),
      (this.available = !1);
  }
  getConfig() {
    return this.config;
  }
  getLogger() {
    return this.logger;
  }
  isAvailable() {
    return this.available;
  }
  isBrowserEnvironment() {
    return this.browserEnvironment;
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class sa extends Vv {
  getModuleName() {
    return sa.MODULE_NAME;
  }
  getId() {
    return sa.ID;
  }
  async initialize() {
    return (this.available = typeof window < "u"), this.available;
  }
}
sa.MODULE_NAME = "";
sa.ID = "StandardOperatingContext";
/*! @azure/msal-browser v3.20.0 2024-07-23 */ function ti(t) {
  return new TextDecoder().decode(G_(t));
}
function G_(t) {
  let e = t.replace(/-/g, "+").replace(/_/g, "/");
  switch (e.length % 4) {
    case 0:
      break;
    case 2:
      e += "==";
      break;
    case 3:
      e += "=";
      break;
    default:
      throw he(zI);
  }
  const n = atob(e);
  return Uint8Array.from(n, (r) => r.codePointAt(0) || 0);
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class W_ {
  constructor() {
    (this.dbName = rg),
      (this.version = b_),
      (this.tableName = C_),
      (this.dbOpen = !1);
  }
  async open() {
    return new Promise((e, n) => {
      const r = window.indexedDB.open(this.dbName, this.version);
      r.addEventListener("upgradeneeded", (i) => {
        i.target.result.createObjectStore(this.tableName);
      }),
        r.addEventListener("success", (i) => {
          const o = i;
          (this.db = o.target.result), (this.dbOpen = !0), e();
        }),
        r.addEventListener("error", () => n(he(Hv)));
    });
  }
  closeConnection() {
    const e = this.db;
    e && this.dbOpen && (e.close(), (this.dbOpen = !1));
  }
  async validateDbIsOpen() {
    if (!this.dbOpen) return this.open();
  }
  async getItem(e) {
    return (
      await this.validateDbIsOpen(),
      new Promise((n, r) => {
        if (!this.db) return r(he(za));
        const a = this.db
          .transaction([this.tableName], "readonly")
          .objectStore(this.tableName)
          .get(e);
        a.addEventListener("success", (l) => {
          const c = l;
          this.closeConnection(), n(c.target.result);
        }),
          a.addEventListener("error", (l) => {
            this.closeConnection(), r(l);
          });
      })
    );
  }
  async setItem(e, n) {
    return (
      await this.validateDbIsOpen(),
      new Promise((r, i) => {
        if (!this.db) return i(he(za));
        const l = this.db
          .transaction([this.tableName], "readwrite")
          .objectStore(this.tableName)
          .put(n, e);
        l.addEventListener("success", () => {
          this.closeConnection(), r();
        }),
          l.addEventListener("error", (c) => {
            this.closeConnection(), i(c);
          });
      })
    );
  }
  async removeItem(e) {
    return (
      await this.validateDbIsOpen(),
      new Promise((n, r) => {
        if (!this.db) return r(he(za));
        const a = this.db
          .transaction([this.tableName], "readwrite")
          .objectStore(this.tableName)
          .delete(e);
        a.addEventListener("success", () => {
          this.closeConnection(), n();
        }),
          a.addEventListener("error", (l) => {
            this.closeConnection(), r(l);
          });
      })
    );
  }
  async getKeys() {
    return (
      await this.validateDbIsOpen(),
      new Promise((e, n) => {
        if (!this.db) return n(he(za));
        const o = this.db
          .transaction([this.tableName], "readonly")
          .objectStore(this.tableName)
          .getAllKeys();
        o.addEventListener("success", (a) => {
          const l = a;
          this.closeConnection(), e(l.target.result);
        }),
          o.addEventListener("error", (a) => {
            this.closeConnection(), n(a);
          });
      })
    );
  }
  async containsKey(e) {
    return (
      await this.validateDbIsOpen(),
      new Promise((n, r) => {
        if (!this.db) return r(he(za));
        const a = this.db
          .transaction([this.tableName], "readonly")
          .objectStore(this.tableName)
          .count(e);
        a.addEventListener("success", (l) => {
          const c = l;
          this.closeConnection(), n(c.target.result === 1);
        }),
          a.addEventListener("error", (l) => {
            this.closeConnection(), r(l);
          });
      })
    );
  }
  async deleteDatabase() {
    return (
      this.db && this.dbOpen && this.closeConnection(),
      new Promise((e, n) => {
        const r = window.indexedDB.deleteDatabase(rg),
          i = setTimeout(() => n(!1), 200);
        r.addEventListener("success", () => (clearTimeout(i), e(!0))),
          r.addEventListener("blocked", () => (clearTimeout(i), e(!0))),
          r.addEventListener("error", () => (clearTimeout(i), n(!1)));
      })
    );
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class og {
  constructor() {
    this.cache = new Map();
  }
  getItem(e) {
    return this.cache.get(e) || null;
  }
  setItem(e, n) {
    this.cache.set(e, n);
  }
  removeItem(e) {
    this.cache.delete(e);
  }
  getKeys() {
    const e = [];
    return (
      this.cache.forEach((n, r) => {
        e.push(r);
      }),
      e
    );
  }
  containsKey(e) {
    return this.cache.has(e);
  }
  clear() {
    this.cache.clear();
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class V_ {
  constructor(e) {
    (this.inMemoryCache = new og()),
      (this.indexedDBCache = new W_()),
      (this.logger = e);
  }
  handleDatabaseAccessError(e) {
    if (e instanceof _c && e.errorCode === Hv)
      this.logger.error(
        "Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts."
      );
    else throw e;
  }
  async getItem(e) {
    const n = this.inMemoryCache.getItem(e);
    if (!n)
      try {
        return (
          this.logger.verbose(
            "Queried item not found in in-memory cache, now querying persistent storage."
          ),
          await this.indexedDBCache.getItem(e)
        );
      } catch (r) {
        this.handleDatabaseAccessError(r);
      }
    return n;
  }
  async setItem(e, n) {
    this.inMemoryCache.setItem(e, n);
    try {
      await this.indexedDBCache.setItem(e, n);
    } catch (r) {
      this.handleDatabaseAccessError(r);
    }
  }
  async removeItem(e) {
    this.inMemoryCache.removeItem(e);
    try {
      await this.indexedDBCache.removeItem(e);
    } catch (n) {
      this.handleDatabaseAccessError(n);
    }
  }
  async getKeys() {
    const e = this.inMemoryCache.getKeys();
    if (e.length === 0)
      try {
        return (
          this.logger.verbose(
            "In-memory cache is empty, now querying persistent storage."
          ),
          await this.indexedDBCache.getKeys()
        );
      } catch (n) {
        this.handleDatabaseAccessError(n);
      }
    return e;
  }
  async containsKey(e) {
    const n = this.inMemoryCache.containsKey(e);
    if (!n)
      try {
        return (
          this.logger.verbose(
            "Key not found in in-memory cache, now querying persistent storage."
          ),
          await this.indexedDBCache.containsKey(e)
        );
      } catch (r) {
        this.handleDatabaseAccessError(r);
      }
    return n;
  }
  clearInMemory() {
    this.logger.verbose("Deleting in-memory keystore"),
      this.inMemoryCache.clear(),
      this.logger.verbose("In-memory keystore deleted");
  }
  async clearPersistent() {
    try {
      this.logger.verbose("Deleting persistent keystore");
      const e = await this.indexedDBCache.deleteDatabase();
      return e && this.logger.verbose("Persistent keystore deleted"), e;
    } catch (e) {
      return this.handleDatabaseAccessError(e), !1;
    }
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class Rs {
  constructor(e, n) {
    (this.logger = e),
      N_(e),
      (this.cache = new V_(this.logger)),
      (this.performanceClient = n);
  }
  createNewGuid() {
    return Mi();
  }
  base64Encode(e) {
    return $v(e);
  }
  base64Decode(e) {
    return ti(e);
  }
  base64UrlEncode(e) {
    return Ru(e);
  }
  encodeKid(e) {
    return this.base64UrlEncode(JSON.stringify({ kid: e }));
  }
  async getPublicKeyThumbprint(e) {
    var d;
    const n =
        (d = this.performanceClient) == null
          ? void 0
          : d.startMeasurement(
              B.CryptoOptsGetPublicKeyThumbprint,
              e.correlationId
            ),
      r = await R_(Rs.EXTRACTABLE, Rs.POP_KEY_USAGES),
      i = await vp(r.publicKey),
      o = { e: i.e, kty: i.kty, n: i.n },
      a = E0(o),
      l = await this.hashString(a),
      c = await vp(r.privateKey),
      u = await A_(c, !1, ["sign"]);
    return (
      await this.cache.setItem(l, {
        privateKey: u,
        publicKey: r.publicKey,
        requestMethod: e.resourceRequestMethod,
        requestUri: e.resourceRequestUri,
      }),
      n && n.end({ success: !0 }),
      l
    );
  }
  async removeTokenBindingKey(e) {
    return await this.cache.removeItem(e), !(await this.cache.containsKey(e));
  }
  async clearKeystore() {
    this.cache.clearInMemory();
    try {
      return await this.cache.clearPersistent(), !0;
    } catch (e) {
      return (
        e instanceof Error
          ? this.logger.error(
              `Clearing keystore failed with error: ${e.message}`
            )
          : this.logger.error("Clearing keystore failed with unknown error"),
        !1
      );
    }
  }
  async signJwt(e, n, r, i) {
    var y;
    const o =
        (y = this.performanceClient) == null
          ? void 0
          : y.startMeasurement(B.CryptoOptsSignJwt, i),
      a = await this.cache.getItem(n);
    if (!a) throw he(zv);
    const l = await vp(a.publicKey),
      c = E0(l),
      u = Ru(JSON.stringify({ kid: n })),
      d = _v.getShrHeaderString({
        ...(r == null ? void 0 : r.header),
        alg: l.alg,
        kid: u,
      }),
      h = Ru(d);
    e.cnf = { jwk: JSON.parse(c) };
    const f = Ru(JSON.stringify(e)),
      p = `${h}.${f}`,
      v = new TextEncoder().encode(p),
      C = await j_(a.privateKey, v),
      b = of(new Uint8Array(C)),
      g = `${p}.${b}`;
    return o && o.end({ success: !0 }), g;
  }
  async hashString(e) {
    return WI(e);
  }
}
Rs.POP_KEY_USAGES = ["sign", "verify"];
Rs.EXTRACTABLE = !0;
function E0(t) {
  return JSON.stringify(t, Object.keys(t).sort());
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class T0 {
  constructor(e) {
    this.validateWindowStorage(e), (this.windowStorage = window[e]);
  }
  validateWindowStorage(e) {
    if ((e !== Ht.LocalStorage && e !== Ht.SessionStorage) || !window[e])
      throw Ut(ah);
  }
  getItem(e) {
    return this.windowStorage.getItem(e);
  }
  setItem(e, n) {
    this.windowStorage.setItem(e, n);
  }
  removeItem(e) {
    this.windowStorage.removeItem(e);
  }
  getKeys() {
    return Object.keys(this.windowStorage);
  }
  containsKey(e) {
    return this.windowStorage.hasOwnProperty(e);
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ function YI(t, e) {
  if (!e) return null;
  try {
    return kr.parseRequestState(t, e).libraryState.meta;
  } catch {
    throw V(Ts);
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class ag extends Ns {
  constructor(e, n, r, i, o, a) {
    super(e, r, i, o),
      (this.COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1e3),
      (this.cacheConfig = n),
      (this.logger = i),
      (this.internalStorage = new og()),
      (this.browserStorage = this.setupBrowserStorage(
        this.cacheConfig.cacheLocation
      )),
      (this.temporaryCacheStorage = this.setupTemporaryCacheStorage(
        this.cacheConfig.temporaryCacheLocation,
        this.cacheConfig.cacheLocation
      )),
      n.cacheMigrationEnabled &&
        (this.migrateCacheEntries(), this.createKeyMaps()),
      (this.performanceClient = a);
  }
  setupBrowserStorage(e) {
    switch (e) {
      case Ht.LocalStorage:
      case Ht.SessionStorage:
        try {
          return new T0(e);
        } catch (n) {
          this.logger.verbose(n);
          break;
        }
    }
    return (this.cacheConfig.cacheLocation = Ht.MemoryStorage), new og();
  }
  setupTemporaryCacheStorage(e, n) {
    switch (n) {
      case Ht.LocalStorage:
      case Ht.SessionStorage:
        try {
          return new T0(e || Ht.SessionStorage);
        } catch (r) {
          return this.logger.verbose(r), this.internalStorage;
        }
      case Ht.MemoryStorage:
      default:
        return this.internalStorage;
    }
  }
  migrateCacheEntries() {
    const e = `${H.CACHE_PREFIX}.${Wt.ID_TOKEN}`,
      n = `${H.CACHE_PREFIX}.${Wt.CLIENT_INFO}`,
      r = `${H.CACHE_PREFIX}.${Wt.ERROR}`,
      i = `${H.CACHE_PREFIX}.${Wt.ERROR_DESC}`,
      o = this.browserStorage.getItem(e),
      a = this.browserStorage.getItem(n),
      l = this.browserStorage.getItem(r),
      c = this.browserStorage.getItem(i),
      u = [o, a, l, c];
    [Wt.ID_TOKEN, Wt.CLIENT_INFO, Wt.ERROR, Wt.ERROR_DESC].forEach((h, f) => {
      const p = u[f];
      p && this.setTemporaryCache(h, p, !0);
    });
  }
  createKeyMaps() {
    this.logger.trace("BrowserCacheManager - createKeyMaps called.");
    const e = this.getItem(Xi.ACCOUNT_KEYS),
      n = this.getItem(`${Xi.TOKEN_KEYS}.${this.clientId}`);
    if (e && n) {
      this.logger.verbose(
        "BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration."
      );
      return;
    }
    this.browserStorage.getKeys().forEach((i) => {
      if (this.isCredentialKey(i)) {
        const o = this.getItem(i);
        if (o) {
          const a = this.validateAndParseJson(o);
          if (a && a.hasOwnProperty("credentialType"))
            switch (a.credentialType) {
              case we.ID_TOKEN:
                if (a0(a)) {
                  this.logger.trace(
                    "BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"
                  ),
                    this.logger.tracePii(
                      `BrowserCacheManager:createKeyMaps - idToken with key: ${i} found, saving key to token key map`
                    );
                  const l = a,
                    c = this.updateCredentialCacheKey(i, l);
                  this.addTokenKey(c, we.ID_TOKEN);
                  return;
                } else
                  this.logger.trace(
                    "BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."
                  ),
                    this.logger.tracePii(
                      `BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${i}`
                    );
                break;
              case we.ACCESS_TOKEN:
              case we.ACCESS_TOKEN_WITH_AUTH_SCHEME:
                if (o0(a)) {
                  this.logger.trace(
                    "BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"
                  ),
                    this.logger.tracePii(
                      `BrowserCacheManager:createKeyMaps - accessToken with key: ${i} found, saving key to token key map`
                    );
                  const l = a,
                    c = this.updateCredentialCacheKey(i, l);
                  this.addTokenKey(c, we.ACCESS_TOKEN);
                  return;
                } else
                  this.logger.trace(
                    "BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."
                  ),
                    this.logger.tracePii(
                      `BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${i}`
                    );
                break;
              case we.REFRESH_TOKEN:
                if (s0(a)) {
                  this.logger.trace(
                    "BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"
                  ),
                    this.logger.tracePii(
                      `BrowserCacheManager:createKeyMaps - refreshToken with key: ${i} found, saving key to token key map`
                    );
                  const l = a,
                    c = this.updateCredentialCacheKey(i, l);
                  this.addTokenKey(c, we.REFRESH_TOKEN);
                  return;
                } else
                  this.logger.trace(
                    "BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."
                  ),
                    this.logger.tracePii(
                      `BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${i}`
                    );
                break;
            }
        }
      }
      if (this.isAccountKey(i)) {
        const o = this.getItem(i);
        if (o) {
          const a = this.validateAndParseJson(o);
          a &&
            Kt.isAccountEntity(a) &&
            (this.logger.trace(
              "BrowserCacheManager:createKeyMaps - account found, saving key to account key map"
            ),
            this.logger.tracePii(
              `BrowserCacheManager:createKeyMaps - account with key: ${i} found, saving key to account key map`
            ),
            this.addAccountKeyToMap(i));
        }
      }
    });
  }
  validateAndParseJson(e) {
    try {
      const n = JSON.parse(e);
      return n && typeof n == "object" ? n : null;
    } catch {
      return null;
    }
  }
  getItem(e) {
    return this.browserStorage.getItem(e);
  }
  setItem(e, n) {
    this.browserStorage.setItem(e, n);
  }
  getAccount(e, n) {
    this.logger.trace("BrowserCacheManager.getAccount called");
    const r = this.getCachedAccountEntity(e);
    return this.updateOutdatedCachedAccount(e, r, n);
  }
  getCachedAccountEntity(e) {
    const n = this.getItem(e);
    if (!n) return this.removeAccountKeyFromMap(e), null;
    const r = this.validateAndParseJson(n);
    return !r || !Kt.isAccountEntity(r)
      ? (this.removeAccountKeyFromMap(e), null)
      : Ns.toObject(new Kt(), r);
  }
  setAccount(e) {
    this.logger.trace("BrowserCacheManager.setAccount called");
    const n = e.generateAccountKey();
    this.setItem(n, JSON.stringify(e)), this.addAccountKeyToMap(n);
  }
  getAccountKeys() {
    this.logger.trace("BrowserCacheManager.getAccountKeys called");
    const e = this.getItem(Xi.ACCOUNT_KEYS);
    return e
      ? JSON.parse(e)
      : (this.logger.verbose(
          "BrowserCacheManager.getAccountKeys - No account keys found"
        ),
        []);
  }
  addAccountKeyToMap(e) {
    this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),
      this.logger.tracePii(
        `BrowserCacheManager.addAccountKeyToMap called with key: ${e}`
      );
    const n = this.getAccountKeys();
    n.indexOf(e) === -1
      ? (n.push(e),
        this.setItem(Xi.ACCOUNT_KEYS, JSON.stringify(n)),
        this.logger.verbose(
          "BrowserCacheManager.addAccountKeyToMap account key added"
        ))
      : this.logger.verbose(
          "BrowserCacheManager.addAccountKeyToMap account key already exists in map"
        );
  }
  removeAccountKeyFromMap(e) {
    this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),
      this.logger.tracePii(
        `BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`
      );
    const n = this.getAccountKeys(),
      r = n.indexOf(e);
    r > -1
      ? (n.splice(r, 1),
        this.setItem(Xi.ACCOUNT_KEYS, JSON.stringify(n)),
        this.logger.trace(
          "BrowserCacheManager.removeAccountKeyFromMap account key removed"
        ))
      : this.logger.trace(
          "BrowserCacheManager.removeAccountKeyFromMap key not found in existing map"
        );
  }
  async removeAccount(e) {
    super.removeAccount(e), this.removeAccountKeyFromMap(e);
  }
  removeOutdatedAccount(e) {
    this.removeItem(e), this.removeAccountKeyFromMap(e);
  }
  removeIdToken(e) {
    super.removeIdToken(e), this.removeTokenKey(e, we.ID_TOKEN);
  }
  async removeAccessToken(e) {
    super.removeAccessToken(e), this.removeTokenKey(e, we.ACCESS_TOKEN);
  }
  removeRefreshToken(e) {
    super.removeRefreshToken(e), this.removeTokenKey(e, we.REFRESH_TOKEN);
  }
  getTokenKeys() {
    this.logger.trace("BrowserCacheManager.getTokenKeys called");
    const e = this.getItem(`${Xi.TOKEN_KEYS}.${this.clientId}`);
    if (e) {
      const n = this.validateAndParseJson(e);
      if (
        n &&
        n.hasOwnProperty("idToken") &&
        n.hasOwnProperty("accessToken") &&
        n.hasOwnProperty("refreshToken")
      )
        return n;
      this.logger.error(
        "BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map."
      );
    } else
      this.logger.verbose(
        "BrowserCacheManager.getTokenKeys - No token keys found"
      );
    return { idToken: [], accessToken: [], refreshToken: [] };
  }
  addTokenKey(e, n) {
    this.logger.trace("BrowserCacheManager addTokenKey called");
    const r = this.getTokenKeys();
    switch (n) {
      case we.ID_TOKEN:
        r.idToken.indexOf(e) === -1 &&
          (this.logger.info(
            "BrowserCacheManager: addTokenKey - idToken added to map"
          ),
          r.idToken.push(e));
        break;
      case we.ACCESS_TOKEN:
        r.accessToken.indexOf(e) === -1 &&
          (this.logger.info(
            "BrowserCacheManager: addTokenKey - accessToken added to map"
          ),
          r.accessToken.push(e));
        break;
      case we.REFRESH_TOKEN:
        r.refreshToken.indexOf(e) === -1 &&
          (this.logger.info(
            "BrowserCacheManager: addTokenKey - refreshToken added to map"
          ),
          r.refreshToken.push(e));
        break;
      default:
        throw (
          (this.logger.error(
            `BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${n}`
          ),
          V(Xm))
        );
    }
    this.setItem(`${Xi.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(r));
  }
  removeTokenKey(e, n) {
    this.logger.trace("BrowserCacheManager removeTokenKey called");
    const r = this.getTokenKeys();
    switch (n) {
      case we.ID_TOKEN:
        this.logger.infoPii(
          `BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`
        );
        const i = r.idToken.indexOf(e);
        i > -1
          ? (this.logger.info(
              "BrowserCacheManager: removeTokenKey - idToken removed from map"
            ),
            r.idToken.splice(i, 1))
          : this.logger.info(
              "BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added."
            );
        break;
      case we.ACCESS_TOKEN:
        this.logger.infoPii(
          `BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`
        );
        const o = r.accessToken.indexOf(e);
        o > -1
          ? (this.logger.info(
              "BrowserCacheManager: removeTokenKey - accessToken removed from map"
            ),
            r.accessToken.splice(o, 1))
          : this.logger.info(
              "BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added."
            );
        break;
      case we.REFRESH_TOKEN:
        this.logger.infoPii(
          `BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`
        );
        const a = r.refreshToken.indexOf(e);
        a > -1
          ? (this.logger.info(
              "BrowserCacheManager: removeTokenKey - refreshToken removed from map"
            ),
            r.refreshToken.splice(a, 1))
          : this.logger.info(
              "BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added."
            );
        break;
      default:
        throw (
          (this.logger.error(
            `BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${n}`
          ),
          V(Xm))
        );
    }
    this.setItem(`${Xi.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(r));
  }
  getIdTokenCredential(e) {
    const n = this.getItem(e);
    if (!n)
      return (
        this.logger.trace(
          "BrowserCacheManager.getIdTokenCredential: called, no cache hit"
        ),
        this.removeTokenKey(e, we.ID_TOKEN),
        null
      );
    const r = this.validateAndParseJson(n);
    return !r || !a0(r)
      ? (this.logger.trace(
          "BrowserCacheManager.getIdTokenCredential: called, no cache hit"
        ),
        this.removeTokenKey(e, we.ID_TOKEN),
        null)
      : (this.logger.trace(
          "BrowserCacheManager.getIdTokenCredential: cache hit"
        ),
        r);
  }
  setIdTokenCredential(e) {
    this.logger.trace("BrowserCacheManager.setIdTokenCredential called");
    const n = ns(e);
    this.setItem(n, JSON.stringify(e)), this.addTokenKey(n, we.ID_TOKEN);
  }
  getAccessTokenCredential(e) {
    const n = this.getItem(e);
    if (!n)
      return (
        this.logger.trace(
          "BrowserCacheManager.getAccessTokenCredential: called, no cache hit"
        ),
        this.removeTokenKey(e, we.ACCESS_TOKEN),
        null
      );
    const r = this.validateAndParseJson(n);
    return !r || !o0(r)
      ? (this.logger.trace(
          "BrowserCacheManager.getAccessTokenCredential: called, no cache hit"
        ),
        this.removeTokenKey(e, we.ACCESS_TOKEN),
        null)
      : (this.logger.trace(
          "BrowserCacheManager.getAccessTokenCredential: cache hit"
        ),
        r);
  }
  setAccessTokenCredential(e) {
    this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");
    const n = ns(e);
    this.setItem(n, JSON.stringify(e)), this.addTokenKey(n, we.ACCESS_TOKEN);
  }
  getRefreshTokenCredential(e) {
    const n = this.getItem(e);
    if (!n)
      return (
        this.logger.trace(
          "BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"
        ),
        this.removeTokenKey(e, we.REFRESH_TOKEN),
        null
      );
    const r = this.validateAndParseJson(n);
    return !r || !s0(r)
      ? (this.logger.trace(
          "BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"
        ),
        this.removeTokenKey(e, we.REFRESH_TOKEN),
        null)
      : (this.logger.trace(
          "BrowserCacheManager.getRefreshTokenCredential: cache hit"
        ),
        r);
  }
  setRefreshTokenCredential(e) {
    this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");
    const n = ns(e);
    this.setItem(n, JSON.stringify(e)), this.addTokenKey(n, we.REFRESH_TOKEN);
  }
  getAppMetadata(e) {
    const n = this.getItem(e);
    if (!n)
      return (
        this.logger.trace(
          "BrowserCacheManager.getAppMetadata: called, no cache hit"
        ),
        null
      );
    const r = this.validateAndParseJson(n);
    return !r || !ZL(e, r)
      ? (this.logger.trace(
          "BrowserCacheManager.getAppMetadata: called, no cache hit"
        ),
        null)
      : (this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"), r);
  }
  setAppMetadata(e) {
    this.logger.trace("BrowserCacheManager.setAppMetadata called");
    const n = JL(e);
    this.setItem(n, JSON.stringify(e));
  }
  getServerTelemetry(e) {
    const n = this.getItem(e);
    if (!n)
      return (
        this.logger.trace(
          "BrowserCacheManager.getServerTelemetry: called, no cache hit"
        ),
        null
      );
    const r = this.validateAndParseJson(n);
    return !r || !YL(e, r)
      ? (this.logger.trace(
          "BrowserCacheManager.getServerTelemetry: called, no cache hit"
        ),
        null)
      : (this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),
        r);
  }
  setServerTelemetry(e, n) {
    this.logger.trace("BrowserCacheManager.setServerTelemetry called"),
      this.setItem(e, JSON.stringify(n));
  }
  getAuthorityMetadata(e) {
    const n = this.internalStorage.getItem(e);
    if (!n)
      return (
        this.logger.trace(
          "BrowserCacheManager.getAuthorityMetadata: called, no cache hit"
        ),
        null
      );
    const r = this.validateAndParseJson(n);
    return r && eP(e, r)
      ? (this.logger.trace(
          "BrowserCacheManager.getAuthorityMetadata: cache hit"
        ),
        r)
      : null;
  }
  getAuthorityMetadataKeys() {
    return this.internalStorage
      .getKeys()
      .filter((n) => this.isAuthorityMetadata(n));
  }
  setWrapperMetadata(e, n) {
    this.internalStorage.setItem(ku.WRAPPER_SKU, e),
      this.internalStorage.setItem(ku.WRAPPER_VER, n);
  }
  getWrapperMetadata() {
    const e = this.internalStorage.getItem(ku.WRAPPER_SKU) || H.EMPTY_STRING,
      n = this.internalStorage.getItem(ku.WRAPPER_VER) || H.EMPTY_STRING;
    return [e, n];
  }
  setAuthorityMetadata(e, n) {
    this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),
      this.internalStorage.setItem(e, JSON.stringify(n));
  }
  getActiveAccount() {
    const e = this.generateCacheKey(Wt.ACTIVE_ACCOUNT_FILTERS),
      n = this.getItem(e);
    if (!n) {
      this.logger.trace(
        "BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema"
      );
      const i = this.generateCacheKey(Wt.ACTIVE_ACCOUNT),
        o = this.getItem(i);
      if (!o)
        return (
          this.logger.trace(
            "BrowserCacheManager.getActiveAccount: No active account found"
          ),
          null
        );
      const a = this.getAccountInfoFilteredBy({ localAccountId: o });
      return a
        ? (this.logger.trace(
            "BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"
          ),
          this.logger.trace(
            "BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"
          ),
          this.setActiveAccount(a),
          a)
        : null;
    }
    const r = this.validateAndParseJson(n);
    return r
      ? (this.logger.trace(
          "BrowserCacheManager.getActiveAccount: Active account filters schema found"
        ),
        this.getAccountInfoFilteredBy({
          homeAccountId: r.homeAccountId,
          localAccountId: r.localAccountId,
          tenantId: r.tenantId,
        }))
      : (this.logger.trace(
          "BrowserCacheManager.getActiveAccount: No active account found"
        ),
        null);
  }
  setActiveAccount(e) {
    const n = this.generateCacheKey(Wt.ACTIVE_ACCOUNT_FILTERS),
      r = this.generateCacheKey(Wt.ACTIVE_ACCOUNT);
    if (e) {
      this.logger.verbose("setActiveAccount: Active account set");
      const i = {
        homeAccountId: e.homeAccountId,
        localAccountId: e.localAccountId,
        tenantId: e.tenantId,
      };
      this.browserStorage.setItem(n, JSON.stringify(i)),
        this.browserStorage.setItem(r, e.localAccountId);
    } else
      this.logger.verbose(
        "setActiveAccount: No account passed, active account not set"
      ),
        this.browserStorage.removeItem(n),
        this.browserStorage.removeItem(r);
  }
  getThrottlingCache(e) {
    const n = this.getItem(e);
    if (!n)
      return (
        this.logger.trace(
          "BrowserCacheManager.getThrottlingCache: called, no cache hit"
        ),
        null
      );
    const r = this.validateAndParseJson(n);
    return !r || !XL(e, r)
      ? (this.logger.trace(
          "BrowserCacheManager.getThrottlingCache: called, no cache hit"
        ),
        null)
      : (this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),
        r);
  }
  setThrottlingCache(e, n) {
    this.logger.trace("BrowserCacheManager.setThrottlingCache called"),
      this.setItem(e, JSON.stringify(n));
  }
  getTemporaryCache(e, n) {
    const r = n ? this.generateCacheKey(e) : e;
    if (this.cacheConfig.storeAuthStateInCookie) {
      const o = this.getItemCookie(r);
      if (o)
        return (
          this.logger.trace(
            "BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"
          ),
          o
        );
    }
    const i = this.temporaryCacheStorage.getItem(r);
    if (!i) {
      if (this.cacheConfig.cacheLocation === Ht.LocalStorage) {
        const o = this.browserStorage.getItem(r);
        if (o)
          return (
            this.logger.trace(
              "BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"
            ),
            o
          );
      }
      return (
        this.logger.trace(
          "BrowserCacheManager.getTemporaryCache: No cache item found in local storage"
        ),
        null
      );
    }
    return (
      this.logger.trace(
        "BrowserCacheManager.getTemporaryCache: Temporary cache item returned"
      ),
      i
    );
  }
  setTemporaryCache(e, n, r) {
    const i = r ? this.generateCacheKey(e) : e;
    this.temporaryCacheStorage.setItem(i, n),
      this.cacheConfig.storeAuthStateInCookie &&
        (this.logger.trace(
          "BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"
        ),
        this.setItemCookie(i, n));
  }
  removeItem(e) {
    this.browserStorage.removeItem(e);
  }
  removeTemporaryItem(e) {
    this.temporaryCacheStorage.removeItem(e),
      this.cacheConfig.storeAuthStateInCookie &&
        (this.logger.trace(
          "BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"
        ),
        this.clearItemCookie(e));
  }
  getKeys() {
    return this.browserStorage.getKeys();
  }
  async clear() {
    await this.removeAllAccounts(),
      this.removeAppMetadata(),
      this.temporaryCacheStorage.getKeys().forEach((e) => {
        (e.indexOf(H.CACHE_PREFIX) !== -1 || e.indexOf(this.clientId) !== -1) &&
          this.removeTemporaryItem(e);
      }),
      this.browserStorage.getKeys().forEach((e) => {
        (e.indexOf(H.CACHE_PREFIX) !== -1 || e.indexOf(this.clientId) !== -1) &&
          this.browserStorage.removeItem(e);
      }),
      this.internalStorage.clear();
  }
  async clearTokensAndKeysWithClaims(e, n) {
    e.addQueueMeasurement(B.ClearTokensAndKeysWithClaims, n);
    const r = this.getTokenKeys(),
      i = [];
    r.accessToken.forEach((o) => {
      const a = this.getAccessTokenCredential(o);
      a != null &&
        a.requestedClaimsHash &&
        o.includes(a.requestedClaimsHash.toLowerCase()) &&
        i.push(this.removeAccessToken(o));
    }),
      await Promise.all(i),
      i.length > 0 &&
        this.logger.warning(
          `${i.length} access tokens with claims in the cache keys have been removed from the cache.`
        );
  }
  setItemCookie(e, n, r) {
    let i = `${encodeURIComponent(e)}=${encodeURIComponent(
      n
    )};path=/;SameSite=Lax;`;
    if (r) {
      const o = this.getCookieExpirationTime(r);
      i += `expires=${o};`;
    }
    this.cacheConfig.secureCookies && (i += "Secure;"), (document.cookie = i);
  }
  getItemCookie(e) {
    const n = `${encodeURIComponent(e)}=`,
      r = document.cookie.split(";");
    for (let i = 0; i < r.length; i++) {
      let o = r[i];
      for (; o.charAt(0) === " "; ) o = o.substring(1);
      if (o.indexOf(n) === 0)
        return decodeURIComponent(o.substring(n.length, o.length));
    }
    return H.EMPTY_STRING;
  }
  clearMsalCookies() {
    const e = `${H.CACHE_PREFIX}.${this.clientId}`;
    document.cookie.split(";").forEach((r) => {
      for (; r.charAt(0) === " "; ) r = r.substring(1);
      if (r.indexOf(e) === 0) {
        const i = r.split("=")[0];
        this.clearItemCookie(i);
      }
    });
  }
  clearItemCookie(e) {
    this.setItemCookie(e, H.EMPTY_STRING, -1);
  }
  getCookieExpirationTime(e) {
    const n = new Date();
    return new Date(
      n.getTime() + e * this.COOKIE_LIFE_MULTIPLIER
    ).toUTCString();
  }
  generateCacheKey(e) {
    return this.validateAndParseJson(e)
      ? JSON.stringify(e)
      : Nr.startsWith(e, H.CACHE_PREFIX) || Nr.startsWith(e, Wt.ADAL_ID_TOKEN)
      ? e
      : `${H.CACHE_PREFIX}.${this.clientId}.${e}`;
  }
  generateAuthorityKey(e) {
    const {
      libraryState: { id: n },
    } = kr.parseRequestState(this.cryptoImpl, e);
    return this.generateCacheKey(`${Ke.AUTHORITY}.${n}`);
  }
  generateNonceKey(e) {
    const {
      libraryState: { id: n },
    } = kr.parseRequestState(this.cryptoImpl, e);
    return this.generateCacheKey(`${Ke.NONCE_IDTOKEN}.${n}`);
  }
  generateStateKey(e) {
    const {
      libraryState: { id: n },
    } = kr.parseRequestState(this.cryptoImpl, e);
    return this.generateCacheKey(`${Ke.REQUEST_STATE}.${n}`);
  }
  getCachedAuthority(e) {
    const n = this.generateStateKey(e),
      r = this.getTemporaryCache(n);
    if (!r) return null;
    const i = this.generateAuthorityKey(r);
    return this.getTemporaryCache(i);
  }
  updateCacheEntries(e, n, r, i, o) {
    this.logger.trace("BrowserCacheManager.updateCacheEntries called");
    const a = this.generateStateKey(e);
    this.setTemporaryCache(a, e, !1);
    const l = this.generateNonceKey(e);
    this.setTemporaryCache(l, n, !1);
    const c = this.generateAuthorityKey(e);
    if ((this.setTemporaryCache(c, r, !1), o)) {
      const u = { credential: o.homeAccountId, type: zn.HOME_ACCOUNT_ID };
      this.setTemporaryCache(Ke.CCS_CREDENTIAL, JSON.stringify(u), !0);
    } else if (i) {
      const u = { credential: i, type: zn.UPN };
      this.setTemporaryCache(Ke.CCS_CREDENTIAL, JSON.stringify(u), !0);
    }
  }
  resetRequestCache(e) {
    this.logger.trace("BrowserCacheManager.resetRequestCache called"),
      e &&
        (this.temporaryCacheStorage.getKeys().forEach((n) => {
          n.indexOf(e) !== -1 && this.removeTemporaryItem(n);
        }),
        this.removeTemporaryItem(this.generateStateKey(e)),
        this.removeTemporaryItem(this.generateNonceKey(e)),
        this.removeTemporaryItem(this.generateAuthorityKey(e))),
      this.removeTemporaryItem(this.generateCacheKey(Ke.REQUEST_PARAMS)),
      this.removeTemporaryItem(this.generateCacheKey(Ke.ORIGIN_URI)),
      this.removeTemporaryItem(this.generateCacheKey(Ke.URL_HASH)),
      this.removeTemporaryItem(this.generateCacheKey(Ke.CORRELATION_ID)),
      this.removeTemporaryItem(this.generateCacheKey(Ke.CCS_CREDENTIAL)),
      this.removeTemporaryItem(this.generateCacheKey(Ke.NATIVE_REQUEST)),
      this.setInteractionInProgress(!1);
  }
  cleanRequestByState(e) {
    if (
      (this.logger.trace("BrowserCacheManager.cleanRequestByState called"), e)
    ) {
      const n = this.generateStateKey(e),
        r = this.temporaryCacheStorage.getItem(n);
      this.logger.infoPii(
        `BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${r}`
      ),
        this.resetRequestCache(r || H.EMPTY_STRING);
    }
    this.clearMsalCookies();
  }
  cleanRequestByInteractionType(e) {
    this.logger.trace(
      "BrowserCacheManager.cleanRequestByInteractionType called"
    ),
      this.temporaryCacheStorage.getKeys().forEach((n) => {
        if (n.indexOf(Ke.REQUEST_STATE) === -1) return;
        const r = this.temporaryCacheStorage.getItem(n);
        if (!r) return;
        const i = YI(this.cryptoImpl, r);
        i &&
          i.interactionType === e &&
          (this.logger.infoPii(
            `BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${r}`
          ),
          this.resetRequestCache(r));
      }),
      this.clearMsalCookies(),
      this.setInteractionInProgress(!1);
  }
  cacheCodeRequest(e) {
    this.logger.trace("BrowserCacheManager.cacheCodeRequest called");
    const n = $v(JSON.stringify(e));
    this.setTemporaryCache(Ke.REQUEST_PARAMS, n, !0);
  }
  getCachedRequest(e) {
    this.logger.trace("BrowserCacheManager.getCachedRequest called");
    const n = this.getTemporaryCache(Ke.REQUEST_PARAMS, !0);
    if (!n) throw he(kI);
    let r;
    try {
      r = JSON.parse(ti(n));
    } catch (i) {
      throw (
        (this.logger.errorPii(`Attempted to parse: ${n}`),
        this.logger.error(
          `Parsing cached token request threw with error: ${i}`
        ),
        he(RI))
      );
    }
    if (
      (this.removeTemporaryItem(this.generateCacheKey(Ke.REQUEST_PARAMS)),
      !r.authority)
    ) {
      const i = this.generateAuthorityKey(e),
        o = this.getTemporaryCache(i);
      if (!o) throw he(Bv);
      r.authority = o;
    }
    return r;
  }
  getCachedNativeRequest() {
    this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");
    const e = this.getTemporaryCache(Ke.NATIVE_REQUEST, !0);
    if (!e)
      return (
        this.logger.trace(
          "BrowserCacheManager.getCachedNativeRequest: No cached native request found"
        ),
        null
      );
    const n = this.validateAndParseJson(e);
    return (
      n ||
      (this.logger.error(
        "BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"
      ),
      null)
    );
  }
  isInteractionInProgress(e) {
    const n = this.getInteractionInProgress();
    return e ? n === this.clientId : !!n;
  }
  getInteractionInProgress() {
    const e = `${H.CACHE_PREFIX}.${Ke.INTERACTION_STATUS_KEY}`;
    return this.getTemporaryCache(e, !1);
  }
  setInteractionInProgress(e) {
    const n = `${H.CACHE_PREFIX}.${Ke.INTERACTION_STATUS_KEY}`;
    if (e) {
      if (this.getInteractionInProgress()) throw he(CI);
      this.setTemporaryCache(n, this.clientId, !1);
    } else
      !e &&
        this.getInteractionInProgress() === this.clientId &&
        this.removeTemporaryItem(n);
  }
  getLegacyLoginHint() {
    const e = this.getTemporaryCache(Wt.ADAL_ID_TOKEN);
    e &&
      (this.browserStorage.removeItem(Wt.ADAL_ID_TOKEN),
      this.logger.verbose("Cached ADAL id token retrieved."));
    const n = this.getTemporaryCache(Wt.ID_TOKEN, !0);
    n &&
      (this.browserStorage.removeItem(this.generateCacheKey(Wt.ID_TOKEN)),
      this.logger.verbose("Cached MSAL.js v1 id token retrieved"));
    const r = n || e;
    if (r) {
      const i = va(r, ti);
      if (i.preferred_username)
        return (
          this.logger.verbose(
            "No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"
          ),
          i.preferred_username
        );
      if (i.upn)
        return (
          this.logger.verbose(
            "No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"
          ),
          i.upn
        );
      this.logger.verbose(
        "No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO."
      );
    }
    return null;
  }
  updateCredentialCacheKey(e, n) {
    const r = ns(n);
    if (e !== r) {
      const i = this.getItem(e);
      if (i)
        return (
          this.browserStorage.removeItem(e),
          this.setItem(r, i),
          this.logger.verbose(
            `Updated an outdated ${n.credentialType} cache key`
          ),
          r
        );
      this.logger.error(
        `Attempted to update an outdated ${n.credentialType} cache key but no item matching the outdated key was found in storage`
      );
    }
    return e;
  }
  async hydrateCache(e, n) {
    var l, c, u;
    const r = Zh(
      (l = e.account) == null ? void 0 : l.homeAccountId,
      (c = e.account) == null ? void 0 : c.environment,
      e.idToken,
      this.clientId,
      e.tenantId
    );
    let i;
    n.claims && (i = await this.cryptoImpl.hashString(n.claims));
    const o = ef(
        (u = e.account) == null ? void 0 : u.homeAccountId,
        e.account.environment,
        e.accessToken,
        this.clientId,
        e.tenantId,
        e.scopes.join(" "),
        e.expiresOn ? e.expiresOn.getTime() / 1e3 : 0,
        e.extExpiresOn ? e.extExpiresOn.getTime() / 1e3 : 0,
        ti,
        void 0,
        e.tokenType,
        void 0,
        n.sshKid,
        n.claims,
        i
      ),
      a = { idToken: r, accessToken: o };
    return this.saveCacheRecord(a);
  }
  async saveCacheRecord(e, n, r) {
    try {
      await super.saveCacheRecord(e, n, r);
    } catch (i) {
      if (i instanceof ps && this.performanceClient && r)
        try {
          const o = this.getTokenKeys();
          this.performanceClient.addFields(
            {
              cacheRtCount: o.refreshToken.length,
              cacheIdCount: o.idToken.length,
              cacheAtCount: o.accessToken.length,
            },
            r
          );
        } catch {}
      throw i;
    }
  }
}
const Q_ = (t, e) => {
  const n = {
    cacheLocation: Ht.MemoryStorage,
    temporaryCacheLocation: Ht.MemoryStorage,
    storeAuthStateInCookie: !1,
    secureCookies: !1,
    cacheMigrationEnabled: !1,
    claimsBasedCachingEnabled: !1,
  };
  return new ag(t, n, th, e);
};
/*! @azure/msal-browser v3.20.0 2024-07-23 */ function Y_(t, e, n, r) {
  return t.verbose("getAllAccounts called"), n ? e.getAllAccounts(r) : [];
}
function X_(t, e, n) {
  if ((e.trace("getAccount called"), Object.keys(t).length === 0))
    return e.warning("getAccount: No accountFilter provided"), null;
  const r = n.getAccountInfoFilteredBy(t);
  return r
    ? (e.verbose(
        "getAccount: Account matching provided filter found, returning"
      ),
      r)
    : (e.verbose("getAccount: No matching account found, returning null"),
      null);
}
function J_(t, e, n) {
  if ((e.trace("getAccountByUsername called"), !t))
    return e.warning("getAccountByUsername: No username provided"), null;
  const r = n.getAccountInfoFilteredBy({ username: t });
  return r
    ? (e.verbose(
        "getAccountByUsername: Account matching username found, returning"
      ),
      e.verbosePii(
        `getAccountByUsername: Returning signed-in accounts matching username: ${t}`
      ),
      r)
    : (e.verbose(
        "getAccountByUsername: No matching account found, returning null"
      ),
      null);
}
function Z_(t, e, n) {
  if ((e.trace("getAccountByHomeId called"), !t))
    return e.warning("getAccountByHomeId: No homeAccountId provided"), null;
  const r = n.getAccountInfoFilteredBy({ homeAccountId: t });
  return r
    ? (e.verbose(
        "getAccountByHomeId: Account matching homeAccountId found, returning"
      ),
      e.verbosePii(
        `getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${t}`
      ),
      r)
    : (e.verbose(
        "getAccountByHomeId: No matching account found, returning null"
      ),
      null);
}
function eM(t, e, n) {
  if ((e.trace("getAccountByLocalId called"), !t))
    return e.warning("getAccountByLocalId: No localAccountId provided"), null;
  const r = n.getAccountInfoFilteredBy({ localAccountId: t });
  return r
    ? (e.verbose(
        "getAccountByLocalId: Account matching localAccountId found, returning"
      ),
      e.verbosePii(
        `getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${t}`
      ),
      r)
    : (e.verbose(
        "getAccountByLocalId: No matching account found, returning null"
      ),
      null);
}
function tM(t, e) {
  e.setActiveAccount(t);
}
function nM(t) {
  return t.getActiveAccount();
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const de = {
  INITIALIZE_START: "msal:initializeStart",
  INITIALIZE_END: "msal:initializeEnd",
  ACCOUNT_ADDED: "msal:accountAdded",
  ACCOUNT_REMOVED: "msal:accountRemoved",
  ACTIVE_ACCOUNT_CHANGED: "msal:activeAccountChanged",
  LOGIN_START: "msal:loginStart",
  LOGIN_SUCCESS: "msal:loginSuccess",
  LOGIN_FAILURE: "msal:loginFailure",
  ACQUIRE_TOKEN_START: "msal:acquireTokenStart",
  ACQUIRE_TOKEN_SUCCESS: "msal:acquireTokenSuccess",
  ACQUIRE_TOKEN_FAILURE: "msal:acquireTokenFailure",
  ACQUIRE_TOKEN_NETWORK_START: "msal:acquireTokenFromNetworkStart",
  SSO_SILENT_START: "msal:ssoSilentStart",
  SSO_SILENT_SUCCESS: "msal:ssoSilentSuccess",
  SSO_SILENT_FAILURE: "msal:ssoSilentFailure",
  ACQUIRE_TOKEN_BY_CODE_START: "msal:acquireTokenByCodeStart",
  ACQUIRE_TOKEN_BY_CODE_SUCCESS: "msal:acquireTokenByCodeSuccess",
  ACQUIRE_TOKEN_BY_CODE_FAILURE: "msal:acquireTokenByCodeFailure",
  HANDLE_REDIRECT_START: "msal:handleRedirectStart",
  HANDLE_REDIRECT_END: "msal:handleRedirectEnd",
  POPUP_OPENED: "msal:popupOpened",
  LOGOUT_START: "msal:logoutStart",
  LOGOUT_SUCCESS: "msal:logoutSuccess",
  LOGOUT_FAILURE: "msal:logoutFailure",
  LOGOUT_END: "msal:logoutEnd",
  RESTORE_FROM_BFCACHE: "msal:restoreFromBFCache",
};
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class rM {
  constructor(e, n) {
    (this.eventCallbacks = new Map()),
      (this.logger = e),
      (this.browserCrypto = n),
      (this.listeningToStorageEvents = !1),
      (this.handleAccountCacheChange =
        this.handleAccountCacheChange.bind(this));
  }
  addEventCallback(e) {
    if (typeof window < "u") {
      const n = Mi();
      return (
        this.eventCallbacks.set(n, e),
        this.logger.verbose(`Event callback registered with id: ${n}`),
        n
      );
    }
    return null;
  }
  removeEventCallback(e) {
    this.eventCallbacks.delete(e),
      this.logger.verbose(`Event callback ${e} removed.`);
  }
  enableAccountStorageEvents() {
    typeof window > "u" ||
      (this.listeningToStorageEvents
        ? this.logger.verbose("Account storage listener already registered.")
        : (this.logger.verbose("Adding account storage listener."),
          (this.listeningToStorageEvents = !0),
          window.addEventListener("storage", this.handleAccountCacheChange)));
  }
  disableAccountStorageEvents() {
    typeof window > "u" ||
      (this.listeningToStorageEvents
        ? (this.logger.verbose("Removing account storage listener."),
          window.removeEventListener("storage", this.handleAccountCacheChange),
          (this.listeningToStorageEvents = !1))
        : this.logger.verbose("No account storage listener registered."));
  }
  emitEvent(e, n, r, i) {
    if (typeof window < "u") {
      const o = {
        eventType: e,
        interactionType: n || null,
        payload: r || null,
        error: i || null,
        timestamp: Date.now(),
      };
      this.logger.info(`Emitting event: ${e}`),
        this.eventCallbacks.forEach((a, l) => {
          this.logger.verbose(`Emitting event to callback ${l}: ${e}`),
            a.apply(null, [o]);
        });
    }
  }
  handleAccountCacheChange(e) {
    var n;
    try {
      (n = e.key) != null &&
        n.includes(Wt.ACTIVE_ACCOUNT_FILTERS) &&
        this.emitEvent(de.ACTIVE_ACCOUNT_CHANGED);
      const r = e.newValue || e.oldValue;
      if (!r) return;
      const i = JSON.parse(r);
      if (typeof i != "object" || !Kt.isAccountEntity(i)) return;
      const a = Ns.toObject(new Kt(), i).getAccountInfo();
      !e.oldValue && e.newValue
        ? (this.logger.info("Account was added to cache in a different window"),
          this.emitEvent(de.ACCOUNT_ADDED, void 0, a))
        : !e.newValue &&
          e.oldValue &&
          (this.logger.info(
            "Account was removed from cache in a different window"
          ),
          this.emitEvent(de.ACCOUNT_REMOVED, void 0, a));
    } catch {
      return;
    }
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class XI {
  constructor(e, n, r, i, o, a, l, c, u) {
    (this.config = e),
      (this.browserStorage = n),
      (this.browserCrypto = r),
      (this.networkClient = this.config.system.networkClient),
      (this.eventHandler = o),
      (this.navigationClient = a),
      (this.nativeMessageHandler = c),
      (this.correlationId = u || Mi()),
      (this.logger = i.clone(nr.MSAL_SKU, af, this.correlationId)),
      (this.performanceClient = l);
  }
  async clearCacheOnLogout(e) {
    if (e) {
      Kt.accountInfoIsEqual(e, this.browserStorage.getActiveAccount(), !1) &&
        (this.logger.verbose("Setting active account to null"),
        this.browserStorage.setActiveAccount(null));
      try {
        await this.browserStorage.removeAccount(Kt.generateAccountCacheKey(e)),
          this.logger.verbose(
            "Cleared cache items belonging to the account provided in the logout request."
          );
      } catch {
        this.logger.error(
          "Account provided in logout request was not found. Local cache unchanged."
        );
      }
    } else
      try {
        this.logger.verbose(
          "No account provided in logout request, clearing all cache items.",
          this.correlationId
        ),
          await this.browserStorage.clear(),
          await this.browserCrypto.clearKeystore();
      } catch {
        this.logger.error(
          "Attempted to clear all MSAL cache items and failed. Local cache unchanged."
        );
      }
  }
  getRedirectUri(e) {
    this.logger.verbose("getRedirectUri called");
    const n = e || this.config.auth.redirectUri || Ni();
    return De.getAbsoluteUrl(n, Ni());
  }
  initializeServerTelemetryManager(e, n) {
    this.logger.verbose("initializeServerTelemetryManager called");
    const r = {
      clientId: this.config.auth.clientId,
      correlationId: this.correlationId,
      apiId: e,
      forceRefresh: n || !1,
      wrapperSKU: this.browserStorage.getWrapperMetadata()[0],
      wrapperVer: this.browserStorage.getWrapperMetadata()[1],
    };
    return new dc(r, this.browserStorage);
  }
  async getDiscoveredAuthority(e, n, r) {
    this.performanceClient.addQueueMeasurement(
      B.StandardInteractionClientGetDiscoveredAuthority,
      this.correlationId
    );
    const i = {
        protocolMode: this.config.auth.protocolMode,
        OIDCOptions: this.config.auth.OIDCOptions,
        knownAuthorities: this.config.auth.knownAuthorities,
        cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,
        authorityMetadata: this.config.auth.authorityMetadata,
        skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,
      },
      o = e || this.config.auth.authority,
      a = hn.generateAuthority(o, n || this.config.auth.azureCloudOptions),
      l = await te(
        iI,
        B.AuthorityFactoryCreateDiscoveredInstance,
        this.logger,
        this.performanceClient,
        this.correlationId
      )(
        a,
        this.config.system.networkClient,
        this.browserStorage,
        i,
        this.logger,
        this.correlationId,
        this.performanceClient
      );
    if (r && !l.isAlias(r.environment)) throw tt(J1);
    return l;
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const iM = 32;
async function oM(t, e, n) {
  t.addQueueMeasurement(B.GeneratePkceCodes, n);
  const r = ba(aM, B.GenerateCodeVerifier, e, t, n)(t, e, n),
    i = await te(sM, B.GenerateCodeChallengeFromVerifier, e, t, n)(r, t, e, n);
  return { verifier: r, challenge: i };
}
function aM(t, e, n) {
  try {
    const r = new Uint8Array(iM);
    return ba(k_, B.GetRandomValues, e, t, n)(r), of(r);
  } catch {
    throw he(Mv);
  }
}
async function sM(t, e, n, r) {
  e.addQueueMeasurement(B.GenerateCodeChallengeFromVerifier, r);
  try {
    const i = await te(GI, B.Sha256Digest, n, e, r)(t, e, r);
    return of(new Uint8Array(i));
  } catch {
    throw he(Mv);
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ async function Qv(t, e, n, r) {
  n.addQueueMeasurement(B.InitializeBaseRequest, t.correlationId);
  const i = t.authority || e.auth.authority,
    o = [...((t && t.scopes) || [])],
    a = { ...t, correlationId: t.correlationId, authority: i, scopes: o };
  if (!a.authenticationScheme)
    (a.authenticationScheme = Ze.BEARER),
      r.verbose(
        `Authentication Scheme wasn't explicitly set in request, defaulting to "Bearer" request`
      );
  else {
    if (a.authenticationScheme === Ze.SSH) {
      if (!t.sshJwk) throw tt(Xh);
      if (!t.sshKid) throw tt(Q1);
    }
    r.verbose(
      `Authentication Scheme set to "${a.authenticationScheme}" as configured in Auth request`
    );
  }
  return (
    e.cache.claimsBasedCachingEnabled &&
      t.claims &&
      !Nr.isEmptyObj(t.claims) &&
      (a.requestedClaimsHash = await WI(t.claims)),
    a
  );
}
async function lM(t, e, n, r, i) {
  r.addQueueMeasurement(B.InitializeSilentRequest, t.correlationId);
  const o = await te(
    Qv,
    B.InitializeBaseRequest,
    i,
    r,
    t.correlationId
  )(t, n, r, i);
  return { ...t, ...o, account: e, forceRefresh: t.forceRefresh || !1 };
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class qs extends XI {
  async initializeAuthorizationCodeRequest(e) {
    this.performanceClient.addQueueMeasurement(
      B.StandardInteractionClientInitializeAuthorizationCodeRequest,
      this.correlationId
    );
    const n = await te(
        oM,
        B.GeneratePkceCodes,
        this.logger,
        this.performanceClient,
        this.correlationId
      )(this.performanceClient, this.logger, this.correlationId),
      r = {
        ...e,
        redirectUri: e.redirectUri,
        code: H.EMPTY_STRING,
        codeVerifier: n.verifier,
      };
    return (
      (e.codeChallenge = n.challenge),
      (e.codeChallengeMethod = H.S256_CODE_CHALLENGE_METHOD),
      r
    );
  }
  initializeLogoutRequest(e) {
    this.logger.verbose(
      "initializeLogoutRequest called",
      e == null ? void 0 : e.correlationId
    );
    const n = { correlationId: this.correlationId || Mi(), ...e };
    if (e)
      if (e.logoutHint)
        this.logger.verbose("logoutHint has already been set in logoutRequest");
      else if (e.account) {
        const r = this.getLogoutHintFromIdTokenClaims(e.account);
        r &&
          (this.logger.verbose(
            "Setting logoutHint to login_hint ID Token Claim value for the account provided"
          ),
          (n.logoutHint = r));
      } else
        this.logger.verbose(
          "logoutHint was not set and account was not passed into logout request, logoutHint will not be set"
        );
    else
      this.logger.verbose(
        "logoutHint will not be set since no logout request was configured"
      );
    return (
      !e || e.postLogoutRedirectUri !== null
        ? e && e.postLogoutRedirectUri
          ? (this.logger.verbose(
              "Setting postLogoutRedirectUri to uri set on logout request",
              n.correlationId
            ),
            (n.postLogoutRedirectUri = De.getAbsoluteUrl(
              e.postLogoutRedirectUri,
              Ni()
            )))
          : this.config.auth.postLogoutRedirectUri === null
          ? this.logger.verbose(
              "postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",
              n.correlationId
            )
          : this.config.auth.postLogoutRedirectUri
          ? (this.logger.verbose(
              "Setting postLogoutRedirectUri to configured uri",
              n.correlationId
            ),
            (n.postLogoutRedirectUri = De.getAbsoluteUrl(
              this.config.auth.postLogoutRedirectUri,
              Ni()
            )))
          : (this.logger.verbose(
              "Setting postLogoutRedirectUri to current page",
              n.correlationId
            ),
            (n.postLogoutRedirectUri = De.getAbsoluteUrl(Ni(), Ni())))
        : this.logger.verbose(
            "postLogoutRedirectUri passed as null, not setting post logout redirect uri",
            n.correlationId
          ),
      n
    );
  }
  getLogoutHintFromIdTokenClaims(e) {
    const n = e.idTokenClaims;
    if (n) {
      if (n.login_hint) return n.login_hint;
      this.logger.verbose(
        "The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request"
      );
    } else
      this.logger.verbose(
        "The provided account does not contain ID Token Claims, logoutHint will not be added to logout request"
      );
    return null;
  }
  async createAuthCodeClient(e, n, r, i) {
    this.performanceClient.addQueueMeasurement(
      B.StandardInteractionClientCreateAuthCodeClient,
      this.correlationId
    );
    const o = await te(
      this.getClientConfiguration.bind(this),
      B.StandardInteractionClientGetClientConfiguration,
      this.logger,
      this.performanceClient,
      this.correlationId
    )(e, n, r, i);
    return new dI(o, this.performanceClient);
  }
  async getClientConfiguration(e, n, r, i) {
    this.performanceClient.addQueueMeasurement(
      B.StandardInteractionClientGetClientConfiguration,
      this.correlationId
    );
    const o = await te(
        this.getDiscoveredAuthority.bind(this),
        B.StandardInteractionClientGetDiscoveredAuthority,
        this.logger,
        this.performanceClient,
        this.correlationId
      )(n, r, i),
      a = this.config.system.loggerOptions;
    return {
      authOptions: {
        clientId: this.config.auth.clientId,
        authority: o,
        clientCapabilities: this.config.auth.clientCapabilities,
      },
      systemOptions: {
        tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,
        preventCorsPreflight: !0,
      },
      loggerOptions: {
        loggerCallback: a.loggerCallback,
        piiLoggingEnabled: a.piiLoggingEnabled,
        logLevel: a.logLevel,
        correlationId: this.correlationId,
      },
      cacheOptions: {
        claimsBasedCachingEnabled: this.config.cache.claimsBasedCachingEnabled,
      },
      cryptoInterface: this.browserCrypto,
      networkInterface: this.networkClient,
      storageInterface: this.browserStorage,
      serverTelemetryManager: e,
      libraryInfo: {
        sku: nr.MSAL_SKU,
        version: af,
        cpu: H.EMPTY_STRING,
        os: H.EMPTY_STRING,
      },
      telemetry: this.config.telemetry,
    };
  }
  async initializeAuthorizationRequest(e, n) {
    this.performanceClient.addQueueMeasurement(
      B.StandardInteractionClientInitializeAuthorizationRequest,
      this.correlationId
    );
    const r = this.getRedirectUri(e.redirectUri),
      i = { interactionType: n },
      o = kr.setRequestState(
        this.browserCrypto,
        (e && e.state) || H.EMPTY_STRING,
        i
      ),
      l = {
        ...(await te(
          Qv,
          B.InitializeBaseRequest,
          this.logger,
          this.performanceClient,
          this.correlationId
        )(
          { ...e, correlationId: this.correlationId },
          this.config,
          this.performanceClient,
          this.logger
        )),
        redirectUri: r,
        state: o,
        nonce: e.nonce || Mi(),
        responseMode: this.config.auth.OIDCOptions.serverResponseType,
      },
      c = e.account || this.browserStorage.getActiveAccount();
    if (
      (c &&
        (this.logger.verbose(
          "Setting validated request account",
          this.correlationId
        ),
        this.logger.verbosePii(
          `Setting validated request account: ${c.homeAccountId}`,
          this.correlationId
        ),
        (l.account = c)),
      !l.loginHint && !c)
    ) {
      const u = this.browserStorage.getLegacyLoginHint();
      u && (l.loginHint = u);
    }
    return l;
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const cM = "ContentError",
  JI = "user_switch";
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const uM =
    "USER_INTERACTION_REQUIRED",
  dM = "USER_CANCEL",
  hM = "NO_NETWORK",
  fM = "PERSISTENT_ERROR",
  pM = "DISABLED",
  mM = "ACCOUNT_UNAVAILABLE";
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const gM = -2147186943,
  yM = {
    [JI]: "User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.",
  };
class Wr extends Nt {
  constructor(e, n, r) {
    super(e, n),
      Object.setPrototypeOf(this, Wr.prototype),
      (this.name = "NativeAuthError"),
      (this.ext = r);
  }
}
function Ha(t) {
  if (
    (t.ext && t.ext.status && (t.ext.status === fM || t.ext.status === pM)) ||
    (t.ext && t.ext.error && t.ext.error === gM)
  )
    return !0;
  switch (t.errorCode) {
    case cM:
      return !0;
    default:
      return !1;
  }
}
function sg(t, e, n) {
  if (n && n.status)
    switch (n.status) {
      case mM:
        return eg(uI);
      case uM:
        return new jr(t, e);
      case dM:
        return he(aa);
      case hM:
        return he(oh);
    }
  return new Wr(t, yM[t] || e, n);
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class ZI extends qs {
  async acquireToken(e) {
    this.performanceClient.addQueueMeasurement(
      B.SilentCacheClientAcquireToken,
      e.correlationId
    );
    const n = this.initializeServerTelemetryManager(
        ut.acquireTokenSilent_silentFlow
      ),
      r = await te(
        this.getClientConfiguration.bind(this),
        B.StandardInteractionClientGetClientConfiguration,
        this.logger,
        this.performanceClient,
        this.correlationId
      )(n, e.authority, e.azureCloudOptions, e.account),
      i = new a_(r, this.performanceClient);
    this.logger.verbose("Silent auth client created");
    try {
      const a = (
        await te(
          i.acquireCachedToken.bind(i),
          B.SilentFlowClientAcquireCachedToken,
          this.logger,
          this.performanceClient,
          e.correlationId
        )(e)
      )[0];
      return (
        this.performanceClient.addFields({ fromCache: !0 }, e.correlationId), a
      );
    } catch (o) {
      throw (
        (o instanceof _c &&
          o.errorCode === zv &&
          this.logger.verbose(
            "Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."
          ),
        o)
      );
    }
  }
  logout(e) {
    this.logger.verbose("logoutRedirect called");
    const n = this.initializeLogoutRequest(e);
    return this.clearCacheOnLogout(n == null ? void 0 : n.account);
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const bp = {
  BROKER_CLIENT_ID: "brk_client_id",
  BROKER_REDIRECT_URI: "brk_redirect_uri",
};
class ms extends XI {
  constructor(e, n, r, i, o, a, l, c, u, d, h, f) {
    var m;
    super(e, n, r, i, o, a, c, u, f),
      (this.apiId = l),
      (this.accountId = d),
      (this.nativeMessageHandler = u),
      (this.nativeStorageManager = h),
      (this.silentCacheClient = new ZI(
        e,
        this.nativeStorageManager,
        r,
        i,
        o,
        a,
        c,
        u,
        f
      )),
      (this.serverTelemetryManager = this.initializeServerTelemetryManager(
        this.apiId
      ));
    const p =
      this.nativeMessageHandler.getExtensionId() === is.PREFERRED_EXTENSION_ID
        ? "chrome"
        : (m = this.nativeMessageHandler.getExtensionId()) != null && m.length
        ? "unknown"
        : void 0;
    this.skus = dc.makeExtraSkuString({
      libraryName: nr.MSAL_SKU,
      libraryVersion: af,
      extensionName: p,
      extensionVersion: this.nativeMessageHandler.getExtensionVersion(),
    });
  }
  addRequestSKUs(e) {
    e.extraParameters = { ...e.extraParameters, [BP]: this.skus };
  }
  async acquireToken(e) {
    this.performanceClient.addQueueMeasurement(
      B.NativeInteractionClientAcquireToken,
      e.correlationId
    ),
      this.logger.trace("NativeInteractionClient - acquireToken called.");
    const n = this.performanceClient.startMeasurement(
        B.NativeInteractionClientAcquireToken,
        e.correlationId
      ),
      r = oi();
    try {
      const i = await this.initializeNativeRequest(e);
      try {
        const u = await this.acquireTokensFromCache(this.accountId, i);
        return n.end({ success: !0, isNativeBroker: !1, fromCache: !0 }), u;
      } catch {
        this.logger.info(
          "MSAL internal Cache does not contain tokens, proceed to make a native call"
        );
      }
      const { ...o } = i,
        a = { method: qo.GetToken, request: o },
        l = await this.nativeMessageHandler.sendMessage(a),
        c = this.validateNativeResponse(l);
      return await this.handleNativeResponse(c, i, r)
        .then(
          (u) => (
            n.end({ success: !0, isNativeBroker: !0, requestId: u.requestId }),
            this.serverTelemetryManager.clearNativeBrokerErrorCode(),
            u
          )
        )
        .catch((u) => {
          throw (
            (n.end({
              success: !1,
              errorCode: u.errorCode,
              subErrorCode: u.subError,
              isNativeBroker: !0,
            }),
            u)
          );
        });
    } catch (i) {
      throw (
        (i instanceof Wr &&
          this.serverTelemetryManager.setNativeBrokerErrorCode(i.errorCode),
        i)
      );
    }
  }
  createSilentCacheRequest(e, n) {
    return {
      authority: e.authority,
      correlationId: this.correlationId,
      scopes: jt.fromString(e.scope).asArray(),
      account: n,
      forceRefresh: !1,
    };
  }
  async acquireTokensFromCache(e, n) {
    if (!e)
      throw (
        (this.logger.warning(
          "NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"
        ),
        V(Qm))
      );
    const r = this.browserStorage.getBaseAccountInfo({ nativeAccountId: e });
    if (!r) throw V(Qm);
    try {
      const i = this.createSilentCacheRequest(n, r),
        o = await this.silentCacheClient.acquireToken(i),
        a = {
          ...r,
          idTokenClaims: o == null ? void 0 : o.idTokenClaims,
          idToken: o == null ? void 0 : o.idToken,
        };
      return { ...o, account: a };
    } catch (i) {
      throw i;
    }
  }
  async acquireTokenRedirect(e, n) {
    this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");
    const { ...r } = e;
    delete r.onRedirectNavigate;
    const i = await this.initializeNativeRequest(r),
      o = { method: qo.GetToken, request: i };
    try {
      const c = await this.nativeMessageHandler.sendMessage(o);
      this.validateNativeResponse(c);
    } catch (c) {
      if (
        c instanceof Wr &&
        (this.serverTelemetryManager.setNativeBrokerErrorCode(c.errorCode),
        Ha(c))
      )
        throw c;
    }
    this.browserStorage.setTemporaryCache(
      Ke.NATIVE_REQUEST,
      JSON.stringify(i),
      !0
    );
    const a = {
        apiId: ut.acquireTokenRedirect,
        timeout: this.config.system.redirectNavigationTimeout,
        noHistory: !1,
      },
      l = this.config.auth.navigateToLoginRequestUrl
        ? window.location.href
        : this.getRedirectUri(e.redirectUri);
    n.end({ success: !0 }), await this.navigationClient.navigateExternal(l, a);
  }
  async handleRedirectPromise(e, n) {
    if (
      (this.logger.trace(
        "NativeInteractionClient - handleRedirectPromise called."
      ),
      !this.browserStorage.isInteractionInProgress(!0))
    )
      return (
        this.logger.info(
          "handleRedirectPromise called but there is no interaction in progress, returning null."
        ),
        null
      );
    const r = this.browserStorage.getCachedNativeRequest();
    if (!r)
      return (
        this.logger.verbose(
          "NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."
        ),
        e &&
          n &&
          (e == null || e.addFields({ errorCode: "no_cached_request" }, n)),
        null
      );
    const { prompt: i, ...o } = r;
    i &&
      this.logger.verbose(
        "NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."
      ),
      this.browserStorage.removeItem(
        this.browserStorage.generateCacheKey(Ke.NATIVE_REQUEST)
      );
    const a = { method: qo.GetToken, request: o },
      l = oi();
    try {
      this.logger.verbose(
        "NativeInteractionClient - handleRedirectPromise sending message to native broker."
      );
      const c = await this.nativeMessageHandler.sendMessage(a);
      this.validateNativeResponse(c);
      const u = this.handleNativeResponse(c, o, l);
      this.browserStorage.setInteractionInProgress(!1);
      const d = await u;
      return this.serverTelemetryManager.clearNativeBrokerErrorCode(), d;
    } catch (c) {
      throw (this.browserStorage.setInteractionInProgress(!1), c);
    }
  }
  logout() {
    return (
      this.logger.trace("NativeInteractionClient - logout called."),
      Promise.reject("Logout not implemented yet")
    );
  }
  async handleNativeResponse(e, n, r) {
    var d;
    this.logger.trace("NativeInteractionClient - handleNativeResponse called.");
    const i = va(e.id_token, ti),
      o = this.createHomeAccountIdentifier(e, i),
      a =
        (d = this.browserStorage.getAccountInfoFilteredBy({
          nativeAccountId: n.accountId,
        })) == null
          ? void 0
          : d.homeAccountId;
    if (o !== a && e.account.id !== n.accountId) throw sg(JI);
    const l = await this.getDiscoveredAuthority(n.authority),
      c = Lv(
        this.browserStorage,
        l,
        o,
        ti,
        i,
        e.client_info,
        void 0,
        i.tid,
        void 0,
        e.account.id,
        this.logger
      ),
      u = await this.generateAuthenticationResult(
        e,
        n,
        i,
        c,
        l.canonicalAuthority,
        r
      );
    return (
      this.cacheAccount(c),
      this.cacheNativeTokens(e, n, o, i, e.access_token, u.tenantId, r),
      u
    );
  }
  createHomeAccountIdentifier(e, n) {
    return Kt.generateHomeAccountId(
      e.client_info || H.EMPTY_STRING,
      wr.Default,
      this.logger,
      this.browserCrypto,
      n
    );
  }
  generateScopes(e, n) {
    return e.scope ? jt.fromString(e.scope) : jt.fromString(n.scope);
  }
  async generatePopAccessToken(e, n) {
    if (n.tokenType === Ze.POP && n.signPopToken) {
      if (e.shr)
        return (
          this.logger.trace(
            "handleNativeServerResponse: SHR is enabled in native layer"
          ),
          e.shr
        );
      const r = new ks(this.browserCrypto),
        i = {
          resourceRequestMethod: n.resourceRequestMethod,
          resourceRequestUri: n.resourceRequestUri,
          shrClaims: n.shrClaims,
          shrNonce: n.shrNonce,
        };
      if (!n.keyId) throw V(Cv);
      return r.signPopToken(e.access_token, n.keyId, i);
    } else return e.access_token;
  }
  async generateAuthenticationResult(e, n, r, i, o, a) {
    const l = this.addTelemetryFromNativeResponse(e),
      c = e.scope ? jt.fromString(e.scope) : jt.fromString(n.scope),
      u = e.account.properties || {},
      d = u.UID || r.oid || r.sub || H.EMPTY_STRING,
      h = u.TenantId || r.tid || H.EMPTY_STRING,
      f = Av(i.getAccountInfo(), void 0, r, e.id_token);
    f.nativeAccountId !== e.account.id && (f.nativeAccountId = e.account.id);
    const p = await this.generatePopAccessToken(e, n),
      m = n.tokenType === Ze.POP ? Ze.POP : Ze.BEARER;
    return {
      authority: o,
      uniqueId: d,
      tenantId: h,
      scopes: c.asArray(),
      account: f,
      idToken: e.id_token,
      idTokenClaims: r,
      accessToken: p,
      fromCache: l ? this.isResponseFromCache(l) : !1,
      expiresOn: new Date(Number(a + e.expires_in) * 1e3),
      tokenType: m,
      correlationId: this.correlationId,
      state: e.state,
      fromNativeBroker: !0,
    };
  }
  cacheAccount(e) {
    this.browserStorage.setAccount(e),
      this.browserStorage.removeAccountContext(e).catch((n) => {
        this.logger.error(
          `Error occurred while removing account context from browser storage. ${n}`
        );
      });
  }
  cacheNativeTokens(e, n, r, i, o, a, l) {
    const c = Zh(r, n.authority, e.id_token || "", n.clientId, i.tid || ""),
      u =
        n.tokenType === Ze.POP
          ? H.SHR_NONCE_VALIDITY
          : (typeof e.expires_in == "string"
              ? parseInt(e.expires_in, 10)
              : e.expires_in) || 0,
      d = l + u,
      h = this.generateScopes(e, n),
      f = ef(
        r,
        n.authority,
        o,
        n.clientId,
        i.tid || a,
        h.printScopes(),
        d,
        0,
        ti,
        void 0,
        n.tokenType,
        void 0,
        n.keyId
      ),
      p = { idToken: c, accessToken: f };
    this.nativeStorageManager.saveCacheRecord(p, n.storeInCache);
  }
  addTelemetryFromNativeResponse(e) {
    const n = this.getMATSFromResponse(e);
    return n
      ? (this.performanceClient.addFields(
          {
            extensionId: this.nativeMessageHandler.getExtensionId(),
            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),
            matsBrokerVersion: n.broker_version,
            matsAccountJoinOnStart: n.account_join_on_start,
            matsAccountJoinOnEnd: n.account_join_on_end,
            matsDeviceJoin: n.device_join,
            matsPromptBehavior: n.prompt_behavior,
            matsApiErrorCode: n.api_error_code,
            matsUiVisible: n.ui_visible,
            matsSilentCode: n.silent_code,
            matsSilentBiSubCode: n.silent_bi_sub_code,
            matsSilentMessage: n.silent_message,
            matsSilentStatus: n.silent_status,
            matsHttpStatus: n.http_status,
            matsHttpEventCount: n.http_event_count,
          },
          this.correlationId
        ),
        n)
      : null;
  }
  validateNativeResponse(e) {
    if (
      e.hasOwnProperty("access_token") &&
      e.hasOwnProperty("id_token") &&
      e.hasOwnProperty("client_info") &&
      e.hasOwnProperty("account") &&
      e.hasOwnProperty("scope") &&
      e.hasOwnProperty("expires_in")
    )
      return e;
    throw C1(pv, "Response missing expected properties.");
  }
  getMATSFromResponse(e) {
    if (e.properties.MATS)
      try {
        return JSON.parse(e.properties.MATS);
      } catch {
        this.logger.error(
          "NativeInteractionClient - Error parsing MATS telemetry, returning null instead"
        );
      }
    return null;
  }
  isResponseFromCache(e) {
    return typeof e.is_cached > "u"
      ? (this.logger.verbose(
          "NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."
        ),
        !1)
      : !!e.is_cached;
  }
  async initializeNativeRequest(e) {
    this.logger.trace(
      "NativeInteractionClient - initializeNativeRequest called"
    );
    const n = e.authority || this.config.auth.authority;
    e.account &&
      (await this.getDiscoveredAuthority(n, e.azureCloudOptions, e.account));
    const r = new De(n);
    r.validateAsUri();
    const { scopes: i, ...o } = e,
      a = new jt(i || []);
    a.appendScopes(Ks);
    const l = () => {
        switch (this.apiId) {
          case ut.ssoSilent:
          case ut.acquireTokenSilent_silentFlow:
            return (
              this.logger.trace(
                "initializeNativeRequest: silent request sets prompt to none"
              ),
              Yt.NONE
            );
        }
        if (!e.prompt) {
          this.logger.trace("initializeNativeRequest: prompt was not provided");
          return;
        }
        switch (e.prompt) {
          case Yt.NONE:
          case Yt.CONSENT:
          case Yt.LOGIN:
            return (
              this.logger.trace(
                "initializeNativeRequest: prompt is compatible with native flow"
              ),
              e.prompt
            );
          default:
            throw (
              (this.logger.trace(
                `initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`
              ),
              he(UI))
            );
        }
      },
      c = {
        ...o,
        accountId: this.accountId,
        clientId: this.config.auth.clientId,
        authority: r.urlString,
        scope: a.printScopes(),
        redirectUri: this.getRedirectUri(e.redirectUri),
        prompt: l(),
        correlationId: this.correlationId,
        tokenType: e.authenticationScheme,
        windowTitleSubstring: document.title,
        extraParameters: {
          ...e.extraQueryParameters,
          ...e.tokenQueryParameters,
        },
        extendedExpiryToken: !1,
        keyId: e.popKid,
      };
    if (c.signPopToken && e.popKid) throw he(HI);
    if (
      (this.handleExtraBrokerParams(c),
      (c.extraParameters = c.extraParameters || {}),
      (c.extraParameters.telemetry = is.MATS_TELEMETRY),
      e.authenticationScheme === Ze.POP)
    ) {
      const u = {
          resourceRequestUri: e.resourceRequestUri,
          resourceRequestMethod: e.resourceRequestMethod,
          shrClaims: e.shrClaims,
          shrNonce: e.shrNonce,
        },
        d = new ks(this.browserCrypto);
      let h;
      if (c.keyId)
        (h = this.browserCrypto.base64UrlEncode(
          JSON.stringify({ kid: c.keyId })
        )),
          (c.signPopToken = !1);
      else {
        const f = await te(
          d.generateCnf.bind(d),
          B.PopTokenGenerateCnf,
          this.logger,
          this.performanceClient,
          e.correlationId
        )(u, this.logger);
        (h = f.reqCnfString), (c.keyId = f.kid), (c.signPopToken = !0);
      }
      c.reqCnf = h;
    }
    return this.addRequestSKUs(c), c;
  }
  handleExtraBrokerParams(e) {
    if (
      e.extraParameters &&
      e.extraParameters.hasOwnProperty(bp.BROKER_CLIENT_ID) &&
      e.extraParameters.hasOwnProperty(bp.BROKER_REDIRECT_URI) &&
      e.extraParameters.hasOwnProperty(Is)
    ) {
      const n = e.extraParameters[Is],
        r = e.redirectUri,
        i = e.extraParameters[bp.BROKER_REDIRECT_URI];
      (e.extraParameters = { child_client_id: n, child_redirect_uri: r }),
        (e.redirectUri = i);
    }
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class Jr {
  constructor(e, n, r, i) {
    (this.logger = e),
      (this.handshakeTimeoutMs = n),
      (this.extensionId = i),
      (this.resolvers = new Map()),
      (this.handshakeResolvers = new Map()),
      (this.messageChannel = new MessageChannel()),
      (this.windowListener = this.onWindowMessage.bind(this)),
      (this.performanceClient = r),
      (this.handshakeEvent = r.startMeasurement(
        B.NativeMessageHandlerHandshake
      ));
  }
  async sendMessage(e) {
    this.logger.trace("NativeMessageHandler - sendMessage called.");
    const n = {
      channel: is.CHANNEL_ID,
      extensionId: this.extensionId,
      responseId: Mi(),
      body: e,
    };
    return (
      this.logger.trace(
        "NativeMessageHandler - Sending request to browser extension"
      ),
      this.logger.tracePii(
        `NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(
          n
        )}`
      ),
      this.messageChannel.port1.postMessage(n),
      new Promise((r, i) => {
        this.resolvers.set(n.responseId, { resolve: r, reject: i });
      })
    );
  }
  static async createProvider(e, n, r) {
    e.trace("NativeMessageHandler - createProvider called.");
    try {
      const i = new Jr(e, n, r, is.PREFERRED_EXTENSION_ID);
      return await i.sendHandshakeRequest(), i;
    } catch {
      const o = new Jr(e, n, r);
      return await o.sendHandshakeRequest(), o;
    }
  }
  async sendHandshakeRequest() {
    this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),
      window.addEventListener("message", this.windowListener, !1);
    const e = {
      channel: is.CHANNEL_ID,
      extensionId: this.extensionId,
      responseId: Mi(),
      body: { method: qo.HandshakeRequest },
    };
    return (
      this.handshakeEvent.add({
        extensionId: this.extensionId,
        extensionHandshakeTimeoutMs: this.handshakeTimeoutMs,
      }),
      (this.messageChannel.port1.onmessage = (n) => {
        this.onChannelMessage(n);
      }),
      window.postMessage(e, window.origin, [this.messageChannel.port2]),
      new Promise((n, r) => {
        this.handshakeResolvers.set(e.responseId, { resolve: n, reject: r }),
          (this.timeoutId = window.setTimeout(() => {
            window.removeEventListener("message", this.windowListener, !1),
              this.messageChannel.port1.close(),
              this.messageChannel.port2.close(),
              this.handshakeEvent.end({
                extensionHandshakeTimedOut: !0,
                success: !1,
              }),
              r(he(MI)),
              this.handshakeResolvers.delete(e.responseId);
          }, this.handshakeTimeoutMs));
      })
    );
  }
  onWindowMessage(e) {
    if (
      (this.logger.trace("NativeMessageHandler - onWindowMessage called"),
      e.source !== window)
    )
      return;
    const n = e.data;
    if (
      !(!n.channel || n.channel !== is.CHANNEL_ID) &&
      !(n.extensionId && n.extensionId !== this.extensionId) &&
      n.body.method === qo.HandshakeRequest
    ) {
      const r = this.handshakeResolvers.get(n.responseId);
      if (!r) {
        this.logger.trace(
          `NativeMessageHandler.onWindowMessage - resolver can't be found for request ${n.responseId}`
        );
        return;
      }
      this.logger.verbose(
        n.extensionId
          ? `Extension with id: ${n.extensionId} not installed`
          : "No extension installed"
      ),
        clearTimeout(this.timeoutId),
        this.messageChannel.port1.close(),
        this.messageChannel.port2.close(),
        window.removeEventListener("message", this.windowListener, !1),
        this.handshakeEvent.end({ success: !1, extensionInstalled: !1 }),
        r.reject(he(FI));
    }
  }
  onChannelMessage(e) {
    this.logger.trace("NativeMessageHandler - onChannelMessage called.");
    const n = e.data,
      r = this.resolvers.get(n.responseId),
      i = this.handshakeResolvers.get(n.responseId);
    try {
      const o = n.body.method;
      if (o === qo.Response) {
        if (!r) return;
        const a = n.body.response;
        if (
          (this.logger.trace(
            "NativeMessageHandler - Received response from browser extension"
          ),
          this.logger.tracePii(
            `NativeMessageHandler - Received response from browser extension: ${JSON.stringify(
              a
            )}`
          ),
          a.status !== "Success")
        )
          r.reject(sg(a.code, a.description, a.ext));
        else if (a.result)
          a.result.code && a.result.description
            ? r.reject(sg(a.result.code, a.result.description, a.result.ext))
            : r.resolve(a.result);
        else throw C1(pv, "Event does not contain result.");
        this.resolvers.delete(n.responseId);
      } else if (o === qo.HandshakeResponse) {
        if (!i) {
          this.logger.trace(
            `NativeMessageHandler.onChannelMessage - resolver can't be found for request ${n.responseId}`
          );
          return;
        }
        clearTimeout(this.timeoutId),
          window.removeEventListener("message", this.windowListener, !1),
          (this.extensionId = n.extensionId),
          (this.extensionVersion = n.body.version),
          this.logger.verbose(
            `NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`
          ),
          this.handshakeEvent.end({ extensionInstalled: !0, success: !0 }),
          i.resolve(),
          this.handshakeResolvers.delete(n.responseId);
      }
    } catch (o) {
      this.logger.error("Error parsing response from WAM Extension"),
        this.logger.errorPii(`Error parsing response from WAM Extension: ${o}`),
        this.logger.errorPii(`Unable to parse ${e}`),
        r ? r.reject(o) : i && i.reject(o);
    }
  }
  getExtensionId() {
    return this.extensionId;
  }
  getExtensionVersion() {
    return this.extensionVersion;
  }
  static isNativeAvailable(e, n, r, i) {
    if ((n.trace("isNativeAvailable called"), !e.system.allowNativeBroker))
      return (
        n.trace(
          "isNativeAvailable: allowNativeBroker is not enabled, returning false"
        ),
        !1
      );
    if (!r)
      return (
        n.trace(
          "isNativeAvailable: WAM extension provider is not initialized, returning false"
        ),
        !1
      );
    if (i)
      switch (i) {
        case Ze.BEARER:
        case Ze.POP:
          return (
            n.trace(
              "isNativeAvailable: authenticationScheme is supported, returning true"
            ),
            !0
          );
        default:
          return (
            n.trace(
              "isNativeAvailable: authenticationScheme is not supported, returning false"
            ),
            !1
          );
      }
    return !0;
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class Yv {
  constructor(e, n, r, i, o) {
    (this.authModule = e),
      (this.browserStorage = n),
      (this.authCodeRequest = r),
      (this.logger = i),
      (this.performanceClient = o);
  }
  async handleCodeResponse(e, n) {
    this.performanceClient.addQueueMeasurement(
      B.HandleCodeResponse,
      n.correlationId
    );
    let r;
    try {
      r = this.authModule.handleFragmentResponse(e, n.state);
    } catch (i) {
      throw i instanceof Eo && i.subError === aa ? he(aa) : i;
    }
    return te(
      this.handleCodeResponseFromServer.bind(this),
      B.HandleCodeResponseFromServer,
      this.logger,
      this.performanceClient,
      n.correlationId
    )(r, n);
  }
  async handleCodeResponseFromServer(e, n, r = !0) {
    if (
      (this.performanceClient.addQueueMeasurement(
        B.HandleCodeResponseFromServer,
        n.correlationId
      ),
      this.logger.trace(
        "InteractionHandler.handleCodeResponseFromServer called"
      ),
      (this.authCodeRequest.code = e.code),
      e.cloud_instance_host_name &&
        (await te(
          this.authModule.updateAuthority.bind(this.authModule),
          B.UpdateTokenEndpointAuthority,
          this.logger,
          this.performanceClient,
          n.correlationId
        )(e.cloud_instance_host_name, n.correlationId)),
      r && (e.nonce = n.nonce || void 0),
      (e.state = n.state),
      e.client_info)
    )
      this.authCodeRequest.clientInfo = e.client_info;
    else {
      const o = this.createCcsCredentials(n);
      o && (this.authCodeRequest.ccsCredential = o);
    }
    return await te(
      this.authModule.acquireToken.bind(this.authModule),
      B.AuthClientAcquireToken,
      this.logger,
      this.performanceClient,
      n.correlationId
    )(this.authCodeRequest, e);
  }
  createCcsCredentials(e) {
    return e.account
      ? { credential: e.account.homeAccountId, type: zn.HOME_ACCOUNT_ID }
      : e.loginHint
      ? { credential: e.loginHint, type: zn.UPN }
      : null;
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ function eN(t, e, n) {
  const r = Zd(t);
  if (!r)
    throw Z1(t)
      ? (n.error(
          `A ${e} is present in the iframe but it does not contain known properties. It's likely that the ${e} has been replaced by code running on the redirectUri page.`
        ),
        n.errorPii(`The ${e} detected is: ${t}`),
        he(yI))
      : (n.error(
          `The request has returned to the redirectUri but a ${e} is not present. It's likely that the ${e} has been removed or the page has been redirected by code running on the redirectUri page.`
        ),
        he(gI));
  return r;
}
function vM(t, e, n) {
  if (!t.state) throw he(Fv);
  const r = YI(e, t.state);
  if (!r) throw he(vI);
  if (r.interactionType !== n) throw he(bI);
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class bM extends qs {
  constructor(e, n, r, i, o, a, l, c, u, d) {
    super(e, n, r, i, o, a, l, u, d),
      (this.unloadWindow = this.unloadWindow.bind(this)),
      (this.nativeStorage = c);
  }
  acquireToken(e) {
    try {
      const n = this.generatePopupName(
          e.scopes || Ks,
          e.authority || this.config.auth.authority
        ),
        r = e.popupWindowAttributes || {};
      if (this.config.system.asyncPopups)
        return (
          this.logger.verbose("asyncPopups set to true, acquiring token"),
          this.acquireTokenPopupAsync(e, n, r)
        );
      {
        this.logger.verbose(
          "asyncPopup set to false, opening popup before acquiring token"
        );
        const i = this.openSizedPopup("about:blank", n, r);
        return this.acquireTokenPopupAsync(e, n, r, i);
      }
    } catch (n) {
      return Promise.reject(n);
    }
  }
  logout(e) {
    try {
      this.logger.verbose("logoutPopup called");
      const n = this.initializeLogoutRequest(e),
        r = this.generateLogoutPopupName(n),
        i = e && e.authority,
        o = e && e.mainWindowRedirectUri,
        a = (e == null ? void 0 : e.popupWindowAttributes) || {};
      if (this.config.system.asyncPopups)
        return (
          this.logger.verbose("asyncPopups set to true"),
          this.logoutPopupAsync(n, r, a, i, void 0, o)
        );
      {
        this.logger.verbose("asyncPopup set to false, opening popup");
        const l = this.openSizedPopup("about:blank", r, a);
        return this.logoutPopupAsync(n, r, a, i, l, o);
      }
    } catch (n) {
      return Promise.reject(n);
    }
  }
  async acquireTokenPopupAsync(e, n, r, i) {
    this.logger.verbose("acquireTokenPopupAsync called");
    const o = this.initializeServerTelemetryManager(ut.acquireTokenPopup),
      a = await te(
        this.initializeAuthorizationRequest.bind(this),
        B.StandardInteractionClientInitializeAuthorizationRequest,
        this.logger,
        this.performanceClient,
        this.correlationId
      )(e, ye.Popup);
    QI(a.authority);
    try {
      const l = await te(
          this.initializeAuthorizationCodeRequest.bind(this),
          B.StandardInteractionClientInitializeAuthorizationCodeRequest,
          this.logger,
          this.performanceClient,
          this.correlationId
        )(a),
        c = await te(
          this.createAuthCodeClient.bind(this),
          B.StandardInteractionClientCreateAuthCodeClient,
          this.logger,
          this.performanceClient,
          this.correlationId
        )(o, a.authority, a.azureCloudOptions, a.account),
        u = Jr.isNativeAvailable(
          this.config,
          this.logger,
          this.nativeMessageHandler,
          e.authenticationScheme
        );
      let d;
      u &&
        (d = this.performanceClient.startMeasurement(
          B.FetchAccountIdWithNativeBroker,
          e.correlationId
        ));
      const h = await c.getAuthCodeUrl({ ...a, nativeBroker: u }),
        f = new Yv(
          c,
          this.browserStorage,
          l,
          this.logger,
          this.performanceClient
        ),
        p = { popup: i, popupName: n, popupWindowAttributes: r },
        m = this.initiateAuthRequest(h, p);
      this.eventHandler.emitEvent(
        de.POPUP_OPENED,
        ye.Popup,
        { popupWindow: m },
        null
      );
      const v = await this.monitorPopupForHash(m),
        C = ba(
          eN,
          B.DeserializeResponse,
          this.logger,
          this.performanceClient,
          this.correlationId
        )(v, this.config.auth.OIDCOptions.serverResponseType, this.logger);
      if (
        (Gr.removeThrottle(this.browserStorage, this.config.auth.clientId, l),
        C.accountId)
      ) {
        if (
          (this.logger.verbose(
            "Account id found in hash, calling WAM for token"
          ),
          d && d.end({ success: !0, isNativeBroker: !0 }),
          !this.nativeMessageHandler)
        )
          throw he(Pc);
        const g = new ms(
            this.config,
            this.browserStorage,
            this.browserCrypto,
            this.logger,
            this.eventHandler,
            this.navigationClient,
            ut.acquireTokenPopup,
            this.performanceClient,
            this.nativeMessageHandler,
            C.accountId,
            this.nativeStorage,
            a.correlationId
          ),
          { userRequestState: y } = kr.parseRequestState(
            this.browserCrypto,
            a.state
          );
        return await g.acquireToken({ ...a, state: y, prompt: void 0 });
      }
      return await f.handleCodeResponse(C, a);
    } catch (l) {
      throw (
        (i && i.close(),
        l instanceof Nt &&
          (l.setCorrelationId(this.correlationId), o.cacheFailedRequest(l)),
        l)
      );
    }
  }
  async logoutPopupAsync(e, n, r, i, o, a) {
    var c, u;
    this.logger.verbose("logoutPopupAsync called"),
      this.eventHandler.emitEvent(de.LOGOUT_START, ye.Popup, e);
    const l = this.initializeServerTelemetryManager(ut.logoutPopup);
    try {
      await this.clearCacheOnLogout(e.account);
      const d = await te(
        this.createAuthCodeClient.bind(this),
        B.StandardInteractionClientCreateAuthCodeClient,
        this.logger,
        this.performanceClient,
        this.correlationId
      )(l, i, void 0, e.account || void 0);
      try {
        d.authority.endSessionEndpoint;
      } catch {
        if (
          (c = e.account) != null &&
          c.homeAccountId &&
          e.postLogoutRedirectUri &&
          d.authority.protocolMode === Ri.OIDC
        ) {
          if (
            (this.browserStorage.removeAccount(
              (u = e.account) == null ? void 0 : u.homeAccountId
            ),
            this.eventHandler.emitEvent(de.LOGOUT_SUCCESS, ye.Popup, e),
            a)
          ) {
            const p = {
                apiId: ut.logoutPopup,
                timeout: this.config.system.redirectNavigationTimeout,
                noHistory: !1,
              },
              m = De.getAbsoluteUrl(a, Ni());
            await this.navigationClient.navigateInternal(m, p);
          }
          o && o.close();
          return;
        }
      }
      const h = d.getLogoutUri(e);
      this.eventHandler.emitEvent(de.LOGOUT_SUCCESS, ye.Popup, e);
      const f = this.openPopup(h, {
        popupName: n,
        popupWindowAttributes: r,
        popup: o,
      });
      if (
        (this.eventHandler.emitEvent(
          de.POPUP_OPENED,
          ye.Popup,
          { popupWindow: f },
          null
        ),
        await this.monitorPopupForHash(f).catch(() => {}),
        a)
      ) {
        const p = {
            apiId: ut.logoutPopup,
            timeout: this.config.system.redirectNavigationTimeout,
            noHistory: !1,
          },
          m = De.getAbsoluteUrl(a, Ni());
        this.logger.verbose(
          "Redirecting main window to url specified in the request"
        ),
          this.logger.verbosePii(`Redirecting main window to: ${m}`),
          await this.navigationClient.navigateInternal(m, p);
      } else this.logger.verbose("No main window navigation requested");
    } catch (d) {
      throw (
        (o && o.close(),
        d instanceof Nt &&
          (d.setCorrelationId(this.correlationId), l.cacheFailedRequest(d)),
        this.browserStorage.setInteractionInProgress(!1),
        this.eventHandler.emitEvent(de.LOGOUT_FAILURE, ye.Popup, null, d),
        this.eventHandler.emitEvent(de.LOGOUT_END, ye.Popup),
        d)
      );
    }
    this.eventHandler.emitEvent(de.LOGOUT_END, ye.Popup);
  }
  initiateAuthRequest(e, n) {
    if (e)
      return this.logger.infoPii(`Navigate to: ${e}`), this.openPopup(e, n);
    throw (this.logger.error("Navigate url is empty"), he(nf));
  }
  monitorPopupForHash(e) {
    return new Promise((n, r) => {
      this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");
      const i = setInterval(() => {
        if (e.closed) {
          this.logger.error("PopupHandler.monitorPopupForHash - window closed"),
            clearInterval(i),
            r(he(aa));
          return;
        }
        let o = "";
        try {
          o = e.location.href;
        } catch {}
        if (!o || o === "about:blank") return;
        clearInterval(i);
        let a = "";
        const l = this.config.auth.OIDCOptions.serverResponseType;
        e && (l === Lc.QUERY ? (a = e.location.search) : (a = e.location.hash)),
          this.logger.verbose(
            "PopupHandler.monitorPopupForHash - popup window is on same origin as caller"
          ),
          n(a);
      }, this.config.system.pollIntervalMilliseconds);
    }).finally(() => {
      this.cleanPopup(e);
    });
  }
  openPopup(e, n) {
    try {
      let r;
      if (
        (n.popup
          ? ((r = n.popup),
            this.logger.verbosePii(`Navigating popup window to: ${e}`),
            r.location.assign(e))
          : typeof n.popup > "u" &&
            (this.logger.verbosePii(`Opening popup window to: ${e}`),
            (r = this.openSizedPopup(e, n.popupName, n.popupWindowAttributes))),
        !r)
      )
        throw he(SI);
      return (
        r.focus && r.focus(),
        (this.currentWindow = r),
        window.addEventListener("beforeunload", this.unloadWindow),
        r
      );
    } catch (r) {
      throw (
        (this.logger.error("error opening popup " + r.message),
        this.browserStorage.setInteractionInProgress(!1),
        he(wI))
      );
    }
  }
  openSizedPopup(e, n, r) {
    var f, p, m, v;
    const i = window.screenLeft ? window.screenLeft : window.screenX,
      o = window.screenTop ? window.screenTop : window.screenY,
      a =
        window.innerWidth ||
        document.documentElement.clientWidth ||
        document.body.clientWidth,
      l =
        window.innerHeight ||
        document.documentElement.clientHeight ||
        document.body.clientHeight;
    let c = (f = r.popupSize) == null ? void 0 : f.width,
      u = (p = r.popupSize) == null ? void 0 : p.height,
      d = (m = r.popupPosition) == null ? void 0 : m.top,
      h = (v = r.popupPosition) == null ? void 0 : v.left;
    return (
      (!c || c < 0 || c > a) &&
        (this.logger.verbose(
          "Default popup window width used. Window width not configured or invalid."
        ),
        (c = nr.POPUP_WIDTH)),
      (!u || u < 0 || u > l) &&
        (this.logger.verbose(
          "Default popup window height used. Window height not configured or invalid."
        ),
        (u = nr.POPUP_HEIGHT)),
      (!d || d < 0 || d > l) &&
        (this.logger.verbose(
          "Default popup window top position used. Window top not configured or invalid."
        ),
        (d = Math.max(0, l / 2 - nr.POPUP_HEIGHT / 2 + o))),
      (!h || h < 0 || h > a) &&
        (this.logger.verbose(
          "Default popup window left position used. Window left not configured or invalid."
        ),
        (h = Math.max(0, a / 2 - nr.POPUP_WIDTH / 2 + i))),
      window.open(
        e,
        n,
        `width=${c}, height=${u}, top=${d}, left=${h}, scrollbars=yes`
      )
    );
  }
  unloadWindow(e) {
    this.browserStorage.cleanRequestByInteractionType(ye.Popup),
      this.currentWindow && this.currentWindow.close(),
      e.preventDefault();
  }
  cleanPopup(e) {
    e && e.close(),
      window.removeEventListener("beforeunload", this.unloadWindow),
      this.browserStorage.setInteractionInProgress(!1);
  }
  generatePopupName(e, n) {
    return `${nr.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join(
      "-"
    )}.${n}.${this.correlationId}`;
  }
  generateLogoutPopupName(e) {
    const n = e.account && e.account.homeAccountId;
    return `${nr.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${n}.${this.correlationId}`;
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class I0 {
  constructor(e, n, r, i, o) {
    (this.authModule = e),
      (this.browserStorage = n),
      (this.authCodeRequest = r),
      (this.logger = i),
      (this.performanceClient = o);
  }
  async initiateAuthRequest(e, n) {
    if (
      (this.logger.verbose("RedirectHandler.initiateAuthRequest called"), e)
    ) {
      n.redirectStartPage &&
        (this.logger.verbose(
          "RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"
        ),
        this.browserStorage.setTemporaryCache(
          Ke.ORIGIN_URI,
          n.redirectStartPage,
          !0
        )),
        this.browserStorage.setTemporaryCache(
          Ke.CORRELATION_ID,
          this.authCodeRequest.correlationId,
          !0
        ),
        this.browserStorage.cacheCodeRequest(this.authCodeRequest),
        this.logger.infoPii(
          `RedirectHandler.initiateAuthRequest: Navigate to: ${e}`
        );
      const r = {
        apiId: ut.acquireTokenRedirect,
        timeout: n.redirectTimeout,
        noHistory: !1,
      };
      if (typeof n.onRedirectNavigate == "function")
        if (
          (this.logger.verbose(
            "RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"
          ),
          n.onRedirectNavigate(e) !== !1)
        ) {
          this.logger.verbose(
            "RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"
          ),
            await n.navigationClient.navigateExternal(e, r);
          return;
        } else {
          this.logger.verbose(
            "RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation"
          );
          return;
        }
      else {
        this.logger.verbose(
          "RedirectHandler.initiateAuthRequest: Navigating window to navigate url"
        ),
          await n.navigationClient.navigateExternal(e, r);
        return;
      }
    } else
      throw (
        (this.logger.info(
          "RedirectHandler.initiateAuthRequest: Navigate url is empty"
        ),
        he(nf))
      );
  }
  async handleCodeResponse(e, n) {
    this.logger.verbose("RedirectHandler.handleCodeResponse called"),
      this.browserStorage.setInteractionInProgress(!1);
    const r = this.browserStorage.generateStateKey(n),
      i = this.browserStorage.getTemporaryCache(r);
    if (!i) throw V(Jd, "Cached State");
    let o;
    try {
      o = this.authModule.handleFragmentResponse(e, i);
    } catch (u) {
      throw u instanceof Eo && u.subError === aa ? he(aa) : u;
    }
    const a = this.browserStorage.generateNonceKey(i),
      l = this.browserStorage.getTemporaryCache(a);
    if (
      ((this.authCodeRequest.code = o.code),
      o.cloud_instance_host_name &&
        (await te(
          this.authModule.updateAuthority.bind(this.authModule),
          B.UpdateTokenEndpointAuthority,
          this.logger,
          this.performanceClient,
          this.authCodeRequest.correlationId
        )(o.cloud_instance_host_name, this.authCodeRequest.correlationId)),
      (o.nonce = l || void 0),
      (o.state = i),
      o.client_info)
    )
      this.authCodeRequest.clientInfo = o.client_info;
    else {
      const u = this.checkCcsCredentials();
      u && (this.authCodeRequest.ccsCredential = u);
    }
    const c = await this.authModule.acquireToken(this.authCodeRequest, o);
    return this.browserStorage.cleanRequestByState(n), c;
  }
  checkCcsCredentials() {
    const e = this.browserStorage.getTemporaryCache(Ke.CCS_CREDENTIAL, !0);
    if (e)
      try {
        return JSON.parse(e);
      } catch {
        this.authModule.logger.error("Cache credential could not be parsed"),
          this.authModule.logger.errorPii(
            `Cache credential could not be parsed: ${e}`
          );
      }
    return null;
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class CM extends qs {
  constructor(e, n, r, i, o, a, l, c, u, d) {
    super(e, n, r, i, o, a, l, u, d), (this.nativeStorage = c);
  }
  async acquireToken(e) {
    const n = await te(
      this.initializeAuthorizationRequest.bind(this),
      B.StandardInteractionClientInitializeAuthorizationRequest,
      this.logger,
      this.performanceClient,
      this.correlationId
    )(e, ye.Redirect);
    this.browserStorage.updateCacheEntries(
      n.state,
      n.nonce,
      n.authority,
      n.loginHint || "",
      n.account || null
    );
    const r = this.initializeServerTelemetryManager(ut.acquireTokenRedirect),
      i = (o) => {
        o.persisted &&
          (this.logger.verbose(
            "Page was restored from back/forward cache. Clearing temporary cache."
          ),
          this.browserStorage.cleanRequestByState(n.state),
          this.eventHandler.emitEvent(de.RESTORE_FROM_BFCACHE, ye.Redirect));
      };
    try {
      const o = await te(
          this.initializeAuthorizationCodeRequest.bind(this),
          B.StandardInteractionClientInitializeAuthorizationCodeRequest,
          this.logger,
          this.performanceClient,
          this.correlationId
        )(n),
        a = await te(
          this.createAuthCodeClient.bind(this),
          B.StandardInteractionClientCreateAuthCodeClient,
          this.logger,
          this.performanceClient,
          this.correlationId
        )(r, n.authority, n.azureCloudOptions, n.account),
        l = new I0(
          a,
          this.browserStorage,
          o,
          this.logger,
          this.performanceClient
        ),
        c = await a.getAuthCodeUrl({
          ...n,
          nativeBroker: Jr.isNativeAvailable(
            this.config,
            this.logger,
            this.nativeMessageHandler,
            e.authenticationScheme
          ),
        }),
        u = this.getRedirectStartPage(e.redirectStartPage);
      return (
        this.logger.verbosePii(`Redirect start page: ${u}`),
        window.addEventListener("pageshow", i),
        await l.initiateAuthRequest(c, {
          navigationClient: this.navigationClient,
          redirectTimeout: this.config.system.redirectNavigationTimeout,
          redirectStartPage: u,
          onRedirectNavigate: e.onRedirectNavigate,
        })
      );
    } catch (o) {
      throw (
        (o instanceof Nt &&
          (o.setCorrelationId(this.correlationId), r.cacheFailedRequest(o)),
        window.removeEventListener("pageshow", i),
        this.browserStorage.cleanRequestByState(n.state),
        o)
      );
    }
  }
  async handleRedirectPromise(e = "", n) {
    const r = this.initializeServerTelemetryManager(ut.handleRedirectPromise);
    try {
      if (!this.browserStorage.isInteractionInProgress(!0))
        return (
          this.logger.info(
            "handleRedirectPromise called but there is no interaction in progress, returning null."
          ),
          null
        );
      const [i, o] = this.getRedirectResponse(e || "");
      if (!i)
        return (
          this.logger.info(
            "handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."
          ),
          this.browserStorage.cleanRequestByInteractionType(ye.Redirect),
          (n.event.errorCode = "no_server_response"),
          null
        );
      const a =
          this.browserStorage.getTemporaryCache(Ke.ORIGIN_URI, !0) ||
          H.EMPTY_STRING,
        l = De.removeHashFromUrl(a),
        c = De.removeHashFromUrl(window.location.href);
      if (l === c && this.config.auth.navigateToLoginRequestUrl)
        return (
          this.logger.verbose(
            "Current page is loginRequestUrl, handling response"
          ),
          a.indexOf("#") > -1 && D_(a),
          await this.handleResponse(i, r)
        );
      if (this.config.auth.navigateToLoginRequestUrl) {
        if (!Gv() || this.config.system.allowRedirectInIframe) {
          this.browserStorage.setTemporaryCache(Ke.URL_HASH, o, !0);
          const u = {
            apiId: ut.handleRedirectPromise,
            timeout: this.config.system.redirectNavigationTimeout,
            noHistory: !0,
          };
          let d = !0;
          if (!a || a === "null") {
            const h = P_();
            this.browserStorage.setTemporaryCache(Ke.ORIGIN_URI, h, !0),
              this.logger.warning(
                "Unable to get valid login request url from cache, redirecting to home page"
              ),
              (d = await this.navigationClient.navigateInternal(h, u));
          } else
            this.logger.verbose(`Navigating to loginRequestUrl: ${a}`),
              (d = await this.navigationClient.navigateInternal(a, u));
          if (!d) return await this.handleResponse(i, r);
        }
      } else
        return (
          this.logger.verbose(
            "NavigateToLoginRequestUrl set to false, handling response"
          ),
          await this.handleResponse(i, r)
        );
      return null;
    } catch (i) {
      throw (
        (i instanceof Nt &&
          (i.setCorrelationId(this.correlationId), r.cacheFailedRequest(i)),
        this.browserStorage.cleanRequestByInteractionType(ye.Redirect),
        i)
      );
    }
  }
  getRedirectResponse(e) {
    this.logger.verbose("getRedirectResponseHash called");
    let n = e;
    n ||
      (this.config.auth.OIDCOptions.serverResponseType === Lc.QUERY
        ? (n = window.location.search)
        : (n = window.location.hash));
    let r = Zd(n);
    if (r) {
      try {
        vM(r, this.browserCrypto, ye.Redirect);
      } catch (o) {
        return (
          o instanceof Nt &&
            this.logger.error(
              `Interaction type validation failed due to ${o.errorCode}: ${o.errorMessage}`
            ),
          [null, ""]
        );
      }
      return (
        O_(window),
        this.logger.verbose(
          "Hash contains known properties, returning response hash"
        ),
        [r, n]
      );
    }
    const i = this.browserStorage.getTemporaryCache(Ke.URL_HASH, !0);
    return (
      this.browserStorage.removeItem(
        this.browserStorage.generateCacheKey(Ke.URL_HASH)
      ),
      i && ((r = Zd(i)), r)
        ? (this.logger.verbose(
            "Hash does not contain known properties, returning cached hash"
          ),
          [r, i])
        : [null, ""]
    );
  }
  async handleResponse(e, n) {
    const r = e.state;
    if (!r) throw he(Fv);
    const i = this.browserStorage.getCachedRequest(r);
    if (
      (this.logger.verbose("handleResponse called, retrieved cached request"),
      e.accountId)
    ) {
      if (
        (this.logger.verbose("Account id found in hash, calling WAM for token"),
        !this.nativeMessageHandler)
      )
        throw he(Pc);
      const c = new ms(
          this.config,
          this.browserStorage,
          this.browserCrypto,
          this.logger,
          this.eventHandler,
          this.navigationClient,
          ut.acquireTokenPopup,
          this.performanceClient,
          this.nativeMessageHandler,
          e.accountId,
          this.nativeStorage,
          i.correlationId
        ),
        { userRequestState: u } = kr.parseRequestState(this.browserCrypto, r);
      return c.acquireToken({ ...i, state: u, prompt: void 0 }).finally(() => {
        this.browserStorage.cleanRequestByState(r);
      });
    }
    const o = this.browserStorage.getCachedAuthority(r);
    if (!o) throw he(Bv);
    const a = await te(
      this.createAuthCodeClient.bind(this),
      B.StandardInteractionClientCreateAuthCodeClient,
      this.logger,
      this.performanceClient,
      this.correlationId
    )(n, o);
    return (
      Gr.removeThrottle(this.browserStorage, this.config.auth.clientId, i),
      new I0(
        a,
        this.browserStorage,
        i,
        this.logger,
        this.performanceClient
      ).handleCodeResponse(e, r)
    );
  }
  async logout(e) {
    var i, o;
    this.logger.verbose("logoutRedirect called");
    const n = this.initializeLogoutRequest(e),
      r = this.initializeServerTelemetryManager(ut.logout);
    try {
      this.eventHandler.emitEvent(de.LOGOUT_START, ye.Redirect, e),
        await this.clearCacheOnLogout(n.account);
      const a = {
          apiId: ut.logout,
          timeout: this.config.system.redirectNavigationTimeout,
          noHistory: !1,
        },
        l = await te(
          this.createAuthCodeClient.bind(this),
          B.StandardInteractionClientCreateAuthCodeClient,
          this.logger,
          this.performanceClient,
          this.correlationId
        )(r, e && e.authority, void 0, (e && e.account) || void 0);
      if (l.authority.protocolMode === Ri.OIDC)
        try {
          l.authority.endSessionEndpoint;
        } catch {
          if ((i = n.account) != null && i.homeAccountId) {
            this.browserStorage.removeAccount(
              (o = n.account) == null ? void 0 : o.homeAccountId
            ),
              this.eventHandler.emitEvent(de.LOGOUT_SUCCESS, ye.Redirect, n);
            return;
          }
        }
      const c = l.getLogoutUri(n);
      if (
        (this.eventHandler.emitEvent(de.LOGOUT_SUCCESS, ye.Redirect, n),
        e && typeof e.onRedirectNavigate == "function")
      )
        if (e.onRedirectNavigate(c) !== !1) {
          this.logger.verbose(
            "Logout onRedirectNavigate did not return false, navigating"
          ),
            this.browserStorage.getInteractionInProgress() ||
              this.browserStorage.setInteractionInProgress(!0),
            await this.navigationClient.navigateExternal(c, a);
          return;
        } else
          this.browserStorage.setInteractionInProgress(!1),
            this.logger.verbose(
              "Logout onRedirectNavigate returned false, stopping navigation"
            );
      else {
        this.browserStorage.getInteractionInProgress() ||
          this.browserStorage.setInteractionInProgress(!0),
          await this.navigationClient.navigateExternal(c, a);
        return;
      }
    } catch (a) {
      throw (
        (a instanceof Nt &&
          (a.setCorrelationId(this.correlationId), r.cacheFailedRequest(a)),
        this.eventHandler.emitEvent(de.LOGOUT_FAILURE, ye.Redirect, null, a),
        this.eventHandler.emitEvent(de.LOGOUT_END, ye.Redirect),
        a)
      );
    }
    this.eventHandler.emitEvent(de.LOGOUT_END, ye.Redirect);
  }
  getRedirectStartPage(e) {
    const n = e || window.location.href;
    return De.getAbsoluteUrl(n, Ni());
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ async function wM(t, e, n, r, i) {
  if ((e.addQueueMeasurement(B.SilentHandlerInitiateAuthRequest, r), !t))
    throw (n.info("Navigate url is empty"), he(nf));
  return i
    ? te(xM, B.SilentHandlerLoadFrame, n, e, r)(t, i, e, r)
    : ba(EM, B.SilentHandlerLoadFrameSync, n, e, r)(t);
}
async function SM(t, e, n, r, i, o, a) {
  return (
    r.addQueueMeasurement(B.SilentHandlerMonitorIframeForHash, o),
    new Promise((l, c) => {
      e < ig &&
        i.warning(
          `system.loadFrameTimeout or system.iframeHashTimeout set to lower (${e}ms) than the default (${ig}ms). This may result in timeouts.`
        );
      const u = window.setTimeout(() => {
          window.clearInterval(d), c(he(xI));
        }, e),
        d = window.setInterval(() => {
          let h = "";
          const f = t.contentWindow;
          try {
            h = f ? f.location.href : "";
          } catch {}
          if (!h || h === "about:blank") return;
          let p = "";
          f &&
            (a === Lc.QUERY ? (p = f.location.search) : (p = f.location.hash)),
            window.clearTimeout(u),
            window.clearInterval(d),
            l(p);
        }, n);
    }).finally(() => {
      ba(TM, B.RemoveHiddenIframe, i, r, o)(t);
    })
  );
}
function xM(t, e, n, r) {
  return (
    n.addQueueMeasurement(B.SilentHandlerLoadFrame, r),
    new Promise((i, o) => {
      const a = tN();
      window.setTimeout(() => {
        if (!a) {
          o("Unable to load iframe");
          return;
        }
        (a.src = t), i(a);
      }, e);
    })
  );
}
function EM(t) {
  const e = tN();
  return (e.src = t), e;
}
function tN() {
  const t = document.createElement("iframe");
  return (
    (t.className = "msalSilentIframe"),
    (t.style.visibility = "hidden"),
    (t.style.position = "absolute"),
    (t.style.width = t.style.height = "0"),
    (t.style.border = "0"),
    t.setAttribute("sandbox", "allow-scripts allow-same-origin allow-forms"),
    document.body.appendChild(t),
    t
  );
}
function TM(t) {
  document.body === t.parentNode && document.body.removeChild(t);
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class IM extends qs {
  constructor(e, n, r, i, o, a, l, c, u, d, h) {
    super(e, n, r, i, o, a, c, d, h),
      (this.apiId = l),
      (this.nativeStorage = u);
  }
  async acquireToken(e) {
    this.performanceClient.addQueueMeasurement(
      B.SilentIframeClientAcquireToken,
      e.correlationId
    ),
      !e.loginHint &&
        !e.sid &&
        (!e.account || !e.account.username) &&
        this.logger.warning(
          "No user hint provided. The authorization server may need more information to complete this request."
        );
    const n = { ...e };
    n.prompt
      ? n.prompt !== Yt.NONE &&
        n.prompt !== Yt.NO_SESSION &&
        (this.logger.warning(
          `SilentIframeClient. Replacing invalid prompt ${n.prompt} with ${Yt.NONE}`
        ),
        (n.prompt = Yt.NONE))
      : (n.prompt = Yt.NONE);
    const r = await te(
      this.initializeAuthorizationRequest.bind(this),
      B.StandardInteractionClientInitializeAuthorizationRequest,
      this.logger,
      this.performanceClient,
      e.correlationId
    )(n, ye.Silent);
    QI(r.authority);
    const i = this.initializeServerTelemetryManager(this.apiId);
    try {
      const o = await te(
        this.createAuthCodeClient.bind(this),
        B.StandardInteractionClientCreateAuthCodeClient,
        this.logger,
        this.performanceClient,
        e.correlationId
      )(i, r.authority, r.azureCloudOptions, r.account);
      return await te(
        this.silentTokenHelper.bind(this),
        B.SilentIframeClientTokenHelper,
        this.logger,
        this.performanceClient,
        e.correlationId
      )(o, r);
    } catch (o) {
      throw (
        (o instanceof Nt &&
          (o.setCorrelationId(this.correlationId), i.cacheFailedRequest(o)),
        o)
      );
    }
  }
  logout() {
    return Promise.reject(he(rf));
  }
  async silentTokenHelper(e, n) {
    const r = n.correlationId;
    this.performanceClient.addQueueMeasurement(
      B.SilentIframeClientTokenHelper,
      r
    );
    const i = await te(
        this.initializeAuthorizationCodeRequest.bind(this),
        B.StandardInteractionClientInitializeAuthorizationCodeRequest,
        this.logger,
        this.performanceClient,
        r
      )(n),
      o = await te(
        e.getAuthCodeUrl.bind(e),
        B.GetAuthCodeUrl,
        this.logger,
        this.performanceClient,
        r
      )({
        ...n,
        nativeBroker: Jr.isNativeAvailable(
          this.config,
          this.logger,
          this.nativeMessageHandler,
          n.authenticationScheme
        ),
      }),
      a = new Yv(
        e,
        this.browserStorage,
        i,
        this.logger,
        this.performanceClient
      ),
      l = await te(
        wM,
        B.SilentHandlerInitiateAuthRequest,
        this.logger,
        this.performanceClient,
        r
      )(
        o,
        this.performanceClient,
        this.logger,
        r,
        this.config.system.navigateFrameWait
      ),
      c = this.config.auth.OIDCOptions.serverResponseType,
      u = await te(
        SM,
        B.SilentHandlerMonitorIframeForHash,
        this.logger,
        this.performanceClient,
        r
      )(
        l,
        this.config.system.iframeHashTimeout,
        this.config.system.pollIntervalMilliseconds,
        this.performanceClient,
        this.logger,
        r,
        c
      ),
      d = ba(
        eN,
        B.DeserializeResponse,
        this.logger,
        this.performanceClient,
        this.correlationId
      )(u, c, this.logger);
    if (d.accountId) {
      if (
        (this.logger.verbose("Account id found in hash, calling WAM for token"),
        !this.nativeMessageHandler)
      )
        throw he(Pc);
      const h = new ms(
          this.config,
          this.browserStorage,
          this.browserCrypto,
          this.logger,
          this.eventHandler,
          this.navigationClient,
          this.apiId,
          this.performanceClient,
          this.nativeMessageHandler,
          d.accountId,
          this.browserStorage,
          r
        ),
        { userRequestState: f } = kr.parseRequestState(
          this.browserCrypto,
          n.state
        );
      return te(
        h.acquireToken.bind(h),
        B.NativeInteractionClientAcquireToken,
        this.logger,
        this.performanceClient,
        r
      )({ ...n, state: f, prompt: n.prompt || Yt.NONE });
    }
    return te(
      a.handleCodeResponse.bind(a),
      B.HandleCodeResponse,
      this.logger,
      this.performanceClient,
      r
    )(d, n);
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class NM extends qs {
  async acquireToken(e) {
    this.performanceClient.addQueueMeasurement(
      B.SilentRefreshClientAcquireToken,
      e.correlationId
    );
    const n = await te(
        Qv,
        B.InitializeBaseRequest,
        this.logger,
        this.performanceClient,
        e.correlationId
      )(e, this.config, this.performanceClient, this.logger),
      r = { ...e, ...n };
    e.redirectUri && (r.redirectUri = this.getRedirectUri(e.redirectUri));
    const i = this.initializeServerTelemetryManager(
        ut.acquireTokenSilent_silentFlow
      ),
      o = await this.createRefreshTokenClient(
        i,
        r.authority,
        r.azureCloudOptions,
        r.account
      );
    return te(
      o.acquireTokenByRefreshToken.bind(o),
      B.RefreshTokenClientAcquireTokenByRefreshToken,
      this.logger,
      this.performanceClient,
      e.correlationId
    )(r).catch((a) => {
      throw (
        (a.setCorrelationId(this.correlationId), i.cacheFailedRequest(a), a)
      );
    });
  }
  logout() {
    return Promise.reject(he(rf));
  }
  async createRefreshTokenClient(e, n, r, i) {
    const o = await te(
      this.getClientConfiguration.bind(this),
      B.StandardInteractionClientGetClientConfiguration,
      this.logger,
      this.performanceClient,
      this.correlationId
    )(e, n, r, i);
    return new tg(o, this.performanceClient);
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class kM {
  constructor(e, n, r, i) {
    (this.isBrowserEnvironment = typeof window < "u"),
      (this.config = e),
      (this.storage = n),
      (this.logger = r),
      (this.cryptoObj = i);
  }
  loadExternalTokens(e, n, r) {
    if (!this.isBrowserEnvironment) throw he(Uv);
    const i = n.id_token ? va(n.id_token, ti) : void 0,
      o = {
        protocolMode: this.config.auth.protocolMode,
        knownAuthorities: this.config.auth.knownAuthorities,
        cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,
        authorityMetadata: this.config.auth.authorityMetadata,
        skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,
      },
      a = e.authority
        ? new hn(
            hn.generateAuthority(e.authority, e.azureCloudOptions),
            this.config.system.networkClient,
            this.storage,
            o,
            this.logger,
            e.correlationId || Mi()
          )
        : void 0,
      l = this.loadAccount(e, r.clientInfo || n.client_info || "", i, a),
      c = this.loadIdToken(n, l.homeAccountId, l.environment, l.realm),
      u = this.loadAccessToken(
        e,
        n,
        l.homeAccountId,
        l.environment,
        l.realm,
        r
      ),
      d = this.loadRefreshToken(n, l.homeAccountId, l.environment);
    return this.generateAuthenticationResult(
      e,
      { account: l, idToken: c, accessToken: u, refreshToken: d },
      i,
      a
    );
  }
  loadAccount(e, n, r, i) {
    if ((this.logger.verbose("TokenCache - loading account"), e.account)) {
      const c = Kt.createFromAccountInfo(e.account);
      return this.storage.setAccount(c), c;
    } else if (!i || (!n && !r))
      throw (
        (this.logger.error(
          "TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."
        ),
        he(OI))
      );
    const o = Kt.generateHomeAccountId(
        n,
        i.authorityType,
        this.logger,
        this.cryptoObj,
        r
      ),
      a = r == null ? void 0 : r.tid,
      l = Lv(
        this.storage,
        i,
        o,
        ti,
        r,
        n,
        i.hostnameAndPort,
        a,
        void 0,
        void 0,
        this.logger
      );
    return this.storage.setAccount(l), l;
  }
  loadIdToken(e, n, r, i) {
    if (!e.id_token)
      return (
        this.logger.verbose("TokenCache - no id token found in response"), null
      );
    this.logger.verbose("TokenCache - loading id token");
    const o = Zh(n, r, e.id_token, this.config.auth.clientId, i);
    return this.storage.setIdTokenCredential(o), o;
  }
  loadAccessToken(e, n, r, i, o, a) {
    if (n.access_token)
      if (n.expires_in) {
        if (!n.scope && (!e.scopes || !e.scopes.length))
          return (
            this.logger.error(
              "TokenCache - scopes not specified in the request or response. Cannot add token to the cache."
            ),
            null
          );
      } else
        return (
          this.logger.error(
            "TokenCache - no expiration set on the access token. Cannot add it to the cache."
          ),
          null
        );
    else
      return (
        this.logger.verbose("TokenCache - no access token found in response"),
        null
      );
    this.logger.verbose("TokenCache - loading access token");
    const l = n.scope ? jt.fromString(n.scope) : new jt(e.scopes),
      c = a.expiresOn || n.expires_in + new Date().getTime() / 1e3,
      u =
        a.extendedExpiresOn ||
        (n.ext_expires_in || n.expires_in) + new Date().getTime() / 1e3,
      d = ef(
        r,
        i,
        n.access_token,
        this.config.auth.clientId,
        o,
        l.printScopes(),
        c,
        u,
        ti
      );
    return this.storage.setAccessTokenCredential(d), d;
  }
  loadRefreshToken(e, n, r) {
    if (!e.refresh_token)
      return (
        this.logger.verbose("TokenCache - no refresh token found in response"),
        null
      );
    this.logger.verbose("TokenCache - loading refresh token");
    const i = nI(
      n,
      r,
      e.refresh_token,
      this.config.auth.clientId,
      e.foci,
      void 0,
      e.refresh_token_expires_in
    );
    return this.storage.setRefreshTokenCredential(i), i;
  }
  generateAuthenticationResult(e, n, r, i) {
    var d, h, f;
    let o = "",
      a = [],
      l = null,
      c;
    n != null &&
      n.accessToken &&
      ((o = n.accessToken.secret),
      (a = jt.fromString(n.accessToken.target).asArray()),
      (l = new Date(Number(n.accessToken.expiresOn) * 1e3)),
      (c = new Date(Number(n.accessToken.extendedExpiresOn) * 1e3)));
    const u = n.account;
    return {
      authority: i ? i.canonicalAuthority : "",
      uniqueId: n.account.localAccountId,
      tenantId: n.account.realm,
      scopes: a,
      account: u.getAccountInfo(),
      idToken: ((d = n.idToken) == null ? void 0 : d.secret) || "",
      idTokenClaims: r || {},
      accessToken: o,
      fromCache: !0,
      expiresOn: l,
      correlationId: e.correlationId || "",
      requestId: "",
      extExpiresOn: c,
      familyId: ((h = n.refreshToken) == null ? void 0 : h.familyId) || "",
      tokenType:
        ((f = n == null ? void 0 : n.accessToken) == null
          ? void 0
          : f.tokenType) || "",
      state: e.state || "",
      cloudGraphHostName: u.cloudGraphHostName || "",
      msGraphHost: u.msGraphHost || "",
      fromNativeBroker: !1,
    };
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class RM extends dI {
  constructor(e) {
    super(e), (this.includeRedirectUri = !1);
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class AM extends qs {
  constructor(e, n, r, i, o, a, l, c, u, d) {
    super(e, n, r, i, o, a, c, u, d), (this.apiId = l);
  }
  async acquireToken(e) {
    if (!e.code) throw he(DI);
    const n = await te(
        this.initializeAuthorizationRequest.bind(this),
        B.StandardInteractionClientInitializeAuthorizationRequest,
        this.logger,
        this.performanceClient,
        e.correlationId
      )(e, ye.Silent),
      r = this.initializeServerTelemetryManager(this.apiId);
    try {
      const i = { ...n, code: e.code },
        o = await te(
          this.getClientConfiguration.bind(this),
          B.StandardInteractionClientGetClientConfiguration,
          this.logger,
          this.performanceClient,
          e.correlationId
        )(r, n.authority, n.azureCloudOptions, n.account),
        a = new RM(o);
      this.logger.verbose("Auth code client created");
      const l = new Yv(
        a,
        this.browserStorage,
        i,
        this.logger,
        this.performanceClient
      );
      return await te(
        l.handleCodeResponseFromServer.bind(l),
        B.HandleCodeResponseFromServer,
        this.logger,
        this.performanceClient,
        e.correlationId
      )(
        {
          code: e.code,
          msgraph_host: e.msGraphHost,
          cloud_graph_host_name: e.cloudGraphHostName,
          cloud_instance_host_name: e.cloudInstanceHostName,
        },
        n,
        !1
      );
    } catch (i) {
      throw (
        (i instanceof Nt &&
          (i.setCorrelationId(this.correlationId), r.cacheFailedRequest(i)),
        i)
      );
    }
  }
  logout() {
    return Promise.reject(he(rf));
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ function Ur(t) {
  const e = t == null ? void 0 : t.idTokenClaims;
  if ((e != null && e.tfp) || (e != null && e.acr)) return "B2C";
  if (e != null && e.tid) {
    if ((e == null ? void 0 : e.tid) === "9188040d-6c67-4c5b-b112-36a304b66dad")
      return "MSA";
  } else return;
  return "AAD";
}
function Au(t, e) {
  try {
    Wv(t);
  } catch (n) {
    throw (e.end({ success: !1 }, n), n);
  }
}
class sf {
  constructor(e) {
    (this.operatingContext = e),
      (this.isBrowserEnvironment =
        this.operatingContext.isBrowserEnvironment()),
      (this.config = e.getConfig()),
      (this.initialized = !1),
      (this.logger = this.operatingContext.getLogger()),
      (this.networkClient = this.config.system.networkClient),
      (this.navigationClient = this.config.system.navigationClient),
      (this.redirectResponse = new Map()),
      (this.hybridAuthCodeResponses = new Map()),
      (this.performanceClient = this.config.telemetry.client),
      (this.browserCrypto = this.isBrowserEnvironment
        ? new Rs(this.logger, this.performanceClient)
        : th),
      (this.eventHandler = new rM(this.logger, this.browserCrypto)),
      (this.browserStorage = this.isBrowserEnvironment
        ? new ag(
            this.config.auth.clientId,
            this.config.cache,
            this.browserCrypto,
            this.logger,
            nP(this.config.auth),
            this.performanceClient
          )
        : Q_(this.config.auth.clientId, this.logger));
    const n = {
      cacheLocation: Ht.MemoryStorage,
      temporaryCacheLocation: Ht.MemoryStorage,
      storeAuthStateInCookie: !1,
      secureCookies: !1,
      cacheMigrationEnabled: !1,
      claimsBasedCachingEnabled: !1,
    };
    (this.nativeInternalStorage = new ag(
      this.config.auth.clientId,
      n,
      this.browserCrypto,
      this.logger,
      void 0,
      this.performanceClient
    )),
      (this.tokenCache = new kM(
        this.config,
        this.browserStorage,
        this.logger,
        this.browserCrypto
      )),
      (this.activeSilentTokenRequests = new Map()),
      (this.trackPageVisibility = this.trackPageVisibility.bind(this)),
      (this.trackPageVisibilityWithMeasurement =
        this.trackPageVisibilityWithMeasurement.bind(this));
  }
  static async createController(e, n) {
    const r = new sf(e);
    return await r.initialize(n), r;
  }
  trackPageVisibility(e) {
    e &&
      (this.logger.info("Perf: Visibility change detected"),
      this.performanceClient.incrementFields({ visibilityChangeCount: 1 }, e));
  }
  async initialize(e) {
    if ((this.logger.trace("initialize called"), this.initialized)) {
      this.logger.info("initialize has already been called, exiting early.");
      return;
    }
    const n =
        (e == null ? void 0 : e.correlationId) ||
        this.getRequestCorrelationId(),
      r = this.config.system.allowNativeBroker,
      i = this.performanceClient.startMeasurement(
        B.InitializeClientApplication,
        n
      );
    if ((this.eventHandler.emitEvent(de.INITIALIZE_START), r))
      try {
        this.nativeExtensionProvider = await Jr.createProvider(
          this.logger,
          this.config.system.nativeBrokerHandshakeTimeout,
          this.performanceClient
        );
      } catch (o) {
        this.logger.verbose(o);
      }
    this.config.cache.claimsBasedCachingEnabled ||
      (this.logger.verbose(
        "Claims-based caching is disabled. Clearing the previous cache with claims"
      ),
      await te(
        this.browserStorage.clearTokensAndKeysWithClaims.bind(
          this.browserStorage
        ),
        B.ClearTokensAndKeysWithClaims,
        this.logger,
        this.performanceClient,
        n
      )(this.performanceClient, n)),
      (this.initialized = !0),
      this.eventHandler.emitEvent(de.INITIALIZE_END),
      i.end({ allowNativeBroker: r, success: !0 });
  }
  async handleRedirectPromise(e) {
    if (
      (this.logger.verbose("handleRedirectPromise called"),
      VI(this.initialized),
      this.isBrowserEnvironment)
    ) {
      const n = e || "";
      let r = this.redirectResponse.get(n);
      return (
        typeof r > "u"
          ? ((r = this.handleRedirectPromiseInternal(e)),
            this.redirectResponse.set(n, r),
            this.logger.verbose(
              "handleRedirectPromise has been called for the first time, storing the promise"
            ))
          : this.logger.verbose(
              "handleRedirectPromise has been called previously, returning the result from the first call"
            ),
        r
      );
    }
    return (
      this.logger.verbose(
        "handleRedirectPromise returns null, not browser environment"
      ),
      null
    );
  }
  async handleRedirectPromiseInternal(e) {
    const n = this.getAllAccounts(),
      r = this.browserStorage.getCachedNativeRequest(),
      i =
        r &&
        Jr.isNativeAvailable(
          this.config,
          this.logger,
          this.nativeExtensionProvider
        ) &&
        this.nativeExtensionProvider &&
        !e,
      o = i
        ? r == null
          ? void 0
          : r.correlationId
        : this.browserStorage.getTemporaryCache(Ke.CORRELATION_ID, !0) || "",
      a = this.performanceClient.startMeasurement(B.AcquireTokenRedirect, o);
    this.eventHandler.emitEvent(de.HANDLE_REDIRECT_START, ye.Redirect);
    let l;
    if (i && this.nativeExtensionProvider) {
      this.logger.trace(
        "handleRedirectPromise - acquiring token from native platform"
      );
      const c = new ms(
        this.config,
        this.browserStorage,
        this.browserCrypto,
        this.logger,
        this.eventHandler,
        this.navigationClient,
        ut.handleRedirectPromise,
        this.performanceClient,
        this.nativeExtensionProvider,
        r.accountId,
        this.nativeInternalStorage,
        r.correlationId
      );
      l = te(
        c.handleRedirectPromise.bind(c),
        B.HandleNativeRedirectPromiseMeasurement,
        this.logger,
        this.performanceClient,
        a.event.correlationId
      )(this.performanceClient, a.event.correlationId);
    } else {
      this.logger.trace(
        "handleRedirectPromise - acquiring token from web flow"
      );
      const c = this.createRedirectClient(o);
      l = te(
        c.handleRedirectPromise.bind(c),
        B.HandleRedirectPromiseMeasurement,
        this.logger,
        this.performanceClient,
        a.event.correlationId
      )(e, a);
    }
    return l
      .then(
        (c) => (
          c
            ? (n.length < this.getAllAccounts().length
                ? (this.eventHandler.emitEvent(
                    de.LOGIN_SUCCESS,
                    ye.Redirect,
                    c
                  ),
                  this.logger.verbose(
                    "handleRedirectResponse returned result, login success"
                  ))
                : (this.eventHandler.emitEvent(
                    de.ACQUIRE_TOKEN_SUCCESS,
                    ye.Redirect,
                    c
                  ),
                  this.logger.verbose(
                    "handleRedirectResponse returned result, acquire token success"
                  )),
              a.end({ success: !0, accountType: Ur(c.account) }))
            : a.event.errorCode
            ? a.end({ success: !1 })
            : a.discard(),
          this.eventHandler.emitEvent(de.HANDLE_REDIRECT_END, ye.Redirect),
          c
        )
      )
      .catch((c) => {
        const u = c;
        throw (
          (n.length > 0
            ? this.eventHandler.emitEvent(
                de.ACQUIRE_TOKEN_FAILURE,
                ye.Redirect,
                null,
                u
              )
            : this.eventHandler.emitEvent(
                de.LOGIN_FAILURE,
                ye.Redirect,
                null,
                u
              ),
          this.eventHandler.emitEvent(de.HANDLE_REDIRECT_END, ye.Redirect),
          a.end({ success: !1 }, u),
          c)
        );
      });
  }
  async acquireTokenRedirect(e) {
    const n = this.getRequestCorrelationId(e);
    this.logger.verbose("acquireTokenRedirect called", n);
    const r = this.performanceClient.startMeasurement(
      B.AcquireTokenPreRedirect,
      n
    );
    r.add({ accountType: Ur(e.account), scenarioId: e.scenarioId });
    const i = e.onRedirectNavigate;
    e.onRedirectNavigate = (a) => {
      const l = typeof i == "function" ? i(a) : void 0;
      return l !== !1 ? r.end({ success: !0 }) : r.discard(), l;
    };
    const o = this.getAllAccounts().length > 0;
    try {
      x0(this.initialized, this.config),
        this.browserStorage.setInteractionInProgress(!0),
        o
          ? this.eventHandler.emitEvent(de.ACQUIRE_TOKEN_START, ye.Redirect, e)
          : this.eventHandler.emitEvent(de.LOGIN_START, ye.Redirect, e);
      let a;
      return (
        this.nativeExtensionProvider && this.canUseNative(e)
          ? (a = new ms(
              this.config,
              this.browserStorage,
              this.browserCrypto,
              this.logger,
              this.eventHandler,
              this.navigationClient,
              ut.acquireTokenRedirect,
              this.performanceClient,
              this.nativeExtensionProvider,
              this.getNativeAccountId(e),
              this.nativeInternalStorage,
              n
            )
              .acquireTokenRedirect(e, r)
              .catch((c) => {
                if (c instanceof Wr && Ha(c))
                  return (
                    (this.nativeExtensionProvider = void 0),
                    this.createRedirectClient(n).acquireToken(e)
                  );
                if (c instanceof jr)
                  return (
                    this.logger.verbose(
                      "acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"
                    ),
                    this.createRedirectClient(n).acquireToken(e)
                  );
                throw (this.browserStorage.setInteractionInProgress(!1), c);
              }))
          : (a = this.createRedirectClient(n).acquireToken(e)),
        await a
      );
    } catch (a) {
      throw (
        (r.end({ success: !1 }, a),
        o
          ? this.eventHandler.emitEvent(
              de.ACQUIRE_TOKEN_FAILURE,
              ye.Redirect,
              null,
              a
            )
          : this.eventHandler.emitEvent(de.LOGIN_FAILURE, ye.Redirect, null, a),
        a)
      );
    }
  }
  acquireTokenPopup(e) {
    const n = this.getRequestCorrelationId(e),
      r = this.performanceClient.startMeasurement(B.AcquireTokenPopup, n);
    r.add({ scenarioId: e.scenarioId, accountType: Ur(e.account) });
    try {
      this.logger.verbose("acquireTokenPopup called", n),
        Au(this.initialized, r),
        this.browserStorage.setInteractionInProgress(!0);
    } catch (a) {
      return Promise.reject(a);
    }
    const i = this.getAllAccounts();
    i.length > 0
      ? this.eventHandler.emitEvent(de.ACQUIRE_TOKEN_START, ye.Popup, e)
      : this.eventHandler.emitEvent(de.LOGIN_START, ye.Popup, e);
    let o;
    return (
      this.canUseNative(e)
        ? (o = this.acquireTokenNative(
            { ...e, correlationId: n },
            ut.acquireTokenPopup
          )
            .then(
              (a) => (
                this.browserStorage.setInteractionInProgress(!1),
                r.end({
                  success: !0,
                  isNativeBroker: !0,
                  requestId: a.requestId,
                  accountType: Ur(a.account),
                }),
                a
              )
            )
            .catch((a) => {
              if (a instanceof Wr && Ha(a))
                return (
                  (this.nativeExtensionProvider = void 0),
                  this.createPopupClient(n).acquireToken(e)
                );
              if (a instanceof jr)
                return (
                  this.logger.verbose(
                    "acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"
                  ),
                  this.createPopupClient(n).acquireToken(e)
                );
              throw (this.browserStorage.setInteractionInProgress(!1), a);
            }))
        : (o = this.createPopupClient(n).acquireToken(e)),
      o
        .then(
          (a) => (
            i.length < this.getAllAccounts().length
              ? this.eventHandler.emitEvent(de.LOGIN_SUCCESS, ye.Popup, a)
              : this.eventHandler.emitEvent(
                  de.ACQUIRE_TOKEN_SUCCESS,
                  ye.Popup,
                  a
                ),
            r.end({
              success: !0,
              requestId: a.requestId,
              accessTokenSize: a.accessToken.length,
              idTokenSize: a.idToken.length,
              accountType: Ur(a.account),
            }),
            a
          )
        )
        .catch(
          (a) => (
            i.length > 0
              ? this.eventHandler.emitEvent(
                  de.ACQUIRE_TOKEN_FAILURE,
                  ye.Popup,
                  null,
                  a
                )
              : this.eventHandler.emitEvent(
                  de.LOGIN_FAILURE,
                  ye.Popup,
                  null,
                  a
                ),
            r.end({ success: !1 }, a),
            Promise.reject(a)
          )
        )
    );
  }
  trackPageVisibilityWithMeasurement() {
    const e =
      this.ssoSilentMeasurement || this.acquireTokenByCodeAsyncMeasurement;
    e &&
      (this.logger.info("Perf: Visibility change detected in ", e.event.name),
      e.increment({ visibilityChangeCount: 1 }));
  }
  async ssoSilent(e) {
    var o, a;
    const n = this.getRequestCorrelationId(e),
      r = { ...e, prompt: e.prompt, correlationId: n };
    (this.ssoSilentMeasurement = this.performanceClient.startMeasurement(
      B.SsoSilent,
      n
    )),
      (o = this.ssoSilentMeasurement) == null ||
        o.add({ scenarioId: e.scenarioId, accountType: Ur(e.account) }),
      Au(this.initialized, this.ssoSilentMeasurement),
      (a = this.ssoSilentMeasurement) == null ||
        a.increment({ visibilityChangeCount: 0 }),
      document.addEventListener(
        "visibilitychange",
        this.trackPageVisibilityWithMeasurement
      ),
      this.logger.verbose("ssoSilent called", n),
      this.eventHandler.emitEvent(de.SSO_SILENT_START, ye.Silent, r);
    let i;
    return (
      this.canUseNative(r)
        ? (i = this.acquireTokenNative(r, ut.ssoSilent).catch((l) => {
            if (l instanceof Wr && Ha(l))
              return (
                (this.nativeExtensionProvider = void 0),
                this.createSilentIframeClient(r.correlationId).acquireToken(r)
              );
            throw l;
          }))
        : (i = this.createSilentIframeClient(r.correlationId).acquireToken(r)),
      i
        .then((l) => {
          var c;
          return (
            this.eventHandler.emitEvent(de.SSO_SILENT_SUCCESS, ye.Silent, l),
            (c = this.ssoSilentMeasurement) == null ||
              c.end({
                success: !0,
                isNativeBroker: l.fromNativeBroker,
                requestId: l.requestId,
                accessTokenSize: l.accessToken.length,
                idTokenSize: l.idToken.length,
                accountType: Ur(l.account),
              }),
            l
          );
        })
        .catch((l) => {
          var c;
          throw (
            (this.eventHandler.emitEvent(
              de.SSO_SILENT_FAILURE,
              ye.Silent,
              null,
              l
            ),
            (c = this.ssoSilentMeasurement) == null ||
              c.end({ success: !1 }, l),
            l)
          );
        })
        .finally(() => {
          document.removeEventListener(
            "visibilitychange",
            this.trackPageVisibilityWithMeasurement
          );
        })
    );
  }
  async acquireTokenByCode(e) {
    const n = this.getRequestCorrelationId(e);
    this.logger.trace("acquireTokenByCode called", n);
    const r = this.performanceClient.startMeasurement(B.AcquireTokenByCode, n);
    Au(this.initialized, r),
      this.eventHandler.emitEvent(de.ACQUIRE_TOKEN_BY_CODE_START, ye.Silent, e),
      r.add({ scenarioId: e.scenarioId });
    try {
      if (e.code && e.nativeAccountId) throw he(PI);
      if (e.code) {
        const i = e.code;
        let o = this.hybridAuthCodeResponses.get(i);
        return (
          o
            ? (this.logger.verbose(
                "Existing acquireTokenByCode request found",
                n
              ),
              r.discard())
            : (this.logger.verbose(
                "Initiating new acquireTokenByCode request",
                n
              ),
              (o = this.acquireTokenByCodeAsync({ ...e, correlationId: n })
                .then(
                  (a) => (
                    this.eventHandler.emitEvent(
                      de.ACQUIRE_TOKEN_BY_CODE_SUCCESS,
                      ye.Silent,
                      a
                    ),
                    this.hybridAuthCodeResponses.delete(i),
                    r.end({
                      success: !0,
                      isNativeBroker: a.fromNativeBroker,
                      requestId: a.requestId,
                      accessTokenSize: a.accessToken.length,
                      idTokenSize: a.idToken.length,
                      accountType: Ur(a.account),
                    }),
                    a
                  )
                )
                .catch((a) => {
                  throw (
                    (this.hybridAuthCodeResponses.delete(i),
                    this.eventHandler.emitEvent(
                      de.ACQUIRE_TOKEN_BY_CODE_FAILURE,
                      ye.Silent,
                      null,
                      a
                    ),
                    r.end({ success: !1 }, a),
                    a)
                  );
                })),
              this.hybridAuthCodeResponses.set(i, o)),
          await o
        );
      } else if (e.nativeAccountId)
        if (this.canUseNative(e, e.nativeAccountId)) {
          const i = await this.acquireTokenNative(
            { ...e, correlationId: n },
            ut.acquireTokenByCode,
            e.nativeAccountId
          ).catch((o) => {
            throw (
              (o instanceof Wr &&
                Ha(o) &&
                (this.nativeExtensionProvider = void 0),
              o)
            );
          });
          return r.end({ accountType: Ur(i.account), success: !0 }), i;
        } else throw he(_I);
      else throw he(LI);
    } catch (i) {
      throw (
        (this.eventHandler.emitEvent(
          de.ACQUIRE_TOKEN_BY_CODE_FAILURE,
          ye.Silent,
          null,
          i
        ),
        r.end({ success: !1 }, i),
        i)
      );
    }
  }
  async acquireTokenByCodeAsync(e) {
    var i;
    return (
      this.logger.trace("acquireTokenByCodeAsync called", e.correlationId),
      (this.acquireTokenByCodeAsyncMeasurement =
        this.performanceClient.startMeasurement(
          B.AcquireTokenByCodeAsync,
          e.correlationId
        )),
      (i = this.acquireTokenByCodeAsyncMeasurement) == null ||
        i.increment({ visibilityChangeCount: 0 }),
      document.addEventListener(
        "visibilitychange",
        this.trackPageVisibilityWithMeasurement
      ),
      await this.createSilentAuthCodeClient(e.correlationId)
        .acquireToken(e)
        .then((o) => {
          var a;
          return (
            (a = this.acquireTokenByCodeAsyncMeasurement) == null ||
              a.end({
                success: !0,
                fromCache: o.fromCache,
                isNativeBroker: o.fromNativeBroker,
                requestId: o.requestId,
              }),
            o
          );
        })
        .catch((o) => {
          var a;
          throw (
            ((a = this.acquireTokenByCodeAsyncMeasurement) == null ||
              a.end({ success: !1 }, o),
            o)
          );
        })
        .finally(() => {
          document.removeEventListener(
            "visibilitychange",
            this.trackPageVisibilityWithMeasurement
          );
        })
    );
  }
  async acquireTokenFromCache(e, n) {
    switch (
      (this.performanceClient.addQueueMeasurement(
        B.AcquireTokenFromCache,
        e.correlationId
      ),
      n)
    ) {
      case Mn.Default:
      case Mn.AccessToken:
      case Mn.AccessTokenAndRefreshToken:
        const r = this.createSilentCacheClient(e.correlationId);
        return te(
          r.acquireToken.bind(r),
          B.SilentCacheClientAcquireToken,
          this.logger,
          this.performanceClient,
          e.correlationId
        )(e);
      default:
        throw V(Ii);
    }
  }
  async acquireTokenByRefreshToken(e, n) {
    switch (
      (this.performanceClient.addQueueMeasurement(
        B.AcquireTokenByRefreshToken,
        e.correlationId
      ),
      n)
    ) {
      case Mn.Default:
      case Mn.AccessTokenAndRefreshToken:
      case Mn.RefreshToken:
      case Mn.RefreshTokenAndNetwork:
        const r = this.createSilentRefreshClient(e.correlationId);
        return te(
          r.acquireToken.bind(r),
          B.SilentRefreshClientAcquireToken,
          this.logger,
          this.performanceClient,
          e.correlationId
        )(e);
      default:
        throw V(Ii);
    }
  }
  async acquireTokenBySilentIframe(e) {
    this.performanceClient.addQueueMeasurement(
      B.AcquireTokenBySilentIframe,
      e.correlationId
    );
    const n = this.createSilentIframeClient(e.correlationId);
    return te(
      n.acquireToken.bind(n),
      B.SilentIframeClientAcquireToken,
      this.logger,
      this.performanceClient,
      e.correlationId
    )(e);
  }
  async logout(e) {
    const n = this.getRequestCorrelationId(e);
    return (
      this.logger.warning(
        "logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",
        n
      ),
      this.logoutRedirect({ correlationId: n, ...e })
    );
  }
  async logoutRedirect(e) {
    const n = this.getRequestCorrelationId(e);
    return (
      x0(this.initialized, this.config),
      this.browserStorage.setInteractionInProgress(!0),
      this.createRedirectClient(n).logout(e)
    );
  }
  logoutPopup(e) {
    try {
      const n = this.getRequestCorrelationId(e);
      return (
        Wv(this.initialized),
        this.browserStorage.setInteractionInProgress(!0),
        this.createPopupClient(n).logout(e)
      );
    } catch (n) {
      return Promise.reject(n);
    }
  }
  async clearCache(e) {
    const n = this.getRequestCorrelationId(e);
    return this.createSilentCacheClient(n).logout(e);
  }
  getAllAccounts(e) {
    return Y_(this.logger, this.browserStorage, this.isBrowserEnvironment, e);
  }
  getAccount(e) {
    return X_(e, this.logger, this.browserStorage);
  }
  getAccountByUsername(e) {
    return J_(e, this.logger, this.browserStorage);
  }
  getAccountByHomeId(e) {
    return Z_(e, this.logger, this.browserStorage);
  }
  getAccountByLocalId(e) {
    return eM(e, this.logger, this.browserStorage);
  }
  setActiveAccount(e) {
    tM(e, this.browserStorage);
  }
  getActiveAccount() {
    return nM(this.browserStorage);
  }
  async hydrateCache(e, n) {
    this.logger.verbose("hydrateCache called");
    const r = Kt.createFromAccountInfo(
      e.account,
      e.cloudGraphHostName,
      e.msGraphHost
    );
    return (
      this.browserStorage.setAccount(r),
      e.fromNativeBroker
        ? (this.logger.verbose(
            "Response was from native broker, storing in-memory"
          ),
          this.nativeInternalStorage.hydrateCache(e, n))
        : this.browserStorage.hydrateCache(e, n)
    );
  }
  async acquireTokenNative(e, n, r) {
    if (
      (this.logger.trace("acquireTokenNative called"),
      !this.nativeExtensionProvider)
    )
      throw he(Pc);
    return new ms(
      this.config,
      this.browserStorage,
      this.browserCrypto,
      this.logger,
      this.eventHandler,
      this.navigationClient,
      n,
      this.performanceClient,
      this.nativeExtensionProvider,
      r || this.getNativeAccountId(e),
      this.nativeInternalStorage,
      e.correlationId
    ).acquireToken(e);
  }
  canUseNative(e, n) {
    if (
      (this.logger.trace("canUseNative called"),
      !Jr.isNativeAvailable(
        this.config,
        this.logger,
        this.nativeExtensionProvider,
        e.authenticationScheme
      ))
    )
      return (
        this.logger.trace(
          "canUseNative: isNativeAvailable returned false, returning false"
        ),
        !1
      );
    if (e.prompt)
      switch (e.prompt) {
        case Yt.NONE:
        case Yt.CONSENT:
        case Yt.LOGIN:
          this.logger.trace(
            "canUseNative: prompt is compatible with native flow"
          );
          break;
        default:
          return (
            this.logger.trace(
              `canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`
            ),
            !1
          );
      }
    return !n && !this.getNativeAccountId(e)
      ? (this.logger.trace(
          "canUseNative: nativeAccountId is not available, returning false"
        ),
        !1)
      : !0;
  }
  getNativeAccountId(e) {
    const n =
      e.account ||
      this.getAccount({ loginHint: e.loginHint, sid: e.sid }) ||
      this.getActiveAccount();
    return (n && n.nativeAccountId) || "";
  }
  createPopupClient(e) {
    return new bM(
      this.config,
      this.browserStorage,
      this.browserCrypto,
      this.logger,
      this.eventHandler,
      this.navigationClient,
      this.performanceClient,
      this.nativeInternalStorage,
      this.nativeExtensionProvider,
      e
    );
  }
  createRedirectClient(e) {
    return new CM(
      this.config,
      this.browserStorage,
      this.browserCrypto,
      this.logger,
      this.eventHandler,
      this.navigationClient,
      this.performanceClient,
      this.nativeInternalStorage,
      this.nativeExtensionProvider,
      e
    );
  }
  createSilentIframeClient(e) {
    return new IM(
      this.config,
      this.browserStorage,
      this.browserCrypto,
      this.logger,
      this.eventHandler,
      this.navigationClient,
      ut.ssoSilent,
      this.performanceClient,
      this.nativeInternalStorage,
      this.nativeExtensionProvider,
      e
    );
  }
  createSilentCacheClient(e) {
    return new ZI(
      this.config,
      this.browserStorage,
      this.browserCrypto,
      this.logger,
      this.eventHandler,
      this.navigationClient,
      this.performanceClient,
      this.nativeExtensionProvider,
      e
    );
  }
  createSilentRefreshClient(e) {
    return new NM(
      this.config,
      this.browserStorage,
      this.browserCrypto,
      this.logger,
      this.eventHandler,
      this.navigationClient,
      this.performanceClient,
      this.nativeExtensionProvider,
      e
    );
  }
  createSilentAuthCodeClient(e) {
    return new AM(
      this.config,
      this.browserStorage,
      this.browserCrypto,
      this.logger,
      this.eventHandler,
      this.navigationClient,
      ut.acquireTokenByCode,
      this.performanceClient,
      this.nativeExtensionProvider,
      e
    );
  }
  addEventCallback(e) {
    return this.eventHandler.addEventCallback(e);
  }
  removeEventCallback(e) {
    this.eventHandler.removeEventCallback(e);
  }
  addPerformanceCallback(e) {
    return this.performanceClient.addPerformanceCallback(e);
  }
  removePerformanceCallback(e) {
    return this.performanceClient.removePerformanceCallback(e);
  }
  enableAccountStorageEvents() {
    this.eventHandler.enableAccountStorageEvents();
  }
  disableAccountStorageEvents() {
    this.eventHandler.disableAccountStorageEvents();
  }
  getTokenCache() {
    return this.tokenCache;
  }
  getLogger() {
    return this.logger;
  }
  setLogger(e) {
    this.logger = e;
  }
  initializeWrapperLibrary(e, n) {
    this.browserStorage.setWrapperMetadata(e, n);
  }
  setNavigationClient(e) {
    this.navigationClient = e;
  }
  getConfiguration() {
    return this.config;
  }
  getPerformanceClient() {
    return this.performanceClient;
  }
  isBrowserEnv() {
    return this.isBrowserEnvironment;
  }
  getEventHandler() {
    return this.eventHandler;
  }
  getRequestCorrelationId(e) {
    return e != null && e.correlationId
      ? e.correlationId
      : this.isBrowserEnvironment
      ? Mi()
      : H.EMPTY_STRING;
  }
  async loginRedirect(e) {
    const n = this.getRequestCorrelationId(e);
    return (
      this.logger.verbose("loginRedirect called", n),
      this.acquireTokenRedirect({ correlationId: n, ...(e || C0) })
    );
  }
  loginPopup(e) {
    const n = this.getRequestCorrelationId(e);
    return (
      this.logger.verbose("loginPopup called", n),
      this.acquireTokenPopup({ correlationId: n, ...(e || C0) })
    );
  }
  async acquireTokenSilent(e) {
    const n = this.getRequestCorrelationId(e),
      r = this.performanceClient.startMeasurement(B.AcquireTokenSilent, n);
    r.add({ cacheLookupPolicy: e.cacheLookupPolicy, scenarioId: e.scenarioId }),
      Au(this.initialized, r),
      this.logger.verbose("acquireTokenSilent called", n);
    const i = e.account || this.getActiveAccount();
    if (!i) throw he(NI);
    r.add({ accountType: Ur(i) });
    const o = {
        clientId: this.config.auth.clientId,
        authority: e.authority || H.EMPTY_STRING,
        scopes: e.scopes,
        homeAccountIdentifier: i.homeAccountId,
        claims: e.claims,
        authenticationScheme: e.authenticationScheme,
        resourceRequestMethod: e.resourceRequestMethod,
        resourceRequestUri: e.resourceRequestUri,
        shrClaims: e.shrClaims,
        sshKid: e.sshKid,
        shrOptions: e.shrOptions,
      },
      a = JSON.stringify(o),
      l = this.activeSilentTokenRequests.get(a);
    if (typeof l > "u") {
      this.logger.verbose(
        "acquireTokenSilent called for the first time, storing active request",
        n
      );
      const c = te(
        this.acquireTokenSilentAsync.bind(this),
        B.AcquireTokenSilentAsync,
        this.logger,
        this.performanceClient,
        n
      )({ ...e, correlationId: n }, i)
        .then(
          (u) => (
            this.activeSilentTokenRequests.delete(a),
            r.end({
              success: !0,
              fromCache: u.fromCache,
              isNativeBroker: u.fromNativeBroker,
              cacheLookupPolicy: e.cacheLookupPolicy,
              requestId: u.requestId,
              accessTokenSize: u.accessToken.length,
              idTokenSize: u.idToken.length,
            }),
            u
          )
        )
        .catch((u) => {
          throw (
            (this.activeSilentTokenRequests.delete(a),
            r.end({ success: !1 }, u),
            u)
          );
        });
      return (
        this.activeSilentTokenRequests.set(a, c),
        { ...(await c), state: e.state }
      );
    } else
      return (
        this.logger.verbose(
          "acquireTokenSilent has been called previously, returning the result from the first call",
          n
        ),
        r.discard(),
        { ...(await l), state: e.state }
      );
  }
  async acquireTokenSilentAsync(e, n) {
    const r = () => this.trackPageVisibility(e.correlationId);
    this.performanceClient.addQueueMeasurement(
      B.AcquireTokenSilentAsync,
      e.correlationId
    ),
      this.eventHandler.emitEvent(de.ACQUIRE_TOKEN_START, ye.Silent, e),
      e.correlationId &&
        this.performanceClient.incrementFields(
          { visibilityChangeCount: 0 },
          e.correlationId
        ),
      document.addEventListener("visibilitychange", r);
    const i = await te(
        lM,
        B.InitializeSilentRequest,
        this.logger,
        this.performanceClient,
        e.correlationId
      )(e, n, this.config, this.performanceClient, this.logger),
      o = e.cacheLookupPolicy || Mn.Default;
    return this.acquireTokenSilentNoIframe(i, o)
      .catch(async (l) => {
        if (jM(l, o))
          if (this.activeIframeRequest)
            if (o !== Mn.Skip) {
              const [u, d] = this.activeIframeRequest;
              this.logger.verbose(
                `Iframe request is already in progress, awaiting resolution for request with correlationId: ${d}`,
                i.correlationId
              );
              const h = this.performanceClient.startMeasurement(
                B.AwaitConcurrentIframe,
                i.correlationId
              );
              h.add({ awaitIframeCorrelationId: d });
              const f = await u;
              if ((h.end({ success: f }), f))
                return (
                  this.logger.verbose(
                    `Parallel iframe request with correlationId: ${d} succeeded. Retrying cache and/or RT redemption`,
                    i.correlationId
                  ),
                  this.acquireTokenSilentNoIframe(i, o)
                );
              throw (
                (this.logger.info(
                  `Iframe request with correlationId: ${d} failed. Interaction is required.`
                ),
                l)
              );
            } else
              return (
                this.logger.warning(
                  "Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",
                  i.correlationId
                ),
                te(
                  this.acquireTokenBySilentIframe.bind(this),
                  B.AcquireTokenBySilentIframe,
                  this.logger,
                  this.performanceClient,
                  i.correlationId
                )(i)
              );
          else {
            let u;
            return (
              (this.activeIframeRequest = [
                new Promise((d) => {
                  u = d;
                }),
                i.correlationId,
              ]),
              this.logger.verbose(
                "Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",
                i.correlationId
              ),
              te(
                this.acquireTokenBySilentIframe.bind(this),
                B.AcquireTokenBySilentIframe,
                this.logger,
                this.performanceClient,
                i.correlationId
              )(i)
                .then((d) => (u(!0), d))
                .catch((d) => {
                  throw (u(!1), d);
                })
                .finally(() => {
                  this.activeIframeRequest = void 0;
                })
            );
          }
        else throw l;
      })
      .then(
        (l) => (
          this.eventHandler.emitEvent(de.ACQUIRE_TOKEN_SUCCESS, ye.Silent, l),
          e.correlationId &&
            this.performanceClient.addFields(
              {
                fromCache: l.fromCache,
                isNativeBroker: l.fromNativeBroker,
                requestId: l.requestId,
              },
              e.correlationId
            ),
          l
        )
      )
      .catch((l) => {
        throw (
          (this.eventHandler.emitEvent(
            de.ACQUIRE_TOKEN_FAILURE,
            ye.Silent,
            null,
            l
          ),
          l)
        );
      })
      .finally(() => {
        document.removeEventListener("visibilitychange", r);
      });
  }
  async acquireTokenSilentNoIframe(e, n) {
    return Jr.isNativeAvailable(
      this.config,
      this.logger,
      this.nativeExtensionProvider,
      e.authenticationScheme
    ) && e.account.nativeAccountId
      ? (this.logger.verbose(
          "acquireTokenSilent - attempting to acquire token from native platform"
        ),
        this.acquireTokenNative(e, ut.acquireTokenSilent_silentFlow).catch(
          async (r) => {
            throw r instanceof Wr && Ha(r)
              ? (this.logger.verbose(
                  "acquireTokenSilent - native platform unavailable, falling back to web flow"
                ),
                (this.nativeExtensionProvider = void 0),
                V(Ii))
              : r;
          }
        ))
      : (this.logger.verbose(
          "acquireTokenSilent - attempting to acquire token from web flow"
        ),
        te(
          this.acquireTokenFromCache.bind(this),
          B.AcquireTokenFromCache,
          this.logger,
          this.performanceClient,
          e.correlationId
        )(e, n).catch((r) => {
          if (n === Mn.AccessToken) throw r;
          return (
            this.eventHandler.emitEvent(
              de.ACQUIRE_TOKEN_NETWORK_START,
              ye.Silent,
              e
            ),
            te(
              this.acquireTokenByRefreshToken.bind(this),
              B.AcquireTokenByRefreshToken,
              this.logger,
              this.performanceClient,
              e.correlationId
            )(e, n)
          );
        }));
  }
}
function jM(t, e) {
  const n = !(t instanceof jr && t.subError !== tf),
    r = t.errorCode === nr.INVALID_GRANT_ERROR || t.errorCode === Ii,
    i = (n && r) || t.errorCode === ih || t.errorCode === Dv,
    o = w_.includes(e);
  return i && o;
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ async function OM(t, e) {
  const n = new sa(t);
  return await n.initialize(), sf.createController(n, e);
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class Xv {
  static async createPublicClientApplication(e) {
    const n = await OM(e);
    return new Xv(e, n);
  }
  constructor(e, n) {
    this.controller = n || new sf(new sa(e));
  }
  async initialize(e) {
    return this.controller.initialize(e);
  }
  async acquireTokenPopup(e) {
    return this.controller.acquireTokenPopup(e);
  }
  acquireTokenRedirect(e) {
    return this.controller.acquireTokenRedirect(e);
  }
  acquireTokenSilent(e) {
    return this.controller.acquireTokenSilent(e);
  }
  acquireTokenByCode(e) {
    return this.controller.acquireTokenByCode(e);
  }
  addEventCallback(e) {
    return this.controller.addEventCallback(e);
  }
  removeEventCallback(e) {
    return this.controller.removeEventCallback(e);
  }
  addPerformanceCallback(e) {
    return this.controller.addPerformanceCallback(e);
  }
  removePerformanceCallback(e) {
    return this.controller.removePerformanceCallback(e);
  }
  enableAccountStorageEvents() {
    this.controller.enableAccountStorageEvents();
  }
  disableAccountStorageEvents() {
    this.controller.disableAccountStorageEvents();
  }
  getAccount(e) {
    return this.controller.getAccount(e);
  }
  getAccountByHomeId(e) {
    return this.controller.getAccountByHomeId(e);
  }
  getAccountByLocalId(e) {
    return this.controller.getAccountByLocalId(e);
  }
  getAccountByUsername(e) {
    return this.controller.getAccountByUsername(e);
  }
  getAllAccounts(e) {
    return this.controller.getAllAccounts(e);
  }
  handleRedirectPromise(e) {
    return this.controller.handleRedirectPromise(e);
  }
  loginPopup(e) {
    return this.controller.loginPopup(e);
  }
  loginRedirect(e) {
    return this.controller.loginRedirect(e);
  }
  logout(e) {
    return this.controller.logout(e);
  }
  logoutRedirect(e) {
    return this.controller.logoutRedirect(e);
  }
  logoutPopup(e) {
    return this.controller.logoutPopup(e);
  }
  ssoSilent(e) {
    return this.controller.ssoSilent(e);
  }
  getTokenCache() {
    return this.controller.getTokenCache();
  }
  getLogger() {
    return this.controller.getLogger();
  }
  setLogger(e) {
    this.controller.setLogger(e);
  }
  setActiveAccount(e) {
    this.controller.setActiveAccount(e);
  }
  getActiveAccount() {
    return this.controller.getActiveAccount();
  }
  initializeWrapperLibrary(e, n) {
    return this.controller.initializeWrapperLibrary(e, n);
  }
  setNavigationClient(e) {
    this.controller.setNavigationClient(e);
  }
  getConfiguration() {
    return this.controller.getConfiguration();
  }
  async hydrateCache(e, n) {
    return this.controller.hydrateCache(e, n);
  }
  clearCache(e) {
    return this.controller.clearCache(e);
  }
}
/*! @azure/msal-browser v3.20.0 2024-07-23 */ const DM = {
  initialize: () => Promise.reject(Ut(_t)),
  acquireTokenPopup: () => Promise.reject(Ut(_t)),
  acquireTokenRedirect: () => Promise.reject(Ut(_t)),
  acquireTokenSilent: () => Promise.reject(Ut(_t)),
  acquireTokenByCode: () => Promise.reject(Ut(_t)),
  getAllAccounts: () => [],
  getAccount: () => null,
  getAccountByHomeId: () => null,
  getAccountByUsername: () => null,
  getAccountByLocalId: () => null,
  handleRedirectPromise: () => Promise.reject(Ut(_t)),
  loginPopup: () => Promise.reject(Ut(_t)),
  loginRedirect: () => Promise.reject(Ut(_t)),
  logout: () => Promise.reject(Ut(_t)),
  logoutRedirect: () => Promise.reject(Ut(_t)),
  logoutPopup: () => Promise.reject(Ut(_t)),
  ssoSilent: () => Promise.reject(Ut(_t)),
  addEventCallback: () => null,
  removeEventCallback: () => {},
  addPerformanceCallback: () => "",
  removePerformanceCallback: () => !1,
  enableAccountStorageEvents: () => {},
  disableAccountStorageEvents: () => {},
  getTokenCache: () => {
    throw Ut(_t);
  },
  getLogger: () => {
    throw Ut(_t);
  },
  setLogger: () => {},
  setActiveAccount: () => {},
  getActiveAccount: () => null,
  initializeWrapperLibrary: () => {},
  setNavigationClient: () => {},
  getConfiguration: () => {
    throw Ut(_t);
  },
  hydrateCache: () => Promise.reject(Ut(_t)),
  clearCache: () => Promise.reject(Ut(_t)),
};
/*! @azure/msal-browser v3.20.0 2024-07-23 */ class LM {
  static getInteractionStatusFromEvent(e, n) {
    switch (e.eventType) {
      case de.LOGIN_START:
        return Et.Login;
      case de.SSO_SILENT_START:
        return Et.SsoSilent;
      case de.ACQUIRE_TOKEN_START:
        if (e.interactionType === ye.Redirect || e.interactionType === ye.Popup)
          return Et.AcquireToken;
        break;
      case de.HANDLE_REDIRECT_START:
        return Et.HandleRedirect;
      case de.LOGOUT_START:
        return Et.Logout;
      case de.SSO_SILENT_SUCCESS:
      case de.SSO_SILENT_FAILURE:
        if (n && n !== Et.SsoSilent) break;
        return Et.None;
      case de.LOGOUT_END:
        if (n && n !== Et.Logout) break;
        return Et.None;
      case de.HANDLE_REDIRECT_END:
        if (n && n !== Et.HandleRedirect) break;
        return Et.None;
      case de.LOGIN_SUCCESS:
      case de.LOGIN_FAILURE:
      case de.ACQUIRE_TOKEN_SUCCESS:
      case de.ACQUIRE_TOKEN_FAILURE:
      case de.RESTORE_FROM_BFCACHE:
        if (
          e.interactionType === ye.Redirect ||
          e.interactionType === ye.Popup
        ) {
          if (n && n !== Et.Login && n !== Et.AcquireToken) break;
          return Et.None;
        }
        break;
    }
    return null;
  }
}
/*! @azure/msal-react v2.0.22 2024-07-23 */ const PM = {
    instance: DM,
    inProgress: Et.None,
    accounts: [],
    logger: new xo({}),
  },
  Jv = x.createContext(PM);
Jv.Consumer;
/*! @azure/msal-react v2.0.22 2024-07-23 */ function nN(t, e) {
  return typeof t == "function" ? t(e) : t;
}
function N0(t, e) {
  if (t.length !== e.length) return !1;
  const n = [...e];
  return t.every((r) => {
    const i = n.shift();
    return !r || !i
      ? !1
      : r.homeAccountId === i.homeAccountId &&
          r.localAccountId === i.localAccountId &&
          r.username === i.username;
  });
}
function _M(t, e) {
  return (
    (t.length > 0 &&
      (e.homeAccountId || e.localAccountId || e.username) &&
      t.filter(
        (r) =>
          !(
            (e.username &&
              e.username.toLowerCase() !== r.username.toLowerCase()) ||
            (e.homeAccountId &&
              e.homeAccountId.toLowerCase() !==
                r.homeAccountId.toLowerCase()) ||
            (e.localAccountId &&
              e.localAccountId.toLowerCase() !== r.localAccountId.toLowerCase())
          )
      )[0]) ||
    null
  );
}
/*! @azure/msal-react v2.0.22 2024-07-23 */ const MM = "@azure/msal-react",
  k0 = "2.0.22";
/*! @azure/msal-react v2.0.22 2024-07-23 */ const ch = {
    UNBLOCK_INPROGRESS: "UNBLOCK_INPROGRESS",
    EVENT: "EVENT",
  },
  FM = (t, e) => {
    const { type: n, payload: r } = e;
    let i = t.inProgress;
    switch (n) {
      case ch.UNBLOCK_INPROGRESS:
        t.inProgress === Et.Startup &&
          ((i = Et.None),
          r.logger.info(
            "MsalProvider - handleRedirectPromise resolved, setting inProgress to 'none'"
          ));
        break;
      case ch.EVENT:
        const a = r.message,
          l = LM.getInteractionStatusFromEvent(a, t.inProgress);
        l &&
          (r.logger.info(
            `MsalProvider - ${a.eventType} results in setting inProgress from ${t.inProgress} to ${l}`
          ),
          (i = l));
        break;
      default:
        throw new Error(`Unknown action type: ${n}`);
    }
    const o = r.instance.getAllAccounts();
    return i !== t.inProgress && !N0(o, t.accounts)
      ? { ...t, inProgress: i, accounts: o }
      : i !== t.inProgress
      ? { ...t, inProgress: i }
      : N0(o, t.accounts)
      ? t
      : { ...t, accounts: o };
  };
function BM({ instance: t, children: e }) {
  x.useEffect(() => {
    t.initializeWrapperLibrary(v_.React, k0);
  }, [t]);
  const n = x.useMemo(() => t.getLogger().clone(MM, k0), [t]),
    [r, i] = x.useReducer(FM, void 0, () => ({
      inProgress: Et.Startup,
      accounts: t.getAllAccounts(),
    }));
  x.useEffect(() => {
    const a = t.addEventCallback((l) => {
      i({ payload: { instance: t, logger: n, message: l }, type: ch.EVENT });
    });
    return (
      n.verbose(`MsalProvider - Registered event callback with id: ${a}`),
      t
        .initialize()
        .then(() => {
          t.handleRedirectPromise()
            .catch(() => {})
            .finally(() => {
              i({
                payload: { instance: t, logger: n },
                type: ch.UNBLOCK_INPROGRESS,
              });
            });
        })
        .catch(() => {}),
      () => {
        a &&
          (n.verbose(`MsalProvider - Removing event callback ${a}`),
          t.removeEventCallback(a));
      }
    );
  }, [t, n]);
  const o = {
    instance: t,
    inProgress: r.inProgress,
    accounts: r.accounts,
    logger: n,
  };
  return k.createElement(Jv.Provider, { value: o }, e);
}
/*! @azure/msal-react v2.0.22 2024-07-23 */ const Gs = () => x.useContext(Jv);
/*! @azure/msal-react v2.0.22 2024-07-23 */ function UM(t, e) {
  return e && (e.username || e.homeAccountId || e.localAccountId)
    ? !!_M(t, e)
    : t.length > 0;
}
function rN(t) {
  const { accounts: e, inProgress: n } = Gs();
  return x.useMemo(() => (n === Et.Startup ? !1 : UM(e, t)), [e, n, t]);
}
/*! @azure/msal-react v2.0.22 2024-07-23 */ function zM({
  username: t,
  homeAccountId: e,
  localAccountId: n,
  children: r,
}) {
  const i = Gs(),
    o = x.useMemo(
      () => ({ username: t, homeAccountId: e, localAccountId: n }),
      [t, e, n]
    );
  return rN(o) && i.inProgress !== Et.Startup
    ? k.createElement(k.Fragment, null, nN(r, i))
    : null;
}
/*! @azure/msal-react v2.0.22 2024-07-23 */ function HM({
  username: t,
  homeAccountId: e,
  localAccountId: n,
  children: r,
}) {
  const i = Gs(),
    o = x.useMemo(
      () => ({ username: t, homeAccountId: e, localAccountId: n }),
      [t, e, n]
    );
  return !rN(o) &&
    i.inProgress !== Et.Startup &&
    i.inProgress !== Et.HandleRedirect
    ? k.createElement(k.Fragment, null, nN(r, i))
    : null;
}
/**
 * @remix-run/router v1.18.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function pt() {
  return (
    (pt = Object.assign
      ? Object.assign.bind()
      : function (t) {
          for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n)
              Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
          }
          return t;
        }),
    pt.apply(this, arguments)
  );
}
var Mt;
(function (t) {
  (t.Pop = "POP"), (t.Push = "PUSH"), (t.Replace = "REPLACE");
})(Mt || (Mt = {}));
const R0 = "popstate";
function $M(t) {
  t === void 0 && (t = {});
  function e(r, i) {
    let { pathname: o, search: a, hash: l } = r.location;
    return hc(
      "",
      { pathname: o, search: a, hash: l },
      (i.state && i.state.usr) || null,
      (i.state && i.state.key) || "default"
    );
  }
  function n(r, i) {
    return typeof i == "string" ? i : la(i);
  }
  return qM(e, n, null, t);
}
function Ie(t, e) {
  if (t === !1 || t === null || typeof t > "u") throw new Error(e);
}
function As(t, e) {
  if (!t) {
    typeof console < "u" && console.warn(e);
    try {
      throw new Error(e);
    } catch {}
  }
}
function KM() {
  return Math.random().toString(36).substr(2, 8);
}
function A0(t, e) {
  return { usr: t.state, key: t.key, idx: e };
}
function hc(t, e, n, r) {
  return (
    n === void 0 && (n = null),
    pt(
      { pathname: typeof t == "string" ? t : t.pathname, search: "", hash: "" },
      typeof e == "string" ? Do(e) : e,
      { state: n, key: (e && e.key) || r || KM() }
    )
  );
}
function la(t) {
  let { pathname: e = "/", search: n = "", hash: r = "" } = t;
  return (
    n && n !== "?" && (e += n.charAt(0) === "?" ? n : "?" + n),
    r && r !== "#" && (e += r.charAt(0) === "#" ? r : "#" + r),
    e
  );
}
function Do(t) {
  let e = {};
  if (t) {
    let n = t.indexOf("#");
    n >= 0 && ((e.hash = t.substr(n)), (t = t.substr(0, n)));
    let r = t.indexOf("?");
    r >= 0 && ((e.search = t.substr(r)), (t = t.substr(0, r))),
      t && (e.pathname = t);
  }
  return e;
}
function qM(t, e, n, r) {
  r === void 0 && (r = {});
  let { window: i = document.defaultView, v5Compat: o = !1 } = r,
    a = i.history,
    l = Mt.Pop,
    c = null,
    u = d();
  u == null && ((u = 0), a.replaceState(pt({}, a.state, { idx: u }), ""));
  function d() {
    return (a.state || { idx: null }).idx;
  }
  function h() {
    l = Mt.Pop;
    let C = d(),
      b = C == null ? null : C - u;
    (u = C), c && c({ action: l, location: v.location, delta: b });
  }
  function f(C, b) {
    l = Mt.Push;
    let g = hc(v.location, C, b);
    u = d() + 1;
    let y = A0(g, u),
      w = v.createHref(g);
    try {
      a.pushState(y, "", w);
    } catch (E) {
      if (E instanceof DOMException && E.name === "DataCloneError") throw E;
      i.location.assign(w);
    }
    o && c && c({ action: l, location: v.location, delta: 1 });
  }
  function p(C, b) {
    l = Mt.Replace;
    let g = hc(v.location, C, b);
    u = d();
    let y = A0(g, u),
      w = v.createHref(g);
    a.replaceState(y, "", w),
      o && c && c({ action: l, location: v.location, delta: 0 });
  }
  function m(C) {
    let b = i.location.origin !== "null" ? i.location.origin : i.location.href,
      g = typeof C == "string" ? C : la(C);
    return (
      (g = g.replace(/ $/, "%20")),
      Ie(
        b,
        "No window.location.(origin|href) available to create URL for href: " +
          g
      ),
      new URL(g, b)
    );
  }
  let v = {
    get action() {
      return l;
    },
    get location() {
      return t(i, a);
    },
    listen(C) {
      if (c) throw new Error("A history only accepts one active listener");
      return (
        i.addEventListener(R0, h),
        (c = C),
        () => {
          i.removeEventListener(R0, h), (c = null);
        }
      );
    },
    createHref(C) {
      return e(i, C);
    },
    createURL: m,
    encodeLocation(C) {
      let b = m(C);
      return { pathname: b.pathname, search: b.search, hash: b.hash };
    },
    push: f,
    replace: p,
    go(C) {
      return a.go(C);
    },
  };
  return v;
}
var at;
(function (t) {
  (t.data = "data"),
    (t.deferred = "deferred"),
    (t.redirect = "redirect"),
    (t.error = "error");
})(at || (at = {}));
const GM = new Set([
  "lazy",
  "caseSensitive",
  "path",
  "id",
  "index",
  "children",
]);
function WM(t) {
  return t.index === !0;
}
function fc(t, e, n, r) {
  return (
    n === void 0 && (n = []),
    r === void 0 && (r = {}),
    t.map((i, o) => {
      let a = [...n, String(o)],
        l = typeof i.id == "string" ? i.id : a.join("-");
      if (
        (Ie(
          i.index !== !0 || !i.children,
          "Cannot specify children on an index route"
        ),
        Ie(
          !r[l],
          'Found a route id collision on id "' +
            l +
            `".  Route id's must be globally unique within Data Router usages`
        ),
        WM(i))
      ) {
        let c = pt({}, i, e(i), { id: l });
        return (r[l] = c), c;
      } else {
        let c = pt({}, i, e(i), { id: l, children: void 0 });
        return (
          (r[l] = c), i.children && (c.children = fc(i.children, e, a, r)), c
        );
      }
    })
  );
}
function Uo(t, e, n) {
  return n === void 0 && (n = "/"), nd(t, e, n, !1);
}
function nd(t, e, n, r) {
  let i = typeof e == "string" ? Do(e) : e,
    o = Ws(i.pathname || "/", n);
  if (o == null) return null;
  let a = iN(t);
  QM(a);
  let l = null;
  for (let c = 0; l == null && c < a.length; ++c) {
    let u = aF(o);
    l = iF(a[c], u, r);
  }
  return l;
}
function VM(t, e) {
  let { route: n, pathname: r, params: i } = t;
  return { id: n.id, pathname: r, params: i, data: e[n.id], handle: n.handle };
}
function iN(t, e, n, r) {
  e === void 0 && (e = []), n === void 0 && (n = []), r === void 0 && (r = "");
  let i = (o, a, l) => {
    let c = {
      relativePath: l === void 0 ? o.path || "" : l,
      caseSensitive: o.caseSensitive === !0,
      childrenIndex: a,
      route: o,
    };
    c.relativePath.startsWith("/") &&
      (Ie(
        c.relativePath.startsWith(r),
        'Absolute route path "' +
          c.relativePath +
          '" nested under path ' +
          ('"' + r + '" is not valid. An absolute child route path ') +
          "must start with the combined path of all its parent routes."
      ),
      (c.relativePath = c.relativePath.slice(r.length)));
    let u = Ai([r, c.relativePath]),
      d = n.concat(c);
    o.children &&
      o.children.length > 0 &&
      (Ie(
        o.index !== !0,
        "Index routes must not have child routes. Please remove " +
          ('all child routes from route path "' + u + '".')
      ),
      iN(o.children, e, d, u)),
      !(o.path == null && !o.index) &&
        e.push({ path: u, score: nF(u, o.index), routesMeta: d });
  };
  return (
    t.forEach((o, a) => {
      var l;
      if (o.path === "" || !((l = o.path) != null && l.includes("?"))) i(o, a);
      else for (let c of oN(o.path)) i(o, a, c);
    }),
    e
  );
}
function oN(t) {
  let e = t.split("/");
  if (e.length === 0) return [];
  let [n, ...r] = e,
    i = n.endsWith("?"),
    o = n.replace(/\?$/, "");
  if (r.length === 0) return i ? [o, ""] : [o];
  let a = oN(r.join("/")),
    l = [];
  return (
    l.push(...a.map((c) => (c === "" ? o : [o, c].join("/")))),
    i && l.push(...a),
    l.map((c) => (t.startsWith("/") && c === "" ? "/" : c))
  );
}
function QM(t) {
  t.sort((e, n) =>
    e.score !== n.score
      ? n.score - e.score
      : rF(
          e.routesMeta.map((r) => r.childrenIndex),
          n.routesMeta.map((r) => r.childrenIndex)
        )
  );
}
const YM = /^:[\w-]+$/,
  XM = 3,
  JM = 2,
  ZM = 1,
  eF = 10,
  tF = -2,
  j0 = (t) => t === "*";
function nF(t, e) {
  let n = t.split("/"),
    r = n.length;
  return (
    n.some(j0) && (r += tF),
    e && (r += JM),
    n
      .filter((i) => !j0(i))
      .reduce((i, o) => i + (YM.test(o) ? XM : o === "" ? ZM : eF), r)
  );
}
function rF(t, e) {
  return t.length === e.length && t.slice(0, -1).every((r, i) => r === e[i])
    ? t[t.length - 1] - e[e.length - 1]
    : 0;
}
function iF(t, e, n) {
  n === void 0 && (n = !1);
  let { routesMeta: r } = t,
    i = {},
    o = "/",
    a = [];
  for (let l = 0; l < r.length; ++l) {
    let c = r[l],
      u = l === r.length - 1,
      d = o === "/" ? e : e.slice(o.length) || "/",
      h = O0(
        { path: c.relativePath, caseSensitive: c.caseSensitive, end: u },
        d
      ),
      f = c.route;
    if (
      (!h &&
        u &&
        n &&
        !r[r.length - 1].route.index &&
        (h = O0(
          { path: c.relativePath, caseSensitive: c.caseSensitive, end: !1 },
          d
        )),
      !h)
    )
      return null;
    Object.assign(i, h.params),
      a.push({
        params: i,
        pathname: Ai([o, h.pathname]),
        pathnameBase: cF(Ai([o, h.pathnameBase])),
        route: f,
      }),
      h.pathnameBase !== "/" && (o = Ai([o, h.pathnameBase]));
  }
  return a;
}
function O0(t, e) {
  typeof t == "string" && (t = { path: t, caseSensitive: !1, end: !0 });
  let [n, r] = oF(t.path, t.caseSensitive, t.end),
    i = e.match(n);
  if (!i) return null;
  let o = i[0],
    a = o.replace(/(.)\/+$/, "$1"),
    l = i.slice(1);
  return {
    params: r.reduce((u, d, h) => {
      let { paramName: f, isOptional: p } = d;
      if (f === "*") {
        let v = l[h] || "";
        a = o.slice(0, o.length - v.length).replace(/(.)\/+$/, "$1");
      }
      const m = l[h];
      return (
        p && !m ? (u[f] = void 0) : (u[f] = (m || "").replace(/%2F/g, "/")), u
      );
    }, {}),
    pathname: o,
    pathnameBase: a,
    pattern: t,
  };
}
function oF(t, e, n) {
  e === void 0 && (e = !1),
    n === void 0 && (n = !0),
    As(
      t === "*" || !t.endsWith("*") || t.endsWith("/*"),
      'Route path "' +
        t +
        '" will be treated as if it were ' +
        ('"' + t.replace(/\*$/, "/*") + '" because the `*` character must ') +
        "always follow a `/` in the pattern. To get rid of this warning, " +
        ('please change the route path to "' + t.replace(/\*$/, "/*") + '".')
    );
  let r = [],
    i =
      "^" +
      t
        .replace(/\/*\*?$/, "")
        .replace(/^\/*/, "/")
        .replace(/[\\.*+^${}|()[\]]/g, "\\$&")
        .replace(
          /\/:([\w-]+)(\?)?/g,
          (a, l, c) => (
            r.push({ paramName: l, isOptional: c != null }),
            c ? "/?([^\\/]+)?" : "/([^\\/]+)"
          )
        );
  return (
    t.endsWith("*")
      ? (r.push({ paramName: "*" }),
        (i += t === "*" || t === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$"))
      : n
      ? (i += "\\/*$")
      : t !== "" && t !== "/" && (i += "(?:(?=\\/|$))"),
    [new RegExp(i, e ? void 0 : "i"), r]
  );
}
function aF(t) {
  try {
    return t
      .split("/")
      .map((e) => decodeURIComponent(e).replace(/\//g, "%2F"))
      .join("/");
  } catch (e) {
    return (
      As(
        !1,
        'The URL path "' +
          t +
          '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' +
          ("encoding (" + e + ").")
      ),
      t
    );
  }
}
function Ws(t, e) {
  if (e === "/") return t;
  if (!t.toLowerCase().startsWith(e.toLowerCase())) return null;
  let n = e.endsWith("/") ? e.length - 1 : e.length,
    r = t.charAt(n);
  return r && r !== "/" ? null : t.slice(n) || "/";
}
function sF(t, e) {
  e === void 0 && (e = "/");
  let {
    pathname: n,
    search: r = "",
    hash: i = "",
  } = typeof t == "string" ? Do(t) : t;
  return {
    pathname: n ? (n.startsWith("/") ? n : lF(n, e)) : e,
    search: uF(r),
    hash: dF(i),
  };
}
function lF(t, e) {
  let n = e.replace(/\/+$/, "").split("/");
  return (
    t.split("/").forEach((i) => {
      i === ".." ? n.length > 1 && n.pop() : i !== "." && n.push(i);
    }),
    n.length > 1 ? n.join("/") : "/"
  );
}
function Cp(t, e, n, r) {
  return (
    "Cannot include a '" +
    t +
    "' character in a manually specified " +
    ("`to." +
      e +
      "` field [" +
      JSON.stringify(r) +
      "].  Please separate it out to the ") +
    ("`to." + n + "` field. Alternatively you may provide the full path as ") +
    'a string in <Link to="..."> and the router will parse it for you.'
  );
}
function aN(t) {
  return t.filter(
    (e, n) => n === 0 || (e.route.path && e.route.path.length > 0)
  );
}
function Zv(t, e) {
  let n = aN(t);
  return e
    ? n.map((r, i) => (i === n.length - 1 ? r.pathname : r.pathnameBase))
    : n.map((r) => r.pathnameBase);
}
function eb(t, e, n, r) {
  r === void 0 && (r = !1);
  let i;
  typeof t == "string"
    ? (i = Do(t))
    : ((i = pt({}, t)),
      Ie(
        !i.pathname || !i.pathname.includes("?"),
        Cp("?", "pathname", "search", i)
      ),
      Ie(
        !i.pathname || !i.pathname.includes("#"),
        Cp("#", "pathname", "hash", i)
      ),
      Ie(!i.search || !i.search.includes("#"), Cp("#", "search", "hash", i)));
  let o = t === "" || i.pathname === "",
    a = o ? "/" : i.pathname,
    l;
  if (a == null) l = n;
  else {
    let h = e.length - 1;
    if (!r && a.startsWith("..")) {
      let f = a.split("/");
      for (; f[0] === ".."; ) f.shift(), (h -= 1);
      i.pathname = f.join("/");
    }
    l = h >= 0 ? e[h] : "/";
  }
  let c = sF(i, l),
    u = a && a !== "/" && a.endsWith("/"),
    d = (o || a === ".") && n.endsWith("/");
  return !c.pathname.endsWith("/") && (u || d) && (c.pathname += "/"), c;
}
const Ai = (t) => t.join("/").replace(/\/\/+/g, "/"),
  cF = (t) => t.replace(/\/+$/, "").replace(/^\/*/, "/"),
  uF = (t) => (!t || t === "?" ? "" : t.startsWith("?") ? t : "?" + t),
  dF = (t) => (!t || t === "#" ? "" : t.startsWith("#") ? t : "#" + t);
class tb {
  constructor(e, n, r, i) {
    i === void 0 && (i = !1),
      (this.status = e),
      (this.statusText = n || ""),
      (this.internal = i),
      r instanceof Error
        ? ((this.data = r.toString()), (this.error = r))
        : (this.data = r);
  }
}
function lf(t) {
  return (
    t != null &&
    typeof t.status == "number" &&
    typeof t.statusText == "string" &&
    typeof t.internal == "boolean" &&
    "data" in t
  );
}
const sN = ["post", "put", "patch", "delete"],
  hF = new Set(sN),
  fF = ["get", ...sN],
  pF = new Set(fF),
  mF = new Set([301, 302, 303, 307, 308]),
  gF = new Set([307, 308]),
  wp = {
    state: "idle",
    location: void 0,
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
  },
  yF = {
    state: "idle",
    data: void 0,
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
  },
  dl = { state: "unblocked", proceed: void 0, reset: void 0, location: void 0 },
  nb = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
  vF = (t) => ({ hasErrorBoundary: !!t.hasErrorBoundary }),
  lN = "remix-router-transitions";
function bF(t) {
  const e = t.window ? t.window : typeof window < "u" ? window : void 0,
    n =
      typeof e < "u" &&
      typeof e.document < "u" &&
      typeof e.document.createElement < "u",
    r = !n;
  Ie(
    t.routes.length > 0,
    "You must provide a non-empty routes array to createRouter"
  );
  let i;
  if (t.mapRouteProperties) i = t.mapRouteProperties;
  else if (t.detectErrorBoundary) {
    let j = t.detectErrorBoundary;
    i = (P) => ({ hasErrorBoundary: j(P) });
  } else i = vF;
  let o = {},
    a = fc(t.routes, i, void 0, o),
    l,
    c = t.basename || "/",
    u = t.unstable_dataStrategy || EF,
    d = t.unstable_patchRoutesOnMiss,
    h = pt(
      {
        v7_fetcherPersist: !1,
        v7_normalizeFormMethod: !1,
        v7_partialHydration: !1,
        v7_prependBasename: !1,
        v7_relativeSplatPath: !1,
        v7_skipActionErrorRevalidation: !1,
      },
      t.future
    ),
    f = null,
    p = new Set(),
    m = null,
    v = null,
    C = null,
    b = t.hydrationData != null,
    g = Uo(a, t.history.location, c),
    y = null;
  if (g == null && !d) {
    let j = yn(404, { pathname: t.history.location.pathname }),
      { matches: P, route: U } = H0(a);
    (g = P), (y = { [U.id]: j });
  }
  g &&
    d &&
    !t.hydrationData &&
    zf(g, a, t.history.location.pathname).active &&
    (g = null);
  let w;
  if (!g) (w = !1), (g = []);
  else if (g.some((j) => j.route.lazy)) w = !1;
  else if (!g.some((j) => j.route.loader)) w = !0;
  else if (h.v7_partialHydration) {
    let j = t.hydrationData ? t.hydrationData.loaderData : null,
      P = t.hydrationData ? t.hydrationData.errors : null,
      U = (K) =>
        K.route.loader
          ? typeof K.route.loader == "function" && K.route.loader.hydrate === !0
            ? !1
            : (j && j[K.route.id] !== void 0) || (P && P[K.route.id] !== void 0)
          : !0;
    if (P) {
      let K = g.findIndex((se) => P[se.route.id] !== void 0);
      w = g.slice(0, K + 1).every(U);
    } else w = g.every(U);
  } else w = t.hydrationData != null;
  let E,
    S = {
      historyAction: t.history.action,
      location: t.history.location,
      matches: g,
      initialized: w,
      navigation: wp,
      restoreScrollPosition: t.hydrationData != null ? !1 : null,
      preventScrollReset: !1,
      revalidation: "idle",
      loaderData: (t.hydrationData && t.hydrationData.loaderData) || {},
      actionData: (t.hydrationData && t.hydrationData.actionData) || null,
      errors: (t.hydrationData && t.hydrationData.errors) || y,
      fetchers: new Map(),
      blockers: new Map(),
    },
    T = Mt.Pop,
    I = !1,
    R,
    A = !1,
    O = new Map(),
    _ = null,
    F = !1,
    $ = !1,
    Z = [],
    X = [],
    W = new Map(),
    z = 0,
    Q = -1,
    q = new Map(),
    ie = new Set(),
    oe = new Map(),
    pe = new Map(),
    Ee = new Set(),
    ee = new Map(),
    me = new Map(),
    Pe = new Map(),
    it = !1;
  function wt() {
    if (
      ((f = t.history.listen((j) => {
        let { action: P, location: U, delta: K } = j;
        if (it) {
          it = !1;
          return;
        }
        As(
          me.size === 0 || K != null,
          "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL."
        );
        let se = FC({
          currentLocation: S.location,
          nextLocation: U,
          historyAction: P,
        });
        if (se && K != null) {
          (it = !0),
            t.history.go(K * -1),
            Zc(se, {
              state: "blocked",
              location: U,
              proceed() {
                Zc(se, {
                  state: "proceeding",
                  proceed: void 0,
                  reset: void 0,
                  location: U,
                }),
                  t.history.go(K);
              },
              reset() {
                let ge = new Map(S.blockers);
                ge.set(se, dl), He({ blockers: ge });
              },
            });
          return;
        }
        return Gt(P, U);
      })),
      n)
    ) {
      MF(e, O);
      let j = () => FF(e, O);
      e.addEventListener("pagehide", j),
        (_ = () => e.removeEventListener("pagehide", j));
    }
    return S.initialized || Gt(Mt.Pop, S.location, { initialHydration: !0 }), E;
  }
  function Rt() {
    f && f(),
      _ && _(),
      p.clear(),
      R && R.abort(),
      S.fetchers.forEach((j, P) => Jc(P)),
      S.blockers.forEach((j, P) => MC(P));
  }
  function St(j) {
    return p.add(j), () => p.delete(j);
  }
  function He(j, P) {
    P === void 0 && (P = {}), (S = pt({}, S, j));
    let U = [],
      K = [];
    h.v7_fetcherPersist &&
      S.fetchers.forEach((se, ge) => {
        se.state === "idle" && (Ee.has(ge) ? K.push(ge) : U.push(ge));
      }),
      [...p].forEach((se) =>
        se(S, {
          deletedFetchers: K,
          unstable_viewTransitionOpts: P.viewTransitionOpts,
          unstable_flushSync: P.flushSync === !0,
        })
      ),
      h.v7_fetcherPersist &&
        (U.forEach((se) => S.fetchers.delete(se)), K.forEach((se) => Jc(se)));
  }
  function Bt(j, P, U) {
    var K, se;
    let { flushSync: ge } = U === void 0 ? {} : U,
      Se =
        S.actionData != null &&
        S.navigation.formMethod != null &&
        Sr(S.navigation.formMethod) &&
        S.navigation.state === "loading" &&
        ((K = j.state) == null ? void 0 : K._isRedirect) !== !0,
      ne;
    P.actionData
      ? Object.keys(P.actionData).length > 0
        ? (ne = P.actionData)
        : (ne = null)
      : Se
      ? (ne = S.actionData)
      : (ne = null);
    let Te = P.loaderData
        ? U0(S.loaderData, P.loaderData, P.matches || [], P.errors)
        : S.loaderData,
      ve = S.blockers;
    ve.size > 0 && ((ve = new Map(ve)), ve.forEach(($e, et) => ve.set(et, dl)));
    let Ce =
      I === !0 ||
      (S.navigation.formMethod != null &&
        Sr(S.navigation.formMethod) &&
        ((se = j.state) == null ? void 0 : se._isRedirect) !== !0);
    l && ((a = l), (l = void 0)),
      F ||
        T === Mt.Pop ||
        (T === Mt.Push
          ? t.history.push(j, j.state)
          : T === Mt.Replace && t.history.replace(j, j.state));
    let Ye;
    if (T === Mt.Pop) {
      let $e = O.get(S.location.pathname);
      $e && $e.has(j.pathname)
        ? (Ye = { currentLocation: S.location, nextLocation: j })
        : O.has(j.pathname) &&
          (Ye = { currentLocation: j, nextLocation: S.location });
    } else if (A) {
      let $e = O.get(S.location.pathname);
      $e
        ? $e.add(j.pathname)
        : (($e = new Set([j.pathname])), O.set(S.location.pathname, $e)),
        (Ye = { currentLocation: S.location, nextLocation: j });
    }
    He(
      pt({}, P, {
        actionData: ne,
        loaderData: Te,
        historyAction: T,
        location: j,
        initialized: !0,
        navigation: wp,
        revalidation: "idle",
        restoreScrollPosition: UC(j, P.matches || S.matches),
        preventScrollReset: Ce,
        blockers: ve,
      }),
      { viewTransitionOpts: Ye, flushSync: ge === !0 }
    ),
      (T = Mt.Pop),
      (I = !1),
      (A = !1),
      (F = !1),
      ($ = !1),
      (Z = []),
      (X = []);
  }
  async function gn(j, P) {
    if (typeof j == "number") {
      t.history.go(j);
      return;
    }
    let U = lg(
        S.location,
        S.matches,
        c,
        h.v7_prependBasename,
        j,
        h.v7_relativeSplatPath,
        P == null ? void 0 : P.fromRouteId,
        P == null ? void 0 : P.relative
      ),
      {
        path: K,
        submission: se,
        error: ge,
      } = D0(h.v7_normalizeFormMethod, !1, U, P),
      Se = S.location,
      ne = hc(S.location, K, P && P.state);
    ne = pt({}, ne, t.history.encodeLocation(ne));
    let Te = P && P.replace != null ? P.replace : void 0,
      ve = Mt.Push;
    Te === !0
      ? (ve = Mt.Replace)
      : Te === !1 ||
        (se != null &&
          Sr(se.formMethod) &&
          se.formAction === S.location.pathname + S.location.search &&
          (ve = Mt.Replace));
    let Ce =
        P && "preventScrollReset" in P ? P.preventScrollReset === !0 : void 0,
      Ye = (P && P.unstable_flushSync) === !0,
      $e = FC({ currentLocation: Se, nextLocation: ne, historyAction: ve });
    if ($e) {
      Zc($e, {
        state: "blocked",
        location: ne,
        proceed() {
          Zc($e, {
            state: "proceeding",
            proceed: void 0,
            reset: void 0,
            location: ne,
          }),
            gn(j, P);
        },
        reset() {
          let et = new Map(S.blockers);
          et.set($e, dl), He({ blockers: et });
        },
      });
      return;
    }
    return await Gt(ve, ne, {
      submission: se,
      pendingError: ge,
      preventScrollReset: Ce,
      replace: P && P.replace,
      enableViewTransition: P && P.unstable_viewTransition,
      flushSync: Ye,
    });
  }
  function Me() {
    if (
      (Ln(),
      He({ revalidation: "loading" }),
      S.navigation.state !== "submitting")
    ) {
      if (S.navigation.state === "idle") {
        Gt(S.historyAction, S.location, { startUninterruptedRevalidation: !0 });
        return;
      }
      Gt(T || S.historyAction, S.navigation.location, {
        overrideNavigation: S.navigation,
      });
    }
  }
  async function Gt(j, P, U) {
    R && R.abort(),
      (R = null),
      (T = j),
      (F = (U && U.startUninterruptedRevalidation) === !0),
      Fj(S.location, S.matches),
      (I = (U && U.preventScrollReset) === !0),
      (A = (U && U.enableViewTransition) === !0);
    let K = l || a,
      se = U && U.overrideNavigation,
      ge = Uo(K, P, c),
      Se = (U && U.flushSync) === !0,
      ne = zf(ge, K, P.pathname);
    if ((ne.active && ne.matches && (ge = ne.matches), !ge)) {
      let { error: Be, notFoundMatches: Zt, route: Pt } = Bf(P.pathname);
      Bt(
        P,
        { matches: Zt, loaderData: {}, errors: { [Pt.id]: Be } },
        { flushSync: Se }
      );
      return;
    }
    if (
      S.initialized &&
      !$ &&
      AF(S.location, P) &&
      !(U && U.submission && Sr(U.submission.formMethod))
    ) {
      Bt(P, { matches: ge }, { flushSync: Se });
      return;
    }
    R = new AbortController();
    let Te = Oa(t.history, P, R.signal, U && U.submission),
      ve;
    if (U && U.pendingError)
      ve = [os(ge).route.id, { type: at.error, error: U.pendingError }];
    else if (U && U.submission && Sr(U.submission.formMethod)) {
      let Be = await _r(Te, P, U.submission, ge, ne.active, {
        replace: U.replace,
        flushSync: Se,
      });
      if (Be.shortCircuited) return;
      if (Be.pendingActionResult) {
        let [Zt, Pt] = Be.pendingActionResult;
        if (Bn(Pt) && lf(Pt.error) && Pt.error.status === 404) {
          (R = null),
            Bt(P, {
              matches: Be.matches,
              loaderData: {},
              errors: { [Zt]: Pt.error },
            });
          return;
        }
      }
      (ge = Be.matches || ge),
        (ve = Be.pendingActionResult),
        (se = Sp(P, U.submission)),
        (Se = !1),
        (ne.active = !1),
        (Te = Oa(t.history, Te.url, Te.signal));
    }
    let {
      shortCircuited: Ce,
      matches: Ye,
      loaderData: $e,
      errors: et,
    } = await tl(
      Te,
      P,
      ge,
      ne.active,
      se,
      U && U.submission,
      U && U.fetcherSubmission,
      U && U.replace,
      U && U.initialHydration === !0,
      Se,
      ve
    );
    Ce ||
      ((R = null),
      Bt(P, pt({ matches: Ye || ge }, z0(ve), { loaderData: $e, errors: et })));
  }
  async function _r(j, P, U, K, se, ge) {
    ge === void 0 && (ge = {}), Ln();
    let Se = PF(P, U);
    if ((He({ navigation: Se }, { flushSync: ge.flushSync === !0 }), se)) {
      let ve = await tu(K, P.pathname, j.signal);
      if (ve.type === "aborted") return { shortCircuited: !0 };
      if (ve.type === "error") {
        let { boundaryId: Ce, error: Ye } = eu(P.pathname, ve);
        return {
          matches: ve.partialMatches,
          pendingActionResult: [Ce, { type: at.error, error: Ye }],
        };
      } else if (ve.matches) K = ve.matches;
      else {
        let { notFoundMatches: Ce, error: Ye, route: $e } = Bf(P.pathname);
        return {
          matches: Ce,
          pendingActionResult: [$e.id, { type: at.error, error: Ye }],
        };
      }
    }
    let ne,
      Te = Tl(K, P);
    if (!Te.route.action && !Te.route.lazy)
      ne = {
        type: at.error,
        error: yn(405, {
          method: j.method,
          pathname: P.pathname,
          routeId: Te.route.id,
        }),
      };
    else if (((ne = (await Mr("action", j, [Te], K))[0]), j.signal.aborted))
      return { shortCircuited: !0 };
    if (Wo(ne)) {
      let ve;
      return (
        ge && ge.replace != null
          ? (ve = ge.replace)
          : (ve =
              M0(ne.response.headers.get("Location"), new URL(j.url), c) ===
              S.location.pathname + S.location.search),
        await Zn(j, ne, { submission: U, replace: ve }),
        { shortCircuited: !0 }
      );
    }
    if (Go(ne)) throw yn(400, { type: "defer-action" });
    if (Bn(ne)) {
      let ve = os(K, Te.route.id);
      return (
        (ge && ge.replace) !== !0 && (T = Mt.Push),
        { matches: K, pendingActionResult: [ve.route.id, ne] }
      );
    }
    return { matches: K, pendingActionResult: [Te.route.id, ne] };
  }
  async function tl(j, P, U, K, se, ge, Se, ne, Te, ve, Ce) {
    let Ye = se || Sp(P, ge),
      $e = ge || Se || q0(Ye),
      et = !F && (!h.v7_partialHydration || !Te);
    if (K) {
      if (et) {
        let xt = Ea(Ce);
        He(pt({ navigation: Ye }, xt !== void 0 ? { actionData: xt } : {}), {
          flushSync: ve,
        });
      }
      let Ne = await tu(U, P.pathname, j.signal);
      if (Ne.type === "aborted") return { shortCircuited: !0 };
      if (Ne.type === "error") {
        let { boundaryId: xt, error: Pn } = eu(P.pathname, Ne);
        return {
          matches: Ne.partialMatches,
          loaderData: {},
          errors: { [xt]: Pn },
        };
      } else if (Ne.matches) U = Ne.matches;
      else {
        let { error: xt, notFoundMatches: Pn, route: ht } = Bf(P.pathname);
        return { matches: Pn, loaderData: {}, errors: { [ht.id]: xt } };
      }
    }
    let Be = l || a,
      [Zt, Pt] = L0(
        t.history,
        S,
        U,
        $e,
        P,
        h.v7_partialHydration && Te === !0,
        h.v7_skipActionErrorRevalidation,
        $,
        Z,
        X,
        Ee,
        oe,
        ie,
        Be,
        c,
        Ce
      );
    if (
      (Uf(
        (Ne) =>
          !(U && U.some((xt) => xt.route.id === Ne)) ||
          (Zt && Zt.some((xt) => xt.route.id === Ne))
      ),
      (Q = ++z),
      Zt.length === 0 && Pt.length === 0)
    ) {
      let Ne = PC();
      return (
        Bt(
          P,
          pt(
            {
              matches: U,
              loaderData: {},
              errors: Ce && Bn(Ce[1]) ? { [Ce[0]]: Ce[1].error } : null,
            },
            z0(Ce),
            Ne ? { fetchers: new Map(S.fetchers) } : {}
          ),
          { flushSync: ve }
        ),
        { shortCircuited: !0 }
      );
    }
    if (et) {
      let Ne = {};
      if (!K) {
        Ne.navigation = Ye;
        let xt = Ea(Ce);
        xt !== void 0 && (Ne.actionData = xt);
      }
      Pt.length > 0 && (Ne.fetchers = yr(Pt)), He(Ne, { flushSync: ve });
    }
    Pt.forEach((Ne) => {
      W.has(Ne.key) && Vi(Ne.key),
        Ne.controller && W.set(Ne.key, Ne.controller);
    });
    let nl = () => Pt.forEach((Ne) => Vi(Ne.key));
    R && R.signal.addEventListener("abort", nl);
    let { loaderResults: Qi, fetcherResults: Na } = await Oe(
      S.matches,
      U,
      Zt,
      Pt,
      j
    );
    if (j.signal.aborted) return { shortCircuited: !0 };
    R && R.signal.removeEventListener("abort", nl),
      Pt.forEach((Ne) => W.delete(Ne.key));
    let ka = $0([...Qi, ...Na]);
    if (ka) {
      if (ka.idx >= Zt.length) {
        let Ne = Pt[ka.idx - Zt.length].key;
        ie.add(Ne);
      }
      return await Zn(j, ka.result, { replace: ne }), { shortCircuited: !0 };
    }
    let { loaderData: Ra, errors: Fr } = B0(S, U, Zt, Qi, Ce, Pt, Na, ee);
    ee.forEach((Ne, xt) => {
      Ne.subscribe((Pn) => {
        (Pn || Ne.done) && ee.delete(xt);
      });
    }),
      h.v7_partialHydration &&
        Te &&
        S.errors &&
        Object.entries(S.errors)
          .filter((Ne) => {
            let [xt] = Ne;
            return !Zt.some((Pn) => Pn.route.id === xt);
          })
          .forEach((Ne) => {
            let [xt, Pn] = Ne;
            Fr = Object.assign(Fr || {}, { [xt]: Pn });
          });
    let nu = PC(),
      ru = _C(Q),
      iu = nu || ru || Pt.length > 0;
    return pt(
      { matches: U, loaderData: Ra, errors: Fr },
      iu ? { fetchers: new Map(S.fetchers) } : {}
    );
  }
  function Ea(j) {
    if (j && !Bn(j[1])) return { [j[0]]: j[1].data };
    if (S.actionData)
      return Object.keys(S.actionData).length === 0 ? null : S.actionData;
  }
  function yr(j) {
    return (
      j.forEach((P) => {
        let U = S.fetchers.get(P.key),
          K = hl(void 0, U ? U.data : void 0);
        S.fetchers.set(P.key, K);
      }),
      new Map(S.fetchers)
    );
  }
  function Wi(j, P, U, K) {
    if (r)
      throw new Error(
        "router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback."
      );
    W.has(j) && Vi(j);
    let se = (K && K.unstable_flushSync) === !0,
      ge = l || a,
      Se = lg(
        S.location,
        S.matches,
        c,
        h.v7_prependBasename,
        U,
        h.v7_relativeSplatPath,
        P,
        K == null ? void 0 : K.relative
      ),
      ne = Uo(ge, Se, c),
      Te = zf(ne, ge, Se);
    if ((Te.active && Te.matches && (ne = Te.matches), !ne)) {
      pi(j, P, yn(404, { pathname: Se }), { flushSync: se });
      return;
    }
    let {
      path: ve,
      submission: Ce,
      error: Ye,
    } = D0(h.v7_normalizeFormMethod, !0, Se, K);
    if (Ye) {
      pi(j, P, Ye, { flushSync: se });
      return;
    }
    let $e = Tl(ne, ve);
    if (((I = (K && K.preventScrollReset) === !0), Ce && Sr(Ce.formMethod))) {
      Ta(j, P, ve, $e, ne, Te.active, se, Ce);
      return;
    }
    oe.set(j, { routeId: P, path: ve }),
      Ia(j, P, ve, $e, ne, Te.active, se, Ce);
  }
  async function Ta(j, P, U, K, se, ge, Se, ne) {
    Ln(), oe.delete(j);
    function Te(ht) {
      if (!ht.route.action && !ht.route.lazy) {
        let mi = yn(405, { method: ne.formMethod, pathname: U, routeId: P });
        return pi(j, P, mi, { flushSync: Se }), !0;
      }
      return !1;
    }
    if (!ge && Te(K)) return;
    let ve = S.fetchers.get(j);
    Sn(j, _F(ne, ve), { flushSync: Se });
    let Ce = new AbortController(),
      Ye = Oa(t.history, U, Ce.signal, ne);
    if (ge) {
      let ht = await tu(se, U, Ye.signal);
      if (ht.type === "aborted") return;
      if (ht.type === "error") {
        let { error: mi } = eu(U, ht);
        pi(j, P, mi, { flushSync: Se });
        return;
      } else if (ht.matches) {
        if (((se = ht.matches), (K = Tl(se, U)), Te(K))) return;
      } else {
        pi(j, P, yn(404, { pathname: U }), { flushSync: Se });
        return;
      }
    }
    W.set(j, Ce);
    let $e = z,
      Be = (await Mr("action", Ye, [K], se))[0];
    if (Ye.signal.aborted) {
      W.get(j) === Ce && W.delete(j);
      return;
    }
    if (h.v7_fetcherPersist && Ee.has(j)) {
      if (Wo(Be) || Bn(Be)) {
        Sn(j, no(void 0));
        return;
      }
    } else {
      if (Wo(Be))
        if ((W.delete(j), Q > $e)) {
          Sn(j, no(void 0));
          return;
        } else
          return (
            ie.add(j), Sn(j, hl(ne)), Zn(Ye, Be, { fetcherSubmission: ne })
          );
      if (Bn(Be)) {
        pi(j, P, Be.error);
        return;
      }
    }
    if (Go(Be)) throw yn(400, { type: "defer-action" });
    let Zt = S.navigation.location || S.location,
      Pt = Oa(t.history, Zt, Ce.signal),
      nl = l || a,
      Qi =
        S.navigation.state !== "idle"
          ? Uo(nl, S.navigation.location, c)
          : S.matches;
    Ie(Qi, "Didn't find any matches after fetcher action");
    let Na = ++z;
    q.set(j, Na);
    let ka = hl(ne, Be.data);
    S.fetchers.set(j, ka);
    let [Ra, Fr] = L0(
      t.history,
      S,
      Qi,
      ne,
      Zt,
      !1,
      h.v7_skipActionErrorRevalidation,
      $,
      Z,
      X,
      Ee,
      oe,
      ie,
      nl,
      c,
      [K.route.id, Be]
    );
    Fr.filter((ht) => ht.key !== j).forEach((ht) => {
      let mi = ht.key,
        zC = S.fetchers.get(mi),
        zj = hl(void 0, zC ? zC.data : void 0);
      S.fetchers.set(mi, zj),
        W.has(mi) && Vi(mi),
        ht.controller && W.set(mi, ht.controller);
    }),
      He({ fetchers: new Map(S.fetchers) });
    let nu = () => Fr.forEach((ht) => Vi(ht.key));
    Ce.signal.addEventListener("abort", nu);
    let { loaderResults: ru, fetcherResults: iu } = await Oe(
      S.matches,
      Qi,
      Ra,
      Fr,
      Pt
    );
    if (Ce.signal.aborted) return;
    Ce.signal.removeEventListener("abort", nu),
      q.delete(j),
      W.delete(j),
      Fr.forEach((ht) => W.delete(ht.key));
    let Ne = $0([...ru, ...iu]);
    if (Ne) {
      if (Ne.idx >= Ra.length) {
        let ht = Fr[Ne.idx - Ra.length].key;
        ie.add(ht);
      }
      return Zn(Pt, Ne.result);
    }
    let { loaderData: xt, errors: Pn } = B0(
      S,
      S.matches,
      Ra,
      ru,
      void 0,
      Fr,
      iu,
      ee
    );
    if (S.fetchers.has(j)) {
      let ht = no(Be.data);
      S.fetchers.set(j, ht);
    }
    _C(Na),
      S.navigation.state === "loading" && Na > Q
        ? (Ie(T, "Expected pending action"),
          R && R.abort(),
          Bt(S.navigation.location, {
            matches: Qi,
            loaderData: xt,
            errors: Pn,
            fetchers: new Map(S.fetchers),
          }))
        : (He({
            errors: Pn,
            loaderData: U0(S.loaderData, xt, Qi, Pn),
            fetchers: new Map(S.fetchers),
          }),
          ($ = !1));
  }
  async function Ia(j, P, U, K, se, ge, Se, ne) {
    let Te = S.fetchers.get(j);
    Sn(j, hl(ne, Te ? Te.data : void 0), { flushSync: Se });
    let ve = new AbortController(),
      Ce = Oa(t.history, U, ve.signal);
    if (ge) {
      let Be = await tu(se, U, Ce.signal);
      if (Be.type === "aborted") return;
      if (Be.type === "error") {
        let { error: Zt } = eu(U, Be);
        pi(j, P, Zt, { flushSync: Se });
        return;
      } else if (Be.matches) (se = Be.matches), (K = Tl(se, U));
      else {
        pi(j, P, yn(404, { pathname: U }), { flushSync: Se });
        return;
      }
    }
    W.set(j, ve);
    let Ye = z,
      et = (await Mr("loader", Ce, [K], se))[0];
    if (
      (Go(et) && (et = (await fN(et, Ce.signal, !0)) || et),
      W.get(j) === ve && W.delete(j),
      !Ce.signal.aborted)
    ) {
      if (Ee.has(j)) {
        Sn(j, no(void 0));
        return;
      }
      if (Wo(et))
        if (Q > Ye) {
          Sn(j, no(void 0));
          return;
        } else {
          ie.add(j), await Zn(Ce, et);
          return;
        }
      if (Bn(et)) {
        pi(j, P, et.error);
        return;
      }
      Ie(!Go(et), "Unhandled fetcher deferred data"), Sn(j, no(et.data));
    }
  }
  async function Zn(j, P, U) {
    let {
      submission: K,
      fetcherSubmission: se,
      replace: ge,
    } = U === void 0 ? {} : U;
    P.response.headers.has("X-Remix-Revalidate") && ($ = !0);
    let Se = P.response.headers.get("Location");
    Ie(Se, "Expected a Location header on the redirect Response"),
      (Se = M0(Se, new URL(j.url), c));
    let ne = hc(S.location, Se, { _isRedirect: !0 });
    if (n) {
      let et = !1;
      if (P.response.headers.has("X-Remix-Reload-Document")) et = !0;
      else if (nb.test(Se)) {
        const Be = t.history.createURL(Se);
        et = Be.origin !== e.location.origin || Ws(Be.pathname, c) == null;
      }
      if (et) {
        ge ? e.location.replace(Se) : e.location.assign(Se);
        return;
      }
    }
    R = null;
    let Te = ge === !0 ? Mt.Replace : Mt.Push,
      { formMethod: ve, formAction: Ce, formEncType: Ye } = S.navigation;
    !K && !se && ve && Ce && Ye && (K = q0(S.navigation));
    let $e = K || se;
    if (gF.has(P.response.status) && $e && Sr($e.formMethod))
      await Gt(Te, ne, {
        submission: pt({}, $e, { formAction: Se }),
        preventScrollReset: I,
      });
    else {
      let et = Sp(ne, K);
      await Gt(Te, ne, {
        overrideNavigation: et,
        fetcherSubmission: se,
        preventScrollReset: I,
      });
    }
  }
  async function Mr(j, P, U, K) {
    try {
      let se = await TF(u, j, P, U, K, o, i);
      return await Promise.all(
        se.map((ge, Se) => {
          if (OF(ge)) {
            let ne = ge.result;
            return {
              type: at.redirect,
              response: kF(ne, P, U[Se].route.id, K, c, h.v7_relativeSplatPath),
            };
          }
          return NF(ge);
        })
      );
    } catch (se) {
      return U.map(() => ({ type: at.error, error: se }));
    }
  }
  async function Oe(j, P, U, K, se) {
    let [ge, ...Se] = await Promise.all([
      U.length ? Mr("loader", se, U, P) : [],
      ...K.map((ne) => {
        if (ne.matches && ne.match && ne.controller) {
          let Te = Oa(t.history, ne.path, ne.controller.signal);
          return Mr("loader", Te, [ne.match], ne.matches).then((ve) => ve[0]);
        } else
          return Promise.resolve({
            type: at.error,
            error: yn(404, { pathname: ne.path }),
          });
      }),
    ]);
    return (
      await Promise.all([
        K0(
          j,
          U,
          ge,
          ge.map(() => se.signal),
          !1,
          S.loaderData
        ),
        K0(
          j,
          K.map((ne) => ne.match),
          Se,
          K.map((ne) => (ne.controller ? ne.controller.signal : null)),
          !0
        ),
      ]),
      { loaderResults: ge, fetcherResults: Se }
    );
  }
  function Ln() {
    ($ = !0),
      Z.push(...Uf()),
      oe.forEach((j, P) => {
        W.has(P) && (X.push(P), Vi(P));
      });
  }
  function Sn(j, P, U) {
    U === void 0 && (U = {}),
      S.fetchers.set(j, P),
      He(
        { fetchers: new Map(S.fetchers) },
        { flushSync: (U && U.flushSync) === !0 }
      );
  }
  function pi(j, P, U, K) {
    K === void 0 && (K = {});
    let se = os(S.matches, P);
    Jc(j),
      He(
        { errors: { [se.route.id]: U }, fetchers: new Map(S.fetchers) },
        { flushSync: (K && K.flushSync) === !0 }
      );
  }
  function DC(j) {
    return (
      h.v7_fetcherPersist &&
        (pe.set(j, (pe.get(j) || 0) + 1), Ee.has(j) && Ee.delete(j)),
      S.fetchers.get(j) || yF
    );
  }
  function Jc(j) {
    let P = S.fetchers.get(j);
    W.has(j) && !(P && P.state === "loading" && q.has(j)) && Vi(j),
      oe.delete(j),
      q.delete(j),
      ie.delete(j),
      Ee.delete(j),
      S.fetchers.delete(j);
  }
  function Pj(j) {
    if (h.v7_fetcherPersist) {
      let P = (pe.get(j) || 0) - 1;
      P <= 0 ? (pe.delete(j), Ee.add(j)) : pe.set(j, P);
    } else Jc(j);
    He({ fetchers: new Map(S.fetchers) });
  }
  function Vi(j) {
    let P = W.get(j);
    Ie(P, "Expected fetch controller: " + j), P.abort(), W.delete(j);
  }
  function LC(j) {
    for (let P of j) {
      let U = DC(P),
        K = no(U.data);
      S.fetchers.set(P, K);
    }
  }
  function PC() {
    let j = [],
      P = !1;
    for (let U of ie) {
      let K = S.fetchers.get(U);
      Ie(K, "Expected fetcher: " + U),
        K.state === "loading" && (ie.delete(U), j.push(U), (P = !0));
    }
    return LC(j), P;
  }
  function _C(j) {
    let P = [];
    for (let [U, K] of q)
      if (K < j) {
        let se = S.fetchers.get(U);
        Ie(se, "Expected fetcher: " + U),
          se.state === "loading" && (Vi(U), q.delete(U), P.push(U));
      }
    return LC(P), P.length > 0;
  }
  function _j(j, P) {
    let U = S.blockers.get(j) || dl;
    return me.get(j) !== P && me.set(j, P), U;
  }
  function MC(j) {
    S.blockers.delete(j), me.delete(j);
  }
  function Zc(j, P) {
    let U = S.blockers.get(j) || dl;
    Ie(
      (U.state === "unblocked" && P.state === "blocked") ||
        (U.state === "blocked" && P.state === "blocked") ||
        (U.state === "blocked" && P.state === "proceeding") ||
        (U.state === "blocked" && P.state === "unblocked") ||
        (U.state === "proceeding" && P.state === "unblocked"),
      "Invalid blocker state transition: " + U.state + " -> " + P.state
    );
    let K = new Map(S.blockers);
    K.set(j, P), He({ blockers: K });
  }
  function FC(j) {
    let { currentLocation: P, nextLocation: U, historyAction: K } = j;
    if (me.size === 0) return;
    me.size > 1 && As(!1, "A router only supports one blocker at a time");
    let se = Array.from(me.entries()),
      [ge, Se] = se[se.length - 1],
      ne = S.blockers.get(ge);
    if (
      !(ne && ne.state === "proceeding") &&
      Se({ currentLocation: P, nextLocation: U, historyAction: K })
    )
      return ge;
  }
  function Bf(j) {
    let P = yn(404, { pathname: j }),
      U = l || a,
      { matches: K, route: se } = H0(U);
    return Uf(), { notFoundMatches: K, route: se, error: P };
  }
  function eu(j, P) {
    return {
      boundaryId: os(P.partialMatches).route.id,
      error: yn(400, {
        type: "route-discovery",
        pathname: j,
        message:
          P.error != null && "message" in P.error ? P.error : String(P.error),
      }),
    };
  }
  function Uf(j) {
    let P = [];
    return (
      ee.forEach((U, K) => {
        (!j || j(K)) && (U.cancel(), P.push(K), ee.delete(K));
      }),
      P
    );
  }
  function Mj(j, P, U) {
    if (((m = j), (C = P), (v = U || null), !b && S.navigation === wp)) {
      b = !0;
      let K = UC(S.location, S.matches);
      K != null && He({ restoreScrollPosition: K });
    }
    return () => {
      (m = null), (C = null), (v = null);
    };
  }
  function BC(j, P) {
    return (
      (v &&
        v(
          j,
          P.map((K) => VM(K, S.loaderData))
        )) ||
      j.key
    );
  }
  function Fj(j, P) {
    if (m && C) {
      let U = BC(j, P);
      m[U] = C();
    }
  }
  function UC(j, P) {
    if (m) {
      let U = BC(j, P),
        K = m[U];
      if (typeof K == "number") return K;
    }
    return null;
  }
  function zf(j, P, U) {
    if (d)
      if (j) {
        let K = j[j.length - 1].route;
        if (K.path && (K.path === "*" || K.path.endsWith("/*")))
          return { active: !0, matches: nd(P, U, c, !0) };
      } else return { active: !0, matches: nd(P, U, c, !0) || [] };
    return { active: !1, matches: null };
  }
  async function tu(j, P, U) {
    let K = j,
      se = K.length > 0 ? K[K.length - 1].route : null;
    for (;;) {
      let ge = l == null,
        Se = l || a;
      try {
        await xF(d, P, K, Se, o, i, Pe, U);
      } catch (Ce) {
        return { type: "error", error: Ce, partialMatches: K };
      } finally {
        ge && (a = [...a]);
      }
      if (U.aborted) return { type: "aborted" };
      let ne = Uo(Se, P, c),
        Te = !1;
      if (ne) {
        let Ce = ne[ne.length - 1].route;
        if (Ce.index) return { type: "success", matches: ne };
        if (Ce.path && Ce.path.length > 0)
          if (Ce.path === "*") Te = !0;
          else return { type: "success", matches: ne };
      }
      let ve = nd(Se, P, c, !0);
      if (
        !ve ||
        K.map((Ce) => Ce.route.id).join("-") ===
          ve.map((Ce) => Ce.route.id).join("-")
      )
        return { type: "success", matches: Te ? ne : null };
      if (((K = ve), (se = K[K.length - 1].route), se.path === "*"))
        return { type: "success", matches: K };
    }
  }
  function Bj(j) {
    (o = {}), (l = fc(j, i, void 0, o));
  }
  function Uj(j, P) {
    let U = l == null;
    uN(j, P, l || a, o, i), U && ((a = [...a]), He({}));
  }
  return (
    (E = {
      get basename() {
        return c;
      },
      get future() {
        return h;
      },
      get state() {
        return S;
      },
      get routes() {
        return a;
      },
      get window() {
        return e;
      },
      initialize: wt,
      subscribe: St,
      enableScrollRestoration: Mj,
      navigate: gn,
      fetch: Wi,
      revalidate: Me,
      createHref: (j) => t.history.createHref(j),
      encodeLocation: (j) => t.history.encodeLocation(j),
      getFetcher: DC,
      deleteFetcher: Pj,
      dispose: Rt,
      getBlocker: _j,
      deleteBlocker: MC,
      patchRoutes: Uj,
      _internalFetchControllers: W,
      _internalActiveDeferreds: ee,
      _internalSetRoutes: Bj,
    }),
    E
  );
}
function CF(t) {
  return (
    t != null &&
    (("formData" in t && t.formData != null) ||
      ("body" in t && t.body !== void 0))
  );
}
function lg(t, e, n, r, i, o, a, l) {
  let c, u;
  if (a) {
    c = [];
    for (let h of e)
      if ((c.push(h), h.route.id === a)) {
        u = h;
        break;
      }
  } else (c = e), (u = e[e.length - 1]);
  let d = eb(i || ".", Zv(c, o), Ws(t.pathname, n) || t.pathname, l === "path");
  return (
    i == null && ((d.search = t.search), (d.hash = t.hash)),
    (i == null || i === "" || i === ".") &&
      u &&
      u.route.index &&
      !rb(d.search) &&
      (d.search = d.search ? d.search.replace(/^\?/, "?index&") : "?index"),
    r &&
      n !== "/" &&
      (d.pathname = d.pathname === "/" ? n : Ai([n, d.pathname])),
    la(d)
  );
}
function D0(t, e, n, r) {
  if (!r || !CF(r)) return { path: n };
  if (r.formMethod && !LF(r.formMethod))
    return { path: n, error: yn(405, { method: r.formMethod }) };
  let i = () => ({ path: n, error: yn(400, { type: "invalid-body" }) }),
    o = r.formMethod || "get",
    a = t ? o.toUpperCase() : o.toLowerCase(),
    l = dN(n);
  if (r.body !== void 0) {
    if (r.formEncType === "text/plain") {
      if (!Sr(a)) return i();
      let f =
        typeof r.body == "string"
          ? r.body
          : r.body instanceof FormData || r.body instanceof URLSearchParams
          ? Array.from(r.body.entries()).reduce((p, m) => {
              let [v, C] = m;
              return (
                "" +
                p +
                v +
                "=" +
                C +
                `
`
              );
            }, "")
          : String(r.body);
      return {
        path: n,
        submission: {
          formMethod: a,
          formAction: l,
          formEncType: r.formEncType,
          formData: void 0,
          json: void 0,
          text: f,
        },
      };
    } else if (r.formEncType === "application/json") {
      if (!Sr(a)) return i();
      try {
        let f = typeof r.body == "string" ? JSON.parse(r.body) : r.body;
        return {
          path: n,
          submission: {
            formMethod: a,
            formAction: l,
            formEncType: r.formEncType,
            formData: void 0,
            json: f,
            text: void 0,
          },
        };
      } catch {
        return i();
      }
    }
  }
  Ie(
    typeof FormData == "function",
    "FormData is not available in this environment"
  );
  let c, u;
  if (r.formData) (c = cg(r.formData)), (u = r.formData);
  else if (r.body instanceof FormData) (c = cg(r.body)), (u = r.body);
  else if (r.body instanceof URLSearchParams) (c = r.body), (u = F0(c));
  else if (r.body == null) (c = new URLSearchParams()), (u = new FormData());
  else
    try {
      (c = new URLSearchParams(r.body)), (u = F0(c));
    } catch {
      return i();
    }
  let d = {
    formMethod: a,
    formAction: l,
    formEncType: (r && r.formEncType) || "application/x-www-form-urlencoded",
    formData: u,
    json: void 0,
    text: void 0,
  };
  if (Sr(d.formMethod)) return { path: n, submission: d };
  let h = Do(n);
  return (
    e && h.search && rb(h.search) && c.append("index", ""),
    (h.search = "?" + c),
    { path: la(h), submission: d }
  );
}
function wF(t, e) {
  let n = t;
  if (e) {
    let r = t.findIndex((i) => i.route.id === e);
    r >= 0 && (n = t.slice(0, r));
  }
  return n;
}
function L0(t, e, n, r, i, o, a, l, c, u, d, h, f, p, m, v) {
  let C = v ? (Bn(v[1]) ? v[1].error : v[1].data) : void 0,
    b = t.createURL(e.location),
    g = t.createURL(i),
    y = v && Bn(v[1]) ? v[0] : void 0,
    w = y ? wF(n, y) : n,
    E = v ? v[1].statusCode : void 0,
    S = a && E && E >= 400,
    T = w.filter((R, A) => {
      let { route: O } = R;
      if (O.lazy) return !0;
      if (O.loader == null) return !1;
      if (o)
        return typeof O.loader != "function" || O.loader.hydrate
          ? !0
          : e.loaderData[O.id] === void 0 &&
              (!e.errors || e.errors[O.id] === void 0);
      if (SF(e.loaderData, e.matches[A], R) || c.some(($) => $ === R.route.id))
        return !0;
      let _ = e.matches[A],
        F = R;
      return P0(
        R,
        pt(
          {
            currentUrl: b,
            currentParams: _.params,
            nextUrl: g,
            nextParams: F.params,
          },
          r,
          {
            actionResult: C,
            actionStatus: E,
            defaultShouldRevalidate: S
              ? !1
              : l ||
                b.pathname + b.search === g.pathname + g.search ||
                b.search !== g.search ||
                cN(_, F),
          }
        )
      );
    }),
    I = [];
  return (
    h.forEach((R, A) => {
      if (o || !n.some((Z) => Z.route.id === R.routeId) || d.has(A)) return;
      let O = Uo(p, R.path, m);
      if (!O) {
        I.push({
          key: A,
          routeId: R.routeId,
          path: R.path,
          matches: null,
          match: null,
          controller: null,
        });
        return;
      }
      let _ = e.fetchers.get(A),
        F = Tl(O, R.path),
        $ = !1;
      f.has(A)
        ? ($ = !1)
        : u.includes(A)
        ? ($ = !0)
        : _ && _.state !== "idle" && _.data === void 0
        ? ($ = l)
        : ($ = P0(
            F,
            pt(
              {
                currentUrl: b,
                currentParams: e.matches[e.matches.length - 1].params,
                nextUrl: g,
                nextParams: n[n.length - 1].params,
              },
              r,
              {
                actionResult: C,
                actionStatus: E,
                defaultShouldRevalidate: S ? !1 : l,
              }
            )
          )),
        $ &&
          I.push({
            key: A,
            routeId: R.routeId,
            path: R.path,
            matches: O,
            match: F,
            controller: new AbortController(),
          });
    }),
    [T, I]
  );
}
function SF(t, e, n) {
  let r = !e || n.route.id !== e.route.id,
    i = t[n.route.id] === void 0;
  return r || i;
}
function cN(t, e) {
  let n = t.route.path;
  return (
    t.pathname !== e.pathname ||
    (n != null && n.endsWith("*") && t.params["*"] !== e.params["*"])
  );
}
function P0(t, e) {
  if (t.route.shouldRevalidate) {
    let n = t.route.shouldRevalidate(e);
    if (typeof n == "boolean") return n;
  }
  return e.defaultShouldRevalidate;
}
async function xF(t, e, n, r, i, o, a, l) {
  let c = [e, ...n.map((u) => u.route.id)].join("-");
  try {
    let u = a.get(c);
    u ||
      ((u = t({
        path: e,
        matches: n,
        patch: (d, h) => {
          l.aborted || uN(d, h, r, i, o);
        },
      })),
      a.set(c, u)),
      u && jF(u) && (await u);
  } finally {
    a.delete(c);
  }
}
function uN(t, e, n, r, i) {
  if (t) {
    var o;
    let a = r[t];
    Ie(a, "No route found to patch children into: routeId = " + t);
    let l = fc(
      e,
      i,
      [
        t,
        "patch",
        String(((o = a.children) == null ? void 0 : o.length) || "0"),
      ],
      r
    );
    a.children ? a.children.push(...l) : (a.children = l);
  } else {
    let a = fc(e, i, ["patch", String(n.length || "0")], r);
    n.push(...a);
  }
}
async function _0(t, e, n) {
  if (!t.lazy) return;
  let r = await t.lazy();
  if (!t.lazy) return;
  let i = n[t.id];
  Ie(i, "No route found in manifest");
  let o = {};
  for (let a in r) {
    let c = i[a] !== void 0 && a !== "hasErrorBoundary";
    As(
      !c,
      'Route "' +
        i.id +
        '" has a static property "' +
        a +
        '" defined but its lazy function is also returning a value for this property. ' +
        ('The lazy route property "' + a + '" will be ignored.')
    ),
      !c && !GM.has(a) && (o[a] = r[a]);
  }
  Object.assign(i, o), Object.assign(i, pt({}, e(i), { lazy: void 0 }));
}
function EF(t) {
  return Promise.all(t.matches.map((e) => e.resolve()));
}
async function TF(t, e, n, r, i, o, a, l) {
  let c = r.reduce((h, f) => h.add(f.route.id), new Set()),
    u = new Set(),
    d = await t({
      matches: i.map((h) => {
        let f = c.has(h.route.id);
        return pt({}, h, {
          shouldLoad: f,
          resolve: (m) => (
            u.add(h.route.id),
            f
              ? IF(e, n, h, o, a, m, l)
              : Promise.resolve({ type: at.data, result: void 0 })
          ),
        });
      }),
      request: n,
      params: i[0].params,
      context: l,
    });
  return (
    i.forEach((h) =>
      Ie(
        u.has(h.route.id),
        '`match.resolve()` was not called for route id "' +
          h.route.id +
          '". You must call `match.resolve()` on every match passed to `dataStrategy` to ensure all routes are properly loaded.'
      )
    ),
    d.filter((h, f) => c.has(i[f].route.id))
  );
}
async function IF(t, e, n, r, i, o, a) {
  let l,
    c,
    u = (d) => {
      let h,
        f = new Promise((v, C) => (h = C));
      (c = () => h()), e.signal.addEventListener("abort", c);
      let p = (v) =>
          typeof d != "function"
            ? Promise.reject(
                new Error(
                  "You cannot call the handler for a route which defines a boolean " +
                    ('"' + t + '" [routeId: ' + n.route.id + "]")
                )
              )
            : d(
                { request: e, params: n.params, context: a },
                ...(v !== void 0 ? [v] : [])
              ),
        m;
      return (
        o
          ? (m = o((v) => p(v)))
          : (m = (async () => {
              try {
                return { type: "data", result: await p() };
              } catch (v) {
                return { type: "error", result: v };
              }
            })()),
        Promise.race([m, f])
      );
    };
  try {
    let d = n.route[t];
    if (n.route.lazy)
      if (d) {
        let h,
          [f] = await Promise.all([
            u(d).catch((p) => {
              h = p;
            }),
            _0(n.route, i, r),
          ]);
        if (h !== void 0) throw h;
        l = f;
      } else if ((await _0(n.route, i, r), (d = n.route[t]), d)) l = await u(d);
      else if (t === "action") {
        let h = new URL(e.url),
          f = h.pathname + h.search;
        throw yn(405, { method: e.method, pathname: f, routeId: n.route.id });
      } else return { type: at.data, result: void 0 };
    else if (d) l = await u(d);
    else {
      let h = new URL(e.url),
        f = h.pathname + h.search;
      throw yn(404, { pathname: f });
    }
    Ie(
      l.result !== void 0,
      "You defined " +
        (t === "action" ? "an action" : "a loader") +
        " for route " +
        ('"' +
          n.route.id +
          "\" but didn't return anything from your `" +
          t +
          "` ") +
        "function. Please return a value or `null`."
    );
  } catch (d) {
    return { type: at.error, result: d };
  } finally {
    c && e.signal.removeEventListener("abort", c);
  }
  return l;
}
async function NF(t) {
  let { result: e, type: n, status: r } = t;
  if (hN(e)) {
    let a;
    try {
      let l = e.headers.get("Content-Type");
      l && /\bapplication\/json\b/.test(l)
        ? e.body == null
          ? (a = null)
          : (a = await e.json())
        : (a = await e.text());
    } catch (l) {
      return { type: at.error, error: l };
    }
    return n === at.error
      ? {
          type: at.error,
          error: new tb(e.status, e.statusText, a),
          statusCode: e.status,
          headers: e.headers,
        }
      : { type: at.data, data: a, statusCode: e.status, headers: e.headers };
  }
  if (n === at.error)
    return { type: at.error, error: e, statusCode: lf(e) ? e.status : r };
  if (DF(e)) {
    var i, o;
    return {
      type: at.deferred,
      deferredData: e,
      statusCode: (i = e.init) == null ? void 0 : i.status,
      headers:
        ((o = e.init) == null ? void 0 : o.headers) &&
        new Headers(e.init.headers),
    };
  }
  return { type: at.data, data: e, statusCode: r };
}
function kF(t, e, n, r, i, o) {
  let a = t.headers.get("Location");
  if (
    (Ie(
      a,
      "Redirects returned/thrown from loaders/actions must have a Location header"
    ),
    !nb.test(a))
  ) {
    let l = r.slice(0, r.findIndex((c) => c.route.id === n) + 1);
    (a = lg(new URL(e.url), l, i, !0, a, o)), t.headers.set("Location", a);
  }
  return t;
}
function M0(t, e, n) {
  if (nb.test(t)) {
    let r = t,
      i = r.startsWith("//") ? new URL(e.protocol + r) : new URL(r),
      o = Ws(i.pathname, n) != null;
    if (i.origin === e.origin && o) return i.pathname + i.search + i.hash;
  }
  return t;
}
function Oa(t, e, n, r) {
  let i = t.createURL(dN(e)).toString(),
    o = { signal: n };
  if (r && Sr(r.formMethod)) {
    let { formMethod: a, formEncType: l } = r;
    (o.method = a.toUpperCase()),
      l === "application/json"
        ? ((o.headers = new Headers({ "Content-Type": l })),
          (o.body = JSON.stringify(r.json)))
        : l === "text/plain"
        ? (o.body = r.text)
        : l === "application/x-www-form-urlencoded" && r.formData
        ? (o.body = cg(r.formData))
        : (o.body = r.formData);
  }
  return new Request(i, o);
}
function cg(t) {
  let e = new URLSearchParams();
  for (let [n, r] of t.entries())
    e.append(n, typeof r == "string" ? r : r.name);
  return e;
}
function F0(t) {
  let e = new FormData();
  for (let [n, r] of t.entries()) e.append(n, r);
  return e;
}
function RF(t, e, n, r, i, o) {
  let a = {},
    l = null,
    c,
    u = !1,
    d = {},
    h = r && Bn(r[1]) ? r[1].error : void 0;
  return (
    n.forEach((f, p) => {
      let m = e[p].route.id;
      if (
        (Ie(!Wo(f), "Cannot handle redirect results in processLoaderData"),
        Bn(f))
      ) {
        let v = f.error;
        h !== void 0 && ((v = h), (h = void 0)), (l = l || {});
        {
          let C = os(t, m);
          l[C.route.id] == null && (l[C.route.id] = v);
        }
        (a[m] = void 0),
          u || ((u = !0), (c = lf(f.error) ? f.error.status : 500)),
          f.headers && (d[m] = f.headers);
      } else
        Go(f)
          ? (i.set(m, f.deferredData),
            (a[m] = f.deferredData.data),
            f.statusCode != null &&
              f.statusCode !== 200 &&
              !u &&
              (c = f.statusCode),
            f.headers && (d[m] = f.headers))
          : ((a[m] = f.data),
            f.statusCode && f.statusCode !== 200 && !u && (c = f.statusCode),
            f.headers && (d[m] = f.headers));
    }),
    h !== void 0 && r && ((l = { [r[0]]: h }), (a[r[0]] = void 0)),
    { loaderData: a, errors: l, statusCode: c || 200, loaderHeaders: d }
  );
}
function B0(t, e, n, r, i, o, a, l) {
  let { loaderData: c, errors: u } = RF(e, n, r, i, l);
  for (let d = 0; d < o.length; d++) {
    let { key: h, match: f, controller: p } = o[d];
    Ie(
      a !== void 0 && a[d] !== void 0,
      "Did not find corresponding fetcher result"
    );
    let m = a[d];
    if (!(p && p.signal.aborted))
      if (Bn(m)) {
        let v = os(t.matches, f == null ? void 0 : f.route.id);
        (u && u[v.route.id]) || (u = pt({}, u, { [v.route.id]: m.error })),
          t.fetchers.delete(h);
      } else if (Wo(m)) Ie(!1, "Unhandled fetcher revalidation redirect");
      else if (Go(m)) Ie(!1, "Unhandled fetcher deferred data");
      else {
        let v = no(m.data);
        t.fetchers.set(h, v);
      }
  }
  return { loaderData: c, errors: u };
}
function U0(t, e, n, r) {
  let i = pt({}, e);
  for (let o of n) {
    let a = o.route.id;
    if (
      (e.hasOwnProperty(a)
        ? e[a] !== void 0 && (i[a] = e[a])
        : t[a] !== void 0 && o.route.loader && (i[a] = t[a]),
      r && r.hasOwnProperty(a))
    )
      break;
  }
  return i;
}
function z0(t) {
  return t
    ? Bn(t[1])
      ? { actionData: {} }
      : { actionData: { [t[0]]: t[1].data } }
    : {};
}
function os(t, e) {
  return (
    (e ? t.slice(0, t.findIndex((r) => r.route.id === e) + 1) : [...t])
      .reverse()
      .find((r) => r.route.hasErrorBoundary === !0) || t[0]
  );
}
function H0(t) {
  let e =
    t.length === 1
      ? t[0]
      : t.find((n) => n.index || !n.path || n.path === "/") || {
          id: "__shim-error-route__",
        };
  return {
    matches: [{ params: {}, pathname: "", pathnameBase: "", route: e }],
    route: e,
  };
}
function yn(t, e) {
  let {
      pathname: n,
      routeId: r,
      method: i,
      type: o,
      message: a,
    } = e === void 0 ? {} : e,
    l = "Unknown Server Error",
    c = "Unknown @remix-run/router error";
  return (
    t === 400
      ? ((l = "Bad Request"),
        o === "route-discovery"
          ? (c =
              'Unable to match URL "' +
              n +
              '" - the `unstable_patchRoutesOnMiss()` ' +
              (`function threw the following error:
` +
                a))
          : i && n && r
          ? (c =
              "You made a " +
              i +
              ' request to "' +
              n +
              '" but ' +
              ('did not provide a `loader` for route "' + r + '", ') +
              "so there is no way to handle the request.")
          : o === "defer-action"
          ? (c = "defer() is not supported in actions")
          : o === "invalid-body" && (c = "Unable to encode submission body"))
      : t === 403
      ? ((l = "Forbidden"),
        (c = 'Route "' + r + '" does not match URL "' + n + '"'))
      : t === 404
      ? ((l = "Not Found"), (c = 'No route matches URL "' + n + '"'))
      : t === 405 &&
        ((l = "Method Not Allowed"),
        i && n && r
          ? (c =
              "You made a " +
              i.toUpperCase() +
              ' request to "' +
              n +
              '" but ' +
              ('did not provide an `action` for route "' + r + '", ') +
              "so there is no way to handle the request.")
          : i && (c = 'Invalid request method "' + i.toUpperCase() + '"')),
    new tb(t || 500, l, new Error(c), !0)
  );
}
function $0(t) {
  for (let e = t.length - 1; e >= 0; e--) {
    let n = t[e];
    if (Wo(n)) return { result: n, idx: e };
  }
}
function dN(t) {
  let e = typeof t == "string" ? Do(t) : t;
  return la(pt({}, e, { hash: "" }));
}
function AF(t, e) {
  return t.pathname !== e.pathname || t.search !== e.search
    ? !1
    : t.hash === ""
    ? e.hash !== ""
    : t.hash === e.hash
    ? !0
    : e.hash !== "";
}
function jF(t) {
  return typeof t == "object" && t != null && "then" in t;
}
function OF(t) {
  return hN(t.result) && mF.has(t.result.status);
}
function Go(t) {
  return t.type === at.deferred;
}
function Bn(t) {
  return t.type === at.error;
}
function Wo(t) {
  return (t && t.type) === at.redirect;
}
function DF(t) {
  let e = t;
  return (
    e &&
    typeof e == "object" &&
    typeof e.data == "object" &&
    typeof e.subscribe == "function" &&
    typeof e.cancel == "function" &&
    typeof e.resolveData == "function"
  );
}
function hN(t) {
  return (
    t != null &&
    typeof t.status == "number" &&
    typeof t.statusText == "string" &&
    typeof t.headers == "object" &&
    typeof t.body < "u"
  );
}
function LF(t) {
  return pF.has(t.toLowerCase());
}
function Sr(t) {
  return hF.has(t.toLowerCase());
}
async function K0(t, e, n, r, i, o) {
  for (let a = 0; a < n.length; a++) {
    let l = n[a],
      c = e[a];
    if (!c) continue;
    let u = t.find((h) => h.route.id === c.route.id),
      d = u != null && !cN(u, c) && (o && o[c.route.id]) !== void 0;
    if (Go(l) && (i || d)) {
      let h = r[a];
      Ie(h, "Expected an AbortSignal for revalidating fetcher deferred result"),
        await fN(l, h, i).then((f) => {
          f && (n[a] = f || n[a]);
        });
    }
  }
}
async function fN(t, e, n) {
  if ((n === void 0 && (n = !1), !(await t.deferredData.resolveData(e)))) {
    if (n)
      try {
        return { type: at.data, data: t.deferredData.unwrappedData };
      } catch (i) {
        return { type: at.error, error: i };
      }
    return { type: at.data, data: t.deferredData.data };
  }
}
function rb(t) {
  return new URLSearchParams(t).getAll("index").some((e) => e === "");
}
function Tl(t, e) {
  let n = typeof e == "string" ? Do(e).search : e.search;
  if (t[t.length - 1].route.index && rb(n || "")) return t[t.length - 1];
  let r = aN(t);
  return r[r.length - 1];
}
function q0(t) {
  let {
    formMethod: e,
    formAction: n,
    formEncType: r,
    text: i,
    formData: o,
    json: a,
  } = t;
  if (!(!e || !n || !r)) {
    if (i != null)
      return {
        formMethod: e,
        formAction: n,
        formEncType: r,
        formData: void 0,
        json: void 0,
        text: i,
      };
    if (o != null)
      return {
        formMethod: e,
        formAction: n,
        formEncType: r,
        formData: o,
        json: void 0,
        text: void 0,
      };
    if (a !== void 0)
      return {
        formMethod: e,
        formAction: n,
        formEncType: r,
        formData: void 0,
        json: a,
        text: void 0,
      };
  }
}
function Sp(t, e) {
  return e
    ? {
        state: "loading",
        location: t,
        formMethod: e.formMethod,
        formAction: e.formAction,
        formEncType: e.formEncType,
        formData: e.formData,
        json: e.json,
        text: e.text,
      }
    : {
        state: "loading",
        location: t,
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0,
        json: void 0,
        text: void 0,
      };
}
function PF(t, e) {
  return {
    state: "submitting",
    location: t,
    formMethod: e.formMethod,
    formAction: e.formAction,
    formEncType: e.formEncType,
    formData: e.formData,
    json: e.json,
    text: e.text,
  };
}
function hl(t, e) {
  return t
    ? {
        state: "loading",
        formMethod: t.formMethod,
        formAction: t.formAction,
        formEncType: t.formEncType,
        formData: t.formData,
        json: t.json,
        text: t.text,
        data: e,
      }
    : {
        state: "loading",
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0,
        json: void 0,
        text: void 0,
        data: e,
      };
}
function _F(t, e) {
  return {
    state: "submitting",
    formMethod: t.formMethod,
    formAction: t.formAction,
    formEncType: t.formEncType,
    formData: t.formData,
    json: t.json,
    text: t.text,
    data: e ? e.data : void 0,
  };
}
function no(t) {
  return {
    state: "idle",
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
    data: t,
  };
}
function MF(t, e) {
  try {
    let n = t.sessionStorage.getItem(lN);
    if (n) {
      let r = JSON.parse(n);
      for (let [i, o] of Object.entries(r || {}))
        o && Array.isArray(o) && e.set(i, new Set(o || []));
    }
  } catch {}
}
function FF(t, e) {
  if (e.size > 0) {
    let n = {};
    for (let [r, i] of e) n[r] = [...i];
    try {
      t.sessionStorage.setItem(lN, JSON.stringify(n));
    } catch (r) {
      As(
        !1,
        "Failed to save applied view transitions in sessionStorage (" + r + ")."
      );
    }
  }
}
/**
 * React Router v6.25.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function uh() {
  return (
    (uh = Object.assign
      ? Object.assign.bind()
      : function (t) {
          for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n)
              Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
          }
          return t;
        }),
    uh.apply(this, arguments)
  );
}
const cf = x.createContext(null),
  pN = x.createContext(null),
  Ca = x.createContext(null),
  ib = x.createContext(null),
  Ki = x.createContext({ outlet: null, matches: [], isDataRoute: !1 }),
  mN = x.createContext(null);
function BF(t, e) {
  let { relative: n } = e === void 0 ? {} : e;
  Mc() || Ie(!1);
  let { basename: r, navigator: i } = x.useContext(Ca),
    { hash: o, pathname: a, search: l } = yN(t, { relative: n }),
    c = a;
  return (
    r !== "/" && (c = a === "/" ? r : Ai([r, a])),
    i.createHref({ pathname: c, search: l, hash: o })
  );
}
function Mc() {
  return x.useContext(ib) != null;
}
function Dn() {
  return Mc() || Ie(!1), x.useContext(ib).location;
}
function gN(t) {
  x.useContext(Ca).static || x.useLayoutEffect(t);
}
function Lt() {
  let { isDataRoute: t } = x.useContext(Ki);
  return t ? ZF() : UF();
}
function UF() {
  Mc() || Ie(!1);
  let t = x.useContext(cf),
    { basename: e, future: n, navigator: r } = x.useContext(Ca),
    { matches: i } = x.useContext(Ki),
    { pathname: o } = Dn(),
    a = JSON.stringify(Zv(i, n.v7_relativeSplatPath)),
    l = x.useRef(!1);
  return (
    gN(() => {
      l.current = !0;
    }),
    x.useCallback(
      function (u, d) {
        if ((d === void 0 && (d = {}), !l.current)) return;
        if (typeof u == "number") {
          r.go(u);
          return;
        }
        let h = eb(u, JSON.parse(a), o, d.relative === "path");
        t == null &&
          e !== "/" &&
          (h.pathname = h.pathname === "/" ? e : Ai([e, h.pathname])),
          (d.replace ? r.replace : r.push)(h, d.state, d);
      },
      [e, r, a, o, t]
    )
  );
}
const zF = x.createContext(null);
function HF(t) {
  let e = x.useContext(Ki).outlet;
  return e && x.createElement(zF.Provider, { value: t }, e);
}
function ob() {
  let { matches: t } = x.useContext(Ki),
    e = t[t.length - 1];
  return e ? e.params : {};
}
function yN(t, e) {
  let { relative: n } = e === void 0 ? {} : e,
    { future: r } = x.useContext(Ca),
    { matches: i } = x.useContext(Ki),
    { pathname: o } = Dn(),
    a = JSON.stringify(Zv(i, r.v7_relativeSplatPath));
  return x.useMemo(() => eb(t, JSON.parse(a), o, n === "path"), [t, a, o, n]);
}
function $F(t, e, n, r) {
  Mc() || Ie(!1);
  let { navigator: i } = x.useContext(Ca),
    { matches: o } = x.useContext(Ki),
    a = o[o.length - 1],
    l = a ? a.params : {};
  a && a.pathname;
  let c = a ? a.pathnameBase : "/";
  a && a.route;
  let u = Dn(),
    d;
  d = u;
  let h = d.pathname || "/",
    f = h;
  if (c !== "/") {
    let v = c.replace(/^\//, "").split("/");
    f = "/" + h.replace(/^\//, "").split("/").slice(v.length).join("/");
  }
  let p = Uo(t, { pathname: f });
  return VF(
    p &&
      p.map((v) =>
        Object.assign({}, v, {
          params: Object.assign({}, l, v.params),
          pathname: Ai([
            c,
            i.encodeLocation
              ? i.encodeLocation(v.pathname).pathname
              : v.pathname,
          ]),
          pathnameBase:
            v.pathnameBase === "/"
              ? c
              : Ai([
                  c,
                  i.encodeLocation
                    ? i.encodeLocation(v.pathnameBase).pathname
                    : v.pathnameBase,
                ]),
        })
      ),
    o,
    n,
    r
  );
}
function KF() {
  let t = JF(),
    e = lf(t)
      ? t.status + " " + t.statusText
      : t instanceof Error
      ? t.message
      : JSON.stringify(t),
    n = t instanceof Error ? t.stack : null,
    i = { padding: "0.5rem", backgroundColor: "rgba(200,200,200, 0.5)" };
  return x.createElement(
    x.Fragment,
    null,
    x.createElement("h2", null, "Unexpected Application Error!"),
    x.createElement("h3", { style: { fontStyle: "italic" } }, e),
    n ? x.createElement("pre", { style: i }, n) : null,
    null
  );
}
const qF = x.createElement(KF, null);
class GF extends x.Component {
  constructor(e) {
    super(e),
      (this.state = {
        location: e.location,
        revalidation: e.revalidation,
        error: e.error,
      });
  }
  static getDerivedStateFromError(e) {
    return { error: e };
  }
  static getDerivedStateFromProps(e, n) {
    return n.location !== e.location ||
      (n.revalidation !== "idle" && e.revalidation === "idle")
      ? { error: e.error, location: e.location, revalidation: e.revalidation }
      : {
          error: e.error !== void 0 ? e.error : n.error,
          location: n.location,
          revalidation: e.revalidation || n.revalidation,
        };
  }
  componentDidCatch(e, n) {
    console.error(
      "React Router caught the following error during render",
      e,
      n
    );
  }
  render() {
    return this.state.error !== void 0
      ? x.createElement(
          Ki.Provider,
          { value: this.props.routeContext },
          x.createElement(mN.Provider, {
            value: this.state.error,
            children: this.props.component,
          })
        )
      : this.props.children;
  }
}
function WF(t) {
  let { routeContext: e, match: n, children: r } = t,
    i = x.useContext(cf);
  return (
    i &&
      i.static &&
      i.staticContext &&
      (n.route.errorElement || n.route.ErrorBoundary) &&
      (i.staticContext._deepestRenderedBoundaryId = n.route.id),
    x.createElement(Ki.Provider, { value: e }, r)
  );
}
function VF(t, e, n, r) {
  var i;
  if (
    (e === void 0 && (e = []),
    n === void 0 && (n = null),
    r === void 0 && (r = null),
    t == null)
  ) {
    var o;
    if ((o = n) != null && o.errors) t = n.matches;
    else return null;
  }
  let a = t,
    l = (i = n) == null ? void 0 : i.errors;
  if (l != null) {
    let d = a.findIndex(
      (h) => h.route.id && (l == null ? void 0 : l[h.route.id]) !== void 0
    );
    d >= 0 || Ie(!1), (a = a.slice(0, Math.min(a.length, d + 1)));
  }
  let c = !1,
    u = -1;
  if (n && r && r.v7_partialHydration)
    for (let d = 0; d < a.length; d++) {
      let h = a[d];
      if (
        ((h.route.HydrateFallback || h.route.hydrateFallbackElement) && (u = d),
        h.route.id)
      ) {
        let { loaderData: f, errors: p } = n,
          m =
            h.route.loader &&
            f[h.route.id] === void 0 &&
            (!p || p[h.route.id] === void 0);
        if (h.route.lazy || m) {
          (c = !0), u >= 0 ? (a = a.slice(0, u + 1)) : (a = [a[0]]);
          break;
        }
      }
    }
  return a.reduceRight((d, h, f) => {
    let p,
      m = !1,
      v = null,
      C = null;
    n &&
      ((p = l && h.route.id ? l[h.route.id] : void 0),
      (v = h.route.errorElement || qF),
      c &&
        (u < 0 && f === 0
          ? ((m = !0), (C = null))
          : u === f &&
            ((m = !0), (C = h.route.hydrateFallbackElement || null))));
    let b = e.concat(a.slice(0, f + 1)),
      g = () => {
        let y;
        return (
          p
            ? (y = v)
            : m
            ? (y = C)
            : h.route.Component
            ? (y = x.createElement(h.route.Component, null))
            : h.route.element
            ? (y = h.route.element)
            : (y = d),
          x.createElement(WF, {
            match: h,
            routeContext: { outlet: d, matches: b, isDataRoute: n != null },
            children: y,
          })
        );
      };
    return n && (h.route.ErrorBoundary || h.route.errorElement || f === 0)
      ? x.createElement(GF, {
          location: n.location,
          revalidation: n.revalidation,
          component: v,
          error: p,
          children: g(),
          routeContext: { outlet: null, matches: b, isDataRoute: !0 },
        })
      : g();
  }, null);
}
var vN = (function (t) {
    return (
      (t.UseBlocker = "useBlocker"),
      (t.UseRevalidator = "useRevalidator"),
      (t.UseNavigateStable = "useNavigate"),
      t
    );
  })(vN || {}),
  dh = (function (t) {
    return (
      (t.UseBlocker = "useBlocker"),
      (t.UseLoaderData = "useLoaderData"),
      (t.UseActionData = "useActionData"),
      (t.UseRouteError = "useRouteError"),
      (t.UseNavigation = "useNavigation"),
      (t.UseRouteLoaderData = "useRouteLoaderData"),
      (t.UseMatches = "useMatches"),
      (t.UseRevalidator = "useRevalidator"),
      (t.UseNavigateStable = "useNavigate"),
      (t.UseRouteId = "useRouteId"),
      t
    );
  })(dh || {});
function QF(t) {
  let e = x.useContext(cf);
  return e || Ie(!1), e;
}
function YF(t) {
  let e = x.useContext(pN);
  return e || Ie(!1), e;
}
function XF(t) {
  let e = x.useContext(Ki);
  return e || Ie(!1), e;
}
function bN(t) {
  let e = XF(),
    n = e.matches[e.matches.length - 1];
  return n.route.id || Ie(!1), n.route.id;
}
function JF() {
  var t;
  let e = x.useContext(mN),
    n = YF(dh.UseRouteError),
    r = bN(dh.UseRouteError);
  return e !== void 0 ? e : (t = n.errors) == null ? void 0 : t[r];
}
function ZF() {
  let { router: t } = QF(vN.UseNavigateStable),
    e = bN(dh.UseNavigateStable),
    n = x.useRef(!1);
  return (
    gN(() => {
      n.current = !0;
    }),
    x.useCallback(
      function (i, o) {
        o === void 0 && (o = {}),
          n.current &&
            (typeof i == "number"
              ? t.navigate(i)
              : t.navigate(i, uh({ fromRouteId: e }, o)));
      },
      [t, e]
    )
  );
}
function e2(t) {
  return HF(t.context);
}
function Ue(t) {
  Ie(!1);
}
function t2(t) {
  let {
    basename: e = "/",
    children: n = null,
    location: r,
    navigationType: i = Mt.Pop,
    navigator: o,
    static: a = !1,
    future: l,
  } = t;
  Mc() && Ie(!1);
  let c = e.replace(/^\/*/, "/"),
    u = x.useMemo(
      () => ({
        basename: c,
        navigator: o,
        static: a,
        future: uh({ v7_relativeSplatPath: !1 }, l),
      }),
      [c, l, o, a]
    );
  typeof r == "string" && (r = Do(r));
  let {
      pathname: d = "/",
      search: h = "",
      hash: f = "",
      state: p = null,
      key: m = "default",
    } = r,
    v = x.useMemo(() => {
      let C = Ws(d, c);
      return C == null
        ? null
        : {
            location: { pathname: C, search: h, hash: f, state: p, key: m },
            navigationType: i,
          };
    }, [c, d, h, f, p, m, i]);
  return v == null
    ? null
    : x.createElement(
        Ca.Provider,
        { value: u },
        x.createElement(ib.Provider, { children: n, value: v })
      );
}
new Promise(() => {});
function ug(t, e) {
  e === void 0 && (e = []);
  let n = [];
  return (
    x.Children.forEach(t, (r, i) => {
      if (!x.isValidElement(r)) return;
      let o = [...e, i];
      if (r.type === x.Fragment) {
        n.push.apply(n, ug(r.props.children, o));
        return;
      }
      r.type !== Ue && Ie(!1), !r.props.index || !r.props.children || Ie(!1);
      let a = {
        id: r.props.id || o.join("-"),
        caseSensitive: r.props.caseSensitive,
        element: r.props.element,
        Component: r.props.Component,
        index: r.props.index,
        path: r.props.path,
        loader: r.props.loader,
        action: r.props.action,
        errorElement: r.props.errorElement,
        ErrorBoundary: r.props.ErrorBoundary,
        hasErrorBoundary:
          r.props.ErrorBoundary != null || r.props.errorElement != null,
        shouldRevalidate: r.props.shouldRevalidate,
        handle: r.props.handle,
        lazy: r.props.lazy,
      };
      r.props.children && (a.children = ug(r.props.children, o)), n.push(a);
    }),
    n
  );
}
function n2(t) {
  let e = {
    hasErrorBoundary: t.ErrorBoundary != null || t.errorElement != null,
  };
  return (
    t.Component &&
      Object.assign(e, {
        element: x.createElement(t.Component),
        Component: void 0,
      }),
    t.HydrateFallback &&
      Object.assign(e, {
        hydrateFallbackElement: x.createElement(t.HydrateFallback),
        HydrateFallback: void 0,
      }),
    t.ErrorBoundary &&
      Object.assign(e, {
        errorElement: x.createElement(t.ErrorBoundary),
        ErrorBoundary: void 0,
      }),
    e
  );
}
/**
 * React Router DOM v6.25.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function pc() {
  return (
    (pc = Object.assign
      ? Object.assign.bind()
      : function (t) {
          for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n)
              Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
          }
          return t;
        }),
    pc.apply(this, arguments)
  );
}
function r2(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
function i2(t) {
  return !!(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey);
}
function o2(t, e) {
  return t.button === 0 && (!e || e === "_self") && !i2(t);
}
const a2 = [
    "onClick",
    "relative",
    "reloadDocument",
    "replace",
    "state",
    "target",
    "to",
    "preventScrollReset",
    "unstable_viewTransition",
  ],
  s2 = "6";
try {
  window.__reactRouterVersion = s2;
} catch {}
function l2(t, e) {
  return bF({
    basename: void 0,
    future: pc({}, void 0, { v7_prependBasename: !0 }),
    history: $M({ window: void 0 }),
    hydrationData: c2(),
    routes: t,
    mapRouteProperties: n2,
    unstable_dataStrategy: void 0,
    unstable_patchRoutesOnMiss: void 0,
    window: void 0,
  }).initialize();
}
function c2() {
  var t;
  let e = (t = window) == null ? void 0 : t.__staticRouterHydrationData;
  return e && e.errors && (e = pc({}, e, { errors: u2(e.errors) })), e;
}
function u2(t) {
  if (!t) return null;
  let e = Object.entries(t),
    n = {};
  for (let [r, i] of e)
    if (i && i.__type === "RouteErrorResponse")
      n[r] = new tb(i.status, i.statusText, i.data, i.internal === !0);
    else if (i && i.__type === "Error") {
      if (i.__subType) {
        let o = window[i.__subType];
        if (typeof o == "function")
          try {
            let a = new o(i.message);
            (a.stack = ""), (n[r] = a);
          } catch {}
      }
      if (n[r] == null) {
        let o = new Error(i.message);
        (o.stack = ""), (n[r] = o);
      }
    } else n[r] = i;
  return n;
}
const d2 = x.createContext({ isTransitioning: !1 }),
  h2 = x.createContext(new Map()),
  f2 = "startTransition",
  G0 = em[f2],
  p2 = "flushSync",
  W0 = mL[p2];
function m2(t) {
  G0 ? G0(t) : t();
}
function fl(t) {
  W0 ? W0(t) : t();
}
class g2 {
  constructor() {
    (this.status = "pending"),
      (this.promise = new Promise((e, n) => {
        (this.resolve = (r) => {
          this.status === "pending" && ((this.status = "resolved"), e(r));
        }),
          (this.reject = (r) => {
            this.status === "pending" && ((this.status = "rejected"), n(r));
          });
      }));
  }
}
function y2(t) {
  let { fallbackElement: e, router: n, future: r } = t,
    [i, o] = x.useState(n.state),
    [a, l] = x.useState(),
    [c, u] = x.useState({ isTransitioning: !1 }),
    [d, h] = x.useState(),
    [f, p] = x.useState(),
    [m, v] = x.useState(),
    C = x.useRef(new Map()),
    { v7_startTransition: b } = r || {},
    g = x.useCallback(
      (I) => {
        b ? m2(I) : I();
      },
      [b]
    ),
    y = x.useCallback(
      (I, R) => {
        let {
          deletedFetchers: A,
          unstable_flushSync: O,
          unstable_viewTransitionOpts: _,
        } = R;
        A.forEach(($) => C.current.delete($)),
          I.fetchers.forEach(($, Z) => {
            $.data !== void 0 && C.current.set(Z, $.data);
          });
        let F =
          n.window == null ||
          n.window.document == null ||
          typeof n.window.document.startViewTransition != "function";
        if (!_ || F) {
          O ? fl(() => o(I)) : g(() => o(I));
          return;
        }
        if (O) {
          fl(() => {
            f && (d && d.resolve(), f.skipTransition()),
              u({
                isTransitioning: !0,
                flushSync: !0,
                currentLocation: _.currentLocation,
                nextLocation: _.nextLocation,
              });
          });
          let $ = n.window.document.startViewTransition(() => {
            fl(() => o(I));
          });
          $.finished.finally(() => {
            fl(() => {
              h(void 0), p(void 0), l(void 0), u({ isTransitioning: !1 });
            });
          }),
            fl(() => p($));
          return;
        }
        f
          ? (d && d.resolve(),
            f.skipTransition(),
            v({
              state: I,
              currentLocation: _.currentLocation,
              nextLocation: _.nextLocation,
            }))
          : (l(I),
            u({
              isTransitioning: !0,
              flushSync: !1,
              currentLocation: _.currentLocation,
              nextLocation: _.nextLocation,
            }));
      },
      [n.window, f, d, C, g]
    );
  x.useLayoutEffect(() => n.subscribe(y), [n, y]),
    x.useEffect(() => {
      c.isTransitioning && !c.flushSync && h(new g2());
    }, [c]),
    x.useEffect(() => {
      if (d && a && n.window) {
        let I = a,
          R = d.promise,
          A = n.window.document.startViewTransition(async () => {
            g(() => o(I)), await R;
          });
        A.finished.finally(() => {
          h(void 0), p(void 0), l(void 0), u({ isTransitioning: !1 });
        }),
          p(A);
      }
    }, [g, a, d, n.window]),
    x.useEffect(() => {
      d && a && i.location.key === a.location.key && d.resolve();
    }, [d, f, i.location, a]),
    x.useEffect(() => {
      !c.isTransitioning &&
        m &&
        (l(m.state),
        u({
          isTransitioning: !0,
          flushSync: !1,
          currentLocation: m.currentLocation,
          nextLocation: m.nextLocation,
        }),
        v(void 0));
    }, [c.isTransitioning, m]),
    x.useEffect(() => {}, []);
  let w = x.useMemo(
      () => ({
        createHref: n.createHref,
        encodeLocation: n.encodeLocation,
        go: (I) => n.navigate(I),
        push: (I, R, A) =>
          n.navigate(I, {
            state: R,
            preventScrollReset: A == null ? void 0 : A.preventScrollReset,
          }),
        replace: (I, R, A) =>
          n.navigate(I, {
            replace: !0,
            state: R,
            preventScrollReset: A == null ? void 0 : A.preventScrollReset,
          }),
      }),
      [n]
    ),
    E = n.basename || "/",
    S = x.useMemo(
      () => ({ router: n, navigator: w, static: !1, basename: E }),
      [n, w, E]
    ),
    T = x.useMemo(
      () => ({ v7_relativeSplatPath: n.future.v7_relativeSplatPath }),
      [n.future.v7_relativeSplatPath]
    );
  return x.createElement(
    x.Fragment,
    null,
    x.createElement(
      cf.Provider,
      { value: S },
      x.createElement(
        pN.Provider,
        { value: i },
        x.createElement(
          h2.Provider,
          { value: C.current },
          x.createElement(
            d2.Provider,
            { value: c },
            x.createElement(
              t2,
              {
                basename: E,
                location: i.location,
                navigationType: i.historyAction,
                navigator: w,
                future: T,
              },
              i.initialized || n.future.v7_partialHydration
                ? x.createElement(v2, {
                    routes: n.routes,
                    future: n.future,
                    state: i,
                  })
                : e
            )
          )
        )
      )
    ),
    null
  );
}
const v2 = x.memo(b2);
function b2(t) {
  let { routes: e, future: n, state: r } = t;
  return $F(e, void 0, r, n);
}
const C2 =
    typeof window < "u" &&
    typeof window.document < "u" &&
    typeof window.document.createElement < "u",
  w2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
  Hr = x.forwardRef(function (e, n) {
    let {
        onClick: r,
        relative: i,
        reloadDocument: o,
        replace: a,
        state: l,
        target: c,
        to: u,
        preventScrollReset: d,
        unstable_viewTransition: h,
      } = e,
      f = r2(e, a2),
      { basename: p } = x.useContext(Ca),
      m,
      v = !1;
    if (typeof u == "string" && w2.test(u) && ((m = u), C2))
      try {
        let y = new URL(window.location.href),
          w = u.startsWith("//") ? new URL(y.protocol + u) : new URL(u),
          E = Ws(w.pathname, p);
        w.origin === y.origin && E != null
          ? (u = E + w.search + w.hash)
          : (v = !0);
      } catch {}
    let C = BF(u, { relative: i }),
      b = S2(u, {
        replace: a,
        state: l,
        target: c,
        preventScrollReset: d,
        relative: i,
        unstable_viewTransition: h,
      });
    function g(y) {
      r && r(y), y.defaultPrevented || b(y);
    }
    return x.createElement(
      "a",
      pc({}, f, { href: m || C, onClick: v || o ? r : g, ref: n, target: c })
    );
  });
var V0;
(function (t) {
  (t.UseScrollRestoration = "useScrollRestoration"),
    (t.UseSubmit = "useSubmit"),
    (t.UseSubmitFetcher = "useSubmitFetcher"),
    (t.UseFetcher = "useFetcher"),
    (t.useViewTransitionState = "useViewTransitionState");
})(V0 || (V0 = {}));
var Q0;
(function (t) {
  (t.UseFetcher = "useFetcher"),
    (t.UseFetchers = "useFetchers"),
    (t.UseScrollRestoration = "useScrollRestoration");
})(Q0 || (Q0 = {}));
function S2(t, e) {
  let {
      target: n,
      replace: r,
      state: i,
      preventScrollReset: o,
      relative: a,
      unstable_viewTransition: l,
    } = e === void 0 ? {} : e,
    c = Lt(),
    u = Dn(),
    d = yN(t, { relative: a });
  return x.useCallback(
    (h) => {
      if (o2(h, n)) {
        h.preventDefault();
        let f = r !== void 0 ? r : la(u) === la(d);
        c(t, {
          replace: f,
          state: i,
          preventScrollReset: o,
          relative: a,
          unstable_viewTransition: l,
        });
      }
    },
    [u, c, d, r, i, n, t, o, a, l]
  );
}
var CN = { exports: {} };
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ (function (t) {
  (function () {
    var e = {}.hasOwnProperty;
    function n() {
      for (var o = "", a = 0; a < arguments.length; a++) {
        var l = arguments[a];
        l && (o = i(o, r(l)));
      }
      return o;
    }
    function r(o) {
      if (typeof o == "string" || typeof o == "number") return o;
      if (typeof o != "object") return "";
      if (Array.isArray(o)) return n.apply(null, o);
      if (
        o.toString !== Object.prototype.toString &&
        !o.toString.toString().includes("[native code]")
      )
        return o.toString();
      var a = "";
      for (var l in o) e.call(o, l) && o[l] && (a = i(a, l));
      return a;
    }
    function i(o, a) {
      return a ? (o ? o + " " + a : o + a) : o;
    }
    t.exports ? ((n.default = n), (t.exports = n)) : (window.classNames = n);
  })();
})(CN);
var x2 = CN.exports;
const J = Hi(x2);
var Y0 = { exports: {} },
  dg = { exports: {} };
(function (t, e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), (e.default = n);
  function n(r) {
    function i(a, l, c, u, d, h) {
      var f = u || "<<anonymous>>",
        p = h || c;
      if (l[c] == null)
        return a
          ? new Error(
              "Required " +
                d +
                " `" +
                p +
                "` was not specified " +
                ("in `" + f + "`.")
            )
          : null;
      for (
        var m = arguments.length, v = Array(m > 6 ? m - 6 : 0), C = 6;
        C < m;
        C++
      )
        v[C - 6] = arguments[C];
      return r.apply(void 0, [l, c, f, d, p].concat(v));
    }
    var o = i.bind(null, !1);
    return (o.isRequired = i.bind(null, !0)), o;
  }
  t.exports = e.default;
})(dg, dg.exports);
var E2 = dg.exports;
(function (t, e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), (e.default = o);
  var n = E2,
    r = i(n);
  function i(a) {
    return a && a.__esModule ? a : { default: a };
  }
  function o() {
    for (var a = arguments.length, l = Array(a), c = 0; c < a; c++)
      l[c] = arguments[c];
    function u() {
      for (var d = arguments.length, h = Array(d), f = 0; f < d; f++)
        h[f] = arguments[f];
      var p = null;
      return (
        l.forEach(function (m) {
          if (p == null) {
            var v = m.apply(void 0, h);
            v != null && (p = v);
          }
        }),
        p
      );
    }
    return (0, r.default)(u);
  }
  t.exports = e.default;
})(Y0, Y0.exports);
function vt() {
  return (
    (vt = Object.assign
      ? Object.assign.bind()
      : function (t) {
          for (var e = 1; e < arguments.length; e++) {
            var n = arguments[e];
            for (var r in n) ({}).hasOwnProperty.call(n, r) && (t[r] = n[r]);
          }
          return t;
        }),
    vt.apply(null, arguments)
  );
}
function ab(t, e) {
  if (t == null) return {};
  var n = {};
  for (var r in t)
    if ({}.hasOwnProperty.call(t, r)) {
      if (e.indexOf(r) >= 0) continue;
      n[r] = t[r];
    }
  return n;
}
var T2 = function (t, e, n, r, i, o, a, l) {
    if (!t) {
      var c;
      if (e === void 0)
        c = new Error(
          "Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."
        );
      else {
        var u = [n, r, i, o, a, l],
          d = 0;
        (c = new Error(
          e.replace(/%s/g, function () {
            return u[d++];
          })
        )),
          (c.name = "Invariant Violation");
      }
      throw ((c.framesToPop = 1), c);
    }
  },
  I2 = T2;
const wN = Hi(I2);
function X0(t) {
  return "default" + t.charAt(0).toUpperCase() + t.substr(1);
}
function N2(t) {
  var e = k2(t, "string");
  return typeof e == "symbol" ? e : String(e);
}
function k2(t, e) {
  if (typeof t != "object" || t === null) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e);
    if (typeof r != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return String(t);
}
function R2(t, e, n) {
  var r = x.useRef(t !== void 0),
    i = x.useState(e),
    o = i[0],
    a = i[1],
    l = t !== void 0,
    c = r.current;
  return (
    (r.current = l),
    !l && c && o !== e && a(e),
    [
      l ? t : o,
      x.useCallback(
        function (u) {
          for (
            var d = arguments.length, h = new Array(d > 1 ? d - 1 : 0), f = 1;
            f < d;
            f++
          )
            h[f - 1] = arguments[f];
          n && n.apply(void 0, [u].concat(h)), a(u);
        },
        [n]
      ),
    ]
  );
}
function uf(t, e) {
  return Object.keys(e).reduce(function (n, r) {
    var i,
      o = n,
      a = o[X0(r)],
      l = o[r],
      c = ab(o, [X0(r), r].map(N2)),
      u = e[r],
      d = R2(l, a, t[u]),
      h = d[0],
      f = d[1];
    return vt({}, c, ((i = {}), (i[r] = h), (i[u] = f), i));
  }, t);
}
function hh(t, e) {
  return (
    (hh = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function (n, r) {
          return (n.__proto__ = r), n;
        }),
    hh(t, e)
  );
}
function A2(t, e) {
  (t.prototype = Object.create(e.prototype)),
    (t.prototype.constructor = t),
    hh(t, e);
}
var j2 = Function.prototype.bind.call(Function.prototype.call, [].slice);
function wi(t, e) {
  return j2(t.querySelectorAll(e));
}
function sb() {
  const [, t] = x.useReducer((e) => !e, !1);
  return t;
}
const J0 = (t) =>
  !t || typeof t == "function"
    ? t
    : (e) => {
        t.current = e;
      };
function O2(t, e) {
  const n = J0(t),
    r = J0(e);
  return (i) => {
    n && n(i), r && r(i);
  };
}
function hi(t, e) {
  return x.useMemo(() => O2(t, e), [t, e]);
}
const df = x.createContext(null);
df.displayName = "NavContext";
const ca = x.createContext(null),
  mc = (t, e = null) => (t != null ? String(t) : e || null),
  SN = x.createContext(null),
  D2 = "data-rr-ui-",
  L2 = "rrUi";
function Vs(t) {
  return `${D2}${t}`;
}
function P2(t) {
  return `${L2}${t}`;
}
function _2(t) {
  const e = x.useRef(t);
  return (
    x.useEffect(() => {
      e.current = t;
    }, [t]),
    e
  );
}
function nt(t) {
  const e = _2(t);
  return x.useCallback(
    function (...n) {
      return e.current && e.current(...n);
    },
    [e]
  );
}
const M2 = ["as", "disabled"];
function F2(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
function B2(t) {
  return !t || t.trim() === "#";
}
function lb({
  tagName: t,
  disabled: e,
  href: n,
  target: r,
  rel: i,
  role: o,
  onClick: a,
  tabIndex: l = 0,
  type: c,
}) {
  t || (n != null || r != null || i != null ? (t = "a") : (t = "button"));
  const u = { tagName: t };
  if (t === "button") return [{ type: c || "button", disabled: e }, u];
  const d = (f) => {
      if (((e || (t === "a" && B2(n))) && f.preventDefault(), e)) {
        f.stopPropagation();
        return;
      }
      a == null || a(f);
    },
    h = (f) => {
      f.key === " " && (f.preventDefault(), d(f));
    };
  return (
    t === "a" && (n || (n = "#"), e && (n = void 0)),
    [
      {
        role: o ?? "button",
        disabled: void 0,
        tabIndex: e ? void 0 : l,
        href: n,
        target: t === "a" ? r : void 0,
        "aria-disabled": e || void 0,
        rel: t === "a" ? i : void 0,
        onClick: d,
        onKeyDown: h,
      },
      u,
    ]
  );
}
const cb = x.forwardRef((t, e) => {
  let { as: n, disabled: r } = t,
    i = F2(t, M2);
  const [o, { tagName: a }] = lb(Object.assign({ tagName: n, disabled: r }, i));
  return s.jsx(a, Object.assign({}, i, o, { ref: e }));
});
cb.displayName = "Button";
const U2 = ["as", "active", "eventKey"];
function z2(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
function xN({ key: t, onClick: e, active: n, id: r, role: i, disabled: o }) {
  const a = x.useContext(ca),
    l = x.useContext(df),
    c = x.useContext(SN);
  let u = n;
  const d = { role: i };
  if (l) {
    !i && l.role === "tablist" && (d.role = "tab");
    const h = l.getControllerId(t ?? null),
      f = l.getControlledId(t ?? null);
    (d[Vs("event-key")] = t),
      (d.id = h || r),
      (u = n == null && t != null ? l.activeKey === t : n),
      (u ||
        (!(c != null && c.unmountOnExit) && !(c != null && c.mountOnEnter))) &&
        (d["aria-controls"] = f);
  }
  return (
    d.role === "tab" &&
      ((d["aria-selected"] = u),
      u || (d.tabIndex = -1),
      o && ((d.tabIndex = -1), (d["aria-disabled"] = !0))),
    (d.onClick = nt((h) => {
      o ||
        (e == null || e(h),
        t != null && a && !h.isPropagationStopped() && a(t, h));
    })),
    [d, { isActive: u }]
  );
}
const EN = x.forwardRef((t, e) => {
  let { as: n = cb, active: r, eventKey: i } = t,
    o = z2(t, U2);
  const [a, l] = xN(Object.assign({ key: mc(i, o.href), active: r }, o));
  return (
    (a[Vs("active")] = l.isActive),
    s.jsx(n, Object.assign({}, o, a, { ref: e }))
  );
});
EN.displayName = "NavItem";
const H2 = EN,
  $2 = ["as", "onSelect", "activeKey", "role", "onKeyDown"];
function K2(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
const Z0 = () => {},
  eS = Vs("event-key"),
  TN = x.forwardRef((t, e) => {
    let { as: n = "div", onSelect: r, activeKey: i, role: o, onKeyDown: a } = t,
      l = K2(t, $2);
    const c = sb(),
      u = x.useRef(!1),
      d = x.useContext(ca),
      h = x.useContext(SN);
    let f, p;
    h &&
      ((o = o || "tablist"),
      (i = h.activeKey),
      (f = h.getControlledId),
      (p = h.getControllerId));
    const m = x.useRef(null),
      v = (y) => {
        const w = m.current;
        if (!w) return null;
        const E = wi(w, `[${eS}]:not([aria-disabled=true])`),
          S = w.querySelector("[aria-selected=true]");
        if (!S || S !== document.activeElement) return null;
        const T = E.indexOf(S);
        if (T === -1) return null;
        let I = T + y;
        return I >= E.length && (I = 0), I < 0 && (I = E.length - 1), E[I];
      },
      C = (y, w) => {
        y != null && (r == null || r(y, w), d == null || d(y, w));
      },
      b = (y) => {
        if ((a == null || a(y), !h)) return;
        let w;
        switch (y.key) {
          case "ArrowLeft":
          case "ArrowUp":
            w = v(-1);
            break;
          case "ArrowRight":
          case "ArrowDown":
            w = v(1);
            break;
          default:
            return;
        }
        w &&
          (y.preventDefault(),
          C(w.dataset[P2("EventKey")] || null, y),
          (u.current = !0),
          c());
      };
    x.useEffect(() => {
      if (m.current && u.current) {
        const y = m.current.querySelector(`[${eS}][aria-selected=true]`);
        y == null || y.focus();
      }
      u.current = !1;
    });
    const g = hi(e, m);
    return s.jsx(ca.Provider, {
      value: C,
      children: s.jsx(df.Provider, {
        value: {
          role: o,
          activeKey: mc(i),
          getControlledId: f || Z0,
          getControllerId: p || Z0,
        },
        children: s.jsx(
          n,
          Object.assign({}, l, { onKeyDown: b, ref: g, role: o })
        ),
      }),
    });
  });
TN.displayName = "Nav";
const q2 = Object.assign(TN, { Item: H2 }),
  IN = ["xxl", "xl", "lg", "md", "sm", "xs"],
  NN = "xs",
  hf = x.createContext({ prefixes: {}, breakpoints: IN, minBreakpoint: NN });
function ce(t, e) {
  const { prefixes: n } = x.useContext(hf);
  return t || n[e] || e;
}
function ub() {
  const { breakpoints: t } = x.useContext(hf);
  return t;
}
function db() {
  const { minBreakpoint: t } = x.useContext(hf);
  return t;
}
function ff() {
  const { dir: t } = x.useContext(hf);
  return t === "rtl";
}
const Lo = x.createContext(null);
Lo.displayName = "NavbarContext";
const hb = x.createContext(null);
hb.displayName = "CardHeaderContext";
const kN = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "div", ...r }, i) => (
    (e = ce(e, "nav-item")), s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
kN.displayName = "NavItem";
function fh() {
  return x.useState(null);
}
function G2(t, e, n, r = !1) {
  const i = nt(n);
  x.useEffect(() => {
    const o = typeof t == "function" ? t() : t;
    return o.addEventListener(e, i, r), () => o.removeEventListener(e, i, r);
  }, [t]);
}
function RN() {
  const t = x.useRef(!0),
    e = x.useRef(() => t.current);
  return (
    x.useEffect(
      () => (
        (t.current = !0),
        () => {
          t.current = !1;
        }
      ),
      []
    ),
    e.current
  );
}
function fb(t) {
  const e = x.useRef(null);
  return (
    x.useEffect(() => {
      e.current = t;
    }),
    e.current
  );
}
const W2 =
    typeof global < "u" &&
    global.navigator &&
    global.navigator.product === "ReactNative",
  V2 = typeof document < "u",
  gc = V2 || W2 ? x.useLayoutEffect : x.useEffect,
  Q2 = ["onKeyDown"];
function Y2(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
function X2(t) {
  return !t || t.trim() === "#";
}
const pf = x.forwardRef((t, e) => {
  let { onKeyDown: n } = t,
    r = Y2(t, Q2);
  const [i] = lb(Object.assign({ tagName: "a" }, r)),
    o = nt((a) => {
      i.onKeyDown(a), n == null || n(a);
    });
  return X2(r.href) || r.role === "button"
    ? s.jsx("a", Object.assign({ ref: e }, r, i, { onKeyDown: o }))
    : s.jsx("a", Object.assign({ ref: e }, r, { onKeyDown: n }));
});
pf.displayName = "Anchor";
const pb = x.forwardRef(
  (
    {
      bsPrefix: t,
      className: e,
      as: n = pf,
      active: r,
      eventKey: i,
      disabled: o = !1,
      ...a
    },
    l
  ) => {
    t = ce(t, "nav-link");
    const [c, u] = xN({ key: mc(i, a.href), active: r, disabled: o, ...a });
    return s.jsx(n, {
      ...a,
      ...c,
      ref: l,
      disabled: o,
      className: J(e, t, o && "disabled", u.isActive && "active"),
    });
  }
);
pb.displayName = "NavLink";
const AN = x.forwardRef((t, e) => {
  const {
      as: n = "div",
      bsPrefix: r,
      variant: i,
      fill: o = !1,
      justify: a = !1,
      navbar: l,
      navbarScroll: c,
      className: u,
      activeKey: d,
      ...h
    } = uf(t, { activeKey: "onSelect" }),
    f = ce(r, "nav");
  let p,
    m,
    v = !1;
  const C = x.useContext(Lo),
    b = x.useContext(hb);
  return (
    C
      ? ((p = C.bsPrefix), (v = l ?? !0))
      : b && ({ cardHeaderBsPrefix: m } = b),
    s.jsx(q2, {
      as: n,
      ref: e,
      activeKey: d,
      className: J(u, {
        [f]: !v,
        [`${p}-nav`]: v,
        [`${p}-nav-scroll`]: v && c,
        [`${m}-${i}`]: !!m,
        [`${f}-${i}`]: !!i,
        [`${f}-fill`]: o,
        [`${f}-justified`]: a,
      }),
      ...h,
    })
  );
});
AN.displayName = "Nav";
const yi = Object.assign(AN, { Item: kN, Link: pb }),
  jN = x.forwardRef(({ bsPrefix: t, className: e, as: n, ...r }, i) => {
    t = ce(t, "navbar-brand");
    const o = n || (r.href ? "a" : "span");
    return s.jsx(o, { ...r, ref: i, className: J(e, t) });
  });
jN.displayName = "NavbarBrand";
function wa(t) {
  return (t && t.ownerDocument) || document;
}
function J2(t) {
  var e = wa(t);
  return (e && e.defaultView) || window;
}
function Z2(t, e) {
  return J2(t).getComputedStyle(t, e);
}
var e5 = /([A-Z])/g;
function t5(t) {
  return t.replace(e5, "-$1").toLowerCase();
}
var n5 = /^ms-/;
function ju(t) {
  return t5(t).replace(n5, "-ms-");
}
var r5 =
  /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;
function i5(t) {
  return !!(t && r5.test(t));
}
function ji(t, e) {
  var n = "",
    r = "";
  if (typeof e == "string")
    return t.style.getPropertyValue(ju(e)) || Z2(t).getPropertyValue(ju(e));
  Object.keys(e).forEach(function (i) {
    var o = e[i];
    !o && o !== 0
      ? t.style.removeProperty(ju(i))
      : i5(i)
      ? (r += i + "(" + o + ") ")
      : (n += ju(i) + ": " + o + ";");
  }),
    r && (n += "transform: " + r + ";"),
    (t.style.cssText += ";" + n);
}
var ON = { exports: {} },
  o5 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",
  a5 = o5,
  s5 = a5;
function DN() {}
function LN() {}
LN.resetWarningCache = DN;
var l5 = function () {
  function t(r, i, o, a, l, c) {
    if (c !== s5) {
      var u = new Error(
        "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
      );
      throw ((u.name = "Invariant Violation"), u);
    }
  }
  t.isRequired = t;
  function e() {
    return t;
  }
  var n = {
    array: t,
    bigint: t,
    bool: t,
    func: t,
    number: t,
    object: t,
    string: t,
    symbol: t,
    any: t,
    arrayOf: e,
    element: t,
    elementType: t,
    instanceOf: e,
    node: t,
    objectOf: e,
    oneOf: e,
    oneOfType: e,
    shape: e,
    exact: e,
    checkPropTypes: LN,
    resetWarningCache: DN,
  };
  return (n.PropTypes = n), n;
};
ON.exports = l5();
var c5 = ON.exports;
const N = Hi(c5),
  tS = { disabled: !1 },
  PN = k.createContext(null);
var u5 = function (e) {
    return e.scrollTop;
  },
  Il = "unmounted",
  oo = "exited",
  Er = "entering",
  Si = "entered",
  yc = "exiting",
  qi = (function (t) {
    A2(e, t);
    function e(r, i) {
      var o;
      o = t.call(this, r, i) || this;
      var a = i,
        l = a && !a.isMounting ? r.enter : r.appear,
        c;
      return (
        (o.appearStatus = null),
        r.in
          ? l
            ? ((c = oo), (o.appearStatus = Er))
            : (c = Si)
          : r.unmountOnExit || r.mountOnEnter
          ? (c = Il)
          : (c = oo),
        (o.state = { status: c }),
        (o.nextCallback = null),
        o
      );
    }
    e.getDerivedStateFromProps = function (i, o) {
      var a = i.in;
      return a && o.status === Il ? { status: oo } : null;
    };
    var n = e.prototype;
    return (
      (n.componentDidMount = function () {
        this.updateStatus(!0, this.appearStatus);
      }),
      (n.componentDidUpdate = function (i) {
        var o = null;
        if (i !== this.props) {
          var a = this.state.status;
          this.props.in
            ? a !== Er && a !== Si && (o = Er)
            : (a === Er || a === Si) && (o = yc);
        }
        this.updateStatus(!1, o);
      }),
      (n.componentWillUnmount = function () {
        this.cancelNextCallback();
      }),
      (n.getTimeouts = function () {
        var i = this.props.timeout,
          o,
          a,
          l;
        return (
          (o = a = l = i),
          i != null &&
            typeof i != "number" &&
            ((o = i.exit),
            (a = i.enter),
            (l = i.appear !== void 0 ? i.appear : a)),
          { exit: o, enter: a, appear: l }
        );
      }),
      (n.updateStatus = function (i, o) {
        if ((i === void 0 && (i = !1), o !== null))
          if ((this.cancelNextCallback(), o === Er)) {
            if (this.props.unmountOnExit || this.props.mountOnEnter) {
              var a = this.props.nodeRef
                ? this.props.nodeRef.current
                : Ti.findDOMNode(this);
              a && u5(a);
            }
            this.performEnter(i);
          } else this.performExit();
        else
          this.props.unmountOnExit &&
            this.state.status === oo &&
            this.setState({ status: Il });
      }),
      (n.performEnter = function (i) {
        var o = this,
          a = this.props.enter,
          l = this.context ? this.context.isMounting : i,
          c = this.props.nodeRef ? [l] : [Ti.findDOMNode(this), l],
          u = c[0],
          d = c[1],
          h = this.getTimeouts(),
          f = l ? h.appear : h.enter;
        if ((!i && !a) || tS.disabled) {
          this.safeSetState({ status: Si }, function () {
            o.props.onEntered(u);
          });
          return;
        }
        this.props.onEnter(u, d),
          this.safeSetState({ status: Er }, function () {
            o.props.onEntering(u, d),
              o.onTransitionEnd(f, function () {
                o.safeSetState({ status: Si }, function () {
                  o.props.onEntered(u, d);
                });
              });
          });
      }),
      (n.performExit = function () {
        var i = this,
          o = this.props.exit,
          a = this.getTimeouts(),
          l = this.props.nodeRef ? void 0 : Ti.findDOMNode(this);
        if (!o || tS.disabled) {
          this.safeSetState({ status: oo }, function () {
            i.props.onExited(l);
          });
          return;
        }
        this.props.onExit(l),
          this.safeSetState({ status: yc }, function () {
            i.props.onExiting(l),
              i.onTransitionEnd(a.exit, function () {
                i.safeSetState({ status: oo }, function () {
                  i.props.onExited(l);
                });
              });
          });
      }),
      (n.cancelNextCallback = function () {
        this.nextCallback !== null &&
          (this.nextCallback.cancel(), (this.nextCallback = null));
      }),
      (n.safeSetState = function (i, o) {
        (o = this.setNextCallback(o)), this.setState(i, o);
      }),
      (n.setNextCallback = function (i) {
        var o = this,
          a = !0;
        return (
          (this.nextCallback = function (l) {
            a && ((a = !1), (o.nextCallback = null), i(l));
          }),
          (this.nextCallback.cancel = function () {
            a = !1;
          }),
          this.nextCallback
        );
      }),
      (n.onTransitionEnd = function (i, o) {
        this.setNextCallback(o);
        var a = this.props.nodeRef
            ? this.props.nodeRef.current
            : Ti.findDOMNode(this),
          l = i == null && !this.props.addEndListener;
        if (!a || l) {
          setTimeout(this.nextCallback, 0);
          return;
        }
        if (this.props.addEndListener) {
          var c = this.props.nodeRef
              ? [this.nextCallback]
              : [a, this.nextCallback],
            u = c[0],
            d = c[1];
          this.props.addEndListener(u, d);
        }
        i != null && setTimeout(this.nextCallback, i);
      }),
      (n.render = function () {
        var i = this.state.status;
        if (i === Il) return null;
        var o = this.props,
          a = o.children;
        o.in,
          o.mountOnEnter,
          o.unmountOnExit,
          o.appear,
          o.enter,
          o.exit,
          o.timeout,
          o.addEndListener,
          o.onEnter,
          o.onEntering,
          o.onEntered,
          o.onExit,
          o.onExiting,
          o.onExited,
          o.nodeRef;
        var l = ab(o, [
          "children",
          "in",
          "mountOnEnter",
          "unmountOnExit",
          "appear",
          "enter",
          "exit",
          "timeout",
          "addEndListener",
          "onEnter",
          "onEntering",
          "onEntered",
          "onExit",
          "onExiting",
          "onExited",
          "nodeRef",
        ]);
        return k.createElement(
          PN.Provider,
          { value: null },
          typeof a == "function"
            ? a(i, l)
            : k.cloneElement(k.Children.only(a), l)
        );
      }),
      e
    );
  })(k.Component);
qi.contextType = PN;
qi.propTypes = {};
function Da() {}
qi.defaultProps = {
  in: !1,
  mountOnEnter: !1,
  unmountOnExit: !1,
  appear: !1,
  enter: !0,
  exit: !0,
  onEnter: Da,
  onEntering: Da,
  onEntered: Da,
  onExit: Da,
  onExiting: Da,
  onExited: Da,
};
qi.UNMOUNTED = Il;
qi.EXITED = oo;
qi.ENTERING = Er;
qi.ENTERED = Si;
qi.EXITING = yc;
const Qs = !!(
  typeof window < "u" &&
  window.document &&
  window.document.createElement
);
var hg = !1,
  fg = !1;
try {
  var xp = {
    get passive() {
      return (hg = !0);
    },
    get once() {
      return (fg = hg = !0);
    },
  };
  Qs &&
    (window.addEventListener("test", xp, xp),
    window.removeEventListener("test", xp, !0));
} catch {}
function mb(t, e, n, r) {
  if (r && typeof r != "boolean" && !fg) {
    var i = r.once,
      o = r.capture,
      a = n;
    !fg &&
      i &&
      ((a =
        n.__once ||
        function l(c) {
          this.removeEventListener(e, l, o), n.call(this, c);
        }),
      (n.__once = a)),
      t.addEventListener(e, a, hg ? r : o);
  }
  t.addEventListener(e, n, r);
}
function pg(t, e, n, r) {
  var i = r && typeof r != "boolean" ? r.capture : r;
  t.removeEventListener(e, n, i),
    n.__once && t.removeEventListener(e, n.__once, i);
}
function Hn(t, e, n, r) {
  return (
    mb(t, e, n, r),
    function () {
      pg(t, e, n, r);
    }
  );
}
function d5(t, e, n, r) {
  if ((r === void 0 && (r = !0), t)) {
    var i = document.createEvent("HTMLEvents");
    i.initEvent(e, n, r), t.dispatchEvent(i);
  }
}
function h5(t) {
  var e = ji(t, "transitionDuration") || "",
    n = e.indexOf("ms") === -1 ? 1e3 : 1;
  return parseFloat(e) * n;
}
function f5(t, e, n) {
  n === void 0 && (n = 5);
  var r = !1,
    i = setTimeout(function () {
      r || d5(t, "transitionend", !0);
    }, e + n),
    o = Hn(
      t,
      "transitionend",
      function () {
        r = !0;
      },
      { once: !0 }
    );
  return function () {
    clearTimeout(i), o();
  };
}
function _N(t, e, n, r) {
  n == null && (n = h5(t) || 0);
  var i = f5(t, n, r),
    o = Hn(t, "transitionend", e);
  return function () {
    i(), o();
  };
}
function nS(t, e) {
  const n = ji(t, e) || "",
    r = n.indexOf("ms") === -1 ? 1e3 : 1;
  return parseFloat(n) * r;
}
function gb(t, e) {
  const n = nS(t, "transitionDuration"),
    r = nS(t, "transitionDelay"),
    i = _N(
      t,
      (o) => {
        o.target === t && (i(), e(o));
      },
      n + r
    );
}
function pl(...t) {
  return t
    .filter((e) => e != null)
    .reduce((e, n) => {
      if (typeof n != "function")
        throw new Error(
          "Invalid Argument Type, must only provide functions, undefined, or null."
        );
      return e === null
        ? n
        : function (...i) {
            e.apply(this, i), n.apply(this, i);
          };
    }, null);
}
function MN(t) {
  t.offsetHeight;
}
function mg(t) {
  return t && "setState" in t ? Ti.findDOMNode(t) : t ?? null;
}
const yb = k.forwardRef(
    (
      {
        onEnter: t,
        onEntering: e,
        onEntered: n,
        onExit: r,
        onExiting: i,
        onExited: o,
        addEndListener: a,
        children: l,
        childRef: c,
        ...u
      },
      d
    ) => {
      const h = x.useRef(null),
        f = hi(h, c),
        p = (S) => {
          f(mg(S));
        },
        m = (S) => (T) => {
          S && h.current && S(h.current, T);
        },
        v = x.useCallback(m(t), [t]),
        C = x.useCallback(m(e), [e]),
        b = x.useCallback(m(n), [n]),
        g = x.useCallback(m(r), [r]),
        y = x.useCallback(m(i), [i]),
        w = x.useCallback(m(o), [o]),
        E = x.useCallback(m(a), [a]);
      return s.jsx(qi, {
        ref: d,
        ...u,
        onEnter: v,
        onEntered: b,
        onEntering: C,
        onExit: g,
        onExited: w,
        onExiting: y,
        addEndListener: E,
        nodeRef: h,
        children:
          typeof l == "function"
            ? (S, T) => l(S, { ...T, ref: p })
            : k.cloneElement(l, { ref: p }),
      });
    }
  ),
  p5 = {
    height: ["marginTop", "marginBottom"],
    width: ["marginLeft", "marginRight"],
  };
function m5(t, e) {
  const n = `offset${t[0].toUpperCase()}${t.slice(1)}`,
    r = e[n],
    i = p5[t];
  return r + parseInt(ji(e, i[0]), 10) + parseInt(ji(e, i[1]), 10);
}
const g5 = {
    [oo]: "collapse",
    [yc]: "collapsing",
    [Er]: "collapsing",
    [Si]: "collapse show",
  },
  y5 = k.forwardRef(
    (
      {
        onEnter: t,
        onEntering: e,
        onEntered: n,
        onExit: r,
        onExiting: i,
        className: o,
        children: a,
        dimension: l = "height",
        in: c = !1,
        timeout: u = 300,
        mountOnEnter: d = !1,
        unmountOnExit: h = !1,
        appear: f = !1,
        getDimensionValue: p = m5,
        ...m
      },
      v
    ) => {
      const C = typeof l == "function" ? l() : l,
        b = x.useMemo(
          () =>
            pl((S) => {
              S.style[C] = "0";
            }, t),
          [C, t]
        ),
        g = x.useMemo(
          () =>
            pl((S) => {
              const T = `scroll${C[0].toUpperCase()}${C.slice(1)}`;
              S.style[C] = `${S[T]}px`;
            }, e),
          [C, e]
        ),
        y = x.useMemo(
          () =>
            pl((S) => {
              S.style[C] = null;
            }, n),
          [C, n]
        ),
        w = x.useMemo(
          () =>
            pl((S) => {
              (S.style[C] = `${p(C, S)}px`), MN(S);
            }, r),
          [r, p, C]
        ),
        E = x.useMemo(
          () =>
            pl((S) => {
              S.style[C] = null;
            }, i),
          [C, i]
        );
      return s.jsx(yb, {
        ref: v,
        addEndListener: gb,
        ...m,
        "aria-expanded": m.role ? c : null,
        onEnter: b,
        onEntering: g,
        onEntered: y,
        onExit: w,
        onExiting: E,
        childRef: a.ref,
        in: c,
        timeout: u,
        mountOnEnter: d,
        unmountOnExit: h,
        appear: f,
        children: (S, T) =>
          k.cloneElement(a, {
            ...T,
            className: J(
              o,
              a.props.className,
              g5[S],
              C === "width" && "collapse-horizontal"
            ),
          }),
      });
    }
  ),
  FN = x.forwardRef(({ children: t, bsPrefix: e, ...n }, r) => {
    e = ce(e, "navbar-collapse");
    const i = x.useContext(Lo);
    return s.jsx(y5, {
      in: !!(i && i.expanded),
      ...n,
      children: s.jsx("div", { ref: r, className: e, children: t }),
    });
  });
FN.displayName = "NavbarCollapse";
const BN = x.forwardRef(
  (
    {
      bsPrefix: t,
      className: e,
      children: n,
      label: r = "Toggle navigation",
      as: i = "button",
      onClick: o,
      ...a
    },
    l
  ) => {
    t = ce(t, "navbar-toggler");
    const { onToggle: c, expanded: u } = x.useContext(Lo) || {},
      d = nt((h) => {
        o && o(h), c && c();
      });
    return (
      i === "button" && (a.type = "button"),
      s.jsx(i, {
        ...a,
        ref: l,
        onClick: d,
        "aria-label": r,
        className: J(e, t, !u && "collapsed"),
        children: n || s.jsx("span", { className: `${t}-icon` }),
      })
    );
  }
);
BN.displayName = "NavbarToggle";
const gg = new WeakMap(),
  rS = (t, e) => {
    if (!t || !e) return;
    const n = gg.get(e) || new Map();
    gg.set(e, n);
    let r = n.get(t);
    return r || ((r = e.matchMedia(t)), (r.refCount = 0), n.set(r.media, r)), r;
  };
function v5(t, e = typeof window > "u" ? void 0 : window) {
  const n = rS(t, e),
    [r, i] = x.useState(() => (n ? n.matches : !1));
  return (
    gc(() => {
      let o = rS(t, e);
      if (!o) return i(!1);
      let a = gg.get(e);
      const l = () => {
        i(o.matches);
      };
      return (
        o.refCount++,
        o.addListener(l),
        l(),
        () => {
          o.removeListener(l),
            o.refCount--,
            o.refCount <= 0 && (a == null || a.delete(o.media)),
            (o = void 0);
        }
      );
    }, [t]),
    r
  );
}
function b5(t) {
  const e = Object.keys(t);
  function n(l, c) {
    return l === c ? c : l ? `${l} and ${c}` : c;
  }
  function r(l) {
    return e[Math.min(e.indexOf(l) + 1, e.length - 1)];
  }
  function i(l) {
    const c = r(l);
    let u = t[c];
    return (
      typeof u == "number" ? (u = `${u - 0.2}px`) : (u = `calc(${u} - 0.2px)`),
      `(max-width: ${u})`
    );
  }
  function o(l) {
    let c = t[l];
    return typeof c == "number" && (c = `${c}px`), `(min-width: ${c})`;
  }
  function a(l, c, u) {
    let d;
    typeof l == "object"
      ? ((d = l), (u = c), (c = !0))
      : ((c = c || !0), (d = { [l]: c }));
    let h = x.useMemo(
      () =>
        Object.entries(d).reduce(
          (f, [p, m]) => (
            (m === "up" || m === !0) && (f = n(f, o(p))),
            (m === "down" || m === !0) && (f = n(f, i(p))),
            f
          ),
          ""
        ),
      [JSON.stringify(d)]
    );
    return v5(h, u);
  }
  return a;
}
const C5 = b5({ xs: 0, sm: 576, md: 768, lg: 992, xl: 1200, xxl: 1400 });
function Ep(t) {
  t === void 0 && (t = wa());
  try {
    var e = t.activeElement;
    return !e || !e.nodeName ? null : e;
  } catch {
    return t.body;
  }
}
function vc(t, e) {
  if (t.contains) return t.contains(e);
  if (t.compareDocumentPosition)
    return t === e || !!(t.compareDocumentPosition(e) & 16);
}
function w5(t) {
  const e = x.useRef(t);
  return (e.current = t), e;
}
function UN(t) {
  const e = w5(t);
  x.useEffect(() => () => e.current(), []);
}
function S5(t = document) {
  const e = t.defaultView;
  return Math.abs(e.innerWidth - t.documentElement.clientWidth);
}
const iS = Vs("modal-open");
class vb {
  constructor({
    ownerDocument: e,
    handleContainerOverflow: n = !0,
    isRTL: r = !1,
  } = {}) {
    (this.handleContainerOverflow = n),
      (this.isRTL = r),
      (this.modals = []),
      (this.ownerDocument = e);
  }
  getScrollbarWidth() {
    return S5(this.ownerDocument);
  }
  getElement() {
    return (this.ownerDocument || document).body;
  }
  setModalAttributes(e) {}
  removeModalAttributes(e) {}
  setContainerStyle(e) {
    const n = { overflow: "hidden" },
      r = this.isRTL ? "paddingLeft" : "paddingRight",
      i = this.getElement();
    (e.style = { overflow: i.style.overflow, [r]: i.style[r] }),
      e.scrollBarWidth &&
        (n[r] = `${parseInt(ji(i, r) || "0", 10) + e.scrollBarWidth}px`),
      i.setAttribute(iS, ""),
      ji(i, n);
  }
  reset() {
    [...this.modals].forEach((e) => this.remove(e));
  }
  removeContainerStyle(e) {
    const n = this.getElement();
    n.removeAttribute(iS), Object.assign(n.style, e.style);
  }
  add(e) {
    let n = this.modals.indexOf(e);
    return (
      n !== -1 ||
        ((n = this.modals.length),
        this.modals.push(e),
        this.setModalAttributes(e),
        n !== 0) ||
        ((this.state = { scrollBarWidth: this.getScrollbarWidth(), style: {} }),
        this.handleContainerOverflow && this.setContainerStyle(this.state)),
      n
    );
  }
  remove(e) {
    const n = this.modals.indexOf(e);
    n !== -1 &&
      (this.modals.splice(n, 1),
      !this.modals.length &&
        this.handleContainerOverflow &&
        this.removeContainerStyle(this.state),
      this.removeModalAttributes(e));
  }
  isTopModal(e) {
    return !!this.modals.length && this.modals[this.modals.length - 1] === e;
  }
}
const zN = x.createContext(Qs ? window : void 0);
zN.Provider;
function mf() {
  return x.useContext(zN);
}
const Tp = (t, e) =>
  Qs
    ? t == null
      ? (e || wa()).body
      : (typeof t == "function" && (t = t()),
        t && "current" in t && (t = t.current),
        t && ("nodeType" in t || t.getBoundingClientRect) ? t : null)
    : null;
function yg(t, e) {
  const n = mf(),
    [r, i] = x.useState(() => Tp(t, n == null ? void 0 : n.document));
  if (!r) {
    const o = Tp(t);
    o && i(o);
  }
  return (
    x.useEffect(() => {}, [e, r]),
    x.useEffect(() => {
      const o = Tp(t);
      o !== r && i(o);
    }, [t, r]),
    r
  );
}
function x5({
  children: t,
  in: e,
  onExited: n,
  mountOnEnter: r,
  unmountOnExit: i,
}) {
  const o = x.useRef(null),
    a = x.useRef(e),
    l = nt(n);
  x.useEffect(() => {
    e ? (a.current = !0) : l(o.current);
  }, [e, l]);
  const c = hi(o, t.ref),
    u = x.cloneElement(t, { ref: c });
  return e ? u : i || (!a.current && r) ? null : u;
}
function HN(t) {
  return t.code === "Escape" || t.keyCode === 27;
}
function E5() {
  const t = x.version.split(".");
  return { major: +t[0], minor: +t[1], patch: +t[2] };
}
const T5 = [
  "onEnter",
  "onEntering",
  "onEntered",
  "onExit",
  "onExiting",
  "onExited",
  "addEndListener",
  "children",
];
function I5(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
function N5(t) {
  let {
      onEnter: e,
      onEntering: n,
      onEntered: r,
      onExit: i,
      onExiting: o,
      onExited: a,
      addEndListener: l,
      children: c,
    } = t,
    u = I5(t, T5);
  const { major: d } = E5(),
    h = d >= 19 ? c.props.ref : c.ref,
    f = x.useRef(null),
    p = hi(f, typeof c == "function" ? null : h),
    m = (S) => (T) => {
      S && f.current && S(f.current, T);
    },
    v = x.useCallback(m(e), [e]),
    C = x.useCallback(m(n), [n]),
    b = x.useCallback(m(r), [r]),
    g = x.useCallback(m(i), [i]),
    y = x.useCallback(m(o), [o]),
    w = x.useCallback(m(a), [a]),
    E = x.useCallback(m(l), [l]);
  return Object.assign(
    {},
    u,
    { nodeRef: f },
    e && { onEnter: v },
    n && { onEntering: C },
    r && { onEntered: b },
    i && { onExit: g },
    o && { onExiting: y },
    a && { onExited: w },
    l && { addEndListener: E },
    {
      children:
        typeof c == "function"
          ? (S, T) => c(S, Object.assign({}, T, { ref: p }))
          : x.cloneElement(c, { ref: p }),
    }
  );
}
const k5 = ["component"];
function R5(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
const A5 = x.forwardRef((t, e) => {
  let { component: n } = t,
    r = R5(t, k5);
  const i = N5(r);
  return s.jsx(n, Object.assign({ ref: e }, i));
});
function j5({ in: t, onTransition: e }) {
  const n = x.useRef(null),
    r = x.useRef(!0),
    i = nt(e);
  return (
    gc(() => {
      if (!n.current) return;
      let o = !1;
      return (
        i({ in: t, element: n.current, initial: r.current, isStale: () => o }),
        () => {
          o = !0;
        }
      );
    }, [t, i]),
    gc(
      () => (
        (r.current = !1),
        () => {
          r.current = !0;
        }
      ),
      []
    ),
    n
  );
}
function O5({ children: t, in: e, onExited: n, onEntered: r, transition: i }) {
  const [o, a] = x.useState(!e);
  e && o && a(!1);
  const l = j5({
      in: !!e,
      onTransition: (u) => {
        const d = () => {
          u.isStale() ||
            (u.in
              ? r == null || r(u.element, u.initial)
              : (a(!0), n == null || n(u.element)));
        };
        Promise.resolve(i(u)).then(d, (h) => {
          throw (u.in || a(!0), h);
        });
      },
    }),
    c = hi(l, t.ref);
  return o && !e ? null : x.cloneElement(t, { ref: c });
}
function vg(t, e, n) {
  return t
    ? s.jsx(A5, Object.assign({}, n, { component: t }))
    : e
    ? s.jsx(O5, Object.assign({}, n, { transition: e }))
    : s.jsx(x5, Object.assign({}, n));
}
const D5 = [
  "show",
  "role",
  "className",
  "style",
  "children",
  "backdrop",
  "keyboard",
  "onBackdropClick",
  "onEscapeKeyDown",
  "transition",
  "runTransition",
  "backdropTransition",
  "runBackdropTransition",
  "autoFocus",
  "enforceFocus",
  "restoreFocus",
  "restoreFocusOptions",
  "renderDialog",
  "renderBackdrop",
  "manager",
  "container",
  "onShow",
  "onHide",
  "onExit",
  "onExited",
  "onExiting",
  "onEnter",
  "onEntering",
  "onEntered",
];
function L5(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
let Ip;
function P5(t) {
  return (
    Ip || (Ip = new vb({ ownerDocument: t == null ? void 0 : t.document })), Ip
  );
}
function _5(t) {
  const e = mf(),
    n = t || P5(e),
    r = x.useRef({ dialog: null, backdrop: null });
  return Object.assign(r.current, {
    add: () => n.add(r.current),
    remove: () => n.remove(r.current),
    isTopModal: () => n.isTopModal(r.current),
    setDialogRef: x.useCallback((i) => {
      r.current.dialog = i;
    }, []),
    setBackdropRef: x.useCallback((i) => {
      r.current.backdrop = i;
    }, []),
  });
}
const $N = x.forwardRef((t, e) => {
  let {
      show: n = !1,
      role: r = "dialog",
      className: i,
      style: o,
      children: a,
      backdrop: l = !0,
      keyboard: c = !0,
      onBackdropClick: u,
      onEscapeKeyDown: d,
      transition: h,
      runTransition: f,
      backdropTransition: p,
      runBackdropTransition: m,
      autoFocus: v = !0,
      enforceFocus: C = !0,
      restoreFocus: b = !0,
      restoreFocusOptions: g,
      renderDialog: y,
      renderBackdrop: w = (Me) => s.jsx("div", Object.assign({}, Me)),
      manager: E,
      container: S,
      onShow: T,
      onHide: I = () => {},
      onExit: R,
      onExited: A,
      onExiting: O,
      onEnter: _,
      onEntering: F,
      onEntered: $,
    } = t,
    Z = L5(t, D5);
  const X = mf(),
    W = yg(S),
    z = _5(E),
    Q = RN(),
    q = fb(n),
    [ie, oe] = x.useState(!n),
    pe = x.useRef(null);
  x.useImperativeHandle(e, () => z, [z]),
    Qs && !q && n && (pe.current = Ep(X == null ? void 0 : X.document)),
    n && ie && oe(!1);
  const Ee = nt(() => {
      if (
        (z.add(),
        (Rt.current = Hn(document, "keydown", it)),
        (wt.current = Hn(document, "focus", () => setTimeout(me), !0)),
        T && T(),
        v)
      ) {
        var Me, Gt;
        const _r = Ep(
          (Me = (Gt = z.dialog) == null ? void 0 : Gt.ownerDocument) != null
            ? Me
            : X == null
            ? void 0
            : X.document
        );
        z.dialog &&
          _r &&
          !vc(z.dialog, _r) &&
          ((pe.current = _r), z.dialog.focus());
      }
    }),
    ee = nt(() => {
      if (
        (z.remove(),
        Rt.current == null || Rt.current(),
        wt.current == null || wt.current(),
        b)
      ) {
        var Me;
        (Me = pe.current) == null || Me.focus == null || Me.focus(g),
          (pe.current = null);
      }
    });
  x.useEffect(() => {
    !n || !W || Ee();
  }, [n, W, Ee]),
    x.useEffect(() => {
      ie && ee();
    }, [ie, ee]),
    UN(() => {
      ee();
    });
  const me = nt(() => {
      if (!C || !Q() || !z.isTopModal()) return;
      const Me = Ep(X == null ? void 0 : X.document);
      z.dialog && Me && !vc(z.dialog, Me) && z.dialog.focus();
    }),
    Pe = nt((Me) => {
      Me.target === Me.currentTarget && (u == null || u(Me), l === !0 && I());
    }),
    it = nt((Me) => {
      c &&
        HN(Me) &&
        z.isTopModal() &&
        (d == null || d(Me), Me.defaultPrevented || I());
    }),
    wt = x.useRef(),
    Rt = x.useRef(),
    St = (...Me) => {
      oe(!0), A == null || A(...Me);
    };
  if (!W) return null;
  const He = Object.assign(
    {
      role: r,
      ref: z.setDialogRef,
      "aria-modal": r === "dialog" ? !0 : void 0,
    },
    Z,
    { style: o, className: i, tabIndex: -1 }
  );
  let Bt = y
    ? y(He)
    : s.jsx(
        "div",
        Object.assign({}, He, {
          children: x.cloneElement(a, { role: "document" }),
        })
      );
  Bt = vg(h, f, {
    unmountOnExit: !0,
    mountOnEnter: !0,
    appear: !0,
    in: !!n,
    onExit: R,
    onExiting: O,
    onExited: St,
    onEnter: _,
    onEntering: F,
    onEntered: $,
    children: Bt,
  });
  let gn = null;
  return (
    l &&
      ((gn = w({ ref: z.setBackdropRef, onClick: Pe })),
      (gn = vg(p, m, {
        in: !!n,
        appear: !0,
        mountOnEnter: !0,
        unmountOnExit: !0,
        children: gn,
      }))),
    s.jsx(s.Fragment, {
      children: Ti.createPortal(s.jsxs(s.Fragment, { children: [gn, Bt] }), W),
    })
  );
});
$N.displayName = "Modal";
const KN = Object.assign($N, { Manager: vb }),
  M5 = { [Er]: "show", [Si]: "show" },
  To = x.forwardRef(
    (
      {
        className: t,
        children: e,
        transitionClasses: n = {},
        onEnter: r,
        ...i
      },
      o
    ) => {
      const a = {
          in: !1,
          timeout: 300,
          mountOnEnter: !1,
          unmountOnExit: !1,
          appear: !1,
          ...i,
        },
        l = x.useCallback(
          (c, u) => {
            MN(c), r == null || r(c, u);
          },
          [r]
        );
      return s.jsx(yb, {
        ref: o,
        addEndListener: gb,
        ...a,
        onEnter: l,
        childRef: e.ref,
        children: (c, u) =>
          x.cloneElement(e, {
            ...u,
            className: J("fade", t, e.props.className, M5[c], n[c]),
          }),
      });
    }
  );
To.displayName = "Fade";
const qN = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "div", ...r }, i) => (
    (e = ce(e, "offcanvas-body")),
    s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
qN.displayName = "OffcanvasBody";
const F5 = { [Er]: "show", [Si]: "show" },
  GN = x.forwardRef(
    (
      {
        bsPrefix: t,
        className: e,
        children: n,
        in: r = !1,
        mountOnEnter: i = !1,
        unmountOnExit: o = !1,
        appear: a = !1,
        ...l
      },
      c
    ) => (
      (t = ce(t, "offcanvas")),
      s.jsx(yb, {
        ref: c,
        addEndListener: gb,
        in: r,
        mountOnEnter: i,
        unmountOnExit: o,
        appear: a,
        ...l,
        childRef: n.ref,
        children: (u, d) =>
          x.cloneElement(n, {
            ...d,
            className: J(
              e,
              n.props.className,
              (u === Er || u === yc) && `${t}-toggling`,
              F5[u]
            ),
          }),
      })
    )
  );
GN.displayName = "OffcanvasToggling";
const bb = x.createContext({ onHide() {} }),
  B5 = { "aria-label": N.string, onClick: N.func, variant: N.oneOf(["white"]) },
  gf = x.forwardRef(
    ({ className: t, variant: e, "aria-label": n = "Close", ...r }, i) =>
      s.jsx("button", {
        ref: i,
        type: "button",
        className: J("btn-close", e && `btn-close-${e}`, t),
        "aria-label": n,
        ...r,
      })
  );
gf.displayName = "CloseButton";
gf.propTypes = B5;
const WN = x.forwardRef(
    (
      {
        closeLabel: t = "Close",
        closeVariant: e,
        closeButton: n = !1,
        onHide: r,
        children: i,
        ...o
      },
      a
    ) => {
      const l = x.useContext(bb),
        c = nt(() => {
          l == null || l.onHide(), r == null || r();
        });
      return s.jsxs("div", {
        ref: a,
        ...o,
        children: [
          i,
          n && s.jsx(gf, { "aria-label": t, variant: e, onClick: c }),
        ],
      });
    }
  ),
  VN = x.forwardRef(
    (
      {
        bsPrefix: t,
        className: e,
        closeLabel: n = "Close",
        closeButton: r = !1,
        ...i
      },
      o
    ) => (
      (t = ce(t, "offcanvas-header")),
      s.jsx(WN, {
        ref: o,
        ...i,
        className: J(e, t),
        closeLabel: n,
        closeButton: r,
      })
    )
  );
VN.displayName = "OffcanvasHeader";
const Fc = (t) =>
    x.forwardRef((e, n) =>
      s.jsx("div", { ...e, ref: n, className: J(e.className, t) })
    ),
  U5 = Fc("h5"),
  QN = x.forwardRef(
    ({ className: t, bsPrefix: e, as: n = U5, ...r }, i) => (
      (e = ce(e, "offcanvas-title")),
      s.jsx(n, { ref: i, className: J(t, e), ...r })
    )
  );
QN.displayName = "OffcanvasTitle";
function bg(t, e) {
  return t.classList
    ? !!e && t.classList.contains(e)
    : (" " + (t.className.baseVal || t.className) + " ").indexOf(
        " " + e + " "
      ) !== -1;
}
function z5(t, e) {
  t.classList
    ? t.classList.add(e)
    : bg(t, e) ||
      (typeof t.className == "string"
        ? (t.className = t.className + " " + e)
        : t.setAttribute(
            "class",
            ((t.className && t.className.baseVal) || "") + " " + e
          ));
}
function oS(t, e) {
  return t
    .replace(new RegExp("(^|\\s)" + e + "(?:\\s|$)", "g"), "$1")
    .replace(/\s+/g, " ")
    .replace(/^\s*|\s*$/g, "");
}
function H5(t, e) {
  t.classList
    ? t.classList.remove(e)
    : typeof t.className == "string"
    ? (t.className = oS(t.className, e))
    : t.setAttribute(
        "class",
        oS((t.className && t.className.baseVal) || "", e)
      );
}
const La = {
  FIXED_CONTENT: ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
  STICKY_CONTENT: ".sticky-top",
  NAVBAR_TOGGLER: ".navbar-toggler",
};
class YN extends vb {
  adjustAndStore(e, n, r) {
    const i = n.style[e];
    (n.dataset[e] = i), ji(n, { [e]: `${parseFloat(ji(n, e)) + r}px` });
  }
  restore(e, n) {
    const r = n.dataset[e];
    r !== void 0 && (delete n.dataset[e], ji(n, { [e]: r }));
  }
  setContainerStyle(e) {
    super.setContainerStyle(e);
    const n = this.getElement();
    if ((z5(n, "modal-open"), !e.scrollBarWidth)) return;
    const r = this.isRTL ? "paddingLeft" : "paddingRight",
      i = this.isRTL ? "marginLeft" : "marginRight";
    wi(n, La.FIXED_CONTENT).forEach((o) =>
      this.adjustAndStore(r, o, e.scrollBarWidth)
    ),
      wi(n, La.STICKY_CONTENT).forEach((o) =>
        this.adjustAndStore(i, o, -e.scrollBarWidth)
      ),
      wi(n, La.NAVBAR_TOGGLER).forEach((o) =>
        this.adjustAndStore(i, o, e.scrollBarWidth)
      );
  }
  removeContainerStyle(e) {
    super.removeContainerStyle(e);
    const n = this.getElement();
    H5(n, "modal-open");
    const r = this.isRTL ? "paddingLeft" : "paddingRight",
      i = this.isRTL ? "marginLeft" : "marginRight";
    wi(n, La.FIXED_CONTENT).forEach((o) => this.restore(r, o)),
      wi(n, La.STICKY_CONTENT).forEach((o) => this.restore(i, o)),
      wi(n, La.NAVBAR_TOGGLER).forEach((o) => this.restore(i, o));
  }
}
let Np;
function XN(t) {
  return Np || (Np = new YN(t)), Np;
}
function $5(t) {
  return s.jsx(GN, { ...t });
}
function K5(t) {
  return s.jsx(To, { ...t });
}
const JN = x.forwardRef(
  (
    {
      bsPrefix: t,
      className: e,
      children: n,
      "aria-labelledby": r,
      placement: i = "start",
      responsive: o,
      show: a = !1,
      backdrop: l = !0,
      keyboard: c = !0,
      scroll: u = !1,
      onEscapeKeyDown: d,
      onShow: h,
      onHide: f,
      container: p,
      autoFocus: m = !0,
      enforceFocus: v = !0,
      restoreFocus: C = !0,
      restoreFocusOptions: b,
      onEntered: g,
      onExit: y,
      onExiting: w,
      onEnter: E,
      onEntering: S,
      onExited: T,
      backdropClassName: I,
      manager: R,
      renderStaticNode: A = !1,
      ...O
    },
    _
  ) => {
    const F = x.useRef();
    t = ce(t, "offcanvas");
    const { onToggle: $ } = x.useContext(Lo) || {},
      [Z, X] = x.useState(!1),
      W = C5(o || "xs", "up");
    x.useEffect(() => {
      X(o ? a && !W : a);
    }, [a, o, W]);
    const z = nt(() => {
        $ == null || $(), f == null || f();
      }),
      Q = x.useMemo(() => ({ onHide: z }), [z]);
    function q() {
      return (
        R ||
        (u
          ? (F.current || (F.current = new YN({ handleContainerOverflow: !1 })),
            F.current)
          : XN())
      );
    }
    const ie = (ee, ...me) => {
        ee && (ee.style.visibility = "visible"), E == null || E(ee, ...me);
      },
      oe = (ee, ...me) => {
        ee && (ee.style.visibility = ""), T == null || T(...me);
      },
      pe = x.useCallback(
        (ee) => s.jsx("div", { ...ee, className: J(`${t}-backdrop`, I) }),
        [I, t]
      ),
      Ee = (ee) =>
        s.jsx("div", {
          ...ee,
          ...O,
          className: J(e, o ? `${t}-${o}` : t, `${t}-${i}`),
          "aria-labelledby": r,
          children: n,
        });
    return s.jsxs(s.Fragment, {
      children: [
        !Z && (o || A) && Ee({}),
        s.jsx(bb.Provider, {
          value: Q,
          children: s.jsx(KN, {
            show: Z,
            ref: _,
            backdrop: l,
            container: p,
            keyboard: c,
            autoFocus: m,
            enforceFocus: v && !u,
            restoreFocus: C,
            restoreFocusOptions: b,
            onEscapeKeyDown: d,
            onShow: h,
            onHide: z,
            onEnter: ie,
            onEntering: S,
            onEntered: g,
            onExit: y,
            onExiting: w,
            onExited: oe,
            manager: q(),
            transition: $5,
            backdropTransition: K5,
            renderBackdrop: pe,
            renderDialog: Ee,
          }),
        }),
      ],
    });
  }
);
JN.displayName = "Offcanvas";
const q5 = Object.assign(JN, { Body: qN, Header: VN, Title: QN }),
  ZN = x.forwardRef((t, e) => {
    const n = x.useContext(Lo);
    return s.jsx(q5, {
      ref: e,
      show: !!(n != null && n.expanded),
      ...t,
      renderStaticNode: !0,
    });
  });
ZN.displayName = "NavbarOffcanvas";
const ek = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "span", ...r }, i) => (
    (e = ce(e, "navbar-text")), s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
ek.displayName = "NavbarText";
const tk = x.forwardRef((t, e) => {
  const {
      bsPrefix: n,
      expand: r = !0,
      variant: i = "light",
      bg: o,
      fixed: a,
      sticky: l,
      className: c,
      as: u = "nav",
      expanded: d,
      onToggle: h,
      onSelect: f,
      collapseOnSelect: p = !1,
      ...m
    } = uf(t, { expanded: "onToggle" }),
    v = ce(n, "navbar"),
    C = x.useCallback(
      (...y) => {
        f == null || f(...y), p && d && (h == null || h(!1));
      },
      [f, p, d, h]
    );
  m.role === void 0 && u !== "nav" && (m.role = "navigation");
  let b = `${v}-expand`;
  typeof r == "string" && (b = `${b}-${r}`);
  const g = x.useMemo(
    () => ({
      onToggle: () => (h == null ? void 0 : h(!d)),
      bsPrefix: v,
      expanded: !!d,
      expand: r,
    }),
    [v, d, r, h]
  );
  return s.jsx(Lo.Provider, {
    value: g,
    children: s.jsx(ca.Provider, {
      value: C,
      children: s.jsx(u, {
        ref: e,
        ...m,
        className: J(
          c,
          v,
          r && b,
          i && `${v}-${i}`,
          o && `bg-${o}`,
          l && `sticky-${l}`,
          a && `fixed-${a}`
        ),
      }),
    }),
  });
});
tk.displayName = "Navbar";
const ph = Object.assign(tk, {
    Brand: jN,
    Collapse: FN,
    Offcanvas: ZN,
    Text: ek,
    Toggle: BN,
  }),
  nk = Fc("h4");
nk.displayName = "DivStyledAsH4";
const rk = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = nk, ...r }, i) => (
    (e = ce(e, "alert-heading")), s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
rk.displayName = "AlertHeading";
const ik = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = pf, ...r }, i) => (
    (e = ce(e, "alert-link")), s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
ik.displayName = "AlertLink";
const ok = x.forwardRef((t, e) => {
  const {
      bsPrefix: n,
      show: r = !0,
      closeLabel: i = "Close alert",
      closeVariant: o,
      className: a,
      children: l,
      variant: c = "primary",
      onClose: u,
      dismissible: d,
      transition: h = To,
      ...f
    } = uf(t, { show: "onClose" }),
    p = ce(n, "alert"),
    m = nt((b) => {
      u && u(!1, b);
    }),
    v = h === !0 ? To : h,
    C = s.jsxs("div", {
      role: "alert",
      ...(v ? void 0 : f),
      ref: e,
      className: J(a, p, c && `${p}-${c}`, d && `${p}-dismissible`),
      children: [
        d && s.jsx(gf, { onClick: m, "aria-label": i, variant: o }),
        l,
      ],
    });
  return v
    ? s.jsx(v, { unmountOnExit: !0, ...f, ref: void 0, in: r, children: C })
    : r
    ? C
    : null;
});
ok.displayName = "Alert";
const Cb = Object.assign(ok, { Link: ik, Heading: rk }),
  xe = x.forwardRef(
    (
      {
        as: t,
        bsPrefix: e,
        variant: n = "primary",
        size: r,
        active: i = !1,
        disabled: o = !1,
        className: a,
        ...l
      },
      c
    ) => {
      const u = ce(e, "btn"),
        [d, { tagName: h }] = lb({ tagName: t, disabled: o, ...l }),
        f = h;
      return s.jsx(f, {
        ...d,
        ...l,
        ref: c,
        disabled: o,
        className: J(
          a,
          u,
          i && "active",
          n && `${u}-${n}`,
          r && `${u}-${r}`,
          l.href && o && "disabled"
        ),
      });
    }
  );
xe.displayName = "Button";
const ak = x.forwardRef(
  (
    {
      bsPrefix: t,
      size: e,
      vertical: n = !1,
      className: r,
      role: i = "group",
      as: o = "div",
      ...a
    },
    l
  ) => {
    const c = ce(t, "btn-group");
    let u = c;
    return (
      n && (u = `${c}-vertical`),
      s.jsx(o, { ...a, ref: l, role: i, className: J(r, u, e && `${c}-${e}`) })
    );
  }
);
ak.displayName = "ButtonGroup";
const An = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "div", ...r }, i) => (
    (e = ce(e, "card-body")), s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
An.displayName = "CardBody";
const sk = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "div", ...r }, i) => (
    (e = ce(e, "card-footer")), s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
sk.displayName = "CardFooter";
const Wn = x.forwardRef(
  ({ bsPrefix: t, className: e, as: n = "div", ...r }, i) => {
    const o = ce(t, "card-header"),
      a = x.useMemo(() => ({ cardHeaderBsPrefix: o }), [o]);
    return s.jsx(hb.Provider, {
      value: a,
      children: s.jsx(n, { ref: i, ...r, className: J(e, o) }),
    });
  }
);
Wn.displayName = "CardHeader";
const lk = x.forwardRef(
  ({ bsPrefix: t, className: e, variant: n, as: r = "img", ...i }, o) => {
    const a = ce(t, "card-img");
    return s.jsx(r, { ref: o, className: J(n ? `${a}-${n}` : a, e), ...i });
  }
);
lk.displayName = "CardImg";
const ck = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "div", ...r }, i) => (
    (e = ce(e, "card-img-overlay")),
    s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
ck.displayName = "CardImgOverlay";
const uk = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "a", ...r }, i) => (
    (e = ce(e, "card-link")), s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
uk.displayName = "CardLink";
const G5 = Fc("h6"),
  dk = x.forwardRef(
    ({ className: t, bsPrefix: e, as: n = G5, ...r }, i) => (
      (e = ce(e, "card-subtitle")),
      s.jsx(n, { ref: i, className: J(t, e), ...r })
    )
  );
dk.displayName = "CardSubtitle";
const hk = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "p", ...r }, i) => (
    (e = ce(e, "card-text")), s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
hk.displayName = "CardText";
const W5 = Fc("h5"),
  fk = x.forwardRef(
    ({ className: t, bsPrefix: e, as: n = W5, ...r }, i) => (
      (e = ce(e, "card-title")), s.jsx(n, { ref: i, className: J(t, e), ...r })
    )
  );
fk.displayName = "CardTitle";
const pk = x.forwardRef(
  (
    {
      bsPrefix: t,
      className: e,
      bg: n,
      text: r,
      border: i,
      body: o = !1,
      children: a,
      as: l = "div",
      ...c
    },
    u
  ) => {
    const d = ce(t, "card");
    return s.jsx(l, {
      ref: u,
      ...c,
      className: J(e, d, n && `bg-${n}`, r && `text-${r}`, i && `border-${i}`),
      children: o ? s.jsx(An, { children: a }) : a,
    });
  }
);
pk.displayName = "Card";
const G = Object.assign(pk, {
  Img: lk,
  Title: fk,
  Subtitle: dk,
  Body: An,
  Link: uk,
  Text: hk,
  Header: Wn,
  Footer: sk,
  ImgOverlay: ck,
});
function V5(t, e) {
  return x.Children.toArray(t).some((n) => x.isValidElement(n) && n.type === e);
}
function Q5({ as: t, bsPrefix: e, className: n, ...r }) {
  e = ce(e, "col");
  const i = ub(),
    o = db(),
    a = [],
    l = [];
  return (
    i.forEach((c) => {
      const u = r[c];
      delete r[c];
      let d, h, f;
      typeof u == "object" && u != null
        ? ({ span: d, offset: h, order: f } = u)
        : (d = u);
      const p = c !== o ? `-${c}` : "";
      d && a.push(d === !0 ? `${e}${p}` : `${e}${p}-${d}`),
        f != null && l.push(`order${p}-${f}`),
        h != null && l.push(`offset${p}-${h}`);
    }),
    [
      { ...r, className: J(n, ...a, ...l) },
      { as: t, bsPrefix: e, spans: a },
    ]
  );
}
const D = x.forwardRef((t, e) => {
  const [{ className: n, ...r }, { as: i = "div", bsPrefix: o, spans: a }] =
    Q5(t);
  return s.jsx(i, { ...r, ref: e, className: J(n, !a.length && o) });
});
D.displayName = "Col";
const Or = x.forwardRef(
  ({ bsPrefix: t, fluid: e = !1, as: n = "div", className: r, ...i }, o) => {
    const a = ce(t, "container"),
      l = typeof e == "string" ? `-${e}` : "-fluid";
    return s.jsx(n, { ref: o, ...i, className: J(r, e ? `${a}${l}` : a) });
  }
);
Or.displayName = "Container";
function Y5(t, e, n) {
  const r = x.useRef(t !== void 0),
    [i, o] = x.useState(e),
    a = t !== void 0,
    l = r.current;
  return (
    (r.current = a),
    !a && l && i !== e && o(e),
    [
      a ? t : i,
      x.useCallback(
        (...c) => {
          const [u, ...d] = c;
          let h = n == null ? void 0 : n(u, ...d);
          return o(u), h;
        },
        [n]
      ),
    ]
  );
}
const yf = x.createContext(null);
var aS = Object.prototype.hasOwnProperty;
function sS(t, e, n) {
  for (n of t.keys()) if (zl(n, e)) return n;
}
function zl(t, e) {
  var n, r, i;
  if (t === e) return !0;
  if (t && e && (n = t.constructor) === e.constructor) {
    if (n === Date) return t.getTime() === e.getTime();
    if (n === RegExp) return t.toString() === e.toString();
    if (n === Array) {
      if ((r = t.length) === e.length) for (; r-- && zl(t[r], e[r]); );
      return r === -1;
    }
    if (n === Set) {
      if (t.size !== e.size) return !1;
      for (r of t)
        if (
          ((i = r),
          (i && typeof i == "object" && ((i = sS(e, i)), !i)) || !e.has(i))
        )
          return !1;
      return !0;
    }
    if (n === Map) {
      if (t.size !== e.size) return !1;
      for (r of t)
        if (
          ((i = r[0]),
          (i && typeof i == "object" && ((i = sS(e, i)), !i)) ||
            !zl(r[1], e.get(i)))
        )
          return !1;
      return !0;
    }
    if (n === ArrayBuffer) (t = new Uint8Array(t)), (e = new Uint8Array(e));
    else if (n === DataView) {
      if ((r = t.byteLength) === e.byteLength)
        for (; r-- && t.getInt8(r) === e.getInt8(r); );
      return r === -1;
    }
    if (ArrayBuffer.isView(t)) {
      if ((r = t.byteLength) === e.byteLength) for (; r-- && t[r] === e[r]; );
      return r === -1;
    }
    if (!n || typeof t == "object") {
      r = 0;
      for (n in t)
        if (
          (aS.call(t, n) && ++r && !aS.call(e, n)) ||
          !(n in e) ||
          !zl(t[n], e[n])
        )
          return !1;
      return Object.keys(e).length === r;
    }
  }
  return t !== t && e !== e;
}
function X5(t) {
  const e = RN();
  return [
    t[0],
    x.useCallback(
      (n) => {
        if (e()) return t[1](n);
      },
      [e, t[1]]
    ),
  ];
}
var kn = "top",
  pr = "bottom",
  mr = "right",
  Rn = "left",
  wb = "auto",
  Bc = [kn, pr, mr, Rn],
  js = "start",
  bc = "end",
  J5 = "clippingParents",
  mk = "viewport",
  ml = "popper",
  Z5 = "reference",
  lS = Bc.reduce(function (t, e) {
    return t.concat([e + "-" + js, e + "-" + bc]);
  }, []),
  gk = [].concat(Bc, [wb]).reduce(function (t, e) {
    return t.concat([e, e + "-" + js, e + "-" + bc]);
  }, []),
  eB = "beforeRead",
  tB = "read",
  nB = "afterRead",
  rB = "beforeMain",
  iB = "main",
  oB = "afterMain",
  aB = "beforeWrite",
  sB = "write",
  lB = "afterWrite",
  cB = [eB, tB, nB, rB, iB, oB, aB, sB, lB];
function ni(t) {
  return t.split("-")[0];
}
function Vn(t) {
  if (t == null) return window;
  if (t.toString() !== "[object Window]") {
    var e = t.ownerDocument;
    return (e && e.defaultView) || window;
  }
  return t;
}
function ua(t) {
  var e = Vn(t).Element;
  return t instanceof e || t instanceof Element;
}
function cr(t) {
  var e = Vn(t).HTMLElement;
  return t instanceof e || t instanceof HTMLElement;
}
function Sb(t) {
  if (typeof ShadowRoot > "u") return !1;
  var e = Vn(t).ShadowRoot;
  return t instanceof e || t instanceof ShadowRoot;
}
var Jo = Math.max,
  mh = Math.min,
  Os = Math.round;
function Cg() {
  var t = navigator.userAgentData;
  return t != null && t.brands && Array.isArray(t.brands)
    ? t.brands
        .map(function (e) {
          return e.brand + "/" + e.version;
        })
        .join(" ")
    : navigator.userAgent;
}
function yk() {
  return !/^((?!chrome|android).)*safari/i.test(Cg());
}
function Ds(t, e, n) {
  e === void 0 && (e = !1), n === void 0 && (n = !1);
  var r = t.getBoundingClientRect(),
    i = 1,
    o = 1;
  e &&
    cr(t) &&
    ((i = (t.offsetWidth > 0 && Os(r.width) / t.offsetWidth) || 1),
    (o = (t.offsetHeight > 0 && Os(r.height) / t.offsetHeight) || 1));
  var a = ua(t) ? Vn(t) : window,
    l = a.visualViewport,
    c = !yk() && n,
    u = (r.left + (c && l ? l.offsetLeft : 0)) / i,
    d = (r.top + (c && l ? l.offsetTop : 0)) / o,
    h = r.width / i,
    f = r.height / o;
  return {
    width: h,
    height: f,
    top: d,
    right: u + h,
    bottom: d + f,
    left: u,
    x: u,
    y: d,
  };
}
function xb(t) {
  var e = Ds(t),
    n = t.offsetWidth,
    r = t.offsetHeight;
  return (
    Math.abs(e.width - n) <= 1 && (n = e.width),
    Math.abs(e.height - r) <= 1 && (r = e.height),
    { x: t.offsetLeft, y: t.offsetTop, width: n, height: r }
  );
}
function vk(t, e) {
  var n = e.getRootNode && e.getRootNode();
  if (t.contains(e)) return !0;
  if (n && Sb(n)) {
    var r = e;
    do {
      if (r && t.isSameNode(r)) return !0;
      r = r.parentNode || r.host;
    } while (r);
  }
  return !1;
}
function ai(t) {
  return t ? (t.nodeName || "").toLowerCase() : null;
}
function Fi(t) {
  return Vn(t).getComputedStyle(t);
}
function uB(t) {
  return ["table", "td", "th"].indexOf(ai(t)) >= 0;
}
function Po(t) {
  return ((ua(t) ? t.ownerDocument : t.document) || window.document)
    .documentElement;
}
function vf(t) {
  return ai(t) === "html"
    ? t
    : t.assignedSlot || t.parentNode || (Sb(t) ? t.host : null) || Po(t);
}
function cS(t) {
  return !cr(t) || Fi(t).position === "fixed" ? null : t.offsetParent;
}
function dB(t) {
  var e = /firefox/i.test(Cg()),
    n = /Trident/i.test(Cg());
  if (n && cr(t)) {
    var r = Fi(t);
    if (r.position === "fixed") return null;
  }
  var i = vf(t);
  for (Sb(i) && (i = i.host); cr(i) && ["html", "body"].indexOf(ai(i)) < 0; ) {
    var o = Fi(i);
    if (
      o.transform !== "none" ||
      o.perspective !== "none" ||
      o.contain === "paint" ||
      ["transform", "perspective"].indexOf(o.willChange) !== -1 ||
      (e && o.willChange === "filter") ||
      (e && o.filter && o.filter !== "none")
    )
      return i;
    i = i.parentNode;
  }
  return null;
}
function Uc(t) {
  for (var e = Vn(t), n = cS(t); n && uB(n) && Fi(n).position === "static"; )
    n = cS(n);
  return n &&
    (ai(n) === "html" || (ai(n) === "body" && Fi(n).position === "static"))
    ? e
    : n || dB(t) || e;
}
function Eb(t) {
  return ["top", "bottom"].indexOf(t) >= 0 ? "x" : "y";
}
function Hl(t, e, n) {
  return Jo(t, mh(e, n));
}
function hB(t, e, n) {
  var r = Hl(t, e, n);
  return r > n ? n : r;
}
function bk() {
  return { top: 0, right: 0, bottom: 0, left: 0 };
}
function Ck(t) {
  return Object.assign({}, bk(), t);
}
function wk(t, e) {
  return e.reduce(function (n, r) {
    return (n[r] = t), n;
  }, {});
}
var fB = function (e, n) {
  return (
    (e =
      typeof e == "function"
        ? e(Object.assign({}, n.rects, { placement: n.placement }))
        : e),
    Ck(typeof e != "number" ? e : wk(e, Bc))
  );
};
function pB(t) {
  var e,
    n = t.state,
    r = t.name,
    i = t.options,
    o = n.elements.arrow,
    a = n.modifiersData.popperOffsets,
    l = ni(n.placement),
    c = Eb(l),
    u = [Rn, mr].indexOf(l) >= 0,
    d = u ? "height" : "width";
  if (!(!o || !a)) {
    var h = fB(i.padding, n),
      f = xb(o),
      p = c === "y" ? kn : Rn,
      m = c === "y" ? pr : mr,
      v =
        n.rects.reference[d] + n.rects.reference[c] - a[c] - n.rects.popper[d],
      C = a[c] - n.rects.reference[c],
      b = Uc(o),
      g = b ? (c === "y" ? b.clientHeight || 0 : b.clientWidth || 0) : 0,
      y = v / 2 - C / 2,
      w = h[p],
      E = g - f[d] - h[m],
      S = g / 2 - f[d] / 2 + y,
      T = Hl(w, S, E),
      I = c;
    n.modifiersData[r] = ((e = {}), (e[I] = T), (e.centerOffset = T - S), e);
  }
}
function mB(t) {
  var e = t.state,
    n = t.options,
    r = n.element,
    i = r === void 0 ? "[data-popper-arrow]" : r;
  i != null &&
    ((typeof i == "string" && ((i = e.elements.popper.querySelector(i)), !i)) ||
      (vk(e.elements.popper, i) && (e.elements.arrow = i)));
}
const Sk = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: pB,
  effect: mB,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"],
};
function Ls(t) {
  return t.split("-")[1];
}
var gB = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
function yB(t, e) {
  var n = t.x,
    r = t.y,
    i = e.devicePixelRatio || 1;
  return { x: Os(n * i) / i || 0, y: Os(r * i) / i || 0 };
}
function uS(t) {
  var e,
    n = t.popper,
    r = t.popperRect,
    i = t.placement,
    o = t.variation,
    a = t.offsets,
    l = t.position,
    c = t.gpuAcceleration,
    u = t.adaptive,
    d = t.roundOffsets,
    h = t.isFixed,
    f = a.x,
    p = f === void 0 ? 0 : f,
    m = a.y,
    v = m === void 0 ? 0 : m,
    C = typeof d == "function" ? d({ x: p, y: v }) : { x: p, y: v };
  (p = C.x), (v = C.y);
  var b = a.hasOwnProperty("x"),
    g = a.hasOwnProperty("y"),
    y = Rn,
    w = kn,
    E = window;
  if (u) {
    var S = Uc(n),
      T = "clientHeight",
      I = "clientWidth";
    if (
      (S === Vn(n) &&
        ((S = Po(n)),
        Fi(S).position !== "static" &&
          l === "absolute" &&
          ((T = "scrollHeight"), (I = "scrollWidth"))),
      (S = S),
      i === kn || ((i === Rn || i === mr) && o === bc))
    ) {
      w = pr;
      var R = h && S === E && E.visualViewport ? E.visualViewport.height : S[T];
      (v -= R - r.height), (v *= c ? 1 : -1);
    }
    if (i === Rn || ((i === kn || i === pr) && o === bc)) {
      y = mr;
      var A = h && S === E && E.visualViewport ? E.visualViewport.width : S[I];
      (p -= A - r.width), (p *= c ? 1 : -1);
    }
  }
  var O = Object.assign({ position: l }, u && gB),
    _ = d === !0 ? yB({ x: p, y: v }, Vn(n)) : { x: p, y: v };
  if (((p = _.x), (v = _.y), c)) {
    var F;
    return Object.assign(
      {},
      O,
      ((F = {}),
      (F[w] = g ? "0" : ""),
      (F[y] = b ? "0" : ""),
      (F.transform =
        (E.devicePixelRatio || 1) <= 1
          ? "translate(" + p + "px, " + v + "px)"
          : "translate3d(" + p + "px, " + v + "px, 0)"),
      F)
    );
  }
  return Object.assign(
    {},
    O,
    ((e = {}),
    (e[w] = g ? v + "px" : ""),
    (e[y] = b ? p + "px" : ""),
    (e.transform = ""),
    e)
  );
}
function vB(t) {
  var e = t.state,
    n = t.options,
    r = n.gpuAcceleration,
    i = r === void 0 ? !0 : r,
    o = n.adaptive,
    a = o === void 0 ? !0 : o,
    l = n.roundOffsets,
    c = l === void 0 ? !0 : l,
    u = {
      placement: ni(e.placement),
      variation: Ls(e.placement),
      popper: e.elements.popper,
      popperRect: e.rects.popper,
      gpuAcceleration: i,
      isFixed: e.options.strategy === "fixed",
    };
  e.modifiersData.popperOffsets != null &&
    (e.styles.popper = Object.assign(
      {},
      e.styles.popper,
      uS(
        Object.assign({}, u, {
          offsets: e.modifiersData.popperOffsets,
          position: e.options.strategy,
          adaptive: a,
          roundOffsets: c,
        })
      )
    )),
    e.modifiersData.arrow != null &&
      (e.styles.arrow = Object.assign(
        {},
        e.styles.arrow,
        uS(
          Object.assign({}, u, {
            offsets: e.modifiersData.arrow,
            position: "absolute",
            adaptive: !1,
            roundOffsets: c,
          })
        )
      )),
    (e.attributes.popper = Object.assign({}, e.attributes.popper, {
      "data-popper-placement": e.placement,
    }));
}
const xk = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: vB,
  data: {},
};
var Ou = { passive: !0 };
function bB(t) {
  var e = t.state,
    n = t.instance,
    r = t.options,
    i = r.scroll,
    o = i === void 0 ? !0 : i,
    a = r.resize,
    l = a === void 0 ? !0 : a,
    c = Vn(e.elements.popper),
    u = [].concat(e.scrollParents.reference, e.scrollParents.popper);
  return (
    o &&
      u.forEach(function (d) {
        d.addEventListener("scroll", n.update, Ou);
      }),
    l && c.addEventListener("resize", n.update, Ou),
    function () {
      o &&
        u.forEach(function (d) {
          d.removeEventListener("scroll", n.update, Ou);
        }),
        l && c.removeEventListener("resize", n.update, Ou);
    }
  );
}
const Ek = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function () {},
  effect: bB,
  data: {},
};
var CB = { left: "right", right: "left", bottom: "top", top: "bottom" };
function rd(t) {
  return t.replace(/left|right|bottom|top/g, function (e) {
    return CB[e];
  });
}
var wB = { start: "end", end: "start" };
function dS(t) {
  return t.replace(/start|end/g, function (e) {
    return wB[e];
  });
}
function Tb(t) {
  var e = Vn(t),
    n = e.pageXOffset,
    r = e.pageYOffset;
  return { scrollLeft: n, scrollTop: r };
}
function Ib(t) {
  return Ds(Po(t)).left + Tb(t).scrollLeft;
}
function SB(t, e) {
  var n = Vn(t),
    r = Po(t),
    i = n.visualViewport,
    o = r.clientWidth,
    a = r.clientHeight,
    l = 0,
    c = 0;
  if (i) {
    (o = i.width), (a = i.height);
    var u = yk();
    (u || (!u && e === "fixed")) && ((l = i.offsetLeft), (c = i.offsetTop));
  }
  return { width: o, height: a, x: l + Ib(t), y: c };
}
function xB(t) {
  var e,
    n = Po(t),
    r = Tb(t),
    i = (e = t.ownerDocument) == null ? void 0 : e.body,
    o = Jo(
      n.scrollWidth,
      n.clientWidth,
      i ? i.scrollWidth : 0,
      i ? i.clientWidth : 0
    ),
    a = Jo(
      n.scrollHeight,
      n.clientHeight,
      i ? i.scrollHeight : 0,
      i ? i.clientHeight : 0
    ),
    l = -r.scrollLeft + Ib(t),
    c = -r.scrollTop;
  return (
    Fi(i || n).direction === "rtl" &&
      (l += Jo(n.clientWidth, i ? i.clientWidth : 0) - o),
    { width: o, height: a, x: l, y: c }
  );
}
function Nb(t) {
  var e = Fi(t),
    n = e.overflow,
    r = e.overflowX,
    i = e.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + i + r);
}
function Tk(t) {
  return ["html", "body", "#document"].indexOf(ai(t)) >= 0
    ? t.ownerDocument.body
    : cr(t) && Nb(t)
    ? t
    : Tk(vf(t));
}
function $l(t, e) {
  var n;
  e === void 0 && (e = []);
  var r = Tk(t),
    i = r === ((n = t.ownerDocument) == null ? void 0 : n.body),
    o = Vn(r),
    a = i ? [o].concat(o.visualViewport || [], Nb(r) ? r : []) : r,
    l = e.concat(a);
  return i ? l : l.concat($l(vf(a)));
}
function wg(t) {
  return Object.assign({}, t, {
    left: t.x,
    top: t.y,
    right: t.x + t.width,
    bottom: t.y + t.height,
  });
}
function EB(t, e) {
  var n = Ds(t, !1, e === "fixed");
  return (
    (n.top = n.top + t.clientTop),
    (n.left = n.left + t.clientLeft),
    (n.bottom = n.top + t.clientHeight),
    (n.right = n.left + t.clientWidth),
    (n.width = t.clientWidth),
    (n.height = t.clientHeight),
    (n.x = n.left),
    (n.y = n.top),
    n
  );
}
function hS(t, e, n) {
  return e === mk ? wg(SB(t, n)) : ua(e) ? EB(e, n) : wg(xB(Po(t)));
}
function TB(t) {
  var e = $l(vf(t)),
    n = ["absolute", "fixed"].indexOf(Fi(t).position) >= 0,
    r = n && cr(t) ? Uc(t) : t;
  return ua(r)
    ? e.filter(function (i) {
        return ua(i) && vk(i, r) && ai(i) !== "body";
      })
    : [];
}
function IB(t, e, n, r) {
  var i = e === "clippingParents" ? TB(t) : [].concat(e),
    o = [].concat(i, [n]),
    a = o[0],
    l = o.reduce(function (c, u) {
      var d = hS(t, u, r);
      return (
        (c.top = Jo(d.top, c.top)),
        (c.right = mh(d.right, c.right)),
        (c.bottom = mh(d.bottom, c.bottom)),
        (c.left = Jo(d.left, c.left)),
        c
      );
    }, hS(t, a, r));
  return (
    (l.width = l.right - l.left),
    (l.height = l.bottom - l.top),
    (l.x = l.left),
    (l.y = l.top),
    l
  );
}
function Ik(t) {
  var e = t.reference,
    n = t.element,
    r = t.placement,
    i = r ? ni(r) : null,
    o = r ? Ls(r) : null,
    a = e.x + e.width / 2 - n.width / 2,
    l = e.y + e.height / 2 - n.height / 2,
    c;
  switch (i) {
    case kn:
      c = { x: a, y: e.y - n.height };
      break;
    case pr:
      c = { x: a, y: e.y + e.height };
      break;
    case mr:
      c = { x: e.x + e.width, y: l };
      break;
    case Rn:
      c = { x: e.x - n.width, y: l };
      break;
    default:
      c = { x: e.x, y: e.y };
  }
  var u = i ? Eb(i) : null;
  if (u != null) {
    var d = u === "y" ? "height" : "width";
    switch (o) {
      case js:
        c[u] = c[u] - (e[d] / 2 - n[d] / 2);
        break;
      case bc:
        c[u] = c[u] + (e[d] / 2 - n[d] / 2);
        break;
    }
  }
  return c;
}
function Cc(t, e) {
  e === void 0 && (e = {});
  var n = e,
    r = n.placement,
    i = r === void 0 ? t.placement : r,
    o = n.strategy,
    a = o === void 0 ? t.strategy : o,
    l = n.boundary,
    c = l === void 0 ? J5 : l,
    u = n.rootBoundary,
    d = u === void 0 ? mk : u,
    h = n.elementContext,
    f = h === void 0 ? ml : h,
    p = n.altBoundary,
    m = p === void 0 ? !1 : p,
    v = n.padding,
    C = v === void 0 ? 0 : v,
    b = Ck(typeof C != "number" ? C : wk(C, Bc)),
    g = f === ml ? Z5 : ml,
    y = t.rects.popper,
    w = t.elements[m ? g : f],
    E = IB(ua(w) ? w : w.contextElement || Po(t.elements.popper), c, d, a),
    S = Ds(t.elements.reference),
    T = Ik({ reference: S, element: y, strategy: "absolute", placement: i }),
    I = wg(Object.assign({}, y, T)),
    R = f === ml ? I : S,
    A = {
      top: E.top - R.top + b.top,
      bottom: R.bottom - E.bottom + b.bottom,
      left: E.left - R.left + b.left,
      right: R.right - E.right + b.right,
    },
    O = t.modifiersData.offset;
  if (f === ml && O) {
    var _ = O[i];
    Object.keys(A).forEach(function (F) {
      var $ = [mr, pr].indexOf(F) >= 0 ? 1 : -1,
        Z = [kn, pr].indexOf(F) >= 0 ? "y" : "x";
      A[F] += _[Z] * $;
    });
  }
  return A;
}
function NB(t, e) {
  e === void 0 && (e = {});
  var n = e,
    r = n.placement,
    i = n.boundary,
    o = n.rootBoundary,
    a = n.padding,
    l = n.flipVariations,
    c = n.allowedAutoPlacements,
    u = c === void 0 ? gk : c,
    d = Ls(r),
    h = d
      ? l
        ? lS
        : lS.filter(function (m) {
            return Ls(m) === d;
          })
      : Bc,
    f = h.filter(function (m) {
      return u.indexOf(m) >= 0;
    });
  f.length === 0 && (f = h);
  var p = f.reduce(function (m, v) {
    return (
      (m[v] = Cc(t, { placement: v, boundary: i, rootBoundary: o, padding: a })[
        ni(v)
      ]),
      m
    );
  }, {});
  return Object.keys(p).sort(function (m, v) {
    return p[m] - p[v];
  });
}
function kB(t) {
  if (ni(t) === wb) return [];
  var e = rd(t);
  return [dS(t), e, dS(e)];
}
function RB(t) {
  var e = t.state,
    n = t.options,
    r = t.name;
  if (!e.modifiersData[r]._skip) {
    for (
      var i = n.mainAxis,
        o = i === void 0 ? !0 : i,
        a = n.altAxis,
        l = a === void 0 ? !0 : a,
        c = n.fallbackPlacements,
        u = n.padding,
        d = n.boundary,
        h = n.rootBoundary,
        f = n.altBoundary,
        p = n.flipVariations,
        m = p === void 0 ? !0 : p,
        v = n.allowedAutoPlacements,
        C = e.options.placement,
        b = ni(C),
        g = b === C,
        y = c || (g || !m ? [rd(C)] : kB(C)),
        w = [C].concat(y).reduce(function (Ee, ee) {
          return Ee.concat(
            ni(ee) === wb
              ? NB(e, {
                  placement: ee,
                  boundary: d,
                  rootBoundary: h,
                  padding: u,
                  flipVariations: m,
                  allowedAutoPlacements: v,
                })
              : ee
          );
        }, []),
        E = e.rects.reference,
        S = e.rects.popper,
        T = new Map(),
        I = !0,
        R = w[0],
        A = 0;
      A < w.length;
      A++
    ) {
      var O = w[A],
        _ = ni(O),
        F = Ls(O) === js,
        $ = [kn, pr].indexOf(_) >= 0,
        Z = $ ? "width" : "height",
        X = Cc(e, {
          placement: O,
          boundary: d,
          rootBoundary: h,
          altBoundary: f,
          padding: u,
        }),
        W = $ ? (F ? mr : Rn) : F ? pr : kn;
      E[Z] > S[Z] && (W = rd(W));
      var z = rd(W),
        Q = [];
      if (
        (o && Q.push(X[_] <= 0),
        l && Q.push(X[W] <= 0, X[z] <= 0),
        Q.every(function (Ee) {
          return Ee;
        }))
      ) {
        (R = O), (I = !1);
        break;
      }
      T.set(O, Q);
    }
    if (I)
      for (
        var q = m ? 3 : 1,
          ie = function (ee) {
            var me = w.find(function (Pe) {
              var it = T.get(Pe);
              if (it)
                return it.slice(0, ee).every(function (wt) {
                  return wt;
                });
            });
            if (me) return (R = me), "break";
          },
          oe = q;
        oe > 0;
        oe--
      ) {
        var pe = ie(oe);
        if (pe === "break") break;
      }
    e.placement !== R &&
      ((e.modifiersData[r]._skip = !0), (e.placement = R), (e.reset = !0));
  }
}
const Nk = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: RB,
  requiresIfExists: ["offset"],
  data: { _skip: !1 },
};
function fS(t, e, n) {
  return (
    n === void 0 && (n = { x: 0, y: 0 }),
    {
      top: t.top - e.height - n.y,
      right: t.right - e.width + n.x,
      bottom: t.bottom - e.height + n.y,
      left: t.left - e.width - n.x,
    }
  );
}
function pS(t) {
  return [kn, mr, pr, Rn].some(function (e) {
    return t[e] >= 0;
  });
}
function AB(t) {
  var e = t.state,
    n = t.name,
    r = e.rects.reference,
    i = e.rects.popper,
    o = e.modifiersData.preventOverflow,
    a = Cc(e, { elementContext: "reference" }),
    l = Cc(e, { altBoundary: !0 }),
    c = fS(a, r),
    u = fS(l, i, o),
    d = pS(c),
    h = pS(u);
  (e.modifiersData[n] = {
    referenceClippingOffsets: c,
    popperEscapeOffsets: u,
    isReferenceHidden: d,
    hasPopperEscaped: h,
  }),
    (e.attributes.popper = Object.assign({}, e.attributes.popper, {
      "data-popper-reference-hidden": d,
      "data-popper-escaped": h,
    }));
}
const kk = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: AB,
};
function jB(t, e, n) {
  var r = ni(t),
    i = [Rn, kn].indexOf(r) >= 0 ? -1 : 1,
    o = typeof n == "function" ? n(Object.assign({}, e, { placement: t })) : n,
    a = o[0],
    l = o[1];
  return (
    (a = a || 0),
    (l = (l || 0) * i),
    [Rn, mr].indexOf(r) >= 0 ? { x: l, y: a } : { x: a, y: l }
  );
}
function OB(t) {
  var e = t.state,
    n = t.options,
    r = t.name,
    i = n.offset,
    o = i === void 0 ? [0, 0] : i,
    a = gk.reduce(function (d, h) {
      return (d[h] = jB(h, e.rects, o)), d;
    }, {}),
    l = a[e.placement],
    c = l.x,
    u = l.y;
  e.modifiersData.popperOffsets != null &&
    ((e.modifiersData.popperOffsets.x += c),
    (e.modifiersData.popperOffsets.y += u)),
    (e.modifiersData[r] = a);
}
const Rk = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: OB,
};
function DB(t) {
  var e = t.state,
    n = t.name;
  e.modifiersData[n] = Ik({
    reference: e.rects.reference,
    element: e.rects.popper,
    strategy: "absolute",
    placement: e.placement,
  });
}
const Ak = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: DB,
  data: {},
};
function LB(t) {
  return t === "x" ? "y" : "x";
}
function PB(t) {
  var e = t.state,
    n = t.options,
    r = t.name,
    i = n.mainAxis,
    o = i === void 0 ? !0 : i,
    a = n.altAxis,
    l = a === void 0 ? !1 : a,
    c = n.boundary,
    u = n.rootBoundary,
    d = n.altBoundary,
    h = n.padding,
    f = n.tether,
    p = f === void 0 ? !0 : f,
    m = n.tetherOffset,
    v = m === void 0 ? 0 : m,
    C = Cc(e, { boundary: c, rootBoundary: u, padding: h, altBoundary: d }),
    b = ni(e.placement),
    g = Ls(e.placement),
    y = !g,
    w = Eb(b),
    E = LB(w),
    S = e.modifiersData.popperOffsets,
    T = e.rects.reference,
    I = e.rects.popper,
    R =
      typeof v == "function"
        ? v(Object.assign({}, e.rects, { placement: e.placement }))
        : v,
    A =
      typeof R == "number"
        ? { mainAxis: R, altAxis: R }
        : Object.assign({ mainAxis: 0, altAxis: 0 }, R),
    O = e.modifiersData.offset ? e.modifiersData.offset[e.placement] : null,
    _ = { x: 0, y: 0 };
  if (S) {
    if (o) {
      var F,
        $ = w === "y" ? kn : Rn,
        Z = w === "y" ? pr : mr,
        X = w === "y" ? "height" : "width",
        W = S[w],
        z = W + C[$],
        Q = W - C[Z],
        q = p ? -I[X] / 2 : 0,
        ie = g === js ? T[X] : I[X],
        oe = g === js ? -I[X] : -T[X],
        pe = e.elements.arrow,
        Ee = p && pe ? xb(pe) : { width: 0, height: 0 },
        ee = e.modifiersData["arrow#persistent"]
          ? e.modifiersData["arrow#persistent"].padding
          : bk(),
        me = ee[$],
        Pe = ee[Z],
        it = Hl(0, T[X], Ee[X]),
        wt = y
          ? T[X] / 2 - q - it - me - A.mainAxis
          : ie - it - me - A.mainAxis,
        Rt = y
          ? -T[X] / 2 + q + it + Pe + A.mainAxis
          : oe + it + Pe + A.mainAxis,
        St = e.elements.arrow && Uc(e.elements.arrow),
        He = St ? (w === "y" ? St.clientTop || 0 : St.clientLeft || 0) : 0,
        Bt = (F = O == null ? void 0 : O[w]) != null ? F : 0,
        gn = W + wt - Bt - He,
        Me = W + Rt - Bt,
        Gt = Hl(p ? mh(z, gn) : z, W, p ? Jo(Q, Me) : Q);
      (S[w] = Gt), (_[w] = Gt - W);
    }
    if (l) {
      var _r,
        tl = w === "x" ? kn : Rn,
        Ea = w === "x" ? pr : mr,
        yr = S[E],
        Wi = E === "y" ? "height" : "width",
        Ta = yr + C[tl],
        Ia = yr - C[Ea],
        Zn = [kn, Rn].indexOf(b) !== -1,
        Mr = (_r = O == null ? void 0 : O[E]) != null ? _r : 0,
        Oe = Zn ? Ta : yr - T[Wi] - I[Wi] - Mr + A.altAxis,
        Ln = Zn ? yr + T[Wi] + I[Wi] - Mr - A.altAxis : Ia,
        Sn = p && Zn ? hB(Oe, yr, Ln) : Hl(p ? Oe : Ta, yr, p ? Ln : Ia);
      (S[E] = Sn), (_[E] = Sn - yr);
    }
    e.modifiersData[r] = _;
  }
}
const jk = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: PB,
  requiresIfExists: ["offset"],
};
function _B(t) {
  return { scrollLeft: t.scrollLeft, scrollTop: t.scrollTop };
}
function MB(t) {
  return t === Vn(t) || !cr(t) ? Tb(t) : _B(t);
}
function FB(t) {
  var e = t.getBoundingClientRect(),
    n = Os(e.width) / t.offsetWidth || 1,
    r = Os(e.height) / t.offsetHeight || 1;
  return n !== 1 || r !== 1;
}
function BB(t, e, n) {
  n === void 0 && (n = !1);
  var r = cr(e),
    i = cr(e) && FB(e),
    o = Po(e),
    a = Ds(t, i, n),
    l = { scrollLeft: 0, scrollTop: 0 },
    c = { x: 0, y: 0 };
  return (
    (r || (!r && !n)) &&
      ((ai(e) !== "body" || Nb(o)) && (l = MB(e)),
      cr(e)
        ? ((c = Ds(e, !0)), (c.x += e.clientLeft), (c.y += e.clientTop))
        : o && (c.x = Ib(o))),
    {
      x: a.left + l.scrollLeft - c.x,
      y: a.top + l.scrollTop - c.y,
      width: a.width,
      height: a.height,
    }
  );
}
function UB(t) {
  var e = new Map(),
    n = new Set(),
    r = [];
  t.forEach(function (o) {
    e.set(o.name, o);
  });
  function i(o) {
    n.add(o.name);
    var a = [].concat(o.requires || [], o.requiresIfExists || []);
    a.forEach(function (l) {
      if (!n.has(l)) {
        var c = e.get(l);
        c && i(c);
      }
    }),
      r.push(o);
  }
  return (
    t.forEach(function (o) {
      n.has(o.name) || i(o);
    }),
    r
  );
}
function zB(t) {
  var e = UB(t);
  return cB.reduce(function (n, r) {
    return n.concat(
      e.filter(function (i) {
        return i.phase === r;
      })
    );
  }, []);
}
function HB(t) {
  var e;
  return function () {
    return (
      e ||
        (e = new Promise(function (n) {
          Promise.resolve().then(function () {
            (e = void 0), n(t());
          });
        })),
      e
    );
  };
}
function $B(t) {
  var e = t.reduce(function (n, r) {
    var i = n[r.name];
    return (
      (n[r.name] = i
        ? Object.assign({}, i, r, {
            options: Object.assign({}, i.options, r.options),
            data: Object.assign({}, i.data, r.data),
          })
        : r),
      n
    );
  }, {});
  return Object.keys(e).map(function (n) {
    return e[n];
  });
}
var mS = { placement: "bottom", modifiers: [], strategy: "absolute" };
function gS() {
  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
    e[n] = arguments[n];
  return !e.some(function (r) {
    return !(r && typeof r.getBoundingClientRect == "function");
  });
}
function Ok(t) {
  t === void 0 && (t = {});
  var e = t,
    n = e.defaultModifiers,
    r = n === void 0 ? [] : n,
    i = e.defaultOptions,
    o = i === void 0 ? mS : i;
  return function (l, c, u) {
    u === void 0 && (u = o);
    var d = {
        placement: "bottom",
        orderedModifiers: [],
        options: Object.assign({}, mS, o),
        modifiersData: {},
        elements: { reference: l, popper: c },
        attributes: {},
        styles: {},
      },
      h = [],
      f = !1,
      p = {
        state: d,
        setOptions: function (b) {
          var g = typeof b == "function" ? b(d.options) : b;
          v(),
            (d.options = Object.assign({}, o, d.options, g)),
            (d.scrollParents = {
              reference: ua(l)
                ? $l(l)
                : l.contextElement
                ? $l(l.contextElement)
                : [],
              popper: $l(c),
            });
          var y = zB($B([].concat(r, d.options.modifiers)));
          return (
            (d.orderedModifiers = y.filter(function (w) {
              return w.enabled;
            })),
            m(),
            p.update()
          );
        },
        forceUpdate: function () {
          if (!f) {
            var b = d.elements,
              g = b.reference,
              y = b.popper;
            if (gS(g, y)) {
              (d.rects = {
                reference: BB(g, Uc(y), d.options.strategy === "fixed"),
                popper: xb(y),
              }),
                (d.reset = !1),
                (d.placement = d.options.placement),
                d.orderedModifiers.forEach(function (A) {
                  return (d.modifiersData[A.name] = Object.assign({}, A.data));
                });
              for (var w = 0; w < d.orderedModifiers.length; w++) {
                if (d.reset === !0) {
                  (d.reset = !1), (w = -1);
                  continue;
                }
                var E = d.orderedModifiers[w],
                  S = E.fn,
                  T = E.options,
                  I = T === void 0 ? {} : T,
                  R = E.name;
                typeof S == "function" &&
                  (d = S({ state: d, options: I, name: R, instance: p }) || d);
              }
            }
          }
        },
        update: HB(function () {
          return new Promise(function (C) {
            p.forceUpdate(), C(d);
          });
        }),
        destroy: function () {
          v(), (f = !0);
        },
      };
    if (!gS(l, c)) return p;
    p.setOptions(u).then(function (C) {
      !f && u.onFirstUpdate && u.onFirstUpdate(C);
    });
    function m() {
      d.orderedModifiers.forEach(function (C) {
        var b = C.name,
          g = C.options,
          y = g === void 0 ? {} : g,
          w = C.effect;
        if (typeof w == "function") {
          var E = w({ state: d, name: b, instance: p, options: y }),
            S = function () {};
          h.push(E || S);
        }
      });
    }
    function v() {
      h.forEach(function (C) {
        return C();
      }),
        (h = []);
    }
    return p;
  };
}
const KB = Ok({ defaultModifiers: [kk, Ak, xk, Ek, Rk, Nk, jk, Sk] }),
  qB = ["enabled", "placement", "strategy", "modifiers"];
function GB(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
const WB = {
    name: "applyStyles",
    enabled: !1,
    phase: "afterWrite",
    fn: () => {},
  },
  VB = {
    name: "ariaDescribedBy",
    enabled: !0,
    phase: "afterWrite",
    effect:
      ({ state: t }) =>
      () => {
        const { reference: e, popper: n } = t.elements;
        if ("removeAttribute" in e) {
          const r = (e.getAttribute("aria-describedby") || "")
            .split(",")
            .filter((i) => i.trim() !== n.id);
          r.length
            ? e.setAttribute("aria-describedby", r.join(","))
            : e.removeAttribute("aria-describedby");
        }
      },
    fn: ({ state: t }) => {
      var e;
      const { popper: n, reference: r } = t.elements,
        i = (e = n.getAttribute("role")) == null ? void 0 : e.toLowerCase();
      if (n.id && i === "tooltip" && "setAttribute" in r) {
        const o = r.getAttribute("aria-describedby");
        if (o && o.split(",").indexOf(n.id) !== -1) return;
        r.setAttribute("aria-describedby", o ? `${o},${n.id}` : n.id);
      }
    },
  },
  QB = [];
function Dk(t, e, n = {}) {
  let {
      enabled: r = !0,
      placement: i = "bottom",
      strategy: o = "absolute",
      modifiers: a = QB,
    } = n,
    l = GB(n, qB);
  const c = x.useRef(a),
    u = x.useRef(),
    d = x.useCallback(() => {
      var C;
      (C = u.current) == null || C.update();
    }, []),
    h = x.useCallback(() => {
      var C;
      (C = u.current) == null || C.forceUpdate();
    }, []),
    [f, p] = X5(
      x.useState({
        placement: i,
        update: d,
        forceUpdate: h,
        attributes: {},
        styles: { popper: {}, arrow: {} },
      })
    ),
    m = x.useMemo(
      () => ({
        name: "updateStateModifier",
        enabled: !0,
        phase: "write",
        requires: ["computeStyles"],
        fn: ({ state: C }) => {
          const b = {},
            g = {};
          Object.keys(C.elements).forEach((y) => {
            (b[y] = C.styles[y]), (g[y] = C.attributes[y]);
          }),
            p({
              state: C,
              styles: b,
              attributes: g,
              update: d,
              forceUpdate: h,
              placement: C.placement,
            });
        },
      }),
      [d, h, p]
    ),
    v = x.useMemo(() => (zl(c.current, a) || (c.current = a), c.current), [a]);
  return (
    x.useEffect(() => {
      !u.current ||
        !r ||
        u.current.setOptions({
          placement: i,
          strategy: o,
          modifiers: [...v, m, WB],
        });
    }, [o, i, m, r, v]),
    x.useEffect(() => {
      if (!(!r || t == null || e == null))
        return (
          (u.current = KB(
            t,
            e,
            Object.assign({}, l, {
              placement: i,
              strategy: o,
              modifiers: [...v, VB, m],
            })
          )),
          () => {
            u.current != null &&
              (u.current.destroy(),
              (u.current = void 0),
              p((C) =>
                Object.assign({}, C, { attributes: {}, styles: { popper: {} } })
              ));
          }
        );
    }, [r, t, e]),
    f
  );
}
var YB = function () {},
  XB = YB;
const kb = Hi(XB),
  yS = () => {};
function JB(t) {
  return t.button === 0;
}
function ZB(t) {
  return !!(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey);
}
const id = (t) => t && ("current" in t ? t.current : t),
  vS = { click: "mousedown", mouseup: "mousedown", pointerup: "pointerdown" };
function Lk(t, e = yS, { disabled: n, clickTrigger: r = "click" } = {}) {
  const i = x.useRef(!1),
    o = x.useRef(!1),
    a = x.useCallback(
      (u) => {
        const d = id(t);
        kb(
          !!d,
          "ClickOutside captured a close event but does not have a ref to compare it to. useClickOutside(), should be passed a ref that resolves to a DOM node"
        ),
          (i.current = !d || ZB(u) || !JB(u) || !!vc(d, u.target) || o.current),
          (o.current = !1);
      },
      [t]
    ),
    l = nt((u) => {
      const d = id(t);
      d && vc(d, u.target) && (o.current = !0);
    }),
    c = nt((u) => {
      i.current || e(u);
    });
  x.useEffect(() => {
    var u, d;
    if (n || t == null) return;
    const h = wa(id(t)),
      f = h.defaultView || window;
    let p =
        (u = f.event) != null ? u : (d = f.parent) == null ? void 0 : d.event,
      m = null;
    vS[r] && (m = Hn(h, vS[r], l, !0));
    const v = Hn(h, r, a, !0),
      C = Hn(h, r, (g) => {
        if (g === p) {
          p = void 0;
          return;
        }
        c(g);
      });
    let b = [];
    return (
      "ontouchstart" in h.documentElement &&
        (b = [].slice.call(h.body.children).map((g) => Hn(g, "mousemove", yS))),
      () => {
        m == null || m(), v(), C(), b.forEach((g) => g());
      }
    );
  }, [t, n, r, a, l, c]);
}
function eU(t) {
  const e = {};
  return Array.isArray(t)
    ? (t == null ||
        t.forEach((n) => {
          e[n.name] = n;
        }),
      e)
    : t || e;
}
function tU(t = {}) {
  return Array.isArray(t)
    ? t
    : Object.keys(t).map((e) => ((t[e].name = e), t[e]));
}
function Pk({
  enabled: t,
  enableEvents: e,
  placement: n,
  flip: r,
  offset: i,
  fixed: o,
  containerPadding: a,
  arrowElement: l,
  popperConfig: c = {},
}) {
  var u, d, h, f, p;
  const m = eU(c.modifiers);
  return Object.assign({}, c, {
    placement: n,
    enabled: t,
    strategy: o ? "fixed" : c.strategy,
    modifiers: tU(
      Object.assign({}, m, {
        eventListeners: {
          enabled: e,
          options: (u = m.eventListeners) == null ? void 0 : u.options,
        },
        preventOverflow: Object.assign({}, m.preventOverflow, {
          options: a
            ? Object.assign(
                { padding: a },
                (d = m.preventOverflow) == null ? void 0 : d.options
              )
            : (h = m.preventOverflow) == null
            ? void 0
            : h.options,
        }),
        offset: {
          options: Object.assign(
            { offset: i },
            (f = m.offset) == null ? void 0 : f.options
          ),
        },
        arrow: Object.assign({}, m.arrow, {
          enabled: !!l,
          options: Object.assign(
            {},
            (p = m.arrow) == null ? void 0 : p.options,
            { element: l }
          ),
        }),
        flip: Object.assign({ enabled: !!r }, m.flip),
      })
    ),
  });
}
const nU = ["children", "usePopper"];
function rU(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
const iU = () => {};
function _k(t = {}) {
  const e = x.useContext(yf),
    [n, r] = fh(),
    i = x.useRef(!1),
    {
      flip: o,
      offset: a,
      rootCloseEvent: l,
      fixed: c = !1,
      placement: u,
      popperConfig: d = {},
      enableEventListeners: h = !0,
      usePopper: f = !!e,
    } = t,
    p = (e == null ? void 0 : e.show) == null ? !!t.show : e.show;
  p && !i.current && (i.current = !0);
  const m = (S) => {
      e == null || e.toggle(!1, S);
    },
    { placement: v, setMenu: C, menuElement: b, toggleElement: g } = e || {},
    y = Dk(
      g,
      b,
      Pk({
        placement: u || v || "bottom-start",
        enabled: f,
        enableEvents: h ?? p,
        offset: a,
        flip: o,
        fixed: c,
        arrowElement: n,
        popperConfig: d,
      })
    ),
    w = Object.assign(
      { ref: C || iU, "aria-labelledby": g == null ? void 0 : g.id },
      y.attributes.popper,
      { style: y.styles.popper }
    ),
    E = {
      show: p,
      placement: v,
      hasShown: i.current,
      toggle: e == null ? void 0 : e.toggle,
      popper: f ? y : null,
      arrowProps: f
        ? Object.assign({ ref: r }, y.attributes.arrow, {
            style: y.styles.arrow,
          })
        : {},
    };
  return Lk(b, m, { clickTrigger: l, disabled: !p }), [w, E];
}
function Mk(t) {
  let { children: e, usePopper: n = !0 } = t,
    r = rU(t, nU);
  const [i, o] = _k(Object.assign({}, r, { usePopper: n }));
  return s.jsx(s.Fragment, { children: e(i, o) });
}
Mk.displayName = "DropdownMenu";
const gh = { prefix: String(Math.round(Math.random() * 1e10)), current: 0 },
  Fk = k.createContext(gh),
  oU = k.createContext(!1);
let aU = !!(
    typeof window < "u" &&
    window.document &&
    window.document.createElement
  ),
  kp = new WeakMap();
function sU(t = !1) {
  let e = x.useContext(Fk),
    n = x.useRef(null);
  if (n.current === null && !t) {
    var r, i;
    let o =
      (i = k.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null ||
      i === void 0 ||
      (r = i.ReactCurrentOwner) === null ||
      r === void 0
        ? void 0
        : r.current;
    if (o) {
      let a = kp.get(o);
      a == null
        ? kp.set(o, { id: e.current, state: o.memoizedState })
        : o.memoizedState !== a.state && ((e.current = a.id), kp.delete(o));
    }
    n.current = ++e.current;
  }
  return n.current;
}
function lU(t) {
  let e = x.useContext(Fk);
  e === gh &&
    !aU &&
    console.warn(
      "When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server."
    );
  let n = sU(!!t),
    r = `react-aria${e.prefix}`;
  return t || `${r}-${n}`;
}
function cU(t) {
  let e = k.useId(),
    [n] = x.useState(pU()),
    r = n ? "react-aria" : `react-aria${gh.prefix}`;
  return t || `${r}-${e}`;
}
const uU = typeof k.useId == "function" ? cU : lU;
function dU() {
  return !1;
}
function hU() {
  return !0;
}
function fU(t) {
  return () => {};
}
function pU() {
  return typeof k.useSyncExternalStore == "function"
    ? k.useSyncExternalStore(fU, dU, hU)
    : x.useContext(oU);
}
const Bk = (t) => {
    var e;
    return (
      ((e = t.getAttribute("role")) == null ? void 0 : e.toLowerCase()) ===
      "menu"
    );
  },
  bS = () => {};
function Uk() {
  const t = uU(),
    {
      show: e = !1,
      toggle: n = bS,
      setToggle: r,
      menuElement: i,
    } = x.useContext(yf) || {},
    o = x.useCallback(
      (l) => {
        n(!e, l);
      },
      [e, n]
    ),
    a = { id: t, ref: r || bS, onClick: o, "aria-expanded": !!e };
  return i && Bk(i) && (a["aria-haspopup"] = !0), [a, { show: e, toggle: n }];
}
function zk({ children: t }) {
  const [e, n] = Uk();
  return s.jsx(s.Fragment, { children: t(e, n) });
}
zk.displayName = "DropdownToggle";
const mU = ["eventKey", "disabled", "onClick", "active", "as"];
function gU(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
function Hk({ key: t, href: e, active: n, disabled: r, onClick: i }) {
  const o = x.useContext(ca),
    a = x.useContext(df),
    { activeKey: l } = a || {},
    c = mc(t, e),
    u = n == null && t != null ? mc(l) === c : n;
  return [
    {
      onClick: nt((h) => {
        r || (i == null || i(h), o && !h.isPropagationStopped() && o(c, h));
      }),
      "aria-disabled": r || void 0,
      "aria-selected": u,
      [Vs("dropdown-item")]: "",
    },
    { isActive: u },
  ];
}
const $k = x.forwardRef((t, e) => {
  let { eventKey: n, disabled: r, onClick: i, active: o, as: a = cb } = t,
    l = gU(t, mU);
  const [c] = Hk({ key: n, href: l.href, disabled: r, onClick: i, active: o });
  return s.jsx(a, Object.assign({}, l, { ref: e }, c));
});
$k.displayName = "DropdownItem";
function CS() {
  const t = sb(),
    e = x.useRef(null),
    n = x.useCallback(
      (r) => {
        (e.current = r), t();
      },
      [t]
    );
  return [e, n];
}
function zc({
  defaultShow: t,
  show: e,
  onSelect: n,
  onToggle: r,
  itemSelector: i = `* [${Vs("dropdown-item")}]`,
  focusFirstItemOnShow: o,
  placement: a = "bottom-start",
  children: l,
}) {
  const c = mf(),
    [u, d] = Y5(e, t, r),
    [h, f] = CS(),
    p = h.current,
    [m, v] = CS(),
    C = m.current,
    b = fb(u),
    g = x.useRef(null),
    y = x.useRef(!1),
    w = x.useContext(ca),
    E = x.useCallback(
      (O, _, F = _ == null ? void 0 : _.type) => {
        d(O, { originalEvent: _, source: F });
      },
      [d]
    ),
    S = nt((O, _) => {
      n == null || n(O, _),
        E(!1, _, "select"),
        _.isPropagationStopped() || w == null || w(O, _);
    }),
    T = x.useMemo(
      () => ({
        toggle: E,
        placement: a,
        show: u,
        menuElement: p,
        toggleElement: C,
        setMenu: f,
        setToggle: v,
      }),
      [E, a, u, p, C, f, v]
    );
  p && b && !u && (y.current = p.contains(p.ownerDocument.activeElement));
  const I = nt(() => {
      C && C.focus && C.focus();
    }),
    R = nt(() => {
      const O = g.current;
      let _ = o;
      if (
        (_ == null && (_ = h.current && Bk(h.current) ? "keyboard" : !1),
        _ === !1 || (_ === "keyboard" && !/^key.+$/.test(O)))
      )
        return;
      const F = wi(h.current, i)[0];
      F && F.focus && F.focus();
    });
  x.useEffect(() => {
    u ? R() : y.current && ((y.current = !1), I());
  }, [u, y, I, R]),
    x.useEffect(() => {
      g.current = null;
    });
  const A = (O, _) => {
    if (!h.current) return null;
    const F = wi(h.current, i);
    let $ = F.indexOf(O) + _;
    return ($ = Math.max(0, Math.min($, F.length))), F[$];
  };
  return (
    G2(
      x.useCallback(() => c.document, [c]),
      "keydown",
      (O) => {
        var _, F;
        const { key: $ } = O,
          Z = O.target,
          X = (_ = h.current) == null ? void 0 : _.contains(Z),
          W = (F = m.current) == null ? void 0 : F.contains(Z);
        if (
          (/input|textarea/i.test(Z.tagName) &&
            ($ === " " ||
              ($ !== "Escape" && X) ||
              ($ === "Escape" && Z.type === "search"))) ||
          (!X && !W) ||
          ($ === "Tab" && (!h.current || !u))
        )
          return;
        g.current = O.type;
        const Q = { originalEvent: O, source: O.type };
        switch ($) {
          case "ArrowUp": {
            const q = A(Z, -1);
            q && q.focus && q.focus(), O.preventDefault();
            return;
          }
          case "ArrowDown":
            if ((O.preventDefault(), !u)) d(!0, Q);
            else {
              const q = A(Z, 1);
              q && q.focus && q.focus();
            }
            return;
          case "Tab":
            mb(
              Z.ownerDocument,
              "keyup",
              (q) => {
                var ie;
                ((q.key === "Tab" && !q.target) ||
                  !((ie = h.current) != null && ie.contains(q.target))) &&
                  d(!1, Q);
              },
              { once: !0 }
            );
            break;
          case "Escape":
            $ === "Escape" && (O.preventDefault(), O.stopPropagation()),
              d(!1, Q);
            break;
        }
      }
    ),
    s.jsx(ca.Provider, {
      value: S,
      children: s.jsx(yf.Provider, { value: T, children: l }),
    })
  );
}
zc.displayName = "Dropdown";
zc.Menu = Mk;
zc.Toggle = zk;
zc.Item = $k;
const Rb = x.createContext({});
Rb.displayName = "DropdownContext";
const Kk = x.forwardRef(
  (
    { className: t, bsPrefix: e, as: n = "hr", role: r = "separator", ...i },
    o
  ) => (
    (e = ce(e, "dropdown-divider")),
    s.jsx(n, { ref: o, className: J(t, e), role: r, ...i })
  )
);
Kk.displayName = "DropdownDivider";
const qk = x.forwardRef(
  (
    { className: t, bsPrefix: e, as: n = "div", role: r = "heading", ...i },
    o
  ) => (
    (e = ce(e, "dropdown-header")),
    s.jsx(n, { ref: o, className: J(t, e), role: r, ...i })
  )
);
qk.displayName = "DropdownHeader";
const Gk = x.forwardRef(
  (
    {
      bsPrefix: t,
      className: e,
      eventKey: n,
      disabled: r = !1,
      onClick: i,
      active: o,
      as: a = pf,
      ...l
    },
    c
  ) => {
    const u = ce(t, "dropdown-item"),
      [d, h] = Hk({ key: n, href: l.href, disabled: r, onClick: i, active: o });
    return s.jsx(a, {
      ...l,
      ...d,
      ref: c,
      className: J(e, u, h.isActive && "active", r && "disabled"),
    });
  }
);
Gk.displayName = "DropdownItem";
const Wk = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "span", ...r }, i) => (
    (e = ce(e, "dropdown-item-text")),
    s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
Wk.displayName = "DropdownItemText";
const bf = x.createContext(null);
bf.displayName = "InputGroupContext";
function Vk(t, e) {
  return t;
}
const Pa = N.oneOf(["start", "end"]),
  yU = N.oneOfType([
    Pa,
    N.shape({ sm: Pa }),
    N.shape({ md: Pa }),
    N.shape({ lg: Pa }),
    N.shape({ xl: Pa }),
    N.shape({ xxl: Pa }),
    N.object,
  ]);
function Qk(t, e, n) {
  const r = n ? "top-end" : "top-start",
    i = n ? "top-start" : "top-end",
    o = n ? "bottom-end" : "bottom-start",
    a = n ? "bottom-start" : "bottom-end",
    l = n ? "right-start" : "left-start",
    c = n ? "right-end" : "left-end",
    u = n ? "left-start" : "right-start",
    d = n ? "left-end" : "right-end";
  let h = t ? a : o;
  return (
    e === "up"
      ? (h = t ? i : r)
      : e === "end"
      ? (h = t ? d : u)
      : e === "start"
      ? (h = t ? c : l)
      : e === "down-centered"
      ? (h = "bottom")
      : e === "up-centered" && (h = "top"),
    h
  );
}
const Yk = x.forwardRef(
  (
    {
      bsPrefix: t,
      className: e,
      align: n,
      rootCloseEvent: r,
      flip: i = !0,
      show: o,
      renderOnMount: a,
      as: l = "div",
      popperConfig: c,
      variant: u,
      ...d
    },
    h
  ) => {
    let f = !1;
    const p = x.useContext(Lo),
      m = ce(t, "dropdown-menu"),
      { align: v, drop: C, isRTL: b } = x.useContext(Rb);
    n = n || v;
    const g = x.useContext(bf),
      y = [];
    if (n)
      if (typeof n == "object") {
        const O = Object.keys(n);
        if (O.length) {
          const _ = O[0],
            F = n[_];
          (f = F === "start"), y.push(`${m}-${_}-${F}`);
        }
      } else n === "end" && (f = !0);
    const w = Qk(f, C, b),
      [E, { hasShown: S, popper: T, show: I, toggle: R }] = _k({
        flip: i,
        rootCloseEvent: r,
        show: o,
        usePopper: !p && y.length === 0,
        offset: [0, 2],
        popperConfig: c,
        placement: w,
      });
    if (
      ((E.ref = hi(Vk(h), E.ref)),
      gc(() => {
        I && (T == null || T.update());
      }, [I]),
      !S && !a && !g)
    )
      return null;
    typeof l != "string" &&
      ((E.show = I),
      (E.close = () => (R == null ? void 0 : R(!1))),
      (E.align = n));
    let A = d.style;
    return (
      T != null &&
        T.placement &&
        ((A = { ...d.style, ...E.style }), (d["x-placement"] = T.placement)),
      s.jsx(l, {
        ...d,
        ...E,
        style: A,
        ...((y.length || p) && { "data-bs-popper": "static" }),
        className: J(
          e,
          m,
          I && "show",
          f && `${m}-end`,
          u && `${m}-${u}`,
          ...y
        ),
      })
    );
  }
);
Yk.displayName = "DropdownMenu";
const Xk = x.forwardRef(
  (
    { bsPrefix: t, split: e, className: n, childBsPrefix: r, as: i = xe, ...o },
    a
  ) => {
    const l = ce(t, "dropdown-toggle"),
      c = x.useContext(yf);
    r !== void 0 && (o.bsPrefix = r);
    const [u] = Uk();
    return (
      (u.ref = hi(u.ref, Vk(a))),
      s.jsx(i, {
        className: J(
          n,
          l,
          e && `${l}-split`,
          (c == null ? void 0 : c.show) && "show"
        ),
        ...u,
        ...o,
      })
    );
  }
);
Xk.displayName = "DropdownToggle";
const Jk = x.forwardRef((t, e) => {
  const {
      bsPrefix: n,
      drop: r = "down",
      show: i,
      className: o,
      align: a = "start",
      onSelect: l,
      onToggle: c,
      focusFirstItemOnShow: u,
      as: d = "div",
      navbar: h,
      autoClose: f = !0,
      ...p
    } = uf(t, { show: "onToggle" }),
    m = x.useContext(bf),
    v = ce(n, "dropdown"),
    C = ff(),
    b = (T) =>
      f === !1
        ? T === "click"
        : f === "inside"
        ? T !== "rootClose"
        : f === "outside"
        ? T !== "select"
        : !0,
    g = nt((T, I) => {
      var R;
      (!((R = I.originalEvent) == null || (R = R.target) == null) &&
        R.classList.contains("dropdown-toggle") &&
        I.source === "mousedown") ||
        (I.originalEvent.currentTarget === document &&
          (I.source !== "keydown" || I.originalEvent.key === "Escape") &&
          (I.source = "rootClose"),
        b(I.source) && (c == null || c(T, I)));
    }),
    w = Qk(a === "end", r, C),
    E = x.useMemo(() => ({ align: a, drop: r, isRTL: C }), [a, r, C]),
    S = {
      down: v,
      "down-centered": `${v}-center`,
      up: "dropup",
      "up-centered": "dropup-center dropup",
      end: "dropend",
      start: "dropstart",
    };
  return s.jsx(Rb.Provider, {
    value: E,
    children: s.jsx(zc, {
      placement: w,
      show: i,
      onSelect: l,
      onToggle: g,
      focusFirstItemOnShow: u,
      itemSelector: `.${v}-item:not(.disabled):not(:disabled)`,
      children: m
        ? p.children
        : s.jsx(d, { ...p, ref: e, className: J(o, i && "show", S[r]) }),
    }),
  });
});
Jk.displayName = "Dropdown";
const Ge = Object.assign(Jk, {
    Toggle: Xk,
    Menu: Yk,
    Item: Gk,
    ItemText: Wk,
    Divider: Kk,
    Header: qk,
  }),
  vU = { type: N.string, tooltip: N.bool, as: N.elementType },
  Cf = x.forwardRef(
    (
      { as: t = "div", className: e, type: n = "valid", tooltip: r = !1, ...i },
      o
    ) =>
      s.jsx(t, {
        ...i,
        ref: o,
        className: J(e, `${n}-${r ? "tooltip" : "feedback"}`),
      })
  );
Cf.displayName = "Feedback";
Cf.propTypes = vU;
const Bi = x.createContext({}),
  Hc = x.forwardRef(
    (
      {
        id: t,
        bsPrefix: e,
        className: n,
        type: r = "checkbox",
        isValid: i = !1,
        isInvalid: o = !1,
        as: a = "input",
        ...l
      },
      c
    ) => {
      const { controlId: u } = x.useContext(Bi);
      return (
        (e = ce(e, "form-check-input")),
        s.jsx(a, {
          ...l,
          ref: c,
          type: r,
          id: t || u,
          className: J(n, e, i && "is-valid", o && "is-invalid"),
        })
      );
    }
  );
Hc.displayName = "FormCheckInput";
const yh = x.forwardRef(
  ({ bsPrefix: t, className: e, htmlFor: n, ...r }, i) => {
    const { controlId: o } = x.useContext(Bi);
    return (
      (t = ce(t, "form-check-label")),
      s.jsx("label", { ...r, ref: i, htmlFor: n || o, className: J(e, t) })
    );
  }
);
yh.displayName = "FormCheckLabel";
const Zk = x.forwardRef(
  (
    {
      id: t,
      bsPrefix: e,
      bsSwitchPrefix: n,
      inline: r = !1,
      reverse: i = !1,
      disabled: o = !1,
      isValid: a = !1,
      isInvalid: l = !1,
      feedbackTooltip: c = !1,
      feedback: u,
      feedbackType: d,
      className: h,
      style: f,
      title: p = "",
      type: m = "checkbox",
      label: v,
      children: C,
      as: b = "input",
      ...g
    },
    y
  ) => {
    (e = ce(e, "form-check")), (n = ce(n, "form-switch"));
    const { controlId: w } = x.useContext(Bi),
      E = x.useMemo(() => ({ controlId: t || w }), [w, t]),
      S = (!C && v != null && v !== !1) || V5(C, yh),
      T = s.jsx(Hc, {
        ...g,
        type: m === "switch" ? "checkbox" : m,
        ref: y,
        isValid: a,
        isInvalid: l,
        disabled: o,
        as: b,
      });
    return s.jsx(Bi.Provider, {
      value: E,
      children: s.jsx("div", {
        style: f,
        className: J(
          h,
          S && e,
          r && `${e}-inline`,
          i && `${e}-reverse`,
          m === "switch" && n
        ),
        children:
          C ||
          s.jsxs(s.Fragment, {
            children: [
              T,
              S && s.jsx(yh, { title: p, children: v }),
              u && s.jsx(Cf, { type: d, tooltip: c, children: u }),
            ],
          }),
      }),
    });
  }
);
Zk.displayName = "FormCheck";
const vh = Object.assign(Zk, { Input: Hc, Label: yh }),
  eR = x.forwardRef(
    (
      {
        bsPrefix: t,
        type: e,
        size: n,
        htmlSize: r,
        id: i,
        className: o,
        isValid: a = !1,
        isInvalid: l = !1,
        plaintext: c,
        readOnly: u,
        as: d = "input",
        ...h
      },
      f
    ) => {
      const { controlId: p } = x.useContext(Bi);
      return (
        (t = ce(t, "form-control")),
        s.jsx(d, {
          ...h,
          type: e,
          size: r,
          ref: f,
          readOnly: u,
          id: i || p,
          className: J(
            o,
            c ? `${t}-plaintext` : t,
            n && `${t}-${n}`,
            e === "color" && `${t}-color`,
            a && "is-valid",
            l && "is-invalid"
          ),
        })
      );
    }
  );
eR.displayName = "FormControl";
const bU = Object.assign(eR, { Feedback: Cf }),
  tR = x.forwardRef(
    ({ className: t, bsPrefix: e, as: n = "div", ...r }, i) => (
      (e = ce(e, "form-floating")),
      s.jsx(n, { ref: i, className: J(t, e), ...r })
    )
  );
tR.displayName = "FormFloating";
const Ab = x.forwardRef(({ controlId: t, as: e = "div", ...n }, r) => {
  const i = x.useMemo(() => ({ controlId: t }), [t]);
  return s.jsx(Bi.Provider, { value: i, children: s.jsx(e, { ...n, ref: r }) });
});
Ab.displayName = "FormGroup";
const nR = x.forwardRef(
  (
    {
      as: t = "label",
      bsPrefix: e,
      column: n = !1,
      visuallyHidden: r = !1,
      className: i,
      htmlFor: o,
      ...a
    },
    l
  ) => {
    const { controlId: c } = x.useContext(Bi);
    e = ce(e, "form-label");
    let u = "col-form-label";
    typeof n == "string" && (u = `${u} ${u}-${n}`);
    const d = J(i, e, r && "visually-hidden", n && u);
    return (
      (o = o || c),
      n
        ? s.jsx(D, { ref: l, as: "label", className: d, htmlFor: o, ...a })
        : s.jsx(t, { ref: l, className: d, htmlFor: o, ...a })
    );
  }
);
nR.displayName = "FormLabel";
const rR = x.forwardRef(({ bsPrefix: t, className: e, id: n, ...r }, i) => {
  const { controlId: o } = x.useContext(Bi);
  return (
    (t = ce(t, "form-range")),
    s.jsx("input", {
      ...r,
      type: "range",
      ref: i,
      className: J(e, t),
      id: n || o,
    })
  );
});
rR.displayName = "FormRange";
const iR = x.forwardRef(
  (
    {
      bsPrefix: t,
      size: e,
      htmlSize: n,
      className: r,
      isValid: i = !1,
      isInvalid: o = !1,
      id: a,
      ...l
    },
    c
  ) => {
    const { controlId: u } = x.useContext(Bi);
    return (
      (t = ce(t, "form-select")),
      s.jsx("select", {
        ...l,
        size: n,
        ref: c,
        className: J(
          r,
          t,
          e && `${t}-${e}`,
          i && "is-valid",
          o && "is-invalid"
        ),
        id: a || u,
      })
    );
  }
);
iR.displayName = "FormSelect";
const oR = x.forwardRef(
  ({ bsPrefix: t, className: e, as: n = "small", muted: r, ...i }, o) => (
    (t = ce(t, "form-text")),
    s.jsx(n, { ...i, ref: o, className: J(e, t, r && "text-muted") })
  )
);
oR.displayName = "FormText";
const aR = x.forwardRef((t, e) => s.jsx(vh, { ...t, ref: e, type: "switch" }));
aR.displayName = "Switch";
const CU = Object.assign(aR, { Input: vh.Input, Label: vh.Label }),
  sR = x.forwardRef(
    (
      { bsPrefix: t, className: e, children: n, controlId: r, label: i, ...o },
      a
    ) => (
      (t = ce(t, "form-floating")),
      s.jsxs(Ab, {
        ref: a,
        className: J(e, t),
        controlId: r,
        ...o,
        children: [n, s.jsx("label", { htmlFor: r, children: i })],
      })
    )
  );
sR.displayName = "FloatingLabel";
const wU = { _ref: N.any, validated: N.bool, as: N.elementType },
  jb = x.forwardRef(({ className: t, validated: e, as: n = "form", ...r }, i) =>
    s.jsx(n, { ...r, ref: i, className: J(t, e && "was-validated") })
  );
jb.displayName = "Form";
jb.propTypes = wU;
const rt = Object.assign(jb, {
    Group: Ab,
    Control: bU,
    Floating: tR,
    Check: vh,
    Switch: CU,
    Label: nR,
    Text: oR,
    Range: rR,
    Select: iR,
    FloatingLabel: sR,
  }),
  wf = x.forwardRef(
    ({ className: t, bsPrefix: e, as: n = "span", ...r }, i) => (
      (e = ce(e, "input-group-text")),
      s.jsx(n, { ref: i, className: J(t, e), ...r })
    )
  );
wf.displayName = "InputGroupText";
const SU = (t) =>
    s.jsx(wf, { children: s.jsx(Hc, { type: "checkbox", ...t }) }),
  xU = (t) => s.jsx(wf, { children: s.jsx(Hc, { type: "radio", ...t }) }),
  lR = x.forwardRef(
    (
      {
        bsPrefix: t,
        size: e,
        hasValidation: n,
        className: r,
        as: i = "div",
        ...o
      },
      a
    ) => {
      t = ce(t, "input-group");
      const l = x.useMemo(() => ({}), []);
      return s.jsx(bf.Provider, {
        value: l,
        children: s.jsx(i, {
          ref: a,
          ...o,
          className: J(r, t, e && `${t}-${e}`, n && "has-validation"),
        }),
      });
    }
  );
lR.displayName = "InputGroup";
const si = Object.assign(lR, { Text: wf, Radio: xU, Checkbox: SU });
var Du;
function wS(t) {
  if (((!Du && Du !== 0) || t) && Qs) {
    var e = document.createElement("div");
    (e.style.position = "absolute"),
      (e.style.top = "-9999px"),
      (e.style.width = "50px"),
      (e.style.height = "50px"),
      (e.style.overflow = "scroll"),
      document.body.appendChild(e),
      (Du = e.offsetWidth - e.clientWidth),
      document.body.removeChild(e);
  }
  return Du;
}
const cR = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "div", ...r }, i) => (
    (e = ce(e, "modal-body")), s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
cR.displayName = "ModalBody";
const Ob = x.forwardRef(
  (
    {
      bsPrefix: t,
      className: e,
      contentClassName: n,
      centered: r,
      size: i,
      fullscreen: o,
      children: a,
      scrollable: l,
      ...c
    },
    u
  ) => {
    t = ce(t, "modal");
    const d = `${t}-dialog`,
      h = typeof o == "string" ? `${t}-fullscreen-${o}` : `${t}-fullscreen`;
    return s.jsx("div", {
      ...c,
      ref: u,
      className: J(
        d,
        e,
        i && `${t}-${i}`,
        r && `${d}-centered`,
        l && `${d}-scrollable`,
        o && h
      ),
      children: s.jsx("div", { className: J(`${t}-content`, n), children: a }),
    });
  }
);
Ob.displayName = "ModalDialog";
const uR = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "div", ...r }, i) => (
    (e = ce(e, "modal-footer")), s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
uR.displayName = "ModalFooter";
const dR = x.forwardRef(
  (
    {
      bsPrefix: t,
      className: e,
      closeLabel: n = "Close",
      closeButton: r = !1,
      ...i
    },
    o
  ) => (
    (t = ce(t, "modal-header")),
    s.jsx(WN, {
      ref: o,
      ...i,
      className: J(e, t),
      closeLabel: n,
      closeButton: r,
    })
  )
);
dR.displayName = "ModalHeader";
const EU = Fc("h4"),
  hR = x.forwardRef(
    ({ className: t, bsPrefix: e, as: n = EU, ...r }, i) => (
      (e = ce(e, "modal-title")), s.jsx(n, { ref: i, className: J(t, e), ...r })
    )
  );
hR.displayName = "ModalTitle";
function TU(t) {
  return s.jsx(To, { ...t, timeout: null });
}
function IU(t) {
  return s.jsx(To, { ...t, timeout: null });
}
const fR = x.forwardRef(
  (
    {
      bsPrefix: t,
      className: e,
      style: n,
      dialogClassName: r,
      contentClassName: i,
      children: o,
      dialogAs: a = Ob,
      "data-bs-theme": l,
      "aria-labelledby": c,
      "aria-describedby": u,
      "aria-label": d,
      show: h = !1,
      animation: f = !0,
      backdrop: p = !0,
      keyboard: m = !0,
      onEscapeKeyDown: v,
      onShow: C,
      onHide: b,
      container: g,
      autoFocus: y = !0,
      enforceFocus: w = !0,
      restoreFocus: E = !0,
      restoreFocusOptions: S,
      onEntered: T,
      onExit: I,
      onExiting: R,
      onEnter: A,
      onEntering: O,
      onExited: _,
      backdropClassName: F,
      manager: $,
      ...Z
    },
    X
  ) => {
    const [W, z] = x.useState({}),
      [Q, q] = x.useState(!1),
      ie = x.useRef(!1),
      oe = x.useRef(!1),
      pe = x.useRef(null),
      [Ee, ee] = fh(),
      me = hi(X, ee),
      Pe = nt(b),
      it = ff();
    t = ce(t, "modal");
    const wt = x.useMemo(() => ({ onHide: Pe }), [Pe]);
    function Rt() {
      return $ || XN({ isRTL: it });
    }
    function St(Oe) {
      if (!Qs) return;
      const Ln = Rt().getScrollbarWidth() > 0,
        Sn = Oe.scrollHeight > wa(Oe).documentElement.clientHeight;
      z({
        paddingRight: Ln && !Sn ? wS() : void 0,
        paddingLeft: !Ln && Sn ? wS() : void 0,
      });
    }
    const He = nt(() => {
      Ee && St(Ee.dialog);
    });
    UN(() => {
      pg(window, "resize", He), pe.current == null || pe.current();
    });
    const Bt = () => {
        ie.current = !0;
      },
      gn = (Oe) => {
        ie.current && Ee && Oe.target === Ee.dialog && (oe.current = !0),
          (ie.current = !1);
      },
      Me = () => {
        q(!0),
          (pe.current = _N(Ee.dialog, () => {
            q(!1);
          }));
      },
      Gt = (Oe) => {
        Oe.target === Oe.currentTarget && Me();
      },
      _r = (Oe) => {
        if (p === "static") {
          Gt(Oe);
          return;
        }
        if (oe.current || Oe.target !== Oe.currentTarget) {
          oe.current = !1;
          return;
        }
        b == null || b();
      },
      tl = (Oe) => {
        m ? v == null || v(Oe) : (Oe.preventDefault(), p === "static" && Me());
      },
      Ea = (Oe, Ln) => {
        Oe && St(Oe), A == null || A(Oe, Ln);
      },
      yr = (Oe) => {
        pe.current == null || pe.current(), I == null || I(Oe);
      },
      Wi = (Oe, Ln) => {
        O == null || O(Oe, Ln), mb(window, "resize", He);
      },
      Ta = (Oe) => {
        Oe && (Oe.style.display = ""),
          _ == null || _(Oe),
          pg(window, "resize", He);
      },
      Ia = x.useCallback(
        (Oe) =>
          s.jsx("div", {
            ...Oe,
            className: J(`${t}-backdrop`, F, !f && "show"),
          }),
        [f, F, t]
      ),
      Zn = { ...n, ...W };
    Zn.display = "block";
    const Mr = (Oe) =>
      s.jsx("div", {
        role: "dialog",
        ...Oe,
        style: Zn,
        className: J(e, t, Q && `${t}-static`, !f && "show"),
        onClick: p ? _r : void 0,
        onMouseUp: gn,
        "data-bs-theme": l,
        "aria-label": d,
        "aria-labelledby": c,
        "aria-describedby": u,
        children: s.jsx(a, {
          ...Z,
          onMouseDown: Bt,
          className: r,
          contentClassName: i,
          children: o,
        }),
      });
    return s.jsx(bb.Provider, {
      value: wt,
      children: s.jsx(KN, {
        show: h,
        ref: me,
        backdrop: p,
        container: g,
        keyboard: !0,
        autoFocus: y,
        enforceFocus: w,
        restoreFocus: E,
        restoreFocusOptions: S,
        onEscapeKeyDown: tl,
        onShow: C,
        onHide: b,
        onEnter: Ea,
        onEntering: Wi,
        onEntered: T,
        onExit: yr,
        onExiting: R,
        onExited: Ta,
        manager: Rt(),
        transition: f ? TU : void 0,
        backdropTransition: f ? IU : void 0,
        renderBackdrop: Ia,
        renderDialog: Mr,
      }),
    });
  }
);
fR.displayName = "Modal";
const or = Object.assign(fR, {
    Body: cR,
    Header: dR,
    Title: hR,
    Footer: uR,
    Dialog: Ob,
    TRANSITION_DURATION: 300,
    BACKDROP_TRANSITION_DURATION: 150,
  }),
  pR = x.forwardRef(
    (
      {
        id: t,
        title: e,
        children: n,
        bsPrefix: r,
        className: i,
        rootCloseEvent: o,
        menuRole: a,
        disabled: l,
        active: c,
        renderMenuOnMount: u,
        menuVariant: d,
        ...h
      },
      f
    ) => {
      const p = ce(void 0, "nav-item");
      return s.jsxs(Ge, {
        ref: f,
        ...h,
        className: J(i, p),
        children: [
          s.jsx(Ge.Toggle, {
            id: t,
            eventKey: null,
            active: c,
            disabled: l,
            childBsPrefix: r,
            as: pb,
            children: e,
          }),
          s.jsx(Ge.Menu, {
            role: a,
            renderOnMount: u,
            rootCloseEvent: o,
            variant: d,
            children: n,
          }),
        ],
      });
    }
  );
pR.displayName = "NavDropdown";
const Rp = Object.assign(pR, {
    Item: Ge.Item,
    ItemText: Ge.ItemText,
    Divider: Ge.Divider,
    Header: Ge.Header,
  }),
  NU = () => {};
function kU(t, e, { disabled: n, clickTrigger: r } = {}) {
  const i = e || NU;
  Lk(t, i, { disabled: n, clickTrigger: r });
  const o = nt((a) => {
    HN(a) && i(a);
  });
  x.useEffect(() => {
    if (n || t == null) return;
    const a = wa(id(t));
    let l = (a.defaultView || window).event;
    const c = Hn(a, "keyup", (u) => {
      if (u === l) {
        l = void 0;
        return;
      }
      o(u);
    });
    return () => {
      c();
    };
  }, [t, n, o]);
}
const mR = x.forwardRef((t, e) => {
  const {
      flip: n,
      offset: r,
      placement: i,
      containerPadding: o,
      popperConfig: a = {},
      transition: l,
      runTransition: c,
    } = t,
    [u, d] = fh(),
    [h, f] = fh(),
    p = hi(d, e),
    m = yg(t.container),
    v = yg(t.target),
    [C, b] = x.useState(!t.show),
    g = Dk(
      v,
      u,
      Pk({
        placement: i,
        enableEvents: !!t.show,
        containerPadding: o || 5,
        flip: n,
        offset: r,
        arrowElement: h,
        popperConfig: a,
      })
    );
  t.show && C && b(!1);
  const y = (...O) => {
      b(!0), t.onExited && t.onExited(...O);
    },
    w = t.show || !C;
  if (
    (kU(u, t.onHide, {
      disabled: !t.rootClose || t.rootCloseDisabled,
      clickTrigger: t.rootCloseEvent,
    }),
    !w)
  )
    return null;
  const {
    onExit: E,
    onExiting: S,
    onEnter: T,
    onEntering: I,
    onEntered: R,
  } = t;
  let A = t.children(
    Object.assign({}, g.attributes.popper, { style: g.styles.popper, ref: p }),
    {
      popper: g,
      placement: i,
      show: !!t.show,
      arrowProps: Object.assign({}, g.attributes.arrow, {
        style: g.styles.arrow,
        ref: f,
      }),
    }
  );
  return (
    (A = vg(l, c, {
      in: !!t.show,
      appear: !0,
      mountOnEnter: !0,
      unmountOnExit: !0,
      children: A,
      onExit: E,
      onExiting: S,
      onExited: y,
      onEnter: T,
      onEntering: I,
      onEntered: R,
    })),
    m ? Ti.createPortal(A, m) : null
  );
});
mR.displayName = "Overlay";
const gR = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "div", ...r }, i) => (
    (e = ce(e, "popover-header")),
    s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
gR.displayName = "PopoverHeader";
const Db = x.forwardRef(
  ({ className: t, bsPrefix: e, as: n = "div", ...r }, i) => (
    (e = ce(e, "popover-body")), s.jsx(n, { ref: i, className: J(t, e), ...r })
  )
);
Db.displayName = "PopoverBody";
function yR(t, e) {
  let n = t;
  return (
    t === "left"
      ? (n = e ? "end" : "start")
      : t === "right" && (n = e ? "start" : "end"),
    n
  );
}
function vR(t = "absolute") {
  return {
    position: t,
    top: "0",
    left: "0",
    opacity: "0",
    pointerEvents: "none",
  };
}
const RU = x.forwardRef(
    (
      {
        bsPrefix: t,
        placement: e = "right",
        className: n,
        style: r,
        children: i,
        body: o,
        arrowProps: a,
        hasDoneInitialMeasure: l,
        popper: c,
        show: u,
        ...d
      },
      h
    ) => {
      const f = ce(t, "popover"),
        p = ff(),
        [m] = (e == null ? void 0 : e.split("-")) || [],
        v = yR(m, p);
      let C = r;
      return (
        u && !l && (C = { ...r, ...vR(c == null ? void 0 : c.strategy) }),
        s.jsxs("div", {
          ref: h,
          role: "tooltip",
          style: C,
          "x-placement": m,
          className: J(n, f, m && `bs-popover-${v}`),
          ...d,
          children: [
            s.jsx("div", { className: "popover-arrow", ...a }),
            o ? s.jsx(Db, { children: i }) : i,
          ],
        })
      );
    }
  ),
  od = Object.assign(RU, { Header: gR, Body: Db, POPPER_OFFSET: [0, 8] }),
  bR = x.forwardRef(
    (
      {
        bsPrefix: t,
        placement: e = "right",
        className: n,
        style: r,
        children: i,
        arrowProps: o,
        hasDoneInitialMeasure: a,
        popper: l,
        show: c,
        ...u
      },
      d
    ) => {
      t = ce(t, "tooltip");
      const h = ff(),
        [f] = (e == null ? void 0 : e.split("-")) || [],
        p = yR(f, h);
      let m = r;
      return (
        c && !a && (m = { ...r, ...vR(l == null ? void 0 : l.strategy) }),
        s.jsxs("div", {
          ref: d,
          style: m,
          role: "tooltip",
          "x-placement": f,
          className: J(n, t, `bs-tooltip-${p}`),
          ...u,
          children: [
            s.jsx("div", { className: "tooltip-arrow", ...o }),
            s.jsx("div", { className: `${t}-inner`, children: i }),
          ],
        })
      );
    }
  );
bR.displayName = "Tooltip";
const AU = Object.assign(bR, { TOOLTIP_OFFSET: [0, 6] });
function jU(t) {
  const e = x.useRef(null),
    n = ce(void 0, "popover"),
    r = ce(void 0, "tooltip"),
    i = x.useMemo(
      () => ({
        name: "offset",
        options: {
          offset: () => {
            if (t) return t;
            if (e.current) {
              if (bg(e.current, n)) return od.POPPER_OFFSET;
              if (bg(e.current, r)) return AU.TOOLTIP_OFFSET;
            }
            return [0, 0];
          },
        },
      }),
      [t, n, r]
    );
  return [e, [i]];
}
function OU(t, e) {
  const { ref: n } = t,
    { ref: r } = e;
  (t.ref = n.__wrapped || (n.__wrapped = (i) => n(mg(i)))),
    (e.ref = r.__wrapped || (r.__wrapped = (i) => r(mg(i))));
}
const CR = x.forwardRef(
  (
    {
      children: t,
      transition: e = To,
      popperConfig: n = {},
      rootClose: r = !1,
      placement: i = "top",
      show: o = !1,
      ...a
    },
    l
  ) => {
    const c = x.useRef({}),
      [u, d] = x.useState(null),
      [h, f] = jU(a.offset),
      p = hi(l, h),
      m = e === !0 ? To : e || void 0,
      v = nt((C) => {
        d(C), n == null || n.onFirstUpdate == null || n.onFirstUpdate(C);
      });
    return (
      gc(() => {
        u &&
          a.target &&
          (c.current.scheduleUpdate == null || c.current.scheduleUpdate());
      }, [u, a.target]),
      x.useEffect(() => {
        o || d(null);
      }, [o]),
      s.jsx(mR, {
        ...a,
        ref: p,
        popperConfig: {
          ...n,
          modifiers: f.concat(n.modifiers || []),
          onFirstUpdate: v,
        },
        transition: m,
        rootClose: r,
        placement: i,
        show: o,
        children: (C, { arrowProps: b, popper: g, show: y }) => {
          var w;
          OU(C, b);
          const E = g == null ? void 0 : g.placement,
            S = Object.assign(c.current, {
              state: g == null ? void 0 : g.state,
              scheduleUpdate: g == null ? void 0 : g.update,
              placement: E,
              outOfBoundaries:
                (g == null ||
                (w = g.state) == null ||
                (w = w.modifiersData.hide) == null
                  ? void 0
                  : w.isReferenceHidden) || !1,
              strategy: n.strategy,
            }),
            T = !!u;
          return typeof t == "function"
            ? t({
                ...C,
                placement: E,
                show: y,
                ...(!e && y && { className: "show" }),
                popper: S,
                arrowProps: b,
                hasDoneInitialMeasure: T,
              })
            : x.cloneElement(t, {
                ...C,
                placement: E,
                arrowProps: b,
                popper: S,
                hasDoneInitialMeasure: T,
                className: J(t.props.className, !e && y && "show"),
                style: { ...t.props.style, ...C.style },
              });
        },
      })
    );
  }
);
CR.displayName = "Overlay";
const M = x.forwardRef(
  ({ bsPrefix: t, className: e, as: n = "div", ...r }, i) => {
    const o = ce(t, "row"),
      a = ub(),
      l = db(),
      c = `${o}-cols`,
      u = [];
    return (
      a.forEach((d) => {
        const h = r[d];
        delete r[d];
        let f;
        h != null && typeof h == "object" ? ({ cols: f } = h) : (f = h);
        const p = d !== l ? `-${d}` : "";
        f != null && u.push(`${c}${p}-${f}`);
      }),
      s.jsx(n, { ref: i, ...r, className: J(e, o, ...u) })
    );
  }
);
M.displayName = "Row";
const Ve = x.forwardRef(
  (
    {
      bsPrefix: t,
      variant: e,
      animation: n = "border",
      size: r,
      as: i = "div",
      className: o,
      ...a
    },
    l
  ) => {
    t = ce(t, "spinner");
    const c = `${t}-${n}`;
    return s.jsx(i, {
      ref: l,
      ...a,
      className: J(o, c, r && `${c}-${r}`, e && `text-${e}`),
    });
  }
);
Ve.displayName = "Spinner";
const DU = {
    id: N.string,
    toggleLabel: N.string,
    href: N.string,
    target: N.string,
    onClick: N.func,
    title: N.node.isRequired,
    type: N.string,
    disabled: N.bool,
    align: yU,
    menuRole: N.string,
    renderMenuOnMount: N.bool,
    rootCloseEvent: N.string,
    flip: N.bool,
    bsPrefix: N.string,
    variant: N.string,
    size: N.string,
  },
  Sf = x.forwardRef(
    (
      {
        id: t,
        bsPrefix: e,
        size: n,
        variant: r,
        title: i,
        type: o = "button",
        toggleLabel: a = "Toggle dropdown",
        children: l,
        onClick: c,
        href: u,
        target: d,
        menuRole: h,
        renderMenuOnMount: f,
        rootCloseEvent: p,
        flip: m,
        ...v
      },
      C
    ) =>
      s.jsxs(Ge, {
        ref: C,
        ...v,
        as: ak,
        children: [
          s.jsx(xe, {
            size: n,
            variant: r,
            disabled: v.disabled,
            bsPrefix: e,
            href: u,
            target: d,
            onClick: c,
            type: o,
            children: i,
          }),
          s.jsx(Ge.Toggle, {
            split: !0,
            id: t,
            size: n,
            variant: r,
            disabled: v.disabled,
            childBsPrefix: e,
            children: s.jsx("span", {
              className: "visually-hidden",
              children: a,
            }),
          }),
          s.jsx(Ge.Menu, {
            role: h,
            renderOnMount: f,
            rootCloseEvent: p,
            flip: m,
            children: l,
          }),
        ],
      })
  );
Sf.propTypes = DU;
Sf.displayName = "SplitButton";
function LU(t, e = IN, n = NN) {
  const r = [];
  return (
    Object.entries(t).forEach(([i, o]) => {
      o != null &&
        (typeof o == "object"
          ? e.forEach((a) => {
              const l = o[a];
              if (l != null) {
                const c = a !== n ? `-${a}` : "";
                r.push(`${i}${c}-${l}`);
              }
            })
          : r.push(`${i}-${o}`));
    }),
    r
  );
}
const wc = x.forwardRef(
  (
    { as: t = "div", bsPrefix: e, className: n, direction: r, gap: i, ...o },
    a
  ) => {
    e = ce(e, r === "horizontal" ? "hstack" : "vstack");
    const l = ub(),
      c = db();
    return s.jsx(t, {
      ...o,
      ref: a,
      className: J(n, e, ...LU({ gap: i }, l, c)),
    });
  }
);
wc.displayName = "Stack";
const Gi = x.forwardRef(
  (
    {
      bsPrefix: t,
      className: e,
      striped: n,
      bordered: r,
      borderless: i,
      hover: o,
      size: a,
      variant: l,
      responsive: c,
      ...u
    },
    d
  ) => {
    const h = ce(t, "table"),
      f = J(
        e,
        h,
        l && `${h}-${l}`,
        a && `${h}-${a}`,
        n && `${h}-${typeof n == "string" ? `striped-${n}` : "striped"}`,
        r && `${h}-bordered`,
        i && `${h}-borderless`,
        o && `${h}-hover`
      ),
      p = s.jsx("table", { ...u, className: f, ref: d });
    if (c) {
      let m = `${h}-responsive`;
      return (
        typeof c == "string" && (m = `${m}-${c}`),
        s.jsx("div", { className: m, children: p })
      );
    }
    return p;
  }
);
var PU = ["color", "size", "title", "className"];
function Sg() {
  return (
    (Sg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Sg.apply(this, arguments)
  );
}
function _U(t, e) {
  if (t == null) return {};
  var n = MU(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function MU(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Lb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = _U(t, PU);
  return k.createElement(
    "svg",
    Sg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-arrow-clockwise", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      fillRule: "evenodd",
      d: "M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z",
    }),
    k.createElement("path", {
      d: "M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466",
    })
  );
});
Lb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Lb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var FU = ["color", "size", "title", "className"];
function xg() {
  return (
    (xg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    xg.apply(this, arguments)
  );
}
function BU(t, e) {
  if (t == null) return {};
  var n = UU(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function UU(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var fi = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = BU(t, FU);
  return k.createElement(
    "svg",
    xg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-arrow-down-up", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      fillRule: "evenodd",
      d: "M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5",
    })
  );
});
fi.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
fi.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var zU = ["color", "size", "title", "className"];
function Eg() {
  return (
    (Eg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Eg.apply(this, arguments)
  );
}
function HU(t, e) {
  if (t == null) return {};
  var n = $U(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function $U(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Pb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = HU(t, zU);
  return k.createElement(
    "svg",
    Eg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-arrow-left-right", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      fillRule: "evenodd",
      d: "M1 11.5a.5.5 0 0 0 .5.5h11.793l-3.147 3.146a.5.5 0 0 0 .708.708l4-4a.5.5 0 0 0 0-.708l-4-4a.5.5 0 0 0-.708.708L13.293 11H1.5a.5.5 0 0 0-.5.5m14-7a.5.5 0 0 1-.5.5H2.707l3.147 3.146a.5.5 0 1 1-.708.708l-4-4a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 4H14.5a.5.5 0 0 1 .5.5",
    })
  );
});
Pb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Pb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var KU = ["color", "size", "title", "className"];
function Tg() {
  return (
    (Tg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Tg.apply(this, arguments)
  );
}
function qU(t, e) {
  if (t == null) return {};
  var n = GU(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function GU(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var xf = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = qU(t, KU);
  return k.createElement(
    "svg",
    Tg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-arrow-left-square", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      fillRule: "evenodd",
      d: "M15 2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1zM0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm11.5 5.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5z",
    })
  );
});
xf.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
xf.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var WU = ["color", "size", "title", "className"];
function Ig() {
  return (
    (Ig =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Ig.apply(this, arguments)
  );
}
function VU(t, e) {
  if (t == null) return {};
  var n = QU(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function QU(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var _b = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = VU(t, WU);
  return k.createElement(
    "svg",
    Ig(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-arrow-right-short", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      fillRule: "evenodd",
      d: "M4 8a.5.5 0 0 1 .5-.5h5.793L8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708-.708L10.293 8.5H4.5A.5.5 0 0 1 4 8",
    })
  );
});
_b.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
_b.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var YU = ["color", "size", "title", "className"];
function Ng() {
  return (
    (Ng =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Ng.apply(this, arguments)
  );
}
function XU(t, e) {
  if (t == null) return {};
  var n = JU(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function JU(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Ef = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = XU(t, YU);
  return k.createElement(
    "svg",
    Ng(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-arrow-right-square", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      fillRule: "evenodd",
      d: "M15 2a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1zM0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm4.5 5.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5z",
    })
  );
});
Ef.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Ef.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var ZU = ["color", "size", "title", "className"];
function kg() {
  return (
    (kg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    kg.apply(this, arguments)
  );
}
function ez(t, e) {
  if (t == null) return {};
  var n = tz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function tz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Mb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = ez(t, ZU);
  return k.createElement(
    "svg",
    kg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-arrows", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M1.146 8.354a.5.5 0 0 1 0-.708l2-2a.5.5 0 1 1 .708.708L2.707 7.5h10.586l-1.147-1.146a.5.5 0 0 1 .708-.708l2 2a.5.5 0 0 1 0 .708l-2 2a.5.5 0 0 1-.708-.708L13.293 8.5H2.707l1.147 1.146a.5.5 0 0 1-.708.708z",
    })
  );
});
Mb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Mb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var nz = ["color", "size", "title", "className"];
function Rg() {
  return (
    (Rg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Rg.apply(this, arguments)
  );
}
function rz(t, e) {
  if (t == null) return {};
  var n = iz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function iz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Fb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = rz(t, nz);
  return k.createElement(
    "svg",
    Rg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-box-arrow-in-left", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      fillRule: "evenodd",
      d: "M10 3.5a.5.5 0 0 0-.5-.5h-8a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h8a.5.5 0 0 0 .5-.5v-2a.5.5 0 0 1 1 0v2A1.5 1.5 0 0 1 9.5 14h-8A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2h8A1.5 1.5 0 0 1 11 3.5v2a.5.5 0 0 1-1 0z",
    }),
    k.createElement("path", {
      fillRule: "evenodd",
      d: "M4.146 8.354a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H14.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708z",
    })
  );
});
Fb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Fb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var oz = ["color", "size", "title", "className"];
function Ag() {
  return (
    (Ag =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Ag.apply(this, arguments)
  );
}
function az(t, e) {
  if (t == null) return {};
  var n = sz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function sz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Bb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = az(t, oz);
  return k.createElement(
    "svg",
    Ag(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-box-arrow-in-right", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      fillRule: "evenodd",
      d: "M6 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-1 0v2A1.5 1.5 0 0 0 6.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-8A1.5 1.5 0 0 0 5 3.5v2a.5.5 0 0 0 1 0z",
    }),
    k.createElement("path", {
      fillRule: "evenodd",
      d: "M11.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H1.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708z",
    })
  );
});
Bb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Bb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var lz = ["color", "size", "title", "className"];
function jg() {
  return (
    (jg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    jg.apply(this, arguments)
  );
}
function cz(t, e) {
  if (t == null) return {};
  var n = uz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function uz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Ub = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = cz(t, lz);
  return k.createElement(
    "svg",
    jg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-caret-down-fill", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z",
    })
  );
});
Ub.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Ub.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var dz = ["color", "size", "title", "className"];
function Og() {
  return (
    (Og =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Og.apply(this, arguments)
  );
}
function hz(t, e) {
  if (t == null) return {};
  var n = fz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function fz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var zb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = hz(t, dz);
  return k.createElement(
    "svg",
    Og(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-caret-up-fill", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z",
    })
  );
});
zb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
zb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var pz = ["color", "size", "title", "className"];
function Dg() {
  return (
    (Dg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Dg.apply(this, arguments)
  );
}
function mz(t, e) {
  if (t == null) return {};
  var n = gz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function gz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Hb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = mz(t, pz);
  return k.createElement(
    "svg",
    Dg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-clipboard", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1z",
    }),
    k.createElement("path", {
      d: "M9.5 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0z",
    })
  );
});
Hb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Hb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var yz = ["color", "size", "title", "className"];
function Lg() {
  return (
    (Lg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Lg.apply(this, arguments)
  );
}
function vz(t, e) {
  if (t == null) return {};
  var n = bz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function bz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var $b = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = vz(t, yz);
  return k.createElement(
    "svg",
    Lg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-dash-circle-fill", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M4.5 7.5a.5.5 0 0 0 0 1h7a.5.5 0 0 0 0-1z",
    })
  );
});
$b.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
$b.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var Cz = ["color", "size", "title", "className"];
function Pg() {
  return (
    (Pg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Pg.apply(this, arguments)
  );
}
function wz(t, e) {
  if (t == null) return {};
  var n = Sz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function Sz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Kb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = wz(t, Cz);
  return k.createElement(
    "svg",
    Pg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-display", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M0 4s0-2 2-2h12s2 0 2 2v6s0 2-2 2h-4q0 1 .25 1.5H11a.5.5 0 0 1 0 1H5a.5.5 0 0 1 0-1h.75Q6 13 6 12H2s-2 0-2-2zm1.398-.855a.76.76 0 0 0-.254.302A1.5 1.5 0 0 0 1 4.01V10c0 .325.078.502.145.602q.105.156.302.254a1.5 1.5 0 0 0 .538.143L2.01 11H14c.325 0 .502-.078.602-.145a.76.76 0 0 0 .254-.302 1.5 1.5 0 0 0 .143-.538L15 9.99V4c0-.325-.078-.502-.145-.602a.76.76 0 0 0-.302-.254A1.5 1.5 0 0 0 13.99 3H2c-.325 0-.502.078-.602.145",
    })
  );
});
Kb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Kb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var xz = ["color", "size", "title", "className"];
function _g() {
  return (
    (_g =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    _g.apply(this, arguments)
  );
}
function Ez(t, e) {
  if (t == null) return {};
  var n = Tz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function Tz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var qb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = Ez(t, xz);
  return k.createElement(
    "svg",
    _g(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-envelope", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1zm13 2.383-4.708 2.825L15 11.105zm-.034 6.876-5.64-3.471L8 9.583l-1.326-.795-5.64 3.47A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.741M1 11.105l4.708-2.897L1 5.383z",
    })
  );
});
qb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
qb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var Iz = ["color", "size", "title", "className"];
function Mg() {
  return (
    (Mg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Mg.apply(this, arguments)
  );
}
function Nz(t, e) {
  if (t == null) return {};
  var n = kz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function kz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Gb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = Nz(t, Iz);
  return k.createElement(
    "svg",
    Mg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-exclamation-triangle", o]
          .filter(Boolean)
          .join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.15.15 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.2.2 0 0 1-.054.06.1.1 0 0 1-.066.017H1.146a.1.1 0 0 1-.066-.017.2.2 0 0 1-.054-.06.18.18 0 0 1 .002-.183L7.884 2.073a.15.15 0 0 1 .054-.057m1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767z",
    }),
    k.createElement("path", {
      d: "M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0M7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0z",
    })
  );
});
Gb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Gb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var Rz = ["color", "size", "title", "className"];
function Fg() {
  return (
    (Fg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Fg.apply(this, arguments)
  );
}
function Az(t, e) {
  if (t == null) return {};
  var n = jz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function jz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Tf = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = Az(t, Rz);
  return k.createElement(
    "svg",
    Fg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-file-pdf", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M4 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm0 1h8a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1",
    }),
    k.createElement("path", {
      d: "M4.603 12.087a.8.8 0 0 1-.438-.42c-.195-.388-.13-.776.08-1.102.198-.307.526-.568.897-.787a7.7 7.7 0 0 1 1.482-.645 20 20 0 0 0 1.062-2.227 7.3 7.3 0 0 1-.43-1.295c-.086-.4-.119-.796-.046-1.136.075-.354.274-.672.65-.823.192-.077.4-.12.602-.077a.7.7 0 0 1 .477.365c.088.164.12.356.127.538.007.187-.012.395-.047.614-.084.51-.27 1.134-.52 1.794a11 11 0 0 0 .98 1.686 5.8 5.8 0 0 1 1.334.05c.364.065.734.195.96.465.12.144.193.32.2.518.007.192-.047.382-.138.563a1.04 1.04 0 0 1-.354.416.86.86 0 0 1-.51.138c-.331-.014-.654-.196-.933-.417a5.7 5.7 0 0 1-.911-.95 11.6 11.6 0 0 0-1.997.406 11.3 11.3 0 0 1-1.021 1.51c-.29.35-.608.655-.926.787a.8.8 0 0 1-.58.029m1.379-1.901q-.25.115-.459.238c-.328.194-.541.383-.647.547-.094.145-.096.25-.04.361q.016.032.026.044l.035-.012c.137-.056.355-.235.635-.572a8 8 0 0 0 .45-.606m1.64-1.33a13 13 0 0 1 1.01-.193 12 12 0 0 1-.51-.858 21 21 0 0 1-.5 1.05zm2.446.45q.226.244.435.41c.24.19.407.253.498.256a.1.1 0 0 0 .07-.015.3.3 0 0 0 .094-.125.44.44 0 0 0 .059-.2.1.1 0 0 0-.026-.063c-.052-.062-.2-.152-.518-.209a4 4 0 0 0-.612-.053zM8.078 5.8a7 7 0 0 0 .2-.828q.046-.282.038-.465a.6.6 0 0 0-.032-.198.5.5 0 0 0-.145.04c-.087.035-.158.106-.196.283-.04.192-.03.469.046.822q.036.167.09.346z",
    })
  );
});
Tf.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Tf.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var Oz = ["color", "size", "title", "className"];
function Bg() {
  return (
    (Bg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Bg.apply(this, arguments)
  );
}
function Dz(t, e) {
  if (t == null) return {};
  var n = Lz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function Lz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Ps = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = Dz(t, Oz);
  return k.createElement(
    "svg",
    Bg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-filetype-xlsx", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      fillRule: "evenodd",
      d: "M14 4.5V11h-1V4.5h-2A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v9H2V2a2 2 0 0 1 2-2h5.5zM7.86 14.841a1.13 1.13 0 0 0 .401.823q.195.162.479.252.284.091.665.091.507 0 .858-.158.355-.158.54-.44a1.17 1.17 0 0 0 .187-.656q0-.336-.135-.56a1 1 0 0 0-.375-.357 2 2 0 0 0-.565-.21l-.621-.144a1 1 0 0 1-.405-.176.37.37 0 0 1-.143-.299q0-.234.184-.384.188-.152.513-.152.214 0 .37.068a.6.6 0 0 1 .245.181.56.56 0 0 1 .12.258h.75a1.1 1.1 0 0 0-.199-.566 1.2 1.2 0 0 0-.5-.41 1.8 1.8 0 0 0-.78-.152q-.44 0-.777.15-.336.149-.527.421-.19.273-.19.639 0 .302.123.524t.351.367q.229.143.54.213l.618.144q.31.073.462.193a.39.39 0 0 1 .153.326.5.5 0 0 1-.085.29.56.56 0 0 1-.255.193q-.168.07-.413.07-.176 0-.32-.04a.8.8 0 0 1-.249-.115.58.58 0 0 1-.255-.384zm-3.726-2.909h.893l-1.274 2.007 1.254 1.992h-.908l-.85-1.415h-.035l-.853 1.415H1.5l1.24-2.016-1.228-1.983h.931l.832 1.438h.036zm1.923 3.325h1.697v.674H5.266v-3.999h.791zm7.636-3.325h.893l-1.274 2.007 1.254 1.992h-.908l-.85-1.415h-.035l-.853 1.415h-.861l1.24-2.016-1.228-1.983h.931l.832 1.438h.036z",
    })
  );
});
Ps.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Ps.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var Pz = ["color", "size", "title", "className"];
function Ug() {
  return (
    (Ug =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Ug.apply(this, arguments)
  );
}
function _z(t, e) {
  if (t == null) return {};
  var n = Mz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function Mz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var gr = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = _z(t, Pz);
  return k.createElement(
    "svg",
    Ug(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-funnel", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M1.5 1.5A.5.5 0 0 1 2 1h12a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.128.334L10 8.692V13.5a.5.5 0 0 1-.342.474l-3 1A.5.5 0 0 1 6 14.5V8.692L1.628 3.834A.5.5 0 0 1 1.5 3.5zm1 .5v1.308l4.372 4.858A.5.5 0 0 1 7 8.5v5.306l2-.666V8.5a.5.5 0 0 1 .128-.334L13.5 3.308V2z",
    })
  );
});
gr.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
gr.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var Fz = ["color", "size", "title", "className"];
function zg() {
  return (
    (zg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    zg.apply(this, arguments)
  );
}
function Bz(t, e) {
  if (t == null) return {};
  var n = Uz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function Uz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Wb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = Bz(t, Fz);
  return k.createElement(
    "svg",
    zg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-link-45deg", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1 1 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4 4 0 0 1-.128-1.287z",
    }),
    k.createElement("path", {
      d: "M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243z",
    })
  );
});
Wb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Wb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var zz = ["color", "size", "title", "className"];
function Hg() {
  return (
    (Hg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Hg.apply(this, arguments)
  );
}
function Hz(t, e) {
  if (t == null) return {};
  var n = $z(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function $z(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Ui = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = Hz(t, zz);
  return k.createElement(
    "svg",
    Hg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-pencil-square", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z",
    }),
    k.createElement("path", {
      fillRule: "evenodd",
      d: "M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z",
    })
  );
});
Ui.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Ui.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var Kz = ["color", "size", "title", "className"];
function $g() {
  return (
    ($g =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    $g.apply(this, arguments)
  );
}
function qz(t, e) {
  if (t == null) return {};
  var n = Gz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function Gz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Vb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = qz(t, Kz);
  return k.createElement(
    "svg",
    $g(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-plus-circle-fill", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3z",
    })
  );
});
Vb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Vb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var Wz = ["color", "size", "title", "className"];
function Kg() {
  return (
    (Kg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Kg.apply(this, arguments)
  );
}
function Vz(t, e) {
  if (t == null) return {};
  var n = Qz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function Qz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Ys = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = Vz(t, Wz);
  return k.createElement(
    "svg",
    Kg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-plus-square", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z",
    }),
    k.createElement("path", {
      d: "M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4",
    })
  );
});
Ys.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Ys.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var Yz = ["color", "size", "title", "className"];
function qg() {
  return (
    (qg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    qg.apply(this, arguments)
  );
}
function Xz(t, e) {
  if (t == null) return {};
  var n = Jz(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function Jz(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Qb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = Xz(t, Yz);
  return k.createElement(
    "svg",
    qg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-printer", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", { d: "M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1" }),
    k.createElement("path", {
      d: "M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1",
    })
  );
});
Qb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Qb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var Zz = ["color", "size", "title", "className"];
function Gg() {
  return (
    (Gg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Gg.apply(this, arguments)
  );
}
function e4(t, e) {
  if (t == null) return {};
  var n = t4(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function t4(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Yb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = e4(t, Zz);
  return k.createElement(
    "svg",
    Gg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-receipt", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M1.92.506a.5.5 0 0 1 .434.14L3 1.293l.646-.647a.5.5 0 0 1 .708 0L5 1.293l.646-.647a.5.5 0 0 1 .708 0L7 1.293l.646-.647a.5.5 0 0 1 .708 0L9 1.293l.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .801.13l.5 1A.5.5 0 0 1 15 2v12a.5.5 0 0 1-.053.224l-.5 1a.5.5 0 0 1-.8.13L13 14.707l-.646.647a.5.5 0 0 1-.708 0L11 14.707l-.646.647a.5.5 0 0 1-.708 0L9 14.707l-.646.647a.5.5 0 0 1-.708 0L7 14.707l-.646.647a.5.5 0 0 1-.708 0L5 14.707l-.646.647a.5.5 0 0 1-.708 0L3 14.707l-.646.647a.5.5 0 0 1-.801-.13l-.5-1A.5.5 0 0 1 1 14V2a.5.5 0 0 1 .053-.224l.5-1a.5.5 0 0 1 .367-.27m.217 1.338L2 2.118v11.764l.137.274.51-.51a.5.5 0 0 1 .707 0l.646.647.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.509.509.137-.274V2.118l-.137-.274-.51.51a.5.5 0 0 1-.707 0L12 1.707l-.646.647a.5.5 0 0 1-.708 0L10 1.707l-.646.647a.5.5 0 0 1-.708 0L8 1.707l-.646.647a.5.5 0 0 1-.708 0L6 1.707l-.646.647a.5.5 0 0 1-.708 0L4 1.707l-.646.647a.5.5 0 0 1-.708 0z",
    }),
    k.createElement("path", {
      d: "M3 4.5a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5m8-6a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5m0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5",
    })
  );
});
Yb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Yb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var n4 = ["color", "size", "title", "className"];
function Wg() {
  return (
    (Wg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Wg.apply(this, arguments)
  );
}
function r4(t, e) {
  if (t == null) return {};
  var n = i4(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function i4(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var If = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = r4(t, n4);
  return k.createElement(
    "svg",
    Wg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-save", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9.5a1 1 0 0 0-1 1v7.293l2.646-2.647a.5.5 0 0 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 9.293V2a2 2 0 0 1 2-2H14a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2.5a.5.5 0 0 1 0 1z",
    })
  );
});
If.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
If.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var o4 = ["color", "size", "title", "className"];
function Vg() {
  return (
    (Vg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Vg.apply(this, arguments)
  );
}
function a4(t, e) {
  if (t == null) return {};
  var n = s4(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function s4(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Xb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = a4(t, o4);
  return k.createElement(
    "svg",
    Vg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-stickies", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M1.5 0A1.5 1.5 0 0 0 0 1.5V13a1 1 0 0 0 1 1V1.5a.5.5 0 0 1 .5-.5H14a1 1 0 0 0-1-1z",
    }),
    k.createElement("path", {
      d: "M3.5 2A1.5 1.5 0 0 0 2 3.5v11A1.5 1.5 0 0 0 3.5 16h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 16 9.586V3.5A1.5 1.5 0 0 0 14.5 2zM3 3.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 .5.5V9h-4.5A1.5 1.5 0 0 0 9 10.5V15H3.5a.5.5 0 0 1-.5-.5zm7 11.293V10.5a.5.5 0 0 1 .5-.5h4.293z",
    })
  );
});
Xb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Xb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var l4 = ["color", "size", "title", "className"];
function Qg() {
  return (
    (Qg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Qg.apply(this, arguments)
  );
}
function c4(t, e) {
  if (t == null) return {};
  var n = u4(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function u4(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var $c = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = c4(t, l4);
  return k.createElement(
    "svg",
    Qg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-x-circle-fill", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z",
    })
  );
});
$c.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
$c.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var d4 = ["color", "size", "title", "className"];
function Yg() {
  return (
    (Yg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Yg.apply(this, arguments)
  );
}
function h4(t, e) {
  if (t == null) return {};
  var n = f4(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function f4(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Jb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = h4(t, d4);
  return k.createElement(
    "svg",
    Yg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-x-diamond", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M7.987 16a1.53 1.53 0 0 1-1.07-.448L.45 9.082a1.53 1.53 0 0 1 0-2.165L6.917.45a1.53 1.53 0 0 1 2.166 0l6.469 6.468A1.53 1.53 0 0 1 16 8.013a1.53 1.53 0 0 1-.448 1.07l-6.47 6.469A1.53 1.53 0 0 1 7.988 16zM7.639 1.17 4.766 4.044 8 7.278l3.234-3.234L8.361 1.17a.51.51 0 0 0-.722 0M8.722 8l3.234 3.234 2.873-2.873c.2-.2.2-.523 0-.722l-2.873-2.873zM8 8.722l-3.234 3.234 2.873 2.873c.2.2.523.2.722 0l2.873-2.873zM7.278 8 4.044 4.766 1.17 7.639a.51.51 0 0 0 0 .722l2.874 2.873z",
    })
  );
});
Jb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Jb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var p4 = ["color", "size", "title", "className"];
function Xg() {
  return (
    (Xg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Xg.apply(this, arguments)
  );
}
function m4(t, e) {
  if (t == null) return {};
  var n = g4(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function g4(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Zb = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = m4(t, p4);
  return k.createElement(
    "svg",
    Xg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-x-square", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z",
    }),
    k.createElement("path", {
      d: "M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708",
    })
  );
});
Zb.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Zb.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
var y4 = ["color", "size", "title", "className"];
function Jg() {
  return (
    (Jg =
      Object.assign ||
      function (t) {
        for (var e = 1; e < arguments.length; e++) {
          var n = arguments[e];
          for (var r in n)
            Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);
        }
        return t;
      }),
    Jg.apply(this, arguments)
  );
}
function v4(t, e) {
  if (t == null) return {};
  var n = b4(t, e),
    r,
    i;
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (i = 0; i < o.length; i++)
      (r = o[i]),
        !(e.indexOf(r) >= 0) &&
          Object.prototype.propertyIsEnumerable.call(t, r) &&
          (n[r] = t[r]);
  }
  return n;
}
function b4(t, e) {
  if (t == null) return {};
  var n = {},
    r = Object.keys(t),
    i,
    o;
  for (o = 0; o < r.length; o++)
    (i = r[o]), !(e.indexOf(i) >= 0) && (n[i] = t[i]);
  return n;
}
var Xs = x.forwardRef(function (t, e) {
  var n = t.color,
    r = t.size,
    i = t.title,
    o = t.className,
    a = v4(t, y4);
  return k.createElement(
    "svg",
    Jg(
      {
        ref: e,
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16",
        width: r,
        height: r,
        fill: n,
        className: ["bi", "bi-x", o].filter(Boolean).join(" "),
      },
      a
    ),
    i ? k.createElement("title", null, i) : null,
    k.createElement("path", {
      d: "M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708",
    })
  );
});
Xs.propTypes = {
  color: N.string,
  size: N.oneOfType([N.string, N.number]),
  title: N.string,
  className: N.string,
};
Xs.defaultProps = {
  color: "currentColor",
  size: "1em",
  title: null,
  className: "",
};
const wR = "8ecaea7a-0ffa-4e4e-a472-4743d2460570",
  C4 = {
    auth: {
      clientId: `${wR}`,
      authority: "https://login.microsoftonline.com/common",
      redirectUri: "https://ccis-qa.azurewebsites.net/",
    },
    cache: { cacheLocation: "sessionStorage", storeAuthStateInCookie: !1 },
    system: {
      loggerOptions: {
        loggerCallback: (t, e, n) => {
          if (!n)
            switch (t) {
              case Xe.Error:
                console.error(e);
                return;
              case Xe.Info:
                return;
              case Xe.Verbose:
                console.debug(e);
                return;
              case Xe.Warning:
                console.warn(e);
                return;
              default:
                return;
            }
        },
      },
    },
  },
  SR = [`api://${wR}/access_as_user`],
  eC = { scopes: ["User.Read"] },
  SS = "dd/MM/yyyy",
  Kc = "yyyy-MM-dd",
  tC = "https://ccis-qa.azurewebsites.net/api",
  Jt = 10,
  Sa = "33em",
  w4 = () => {
    const { instance: t } = Gs(),
      [e, n] = k.useState(!1),
      r = async () => {
        n(!0);
        const o = t.getAllAccounts()[0];
        return (await t.acquireTokenSilent({ scopes: SR, account: o })).idToken;
      },
      i = async () => {
        const o = await r();
        n(!1),
          o
            ? t.logoutRedirect({
                postLogoutRedirectUri:
                  "https://ccis-qa.azurewebsites.net/signout-callback-oidc",
                idTokenHint: o,
              })
            : console.error("failed to retrieve id token");
      };
    return s.jsx(s.Fragment, {
      children: s.jsxs(xe, {
        size: "sm",
        variant: "outline-primary",
        onClick: i,
        children: [
          e
            ? s.jsx(Ve, {
                animation: "border",
                variant: "secondary",
                size: "sm",
              })
            : s.jsx(Fb, { className: "me-1 mb-1" }),
          s.jsx("span", { children: " Logout" }),
        ],
      }),
    });
  };
function nC({ children: t }) {
  return s.jsxs(ph, {
    expand: "lg",
    className: "bg-body-tertiary d-flex align-items-center mb-4",
    children: [
      s.jsx(ph.Brand, {
        as: Hr,
        to: "/",
        className: "d-flex align-items-center ms-2",
        children: s.jsx("img", {
          alt: "",
          src: "/RIB_Logo.png",
          className: "align-top me-3",
        }),
      }),
      t,
    ],
  });
}
function tn(t) {
  return `Minified Redux error #${t}; visit https://redux.js.org/Errors?code=${t} for the full message or use the non-minified dev environment for full errors. `;
}
var S4 = (typeof Symbol == "function" && Symbol.observable) || "@@observable",
  xS = S4,
  Ap = () => Math.random().toString(36).substring(7).split("").join("."),
  x4 = {
    INIT: `@@redux/INIT${Ap()}`,
    REPLACE: `@@redux/REPLACE${Ap()}`,
    PROBE_UNKNOWN_ACTION: () => `@@redux/PROBE_UNKNOWN_ACTION${Ap()}`,
  },
  bh = x4;
function li(t) {
  if (typeof t != "object" || t === null) return !1;
  let e = t;
  for (; Object.getPrototypeOf(e) !== null; ) e = Object.getPrototypeOf(e);
  return Object.getPrototypeOf(t) === e || Object.getPrototypeOf(t) === null;
}
function xR(t, e, n) {
  if (typeof t != "function") throw new Error(tn(2));
  if (
    (typeof e == "function" && typeof n == "function") ||
    (typeof n == "function" && typeof arguments[3] == "function")
  )
    throw new Error(tn(0));
  if (
    (typeof e == "function" && typeof n > "u" && ((n = e), (e = void 0)),
    typeof n < "u")
  ) {
    if (typeof n != "function") throw new Error(tn(1));
    return n(xR)(t, e);
  }
  let r = t,
    i = e,
    o = new Map(),
    a = o,
    l = 0,
    c = !1;
  function u() {
    a === o &&
      ((a = new Map()),
      o.forEach((C, b) => {
        a.set(b, C);
      }));
  }
  function d() {
    if (c) throw new Error(tn(3));
    return i;
  }
  function h(C) {
    if (typeof C != "function") throw new Error(tn(4));
    if (c) throw new Error(tn(5));
    let b = !0;
    u();
    const g = l++;
    return (
      a.set(g, C),
      function () {
        if (b) {
          if (c) throw new Error(tn(6));
          (b = !1), u(), a.delete(g), (o = null);
        }
      }
    );
  }
  function f(C) {
    if (!li(C)) throw new Error(tn(7));
    if (typeof C.type > "u") throw new Error(tn(8));
    if (typeof C.type != "string") throw new Error(tn(17));
    if (c) throw new Error(tn(9));
    try {
      (c = !0), (i = r(i, C));
    } finally {
      c = !1;
    }
    return (
      (o = a).forEach((g) => {
        g();
      }),
      C
    );
  }
  function p(C) {
    if (typeof C != "function") throw new Error(tn(10));
    (r = C), f({ type: bh.REPLACE });
  }
  function m() {
    const C = h;
    return {
      subscribe(b) {
        if (typeof b != "object" || b === null) throw new Error(tn(11));
        function g() {
          const w = b;
          w.next && w.next(d());
        }
        return g(), { unsubscribe: C(g) };
      },
      [xS]() {
        return this;
      },
    };
  }
  return (
    f({ type: bh.INIT }),
    { dispatch: f, subscribe: h, getState: d, replaceReducer: p, [xS]: m }
  );
}
function E4(t) {
  Object.keys(t).forEach((e) => {
    const n = t[e];
    if (typeof n(void 0, { type: bh.INIT }) > "u") throw new Error(tn(12));
    if (typeof n(void 0, { type: bh.PROBE_UNKNOWN_ACTION() }) > "u")
      throw new Error(tn(13));
  });
}
function ER(t) {
  const e = Object.keys(t),
    n = {};
  for (let o = 0; o < e.length; o++) {
    const a = e[o];
    typeof t[a] == "function" && (n[a] = t[a]);
  }
  const r = Object.keys(n);
  let i;
  try {
    E4(n);
  } catch (o) {
    i = o;
  }
  return function (a = {}, l) {
    if (i) throw i;
    let c = !1;
    const u = {};
    for (let d = 0; d < r.length; d++) {
      const h = r[d],
        f = n[h],
        p = a[h],
        m = f(p, l);
      if (typeof m > "u") throw (l && l.type, new Error(tn(14)));
      (u[h] = m), (c = c || m !== p);
    }
    return (c = c || r.length !== Object.keys(a).length), c ? u : a;
  };
}
function Ch(...t) {
  return t.length === 0
    ? (e) => e
    : t.length === 1
    ? t[0]
    : t.reduce(
        (e, n) =>
          (...r) =>
            e(n(...r))
      );
}
function T4(...t) {
  return (e) => (n, r) => {
    const i = e(n, r);
    let o = () => {
      throw new Error(tn(15));
    };
    const a = { getState: i.getState, dispatch: (c, ...u) => o(c, ...u) },
      l = t.map((c) => c(a));
    return (o = Ch(...l)(i.dispatch)), { ...i, dispatch: o };
  };
}
function TR(t) {
  return li(t) && "type" in t && typeof t.type == "string";
}
var rC = Symbol.for("immer-nothing"),
  Kl = Symbol.for("immer-draftable"),
  jn = Symbol.for("immer-state");
function rn(t, ...e) {
  throw new Error(
    `[Immer] minified error nr: ${t}. Full error at: https://bit.ly/3cXEKWf`
  );
}
var da = Object.getPrototypeOf;
function ci(t) {
  return !!t && !!t[jn];
}
function Dr(t) {
  var e;
  return t
    ? IR(t) ||
        Array.isArray(t) ||
        !!t[Kl] ||
        !!((e = t.constructor) != null && e[Kl]) ||
        qc(t) ||
        Gc(t)
    : !1;
}
var I4 = Object.prototype.constructor.toString();
function IR(t) {
  if (!t || typeof t != "object") return !1;
  const e = da(t);
  if (e === null) return !0;
  const n = Object.hasOwnProperty.call(e, "constructor") && e.constructor;
  return n === Object
    ? !0
    : typeof n == "function" && Function.toString.call(n) === I4;
}
function N4(t) {
  return ci(t) || rn(15, t), t[jn].base_;
}
function Sc(t, e) {
  ha(t) === 0
    ? Reflect.ownKeys(t).forEach((n) => {
        e(n, t[n], t);
      })
    : t.forEach((n, r) => e(r, n, t));
}
function ha(t) {
  const e = t[jn];
  return e ? e.type_ : Array.isArray(t) ? 1 : qc(t) ? 2 : Gc(t) ? 3 : 0;
}
function xc(t, e) {
  return ha(t) === 2 ? t.has(e) : Object.prototype.hasOwnProperty.call(t, e);
}
function jp(t, e) {
  return ha(t) === 2 ? t.get(e) : t[e];
}
function NR(t, e, n) {
  const r = ha(t);
  r === 2 ? t.set(e, n) : r === 3 ? t.add(n) : (t[e] = n);
}
function k4(t, e) {
  return t === e ? t !== 0 || 1 / t === 1 / e : t !== t && e !== e;
}
function qc(t) {
  return t instanceof Map;
}
function Gc(t) {
  return t instanceof Set;
}
function Fo(t) {
  return t.copy_ || t.base_;
}
function Zg(t, e) {
  if (qc(t)) return new Map(t);
  if (Gc(t)) return new Set(t);
  if (Array.isArray(t)) return Array.prototype.slice.call(t);
  if (!e && IR(t))
    return da(t) ? { ...t } : Object.assign(Object.create(null), t);
  const n = Object.getOwnPropertyDescriptors(t);
  delete n[jn];
  let r = Reflect.ownKeys(n);
  for (let i = 0; i < r.length; i++) {
    const o = r[i],
      a = n[o];
    a.writable === !1 && ((a.writable = !0), (a.configurable = !0)),
      (a.get || a.set) &&
        (n[o] = {
          configurable: !0,
          writable: !0,
          enumerable: a.enumerable,
          value: t[o],
        });
  }
  return Object.create(da(t), n);
}
function iC(t, e = !1) {
  return (
    Nf(t) ||
      ci(t) ||
      !Dr(t) ||
      (ha(t) > 1 && (t.set = t.add = t.clear = t.delete = R4),
      Object.freeze(t),
      e && Object.entries(t).forEach(([n, r]) => iC(r, !0))),
    t
  );
}
function R4() {
  rn(2);
}
function Nf(t) {
  return Object.isFrozen(t);
}
var ey = {};
function fa(t) {
  const e = ey[t];
  return e || rn(0, t), e;
}
function A4(t, e) {
  ey[t] || (ey[t] = e);
}
var Ec;
function kR() {
  return Ec;
}
function j4(t, e) {
  return {
    drafts_: [],
    parent_: t,
    immer_: e,
    canAutoFreeze_: !0,
    unfinalizedDrafts_: 0,
  };
}
function ES(t, e) {
  e &&
    (fa("Patches"),
    (t.patches_ = []),
    (t.inversePatches_ = []),
    (t.patchListener_ = e));
}
function ty(t) {
  ny(t), t.drafts_.forEach(O4), (t.drafts_ = null);
}
function ny(t) {
  t === Ec && (Ec = t.parent_);
}
function TS(t) {
  return (Ec = j4(Ec, t));
}
function O4(t) {
  const e = t[jn];
  e.type_ === 0 || e.type_ === 1 ? e.revoke_() : (e.revoked_ = !0);
}
function IS(t, e) {
  e.unfinalizedDrafts_ = e.drafts_.length;
  const n = e.drafts_[0];
  return (
    t !== void 0 && t !== n
      ? (n[jn].modified_ && (ty(e), rn(4)),
        Dr(t) && ((t = wh(e, t)), e.parent_ || Sh(e, t)),
        e.patches_ &&
          fa("Patches").generateReplacementPatches_(
            n[jn].base_,
            t,
            e.patches_,
            e.inversePatches_
          ))
      : (t = wh(e, n, [])),
    ty(e),
    e.patches_ && e.patchListener_(e.patches_, e.inversePatches_),
    t !== rC ? t : void 0
  );
}
function wh(t, e, n) {
  if (Nf(e)) return e;
  const r = e[jn];
  if (!r) return Sc(e, (i, o) => NS(t, r, e, i, o, n)), e;
  if (r.scope_ !== t) return e;
  if (!r.modified_) return Sh(t, r.base_, !0), r.base_;
  if (!r.finalized_) {
    (r.finalized_ = !0), r.scope_.unfinalizedDrafts_--;
    const i = r.copy_;
    let o = i,
      a = !1;
    r.type_ === 3 && ((o = new Set(i)), i.clear(), (a = !0)),
      Sc(o, (l, c) => NS(t, r, i, l, c, n, a)),
      Sh(t, i, !1),
      n &&
        t.patches_ &&
        fa("Patches").generatePatches_(r, n, t.patches_, t.inversePatches_);
  }
  return r.copy_;
}
function NS(t, e, n, r, i, o, a) {
  if (ci(i)) {
    const l =
        o && e && e.type_ !== 3 && !xc(e.assigned_, r) ? o.concat(r) : void 0,
      c = wh(t, i, l);
    if ((NR(n, r, c), ci(c))) t.canAutoFreeze_ = !1;
    else return;
  } else a && n.add(i);
  if (Dr(i) && !Nf(i)) {
    if (!t.immer_.autoFreeze_ && t.unfinalizedDrafts_ < 1) return;
    wh(t, i),
      (!e || !e.scope_.parent_) &&
        typeof r != "symbol" &&
        Object.prototype.propertyIsEnumerable.call(n, r) &&
        Sh(t, i);
  }
}
function Sh(t, e, n = !1) {
  !t.parent_ && t.immer_.autoFreeze_ && t.canAutoFreeze_ && iC(e, n);
}
function D4(t, e) {
  const n = Array.isArray(t),
    r = {
      type_: n ? 1 : 0,
      scope_: e ? e.scope_ : kR(),
      modified_: !1,
      finalized_: !1,
      assigned_: {},
      parent_: e,
      base_: t,
      draft_: null,
      copy_: null,
      revoke_: null,
      isManual_: !1,
    };
  let i = r,
    o = oC;
  n && ((i = [r]), (o = Tc));
  const { revoke: a, proxy: l } = Proxy.revocable(i, o);
  return (r.draft_ = l), (r.revoke_ = a), l;
}
var oC = {
    get(t, e) {
      if (e === jn) return t;
      const n = Fo(t);
      if (!xc(n, e)) return L4(t, n, e);
      const r = n[e];
      return t.finalized_ || !Dr(r)
        ? r
        : r === Op(t.base_, e)
        ? (Dp(t), (t.copy_[e] = iy(r, t)))
        : r;
    },
    has(t, e) {
      return e in Fo(t);
    },
    ownKeys(t) {
      return Reflect.ownKeys(Fo(t));
    },
    set(t, e, n) {
      const r = RR(Fo(t), e);
      if (r != null && r.set) return r.set.call(t.draft_, n), !0;
      if (!t.modified_) {
        const i = Op(Fo(t), e),
          o = i == null ? void 0 : i[jn];
        if (o && o.base_ === n)
          return (t.copy_[e] = n), (t.assigned_[e] = !1), !0;
        if (k4(n, i) && (n !== void 0 || xc(t.base_, e))) return !0;
        Dp(t), ry(t);
      }
      return (
        (t.copy_[e] === n && (n !== void 0 || e in t.copy_)) ||
          (Number.isNaN(n) && Number.isNaN(t.copy_[e])) ||
          ((t.copy_[e] = n), (t.assigned_[e] = !0)),
        !0
      );
    },
    deleteProperty(t, e) {
      return (
        Op(t.base_, e) !== void 0 || e in t.base_
          ? ((t.assigned_[e] = !1), Dp(t), ry(t))
          : delete t.assigned_[e],
        t.copy_ && delete t.copy_[e],
        !0
      );
    },
    getOwnPropertyDescriptor(t, e) {
      const n = Fo(t),
        r = Reflect.getOwnPropertyDescriptor(n, e);
      return (
        r && {
          writable: !0,
          configurable: t.type_ !== 1 || e !== "length",
          enumerable: r.enumerable,
          value: n[e],
        }
      );
    },
    defineProperty() {
      rn(11);
    },
    getPrototypeOf(t) {
      return da(t.base_);
    },
    setPrototypeOf() {
      rn(12);
    },
  },
  Tc = {};
Sc(oC, (t, e) => {
  Tc[t] = function () {
    return (arguments[0] = arguments[0][0]), e.apply(this, arguments);
  };
});
Tc.deleteProperty = function (t, e) {
  return Tc.set.call(this, t, e, void 0);
};
Tc.set = function (t, e, n) {
  return oC.set.call(this, t[0], e, n, t[0]);
};
function Op(t, e) {
  const n = t[jn];
  return (n ? Fo(n) : t)[e];
}
function L4(t, e, n) {
  var i;
  const r = RR(e, n);
  return r
    ? "value" in r
      ? r.value
      : (i = r.get) == null
      ? void 0
      : i.call(t.draft_)
    : void 0;
}
function RR(t, e) {
  if (!(e in t)) return;
  let n = da(t);
  for (; n; ) {
    const r = Object.getOwnPropertyDescriptor(n, e);
    if (r) return r;
    n = da(n);
  }
}
function ry(t) {
  t.modified_ || ((t.modified_ = !0), t.parent_ && ry(t.parent_));
}
function Dp(t) {
  t.copy_ || (t.copy_ = Zg(t.base_, t.scope_.immer_.useStrictShallowCopy_));
}
var P4 = class {
  constructor(t) {
    (this.autoFreeze_ = !0),
      (this.useStrictShallowCopy_ = !1),
      (this.produce = (e, n, r) => {
        if (typeof e == "function" && typeof n != "function") {
          const o = n;
          n = e;
          const a = this;
          return function (c = o, ...u) {
            return a.produce(c, (d) => n.call(this, d, ...u));
          };
        }
        typeof n != "function" && rn(6),
          r !== void 0 && typeof r != "function" && rn(7);
        let i;
        if (Dr(e)) {
          const o = TS(this),
            a = iy(e, void 0);
          let l = !0;
          try {
            (i = n(a)), (l = !1);
          } finally {
            l ? ty(o) : ny(o);
          }
          return ES(o, r), IS(i, o);
        } else if (!e || typeof e != "object") {
          if (
            ((i = n(e)),
            i === void 0 && (i = e),
            i === rC && (i = void 0),
            this.autoFreeze_ && iC(i, !0),
            r)
          ) {
            const o = [],
              a = [];
            fa("Patches").generateReplacementPatches_(e, i, o, a), r(o, a);
          }
          return i;
        } else rn(1, e);
      }),
      (this.produceWithPatches = (e, n) => {
        if (typeof e == "function")
          return (a, ...l) => this.produceWithPatches(a, (c) => e(c, ...l));
        let r, i;
        return [
          this.produce(e, n, (a, l) => {
            (r = a), (i = l);
          }),
          r,
          i,
        ];
      }),
      typeof (t == null ? void 0 : t.autoFreeze) == "boolean" &&
        this.setAutoFreeze(t.autoFreeze),
      typeof (t == null ? void 0 : t.useStrictShallowCopy) == "boolean" &&
        this.setUseStrictShallowCopy(t.useStrictShallowCopy);
  }
  createDraft(t) {
    Dr(t) || rn(8), ci(t) && (t = _4(t));
    const e = TS(this),
      n = iy(t, void 0);
    return (n[jn].isManual_ = !0), ny(e), n;
  }
  finishDraft(t, e) {
    const n = t && t[jn];
    (!n || !n.isManual_) && rn(9);
    const { scope_: r } = n;
    return ES(r, e), IS(void 0, r);
  }
  setAutoFreeze(t) {
    this.autoFreeze_ = t;
  }
  setUseStrictShallowCopy(t) {
    this.useStrictShallowCopy_ = t;
  }
  applyPatches(t, e) {
    let n;
    for (n = e.length - 1; n >= 0; n--) {
      const i = e[n];
      if (i.path.length === 0 && i.op === "replace") {
        t = i.value;
        break;
      }
    }
    n > -1 && (e = e.slice(n + 1));
    const r = fa("Patches").applyPatches_;
    return ci(t) ? r(t, e) : this.produce(t, (i) => r(i, e));
  }
};
function iy(t, e) {
  const n = qc(t)
    ? fa("MapSet").proxyMap_(t, e)
    : Gc(t)
    ? fa("MapSet").proxySet_(t, e)
    : D4(t, e);
  return (e ? e.scope_ : kR()).drafts_.push(n), n;
}
function _4(t) {
  return ci(t) || rn(10, t), AR(t);
}
function AR(t) {
  if (!Dr(t) || Nf(t)) return t;
  const e = t[jn];
  let n;
  if (e) {
    if (!e.modified_) return e.base_;
    (e.finalized_ = !0), (n = Zg(t, e.scope_.immer_.useStrictShallowCopy_));
  } else n = Zg(t, !0);
  return (
    Sc(n, (r, i) => {
      NR(n, r, AR(i));
    }),
    e && (e.finalized_ = !1),
    n
  );
}
function M4() {
  const e = "replace",
    n = "add",
    r = "remove";
  function i(f, p, m, v) {
    switch (f.type_) {
      case 0:
      case 2:
        return a(f, p, m, v);
      case 1:
        return o(f, p, m, v);
      case 3:
        return l(f, p, m, v);
    }
  }
  function o(f, p, m, v) {
    let { base_: C, assigned_: b } = f,
      g = f.copy_;
    g.length < C.length && (([C, g] = [g, C]), ([m, v] = [v, m]));
    for (let y = 0; y < C.length; y++)
      if (b[y] && g[y] !== C[y]) {
        const w = p.concat([y]);
        m.push({ op: e, path: w, value: h(g[y]) }),
          v.push({ op: e, path: w, value: h(C[y]) });
      }
    for (let y = C.length; y < g.length; y++) {
      const w = p.concat([y]);
      m.push({ op: n, path: w, value: h(g[y]) });
    }
    for (let y = g.length - 1; C.length <= y; --y) {
      const w = p.concat([y]);
      v.push({ op: r, path: w });
    }
  }
  function a(f, p, m, v) {
    const { base_: C, copy_: b } = f;
    Sc(f.assigned_, (g, y) => {
      const w = jp(C, g),
        E = jp(b, g),
        S = y ? (xc(C, g) ? e : n) : r;
      if (w === E && S === e) return;
      const T = p.concat(g);
      m.push(S === r ? { op: S, path: T } : { op: S, path: T, value: E }),
        v.push(
          S === n
            ? { op: r, path: T }
            : S === r
            ? { op: n, path: T, value: h(w) }
            : { op: e, path: T, value: h(w) }
        );
    });
  }
  function l(f, p, m, v) {
    let { base_: C, copy_: b } = f,
      g = 0;
    C.forEach((y) => {
      if (!b.has(y)) {
        const w = p.concat([g]);
        m.push({ op: r, path: w, value: y }),
          v.unshift({ op: n, path: w, value: y });
      }
      g++;
    }),
      (g = 0),
      b.forEach((y) => {
        if (!C.has(y)) {
          const w = p.concat([g]);
          m.push({ op: n, path: w, value: y }),
            v.unshift({ op: r, path: w, value: y });
        }
        g++;
      });
  }
  function c(f, p, m, v) {
    m.push({ op: e, path: [], value: p === rC ? void 0 : p }),
      v.push({ op: e, path: [], value: f });
  }
  function u(f, p) {
    return (
      p.forEach((m) => {
        const { path: v, op: C } = m;
        let b = f;
        for (let E = 0; E < v.length - 1; E++) {
          const S = ha(b);
          let T = v[E];
          typeof T != "string" && typeof T != "number" && (T = "" + T),
            (S === 0 || S === 1) &&
              (T === "__proto__" || T === "constructor") &&
              rn(19),
            typeof b == "function" && T === "prototype" && rn(19),
            (b = jp(b, T)),
            typeof b != "object" && rn(18, v.join("/"));
        }
        const g = ha(b),
          y = d(m.value),
          w = v[v.length - 1];
        switch (C) {
          case e:
            switch (g) {
              case 2:
                return b.set(w, y);
              case 3:
                rn(16);
              default:
                return (b[w] = y);
            }
          case n:
            switch (g) {
              case 1:
                return w === "-" ? b.push(y) : b.splice(w, 0, y);
              case 2:
                return b.set(w, y);
              case 3:
                return b.add(y);
              default:
                return (b[w] = y);
            }
          case r:
            switch (g) {
              case 1:
                return b.splice(w, 1);
              case 2:
                return b.delete(w);
              case 3:
                return b.delete(m.value);
              default:
                return delete b[w];
            }
          default:
            rn(17, C);
        }
      }),
      f
    );
  }
  function d(f) {
    if (!Dr(f)) return f;
    if (Array.isArray(f)) return f.map(d);
    if (qc(f))
      return new Map(Array.from(f.entries()).map(([m, v]) => [m, d(v)]));
    if (Gc(f)) return new Set(Array.from(f).map(d));
    const p = Object.create(da(f));
    for (const m in f) p[m] = d(f[m]);
    return xc(f, Kl) && (p[Kl] = f[Kl]), p;
  }
  function h(f) {
    return ci(f) ? d(f) : f;
  }
  A4("Patches", {
    applyPatches_: u,
    generatePatches_: i,
    generateReplacementPatches_: c,
  });
}
var Qn = new P4(),
  Wc = Qn.produce,
  jR = Qn.produceWithPatches.bind(Qn);
Qn.setAutoFreeze.bind(Qn);
Qn.setUseStrictShallowCopy.bind(Qn);
var kS = Qn.applyPatches.bind(Qn);
Qn.createDraft.bind(Qn);
Qn.finishDraft.bind(Qn);
function F4(t, e = `expected a function, instead received ${typeof t}`) {
  if (typeof t != "function") throw new TypeError(e);
}
function B4(t, e = `expected an object, instead received ${typeof t}`) {
  if (typeof t != "object") throw new TypeError(e);
}
function U4(
  t,
  e = "expected all items to be functions, instead received the following types: "
) {
  if (!t.every((n) => typeof n == "function")) {
    const n = t
      .map((r) =>
        typeof r == "function" ? `function ${r.name || "unnamed"}()` : typeof r
      )
      .join(", ");
    throw new TypeError(`${e}[${n}]`);
  }
}
var RS = (t) => (Array.isArray(t) ? t : [t]);
function z4(t) {
  const e = Array.isArray(t[0]) ? t[0] : t;
  return (
    U4(
      e,
      "createSelector expects all input-selectors to be functions, but received the following types: "
    ),
    e
  );
}
function H4(t, e) {
  const n = [],
    { length: r } = t;
  for (let i = 0; i < r; i++) n.push(t[i].apply(null, e));
  return n;
}
var $4 = class {
    constructor(t) {
      this.value = t;
    }
    deref() {
      return this.value;
    }
  },
  K4 = typeof WeakRef < "u" ? WeakRef : $4,
  q4 = 0,
  AS = 1;
function Lu() {
  return { s: q4, v: void 0, o: null, p: null };
}
function xh(t, e = {}) {
  let n = Lu();
  const { resultEqualityCheck: r } = e;
  let i,
    o = 0;
  function a() {
    var h;
    let l = n;
    const { length: c } = arguments;
    for (let f = 0, p = c; f < p; f++) {
      const m = arguments[f];
      if (typeof m == "function" || (typeof m == "object" && m !== null)) {
        let v = l.o;
        v === null && (l.o = v = new WeakMap());
        const C = v.get(m);
        C === void 0 ? ((l = Lu()), v.set(m, l)) : (l = C);
      } else {
        let v = l.p;
        v === null && (l.p = v = new Map());
        const C = v.get(m);
        C === void 0 ? ((l = Lu()), v.set(m, l)) : (l = C);
      }
    }
    const u = l;
    let d;
    if (
      (l.s === AS ? (d = l.v) : ((d = t.apply(null, arguments)), o++),
      (u.s = AS),
      r)
    ) {
      const f =
        ((h = i == null ? void 0 : i.deref) == null ? void 0 : h.call(i)) ?? i;
      f != null && r(f, d) && ((d = f), o !== 0 && o--),
        (i =
          (typeof d == "object" && d !== null) || typeof d == "function"
            ? new K4(d)
            : d);
    }
    return (u.v = d), d;
  }
  return (
    (a.clearCache = () => {
      (n = Lu()), a.resetResultsCount();
    }),
    (a.resultsCount = () => o),
    (a.resetResultsCount = () => {
      o = 0;
    }),
    a
  );
}
function G4(t, ...e) {
  const n = typeof t == "function" ? { memoize: t, memoizeOptions: e } : t,
    r = (...i) => {
      let o = 0,
        a = 0,
        l,
        c = {},
        u = i.pop();
      typeof u == "object" && ((c = u), (u = i.pop())),
        F4(
          u,
          `createSelector expects an output function after the inputs, but received: [${typeof u}]`
        );
      const d = { ...n, ...c },
        {
          memoize: h,
          memoizeOptions: f = [],
          argsMemoize: p = xh,
          argsMemoizeOptions: m = [],
          devModeChecks: v = {},
        } = d,
        C = RS(f),
        b = RS(m),
        g = z4(i),
        y = h(function () {
          return o++, u.apply(null, arguments);
        }, ...C),
        w = p(function () {
          a++;
          const S = H4(g, arguments);
          return (l = y.apply(null, S)), l;
        }, ...b);
      return Object.assign(w, {
        resultFunc: u,
        memoizedResultFunc: y,
        dependencies: g,
        dependencyRecomputations: () => a,
        resetDependencyRecomputations: () => {
          a = 0;
        },
        lastResult: () => l,
        recomputations: () => o,
        resetRecomputations: () => {
          o = 0;
        },
        memoize: h,
        argsMemoize: p,
      });
    };
  return Object.assign(r, { withTypes: () => r }), r;
}
var aC = G4(xh),
  W4 = Object.assign(
    (t, e = aC) => {
      B4(
        t,
        `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof t}`
      );
      const n = Object.keys(t),
        r = n.map((o) => t[o]);
      return e(r, (...o) => o.reduce((a, l, c) => ((a[n[c]] = l), a), {}));
    },
    { withTypes: () => W4 }
  );
function OR(t) {
  return ({ dispatch: n, getState: r }) =>
    (i) =>
    (o) =>
      typeof o == "function" ? o(n, r, t) : i(o);
}
var V4 = OR(),
  Q4 = OR,
  Y4 =
    typeof window < "u" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__
      : function () {
          if (arguments.length !== 0)
            return typeof arguments[0] == "object"
              ? Ch
              : Ch.apply(null, arguments);
        },
  X4 = (t) => t && typeof t.match == "function";
function Rr(t, e) {
  function n(...r) {
    if (e) {
      let i = e(...r);
      if (!i) throw new Error(qn(0));
      return {
        type: t,
        payload: i.payload,
        ...("meta" in i && { meta: i.meta }),
        ...("error" in i && { error: i.error }),
      };
    }
    return { type: t, payload: r[0] };
  }
  return (
    (n.toString = () => `${t}`),
    (n.type = t),
    (n.match = (r) => TR(r) && r.type === t),
    n
  );
}
var DR = class Nl extends Array {
  constructor(...e) {
    super(...e), Object.setPrototypeOf(this, Nl.prototype);
  }
  static get [Symbol.species]() {
    return Nl;
  }
  concat(...e) {
    return super.concat.apply(this, e);
  }
  prepend(...e) {
    return e.length === 1 && Array.isArray(e[0])
      ? new Nl(...e[0].concat(this))
      : new Nl(...e.concat(this));
  }
};
function jS(t) {
  return Dr(t) ? Wc(t, () => {}) : t;
}
function OS(t, e, n) {
  if (t.has(e)) {
    let i = t.get(e);
    return n.update && ((i = n.update(i, e, t)), t.set(e, i)), i;
  }
  if (!n.insert) throw new Error(qn(10));
  const r = n.insert(e, t);
  return t.set(e, r), r;
}
function J4(t) {
  return typeof t == "boolean";
}
var Z4 = () =>
    function (e) {
      const {
        thunk: n = !0,
        immutableCheck: r = !0,
        serializableCheck: i = !0,
        actionCreatorCheck: o = !0,
      } = e ?? {};
      let a = new DR();
      return n && (J4(n) ? a.push(V4) : a.push(Q4(n.extraArgument))), a;
    },
  as = "RTK_autoBatch",
  gl = () => (t) => ({ payload: t, meta: { [as]: !0 } }),
  LR = (t) => (e) => {
    setTimeout(e, t);
  },
  e3 =
    typeof window < "u" && window.requestAnimationFrame
      ? window.requestAnimationFrame
      : LR(10),
  t3 =
    (t = { type: "raf" }) =>
    (e) =>
    (...n) => {
      const r = e(...n);
      let i = !0,
        o = !1,
        a = !1;
      const l = new Set(),
        c =
          t.type === "tick"
            ? queueMicrotask
            : t.type === "raf"
            ? e3
            : t.type === "callback"
            ? t.queueNotification
            : LR(t.timeout),
        u = () => {
          (a = !1), o && ((o = !1), l.forEach((d) => d()));
        };
      return Object.assign({}, r, {
        subscribe(d) {
          const h = () => i && d(),
            f = r.subscribe(h);
          return (
            l.add(d),
            () => {
              f(), l.delete(d);
            }
          );
        },
        dispatch(d) {
          var h;
          try {
            return (
              (i = !((h = d == null ? void 0 : d.meta) != null && h[as])),
              (o = !i),
              o && (a || ((a = !0), c(u))),
              r.dispatch(d)
            );
          } finally {
            i = !0;
          }
        },
      });
    },
  n3 = (t) =>
    function (n) {
      const { autoBatch: r = !0 } = n ?? {};
      let i = new DR(t);
      return r && i.push(t3(typeof r == "object" ? r : void 0)), i;
    };
function r3(t) {
  const e = Z4(),
    {
      reducer: n = void 0,
      middleware: r,
      devTools: i = !0,
      preloadedState: o = void 0,
      enhancers: a = void 0,
    } = t || {};
  let l;
  if (typeof n == "function") l = n;
  else if (li(n)) l = ER(n);
  else throw new Error(qn(1));
  let c;
  typeof r == "function" ? (c = r(e)) : (c = e());
  let u = Ch;
  i && (u = Y4({ trace: !1, ...(typeof i == "object" && i) }));
  const d = T4(...c),
    h = n3(d);
  let f = typeof a == "function" ? a(h) : h();
  const p = u(...f);
  return xR(l, o, p);
}
function PR(t) {
  const e = {},
    n = [];
  let r;
  const i = {
    addCase(o, a) {
      const l = typeof o == "string" ? o : o.type;
      if (!l) throw new Error(qn(28));
      if (l in e) throw new Error(qn(29));
      return (e[l] = a), i;
    },
    addMatcher(o, a) {
      return n.push({ matcher: o, reducer: a }), i;
    },
    addDefaultCase(o) {
      return (r = o), i;
    },
  };
  return t(i), [e, n, r];
}
function i3(t) {
  return typeof t == "function";
}
function o3(t, e) {
  let [n, r, i] = PR(e),
    o;
  if (i3(t)) o = () => jS(t());
  else {
    const l = jS(t);
    o = () => l;
  }
  function a(l = o(), c) {
    let u = [
      n[c.type],
      ...r.filter(({ matcher: d }) => d(c)).map(({ reducer: d }) => d),
    ];
    return (
      u.filter((d) => !!d).length === 0 && (u = [i]),
      u.reduce((d, h) => {
        if (h)
          if (ci(d)) {
            const p = h(d, c);
            return p === void 0 ? d : p;
          } else {
            if (Dr(d)) return Wc(d, (f) => h(f, c));
            {
              const f = h(d, c);
              if (f === void 0) {
                if (d === null) return d;
                throw new Error(qn(9));
              }
              return f;
            }
          }
        return d;
      }, l)
    );
  }
  return (a.getInitialState = o), a;
}
var _R = (t, e) => (X4(t) ? t.match(e) : t(e));
function zi(...t) {
  return (e) => t.some((n) => _R(n, e));
}
function ql(...t) {
  return (e) => t.every((n) => _R(n, e));
}
function kf(t, e) {
  if (!t || !t.meta) return !1;
  const n = typeof t.meta.requestId == "string",
    r = e.indexOf(t.meta.requestStatus) > -1;
  return n && r;
}
function Vc(t) {
  return (
    typeof t[0] == "function" &&
    "pending" in t[0] &&
    "fulfilled" in t[0] &&
    "rejected" in t[0]
  );
}
function sC(...t) {
  return t.length === 0
    ? (e) => kf(e, ["pending"])
    : Vc(t)
    ? zi(...t.map((e) => e.pending))
    : sC()(t[0]);
}
function _s(...t) {
  return t.length === 0
    ? (e) => kf(e, ["rejected"])
    : Vc(t)
    ? zi(...t.map((e) => e.rejected))
    : _s()(t[0]);
}
function Rf(...t) {
  const e = (n) => n && n.meta && n.meta.rejectedWithValue;
  return t.length === 0
    ? ql(_s(...t), e)
    : Vc(t)
    ? ql(_s(...t), e)
    : Rf()(t[0]);
}
function Io(...t) {
  return t.length === 0
    ? (e) => kf(e, ["fulfilled"])
    : Vc(t)
    ? zi(...t.map((e) => e.fulfilled))
    : Io()(t[0]);
}
function oy(...t) {
  return t.length === 0
    ? (e) => kf(e, ["pending", "fulfilled", "rejected"])
    : Vc(t)
    ? zi(...t.flatMap((e) => [e.pending, e.rejected, e.fulfilled]))
    : oy()(t[0]);
}
var a3 = "ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW",
  MR = (t = 21) => {
    let e = "",
      n = t;
    for (; n--; ) e += a3[(Math.random() * 64) | 0];
    return e;
  },
  s3 = ["name", "message", "stack", "code"],
  Lp = class {
    constructor(t, e) {
      ae(this, "_type");
      (this.payload = t), (this.meta = e);
    }
  },
  DS = class {
    constructor(t, e) {
      ae(this, "_type");
      (this.payload = t), (this.meta = e);
    }
  },
  l3 = (t) => {
    if (typeof t == "object" && t !== null) {
      const e = {};
      for (const n of s3) typeof t[n] == "string" && (e[n] = t[n]);
      return e;
    }
    return { message: String(t) };
  },
  LS = (() => {
    function t(e, n, r) {
      const i = Rr(e + "/fulfilled", (c, u, d, h) => ({
          payload: c,
          meta: {
            ...(h || {}),
            arg: d,
            requestId: u,
            requestStatus: "fulfilled",
          },
        })),
        o = Rr(e + "/pending", (c, u, d) => ({
          payload: void 0,
          meta: {
            ...(d || {}),
            arg: u,
            requestId: c,
            requestStatus: "pending",
          },
        })),
        a = Rr(e + "/rejected", (c, u, d, h, f) => ({
          payload: h,
          error: ((r && r.serializeError) || l3)(c || "Rejected"),
          meta: {
            ...(f || {}),
            arg: d,
            requestId: u,
            rejectedWithValue: !!h,
            requestStatus: "rejected",
            aborted: (c == null ? void 0 : c.name) === "AbortError",
            condition: (c == null ? void 0 : c.name) === "ConditionError",
          },
        }));
      function l(c) {
        return (u, d, h) => {
          const f = r != null && r.idGenerator ? r.idGenerator(c) : MR(),
            p = new AbortController();
          let m, v;
          function C(g) {
            (v = g), p.abort();
          }
          const b = (async function () {
            var w, E;
            let g;
            try {
              let S =
                (w = r == null ? void 0 : r.condition) == null
                  ? void 0
                  : w.call(r, c, { getState: d, extra: h });
              if ((u3(S) && (S = await S), S === !1 || p.signal.aborted))
                throw {
                  name: "ConditionError",
                  message: "Aborted due to condition callback returning false.",
                };
              const T = new Promise((I, R) => {
                (m = () => {
                  R({ name: "AbortError", message: v || "Aborted" });
                }),
                  p.signal.addEventListener("abort", m);
              });
              u(
                o(
                  f,
                  c,
                  (E = r == null ? void 0 : r.getPendingMeta) == null
                    ? void 0
                    : E.call(
                        r,
                        { requestId: f, arg: c },
                        { getState: d, extra: h }
                      )
                )
              ),
                (g = await Promise.race([
                  T,
                  Promise.resolve(
                    n(c, {
                      dispatch: u,
                      getState: d,
                      extra: h,
                      requestId: f,
                      signal: p.signal,
                      abort: C,
                      rejectWithValue: (I, R) => new Lp(I, R),
                      fulfillWithValue: (I, R) => new DS(I, R),
                    })
                  ).then((I) => {
                    if (I instanceof Lp) throw I;
                    return I instanceof DS
                      ? i(I.payload, f, c, I.meta)
                      : i(I, f, c);
                  }),
                ]));
            } catch (S) {
              g =
                S instanceof Lp ? a(null, f, c, S.payload, S.meta) : a(S, f, c);
            } finally {
              m && p.signal.removeEventListener("abort", m);
            }
            return (
              (r &&
                !r.dispatchConditionRejection &&
                a.match(g) &&
                g.meta.condition) ||
                u(g),
              g
            );
          })();
          return Object.assign(b, {
            abort: C,
            requestId: f,
            arg: c,
            unwrap() {
              return b.then(c3);
            },
          });
        };
      }
      return Object.assign(l, {
        pending: o,
        rejected: a,
        fulfilled: i,
        settled: zi(a, i),
        typePrefix: e,
      });
    }
    return (t.withTypes = () => t), t;
  })();
function c3(t) {
  if (t.meta && t.meta.rejectedWithValue) throw t.payload;
  if (t.error) throw t.error;
  return t.payload;
}
function u3(t) {
  return t !== null && typeof t == "object" && typeof t.then == "function";
}
var d3 = Symbol.for("rtk-slice-createasyncthunk");
function h3(t, e) {
  return `${t}/${e}`;
}
function f3({ creators: t } = {}) {
  var n;
  const e = (n = t == null ? void 0 : t.asyncThunk) == null ? void 0 : n[d3];
  return function (i) {
    const { name: o, reducerPath: a = o } = i;
    if (!o) throw new Error(qn(11));
    typeof process < "u";
    const l =
        (typeof i.reducers == "function" ? i.reducers(m3()) : i.reducers) || {},
      c = Object.keys(l),
      u = {
        sliceCaseReducersByName: {},
        sliceCaseReducersByType: {},
        actionCreators: {},
        sliceMatchers: [],
      },
      d = {
        addCase(y, w) {
          const E = typeof y == "string" ? y : y.type;
          if (!E) throw new Error(qn(12));
          if (E in u.sliceCaseReducersByType) throw new Error(qn(13));
          return (u.sliceCaseReducersByType[E] = w), d;
        },
        addMatcher(y, w) {
          return u.sliceMatchers.push({ matcher: y, reducer: w }), d;
        },
        exposeAction(y, w) {
          return (u.actionCreators[y] = w), d;
        },
        exposeCaseReducer(y, w) {
          return (u.sliceCaseReducersByName[y] = w), d;
        },
      };
    c.forEach((y) => {
      const w = l[y],
        E = {
          reducerName: y,
          type: h3(o, y),
          createNotation: typeof i.reducers == "function",
        };
      y3(w) ? b3(E, w, d, e) : g3(E, w, d);
    });
    function h() {
      const [y = {}, w = [], E = void 0] =
          typeof i.extraReducers == "function"
            ? PR(i.extraReducers)
            : [i.extraReducers],
        S = { ...y, ...u.sliceCaseReducersByType };
      return o3(i.initialState, (T) => {
        for (let I in S) T.addCase(I, S[I]);
        for (let I of u.sliceMatchers) T.addMatcher(I.matcher, I.reducer);
        for (let I of w) T.addMatcher(I.matcher, I.reducer);
        E && T.addDefaultCase(E);
      });
    }
    const f = (y) => y,
      p = new Map();
    let m;
    function v(y, w) {
      return m || (m = h()), m(y, w);
    }
    function C() {
      return m || (m = h()), m.getInitialState();
    }
    function b(y, w = !1) {
      function E(T) {
        let I = T[y];
        return typeof I > "u" && w && (I = C()), I;
      }
      function S(T = f) {
        const I = OS(p, w, { insert: () => new WeakMap() });
        return OS(I, T, {
          insert: () => {
            const R = {};
            for (const [A, O] of Object.entries(i.selectors ?? {}))
              R[A] = p3(O, T, C, w);
            return R;
          },
        });
      }
      return {
        reducerPath: y,
        getSelectors: S,
        get selectors() {
          return S(E);
        },
        selectSlice: E,
      };
    }
    const g = {
      name: o,
      reducer: v,
      actions: u.actionCreators,
      caseReducers: u.sliceCaseReducersByName,
      getInitialState: C,
      ...b(a),
      injectInto(y, { reducerPath: w, ...E } = {}) {
        const S = w ?? a;
        return (
          y.inject({ reducerPath: S, reducer: v }, E), { ...g, ...b(S, !0) }
        );
      },
    };
    return g;
  };
}
function p3(t, e, n, r) {
  function i(o, ...a) {
    let l = e(o);
    return typeof l > "u" && r && (l = n()), t(l, ...a);
  }
  return (i.unwrapped = t), i;
}
var st = f3();
function m3() {
  function t(e, n) {
    return { _reducerDefinitionType: "asyncThunk", payloadCreator: e, ...n };
  }
  return (
    (t.withTypes = () => t),
    {
      reducer(e) {
        return Object.assign(
          {
            [e.name](...n) {
              return e(...n);
            },
          }[e.name],
          { _reducerDefinitionType: "reducer" }
        );
      },
      preparedReducer(e, n) {
        return {
          _reducerDefinitionType: "reducerWithPrepare",
          prepare: e,
          reducer: n,
        };
      },
      asyncThunk: t,
    }
  );
}
function g3({ type: t, reducerName: e, createNotation: n }, r, i) {
  let o, a;
  if ("reducer" in r) {
    if (n && !v3(r)) throw new Error(qn(17));
    (o = r.reducer), (a = r.prepare);
  } else o = r;
  i.addCase(t, o)
    .exposeCaseReducer(e, o)
    .exposeAction(e, a ? Rr(t, a) : Rr(t));
}
function y3(t) {
  return t._reducerDefinitionType === "asyncThunk";
}
function v3(t) {
  return t._reducerDefinitionType === "reducerWithPrepare";
}
function b3({ type: t, reducerName: e }, n, r, i) {
  if (!i) throw new Error(qn(18));
  const {
      payloadCreator: o,
      fulfilled: a,
      pending: l,
      rejected: c,
      settled: u,
      options: d,
    } = n,
    h = i(t, o, d);
  r.exposeAction(e, h),
    a && r.addCase(h.fulfilled, a),
    l && r.addCase(h.pending, l),
    c && r.addCase(h.rejected, c),
    u && r.addMatcher(h.settled, u),
    r.exposeCaseReducer(e, {
      fulfilled: a || Pu,
      pending: l || Pu,
      rejected: c || Pu,
      settled: u || Pu,
    });
}
function Pu() {}
function qn(t) {
  return `Minified Redux Toolkit error #${t}; visit https://redux-toolkit.js.org/Errors?code=${t} for the full message or use the non-minified dev environment for full errors. `;
}
var FR = ((t) => (
  (t.uninitialized = "uninitialized"),
  (t.pending = "pending"),
  (t.fulfilled = "fulfilled"),
  (t.rejected = "rejected"),
  t
))(FR || {});
function C3(t) {
  return {
    status: t,
    isUninitialized: t === "uninitialized",
    isLoading: t === "pending",
    isSuccess: t === "fulfilled",
    isError: t === "rejected",
  };
}
var PS = li;
function BR(t, e) {
  if (t === e || !((PS(t) && PS(e)) || (Array.isArray(t) && Array.isArray(e))))
    return e;
  const n = Object.keys(e),
    r = Object.keys(t);
  let i = n.length === r.length;
  const o = Array.isArray(e) ? [] : {};
  for (const a of n) (o[a] = BR(t[a], e[a])), i && (i = t[a] === o[a]);
  return i ? t : o;
}
function gs(t) {
  let e = 0;
  for (const n in t) e++;
  return e;
}
var _S = (t) => [].concat(...t);
function w3(t) {
  return new RegExp("(^|:)//").test(t);
}
function S3() {
  return typeof document > "u" ? !0 : document.visibilityState !== "hidden";
}
function MS(t) {
  return t != null;
}
function x3() {
  return typeof navigator > "u" || navigator.onLine === void 0
    ? !0
    : navigator.onLine;
}
var E3 = (t) => t.replace(/\/$/, ""),
  T3 = (t) => t.replace(/^\//, "");
function I3(t, e) {
  if (!t) return e;
  if (!e) return t;
  if (w3(e)) return e;
  const n = t.endsWith("/") || !e.startsWith("?") ? "/" : "";
  return (t = E3(t)), (e = T3(e)), `${t}${n}${e}`;
}
var FS = (...t) => fetch(...t),
  N3 = (t) => t.status >= 200 && t.status <= 299,
  k3 = (t) => /ion\/(vnd\.api\+)?json/.test(t.get("content-type") || "");
function BS(t) {
  if (!li(t)) return t;
  const e = { ...t };
  for (const [n, r] of Object.entries(e)) r === void 0 && delete e[n];
  return e;
}
function R3({
  baseUrl: t,
  prepareHeaders: e = (h) => h,
  fetchFn: n = FS,
  paramsSerializer: r,
  isJsonContentType: i = k3,
  jsonContentType: o = "application/json",
  jsonReplacer: a,
  timeout: l,
  responseHandler: c,
  validateStatus: u,
  ...d
} = {}) {
  return (
    typeof fetch > "u" &&
      n === FS &&
      console.warn(
        "Warning: `fetch` is not available. Please supply a custom `fetchFn` property to use `fetchBaseQuery` on SSR environments."
      ),
    async (f, p) => {
      const {
        signal: m,
        getState: v,
        extra: C,
        endpoint: b,
        forced: g,
        type: y,
      } = p;
      let w,
        {
          url: E,
          headers: S = new Headers(d.headers),
          params: T = void 0,
          responseHandler: I = c ?? "json",
          validateStatus: R = u ?? N3,
          timeout: A = l,
          ...O
        } = typeof f == "string" ? { url: f } : f,
        _ = { ...d, signal: m, ...O };
      (S = new Headers(BS(S))),
        (_.headers =
          (await e(S, {
            getState: v,
            extra: C,
            endpoint: b,
            forced: g,
            type: y,
          })) || S);
      const F = (oe) =>
        typeof oe == "object" &&
        (li(oe) || Array.isArray(oe) || typeof oe.toJSON == "function");
      if (
        (!_.headers.has("content-type") &&
          F(_.body) &&
          _.headers.set("content-type", o),
        F(_.body) && i(_.headers) && (_.body = JSON.stringify(_.body, a)),
        T)
      ) {
        const oe = ~E.indexOf("?") ? "&" : "?",
          pe = r ? r(T) : new URLSearchParams(BS(T));
        E += oe + pe;
      }
      E = I3(t, E);
      const $ = new Request(E, _);
      w = { request: new Request(E, _) };
      let X,
        W = !1,
        z =
          A &&
          setTimeout(() => {
            (W = !0), p.abort();
          }, A);
      try {
        X = await n($);
      } catch (oe) {
        return {
          error: {
            status: W ? "TIMEOUT_ERROR" : "FETCH_ERROR",
            error: String(oe),
          },
          meta: w,
        };
      } finally {
        z && clearTimeout(z);
      }
      const Q = X.clone();
      w.response = Q;
      let q,
        ie = "";
      try {
        let oe;
        if (
          (await Promise.all([
            h(X, I).then(
              (pe) => (q = pe),
              (pe) => (oe = pe)
            ),
            Q.text().then(
              (pe) => (ie = pe),
              () => {}
            ),
          ]),
          oe)
        )
          throw oe;
      } catch (oe) {
        return {
          error: {
            status: "PARSING_ERROR",
            originalStatus: X.status,
            data: ie,
            error: String(oe),
          },
          meta: w,
        };
      }
      return R(X, q)
        ? { data: q, meta: w }
        : { error: { status: X.status, data: q }, meta: w };
    }
  );
  async function h(f, p) {
    if (typeof p == "function") return p(f);
    if (
      (p === "content-type" && (p = i(f.headers) ? "json" : "text"),
      p === "json")
    ) {
      const m = await f.text();
      return m.length ? JSON.parse(m) : null;
    }
    return f.text();
  }
}
var US = class {
    constructor(t, e = void 0) {
      (this.value = t), (this.meta = e);
    }
  },
  Af = Rr("__rtkq/focused"),
  lC = Rr("__rtkq/unfocused"),
  jf = Rr("__rtkq/online"),
  cC = Rr("__rtkq/offline"),
  Pp = !1;
function A3(t, e) {
  function n() {
    const r = () => t(Af()),
      i = () => t(lC()),
      o = () => t(jf()),
      a = () => t(cC()),
      l = () => {
        window.document.visibilityState === "visible" ? r() : i();
      };
    return (
      Pp ||
        (typeof window < "u" &&
          window.addEventListener &&
          (window.addEventListener("visibilitychange", l, !1),
          window.addEventListener("focus", r, !1),
          window.addEventListener("online", o, !1),
          window.addEventListener("offline", a, !1),
          (Pp = !0))),
      () => {
        window.removeEventListener("focus", r),
          window.removeEventListener("visibilitychange", l),
          window.removeEventListener("online", o),
          window.removeEventListener("offline", a),
          (Pp = !1);
      }
    );
  }
  return n();
}
function UR(t) {
  return t.type === "query";
}
function j3(t) {
  return t.type === "mutation";
}
function uC(t, e, n, r, i, o) {
  return O3(t)
    ? t(e, n, r, i).map(ay).map(o)
    : Array.isArray(t)
    ? t.map(ay).map(o)
    : [];
}
function O3(t) {
  return typeof t == "function";
}
function ay(t) {
  return typeof t == "string" ? { type: t } : t;
}
function D3(t, e) {
  return t.catch(e);
}
var Ic = Symbol("forceQueryFn"),
  sy = (t) => typeof t[Ic] == "function";
function L3({
  serializeQueryArgs: t,
  queryThunk: e,
  mutationThunk: n,
  api: r,
  context: i,
}) {
  const o = new Map(),
    a = new Map(),
    {
      unsubscribeQueryResult: l,
      removeMutationResult: c,
      updateSubscriptionOptions: u,
    } = r.internalActions;
  return {
    buildInitiateQuery: m,
    buildInitiateMutation: v,
    getRunningQueryThunk: d,
    getRunningMutationThunk: h,
    getRunningQueriesThunk: f,
    getRunningMutationsThunk: p,
  };
  function d(C, b) {
    return (g) => {
      var E;
      const y = i.endpointDefinitions[C],
        w = t({ queryArgs: b, endpointDefinition: y, endpointName: C });
      return (E = o.get(g)) == null ? void 0 : E[w];
    };
  }
  function h(C, b) {
    return (g) => {
      var y;
      return (y = a.get(g)) == null ? void 0 : y[b];
    };
  }
  function f() {
    return (C) => Object.values(o.get(C) || {}).filter(MS);
  }
  function p() {
    return (C) => Object.values(a.get(C) || {}).filter(MS);
  }
  function m(C, b) {
    const g =
      (
        y,
        {
          subscribe: w = !0,
          forceRefetch: E,
          subscriptionOptions: S,
          [Ic]: T,
          ...I
        } = {}
      ) =>
      (R, A) => {
        var oe;
        const O = t({ queryArgs: y, endpointDefinition: b, endpointName: C }),
          _ = e({
            ...I,
            type: "query",
            subscribe: w,
            forceRefetch: E,
            subscriptionOptions: S,
            endpointName: C,
            originalArgs: y,
            queryCacheKey: O,
            [Ic]: T,
          }),
          F = r.endpoints[C].select(y),
          $ = R(_),
          Z = F(A()),
          { requestId: X, abort: W } = $,
          z = Z.requestId !== X,
          Q = (oe = o.get(R)) == null ? void 0 : oe[O],
          q = () => F(A()),
          ie = Object.assign(
            T
              ? $.then(q)
              : z && !Q
              ? Promise.resolve(Z)
              : Promise.all([Q, $]).then(q),
            {
              arg: y,
              requestId: X,
              subscriptionOptions: S,
              queryCacheKey: O,
              abort: W,
              async unwrap() {
                const pe = await ie;
                if (pe.isError) throw pe.error;
                return pe.data;
              },
              refetch: () => R(g(y, { subscribe: !1, forceRefetch: !0 })),
              unsubscribe() {
                w && R(l({ queryCacheKey: O, requestId: X }));
              },
              updateSubscriptionOptions(pe) {
                (ie.subscriptionOptions = pe),
                  R(
                    u({
                      endpointName: C,
                      requestId: X,
                      queryCacheKey: O,
                      options: pe,
                    })
                  );
              },
            }
          );
        if (!Q && !z && !T) {
          const pe = o.get(R) || {};
          (pe[O] = ie),
            o.set(R, pe),
            ie.then(() => {
              delete pe[O], gs(pe) || o.delete(R);
            });
        }
        return ie;
      };
    return g;
  }
  function v(C) {
    return (b, { track: g = !0, fixedCacheKey: y } = {}) =>
      (w, E) => {
        const S = n({
            type: "mutation",
            endpointName: C,
            originalArgs: b,
            track: g,
            fixedCacheKey: y,
          }),
          T = w(S),
          { requestId: I, abort: R, unwrap: A } = T,
          O = D3(
            T.unwrap().then((Z) => ({ data: Z })),
            (Z) => ({ error: Z })
          ),
          _ = () => {
            w(c({ requestId: I, fixedCacheKey: y }));
          },
          F = Object.assign(O, {
            arg: T.arg,
            requestId: I,
            abort: R,
            unwrap: A,
            reset: _,
          }),
          $ = a.get(w) || {};
        return (
          a.set(w, $),
          ($[I] = F),
          F.then(() => {
            delete $[I], gs($) || a.delete(w);
          }),
          y &&
            (($[y] = F),
            F.then(() => {
              $[y] === F && (delete $[y], gs($) || a.delete(w));
            })),
          F
        );
      };
  }
}
function zS(t) {
  return t;
}
function P3({
  reducerPath: t,
  baseQuery: e,
  context: { endpointDefinitions: n },
  serializeQueryArgs: r,
  api: i,
  assertTagType: o,
}) {
  const a = (g, y, w, E) => (S, T) => {
      const I = n[g],
        R = r({ queryArgs: y, endpointDefinition: I, endpointName: g });
      if (
        (S(
          i.internalActions.queryResultPatched({ queryCacheKey: R, patches: w })
        ),
        !E)
      )
        return;
      const A = i.endpoints[g].select(y)(T()),
        O = uC(I.providesTags, A.data, void 0, y, {}, o);
      S(
        i.internalActions.updateProvidedBy({
          queryCacheKey: R,
          providedTags: O,
        })
      );
    },
    l =
      (g, y, w, E = !0) =>
      (S, T) => {
        const R = i.endpoints[g].select(y)(T()),
          A = {
            patches: [],
            inversePatches: [],
            undo: () => S(i.util.patchQueryData(g, y, A.inversePatches, E)),
          };
        if (R.status === "uninitialized") return A;
        let O;
        if ("data" in R)
          if (Dr(R.data)) {
            const [_, F, $] = jR(R.data, w);
            A.patches.push(...F), A.inversePatches.push(...$), (O = _);
          } else
            (O = w(R.data)),
              A.patches.push({ op: "replace", path: [], value: O }),
              A.inversePatches.push({ op: "replace", path: [], value: R.data });
        return (
          A.patches.length === 0 ||
            S(i.util.patchQueryData(g, y, A.patches, E)),
          A
        );
      },
    c = (g, y, w) => (E) =>
      E(
        i.endpoints[g].initiate(y, {
          subscribe: !1,
          forceRefetch: !0,
          [Ic]: () => ({ data: w }),
        })
      ),
    u = async (
      g,
      {
        signal: y,
        abort: w,
        rejectWithValue: E,
        fulfillWithValue: S,
        dispatch: T,
        getState: I,
        extra: R,
      }
    ) => {
      const A = n[g.endpointName];
      try {
        let O = zS,
          _;
        const F = {
            signal: y,
            abort: w,
            dispatch: T,
            getState: I,
            extra: R,
            endpoint: g.endpointName,
            type: g.type,
            forced: g.type === "query" ? d(g, I()) : void 0,
          },
          $ = g.type === "query" ? g[Ic] : void 0;
        if (
          ($
            ? (_ = $())
            : A.query
            ? ((_ = await e(A.query(g.originalArgs), F, A.extraOptions)),
              A.transformResponse && (O = A.transformResponse))
            : (_ = await A.queryFn(g.originalArgs, F, A.extraOptions, (Z) =>
                e(Z, F, A.extraOptions)
              )),
          typeof process < "u",
          _.error)
        )
          throw new US(_.error, _.meta);
        return S(await O(_.data, _.meta, g.originalArgs), {
          fulfilledTimeStamp: Date.now(),
          baseQueryMeta: _.meta,
          [as]: !0,
        });
      } catch (O) {
        let _ = O;
        if (_ instanceof US) {
          let F = zS;
          A.query && A.transformErrorResponse && (F = A.transformErrorResponse);
          try {
            return E(await F(_.value, _.meta, g.originalArgs), {
              baseQueryMeta: _.meta,
              [as]: !0,
            });
          } catch ($) {
            _ = $;
          }
        }
        throw (typeof process < "u", console.error(_), _);
      }
    };
  function d(g, y) {
    var I, R, A;
    const w =
        (R = (I = y[t]) == null ? void 0 : I.queries) == null
          ? void 0
          : R[g.queryCacheKey],
      E = (A = y[t]) == null ? void 0 : A.config.refetchOnMountOrArgChange,
      S = w == null ? void 0 : w.fulfilledTimeStamp,
      T = g.forceRefetch ?? (g.subscribe && E);
    return T ? T === !0 || (Number(new Date()) - Number(S)) / 1e3 >= T : !1;
  }
  const h = LS(`${t}/executeQuery`, u, {
      getPendingMeta() {
        return { startedTimeStamp: Date.now(), [as]: !0 };
      },
      condition(g, { getState: y }) {
        var A, O, _;
        const w = y(),
          E =
            (O = (A = w[t]) == null ? void 0 : A.queries) == null
              ? void 0
              : O[g.queryCacheKey],
          S = E == null ? void 0 : E.fulfilledTimeStamp,
          T = g.originalArgs,
          I = E == null ? void 0 : E.originalArgs,
          R = n[g.endpointName];
        return sy(g)
          ? !0
          : (E == null ? void 0 : E.status) === "pending"
          ? !1
          : d(g, w) ||
            (UR(R) &&
              (_ = R == null ? void 0 : R.forceRefetch) != null &&
              _.call(R, {
                currentArg: T,
                previousArg: I,
                endpointState: E,
                state: w,
              }))
          ? !0
          : !S;
      },
      dispatchConditionRejection: !0,
    }),
    f = LS(`${t}/executeMutation`, u, {
      getPendingMeta() {
        return { startedTimeStamp: Date.now(), [as]: !0 };
      },
    }),
    p = (g) => "force" in g,
    m = (g) => "ifOlderThan" in g,
    v = (g, y, w) => (E, S) => {
      const T = p(w) && w.force,
        I = m(w) && w.ifOlderThan,
        R = (O = !0) => {
          const _ = { forceRefetch: O, isPrefetch: !0 };
          return i.endpoints[g].initiate(y, _);
        },
        A = i.endpoints[g].select(y)(S());
      if (T) E(R());
      else if (I) {
        const O = A == null ? void 0 : A.fulfilledTimeStamp;
        if (!O) {
          E(R());
          return;
        }
        (Number(new Date()) - Number(new Date(O))) / 1e3 >= I && E(R());
      } else E(R(!1));
    };
  function C(g) {
    return (y) => {
      var w, E;
      return (
        ((E = (w = y == null ? void 0 : y.meta) == null ? void 0 : w.arg) ==
        null
          ? void 0
          : E.endpointName) === g
      );
    };
  }
  function b(g, y) {
    return {
      matchPending: ql(sC(g), C(y)),
      matchFulfilled: ql(Io(g), C(y)),
      matchRejected: ql(_s(g), C(y)),
    };
  }
  return {
    queryThunk: h,
    mutationThunk: f,
    prefetch: v,
    updateQueryData: l,
    upsertQueryData: c,
    patchQueryData: a,
    buildMatchThunkActions: b,
  };
}
function zR(t, e, n, r) {
  return uC(
    n[t.meta.arg.endpointName][e],
    Io(t) ? t.payload : void 0,
    Rf(t) ? t.payload : void 0,
    t.meta.arg.originalArgs,
    "baseQueryMeta" in t.meta ? t.meta.baseQueryMeta : void 0,
    r
  );
}
function _u(t, e, n) {
  const r = t[e];
  r && n(r);
}
function Nc(t) {
  return ("arg" in t ? t.arg.fixedCacheKey : t.fixedCacheKey) ?? t.requestId;
}
function HS(t, e, n) {
  const r = t[Nc(e)];
  r && n(r);
}
var yl = {};
function _3({
  reducerPath: t,
  queryThunk: e,
  mutationThunk: n,
  context: {
    endpointDefinitions: r,
    apiUid: i,
    extractRehydrationInfo: o,
    hasRehydrationInfo: a,
  },
  assertTagType: l,
  config: c,
}) {
  const u = Rr(`${t}/resetApiState`),
    d = st({
      name: `${t}/queries`,
      initialState: yl,
      reducers: {
        removeQueryResult: {
          reducer(y, { payload: { queryCacheKey: w } }) {
            delete y[w];
          },
          prepare: gl(),
        },
        queryResultPatched: {
          reducer(y, { payload: { queryCacheKey: w, patches: E } }) {
            _u(y, w, (S) => {
              S.data = kS(S.data, E.concat());
            });
          },
          prepare: gl(),
        },
      },
      extraReducers(y) {
        y.addCase(e.pending, (w, { meta: E, meta: { arg: S } }) => {
          var I;
          const T = sy(S);
          w[(I = S.queryCacheKey)] ??
            (w[I] = { status: "uninitialized", endpointName: S.endpointName }),
            _u(w, S.queryCacheKey, (R) => {
              (R.status = "pending"),
                (R.requestId = T && R.requestId ? R.requestId : E.requestId),
                S.originalArgs !== void 0 && (R.originalArgs = S.originalArgs),
                (R.startedTimeStamp = E.startedTimeStamp);
            });
        })
          .addCase(e.fulfilled, (w, { meta: E, payload: S }) => {
            _u(w, E.arg.queryCacheKey, (T) => {
              if (T.requestId !== E.requestId && !sy(E.arg)) return;
              const { merge: I } = r[E.arg.endpointName];
              if (((T.status = "fulfilled"), I))
                if (T.data !== void 0) {
                  const {
                    fulfilledTimeStamp: R,
                    arg: A,
                    baseQueryMeta: O,
                    requestId: _,
                  } = E;
                  let F = Wc(T.data, ($) =>
                    I($, S, {
                      arg: A.originalArgs,
                      baseQueryMeta: O,
                      fulfilledTimeStamp: R,
                      requestId: _,
                    })
                  );
                  T.data = F;
                } else T.data = S;
              else
                T.data =
                  r[E.arg.endpointName].structuralSharing ?? !0
                    ? BR(ci(T.data) ? N4(T.data) : T.data, S)
                    : S;
              delete T.error, (T.fulfilledTimeStamp = E.fulfilledTimeStamp);
            });
          })
          .addCase(
            e.rejected,
            (
              w,
              {
                meta: { condition: E, arg: S, requestId: T },
                error: I,
                payload: R,
              }
            ) => {
              _u(w, S.queryCacheKey, (A) => {
                if (!E) {
                  if (A.requestId !== T) return;
                  (A.status = "rejected"), (A.error = R ?? I);
                }
              });
            }
          )
          .addMatcher(a, (w, E) => {
            const { queries: S } = o(E);
            for (const [T, I] of Object.entries(S))
              ((I == null ? void 0 : I.status) === "fulfilled" ||
                (I == null ? void 0 : I.status) === "rejected") &&
                (w[T] = I);
          });
      },
    }),
    h = st({
      name: `${t}/mutations`,
      initialState: yl,
      reducers: {
        removeMutationResult: {
          reducer(y, { payload: w }) {
            const E = Nc(w);
            E in y && delete y[E];
          },
          prepare: gl(),
        },
      },
      extraReducers(y) {
        y.addCase(
          n.pending,
          (
            w,
            { meta: E, meta: { requestId: S, arg: T, startedTimeStamp: I } }
          ) => {
            T.track &&
              (w[Nc(E)] = {
                requestId: S,
                status: "pending",
                endpointName: T.endpointName,
                startedTimeStamp: I,
              });
          }
        )
          .addCase(n.fulfilled, (w, { payload: E, meta: S }) => {
            S.arg.track &&
              HS(w, S, (T) => {
                T.requestId === S.requestId &&
                  ((T.status = "fulfilled"),
                  (T.data = E),
                  (T.fulfilledTimeStamp = S.fulfilledTimeStamp));
              });
          })
          .addCase(n.rejected, (w, { payload: E, error: S, meta: T }) => {
            T.arg.track &&
              HS(w, T, (I) => {
                I.requestId === T.requestId &&
                  ((I.status = "rejected"), (I.error = E ?? S));
              });
          })
          .addMatcher(a, (w, E) => {
            const { mutations: S } = o(E);
            for (const [T, I] of Object.entries(S))
              ((I == null ? void 0 : I.status) === "fulfilled" ||
                (I == null ? void 0 : I.status) === "rejected") &&
                T !== (I == null ? void 0 : I.requestId) &&
                (w[T] = I);
          });
      },
    }),
    f = st({
      name: `${t}/invalidation`,
      initialState: yl,
      reducers: {
        updateProvidedBy: {
          reducer(y, w) {
            var T, I;
            const { queryCacheKey: E, providedTags: S } = w.payload;
            for (const R of Object.values(y))
              for (const A of Object.values(R)) {
                const O = A.indexOf(E);
                O !== -1 && A.splice(O, 1);
              }
            for (const { type: R, id: A } of S) {
              const O =
                (T = y[R] ?? (y[R] = {}))[(I = A || "__internal_without_id")] ??
                (T[I] = []);
              O.includes(E) || O.push(E);
            }
          },
          prepare: gl(),
        },
      },
      extraReducers(y) {
        y.addCase(
          d.actions.removeQueryResult,
          (w, { payload: { queryCacheKey: E } }) => {
            for (const S of Object.values(w))
              for (const T of Object.values(S)) {
                const I = T.indexOf(E);
                I !== -1 && T.splice(I, 1);
              }
          }
        )
          .addMatcher(a, (w, E) => {
            var T, I;
            const { provided: S } = o(E);
            for (const [R, A] of Object.entries(S))
              for (const [O, _] of Object.entries(A)) {
                const F =
                  (T = w[R] ?? (w[R] = {}))[
                    (I = O || "__internal_without_id")
                  ] ?? (T[I] = []);
                for (const $ of _) F.includes($) || F.push($);
              }
          })
          .addMatcher(zi(Io(e), Rf(e)), (w, E) => {
            const S = zR(E, "providesTags", r, l),
              { queryCacheKey: T } = E.meta.arg;
            f.caseReducers.updateProvidedBy(
              w,
              f.actions.updateProvidedBy({ queryCacheKey: T, providedTags: S })
            );
          });
      },
    }),
    p = st({
      name: `${t}/subscriptions`,
      initialState: yl,
      reducers: {
        updateSubscriptionOptions(y, w) {},
        unsubscribeQueryResult(y, w) {},
        internal_getRTKQSubscriptions() {},
      },
    }),
    m = st({
      name: `${t}/internalSubscriptions`,
      initialState: yl,
      reducers: {
        subscriptionsUpdated: {
          reducer(y, w) {
            return kS(y, w.payload);
          },
          prepare: gl(),
        },
      },
    }),
    v = st({
      name: `${t}/config`,
      initialState: {
        online: x3(),
        focused: S3(),
        middlewareRegistered: !1,
        ...c,
      },
      reducers: {
        middlewareRegistered(y, { payload: w }) {
          y.middlewareRegistered =
            y.middlewareRegistered === "conflict" || i !== w ? "conflict" : !0;
        },
      },
      extraReducers: (y) => {
        y.addCase(jf, (w) => {
          w.online = !0;
        })
          .addCase(cC, (w) => {
            w.online = !1;
          })
          .addCase(Af, (w) => {
            w.focused = !0;
          })
          .addCase(lC, (w) => {
            w.focused = !1;
          })
          .addMatcher(a, (w) => ({ ...w }));
      },
    }),
    C = ER({
      queries: d.reducer,
      mutations: h.reducer,
      provided: f.reducer,
      subscriptions: m.reducer,
      config: v.reducer,
    }),
    b = (y, w) => C(u.match(w) ? void 0 : y, w),
    g = {
      ...v.actions,
      ...d.actions,
      ...p.actions,
      ...m.actions,
      ...h.actions,
      ...f.actions,
      resetApiState: u,
    };
  return { reducer: b, actions: g };
}
var Vo = Symbol.for("RTKQ/skipToken"),
  HR = { status: "uninitialized" },
  $S = Wc(HR, () => {}),
  KS = Wc(HR, () => {});
function M3({ serializeQueryArgs: t, reducerPath: e, createSelector: n }) {
  const r = (h) => $S,
    i = (h) => KS;
  return {
    buildQuerySelector: l,
    buildMutationSelector: c,
    selectInvalidatedBy: u,
    selectCachedArgsForQuery: d,
  };
  function o(h) {
    return { ...h, ...C3(h.status) };
  }
  function a(h) {
    return h[e];
  }
  function l(h, f) {
    return (p) => {
      const m = t({ queryArgs: p, endpointDefinition: f, endpointName: h });
      return n(
        p === Vo
          ? r
          : (b) => {
              var g, y;
              return (
                ((y = (g = a(b)) == null ? void 0 : g.queries) == null
                  ? void 0
                  : y[m]) ?? $S
              );
            },
        o
      );
    };
  }
  function c() {
    return (h) => {
      let f;
      return (
        typeof h == "object" ? (f = Nc(h) ?? Vo) : (f = h),
        n(
          f === Vo
            ? i
            : (v) => {
                var C, b;
                return (
                  ((b = (C = a(v)) == null ? void 0 : C.mutations) == null
                    ? void 0
                    : b[f]) ?? KS
                );
              },
          o
        )
      );
    };
  }
  function u(h, f) {
    const p = h[e],
      m = new Set();
    for (const v of f.map(ay)) {
      const C = p.provided[v.type];
      if (!C) continue;
      let b = (v.id !== void 0 ? C[v.id] : _S(Object.values(C))) ?? [];
      for (const g of b) m.add(g);
    }
    return _S(
      Array.from(m.values()).map((v) => {
        const C = p.queries[v];
        return C
          ? [
              {
                queryCacheKey: v,
                endpointName: C.endpointName,
                originalArgs: C.originalArgs,
              },
            ]
          : [];
      })
    );
  }
  function d(h, f) {
    return Object.values(h[e].queries)
      .filter(
        (p) =>
          (p == null ? void 0 : p.endpointName) === f &&
          p.status !== "uninitialized"
      )
      .map((p) => p.originalArgs);
  }
}
var _a = WeakMap ? new WeakMap() : void 0,
  qS = ({ endpointName: t, queryArgs: e }) => {
    let n = "";
    const r = _a == null ? void 0 : _a.get(e);
    if (typeof r == "string") n = r;
    else {
      const i = JSON.stringify(
        e,
        (o, a) => (
          (a = typeof a == "bigint" ? { $bigint: a.toString() } : a),
          (a = li(a)
            ? Object.keys(a)
                .sort()
                .reduce((l, c) => ((l[c] = a[c]), l), {})
            : a),
          a
        )
      );
      li(e) && (_a == null || _a.set(e, i)), (n = i);
    }
    return `${t}(${n})`;
  };
function F3(...t) {
  return function (n) {
    const r = xh((u) => {
        var d;
        return (d = n.extractRehydrationInfo) == null
          ? void 0
          : d.call(n, u, { reducerPath: n.reducerPath ?? "api" });
      }),
      i = {
        reducerPath: "api",
        keepUnusedDataFor: 60,
        refetchOnMountOrArgChange: !1,
        refetchOnFocus: !1,
        refetchOnReconnect: !1,
        invalidationBehavior: "delayed",
        ...n,
        extractRehydrationInfo: r,
        serializeQueryArgs(u) {
          let d = qS;
          if ("serializeQueryArgs" in u.endpointDefinition) {
            const h = u.endpointDefinition.serializeQueryArgs;
            d = (f) => {
              const p = h(f);
              return typeof p == "string" ? p : qS({ ...f, queryArgs: p });
            };
          } else n.serializeQueryArgs && (d = n.serializeQueryArgs);
          return d(u);
        },
        tagTypes: [...(n.tagTypes || [])],
      },
      o = {
        endpointDefinitions: {},
        batch(u) {
          u();
        },
        apiUid: MR(),
        extractRehydrationInfo: r,
        hasRehydrationInfo: xh((u) => r(u) != null),
      },
      a = {
        injectEndpoints: c,
        enhanceEndpoints({ addTagTypes: u, endpoints: d }) {
          if (u)
            for (const h of u) i.tagTypes.includes(h) || i.tagTypes.push(h);
          if (d)
            for (const [h, f] of Object.entries(d))
              typeof f == "function"
                ? f(o.endpointDefinitions[h])
                : Object.assign(o.endpointDefinitions[h] || {}, f);
          return a;
        },
      },
      l = t.map((u) => u.init(a, i, o));
    function c(u) {
      const d = u.endpoints({
        query: (h) => ({ ...h, type: "query" }),
        mutation: (h) => ({ ...h, type: "mutation" }),
      });
      for (const [h, f] of Object.entries(d)) {
        if (u.overrideExisting !== !0 && h in o.endpointDefinitions) {
          if (u.overrideExisting === "throw") throw new Error(qn(39));
          typeof process < "u";
          continue;
        }
        o.endpointDefinitions[h] = f;
        for (const p of l) p.injectEndpoint(h, f);
      }
      return a;
    }
    return a.injectEndpoints({ endpoints: n.endpoints });
  };
}
function Ji(t, ...e) {
  return Object.assign(t, ...e);
}
var B3 = ({ api: t, queryThunk: e, internalState: n }) => {
  const r = `${t.reducerPath}/subscriptions`;
  let i = null,
    o = null;
  const { updateSubscriptionOptions: a, unsubscribeQueryResult: l } =
      t.internalActions,
    c = (p, m) => {
      var C, b, g;
      if (a.match(m)) {
        const { queryCacheKey: y, requestId: w, options: E } = m.payload;
        return (
          (C = p == null ? void 0 : p[y]) != null && C[w] && (p[y][w] = E), !0
        );
      }
      if (l.match(m)) {
        const { queryCacheKey: y, requestId: w } = m.payload;
        return p[y] && delete p[y][w], !0;
      }
      if (t.internalActions.removeQueryResult.match(m))
        return delete p[m.payload.queryCacheKey], !0;
      if (e.pending.match(m)) {
        const {
            meta: { arg: y, requestId: w },
          } = m,
          E = p[(b = y.queryCacheKey)] ?? (p[b] = {});
        return (
          (E[`${w}_running`] = {}),
          y.subscribe && (E[w] = y.subscriptionOptions ?? E[w] ?? {}),
          !0
        );
      }
      let v = !1;
      if (e.fulfilled.match(m) || e.rejected.match(m)) {
        const y = p[m.meta.arg.queryCacheKey] || {},
          w = `${m.meta.requestId}_running`;
        v || (v = !!y[w]), delete y[w];
      }
      if (e.rejected.match(m)) {
        const {
          meta: { condition: y, arg: w, requestId: E },
        } = m;
        if (y && w.subscribe) {
          const S = p[(g = w.queryCacheKey)] ?? (p[g] = {});
          (S[E] = w.subscriptionOptions ?? S[E] ?? {}), (v = !0);
        }
      }
      return v;
    },
    u = () => n.currentSubscriptions,
    f = {
      getSubscriptions: u,
      getSubscriptionCount: (p) => {
        const v = u()[p] ?? {};
        return gs(v);
      },
      isRequestSubscribed: (p, m) => {
        var C;
        const v = u();
        return !!((C = v == null ? void 0 : v[p]) != null && C[m]);
      },
    };
  return (p, m) => {
    if (
      (i || (i = JSON.parse(JSON.stringify(n.currentSubscriptions))),
      t.util.resetApiState.match(p))
    )
      return (i = n.currentSubscriptions = {}), (o = null), [!0, !1];
    if (t.internalActions.internal_getRTKQSubscriptions.match(p))
      return [!1, f];
    const v = c(n.currentSubscriptions, p);
    let C = !0;
    if (v) {
      o ||
        (o = setTimeout(() => {
          const y = JSON.parse(JSON.stringify(n.currentSubscriptions)),
            [, w] = jR(i, () => y);
          m.next(t.internalActions.subscriptionsUpdated(w)),
            (i = y),
            (o = null);
        }, 500));
      const b = typeof p.type == "string" && !!p.type.startsWith(r),
        g = e.rejected.match(p) && p.meta.condition && !!p.meta.arg.subscribe;
      C = !b && !g;
    }
    return [C, !1];
  };
};
function U3(t) {
  for (const e in t) return !1;
  return !0;
}
var z3 = 2147483647 / 1e3 - 1,
  H3 = ({
    reducerPath: t,
    api: e,
    queryThunk: n,
    context: r,
    internalState: i,
  }) => {
    const { removeQueryResult: o, unsubscribeQueryResult: a } =
        e.internalActions,
      l = zi(a.match, n.fulfilled, n.rejected);
    function c(f) {
      const p = i.currentSubscriptions[f];
      return !!p && !U3(p);
    }
    const u = {},
      d = (f, p, m) => {
        var v;
        if (l(f)) {
          const C = p.getState()[t],
            { queryCacheKey: b } = a.match(f) ? f.payload : f.meta.arg;
          h(
            b,
            (v = C.queries[b]) == null ? void 0 : v.endpointName,
            p,
            C.config
          );
        }
        if (e.util.resetApiState.match(f))
          for (const [C, b] of Object.entries(u))
            b && clearTimeout(b), delete u[C];
        if (r.hasRehydrationInfo(f)) {
          const C = p.getState()[t],
            { queries: b } = r.extractRehydrationInfo(f);
          for (const [g, y] of Object.entries(b))
            h(g, y == null ? void 0 : y.endpointName, p, C.config);
        }
      };
    function h(f, p, m, v) {
      const C = r.endpointDefinitions[p],
        b = (C == null ? void 0 : C.keepUnusedDataFor) ?? v.keepUnusedDataFor;
      if (b === 1 / 0) return;
      const g = Math.max(0, Math.min(b, z3));
      if (!c(f)) {
        const y = u[f];
        y && clearTimeout(y),
          (u[f] = setTimeout(() => {
            c(f) || m.dispatch(o({ queryCacheKey: f })), delete u[f];
          }, g * 1e3));
      }
    }
    return d;
  },
  GS = new Error("Promise never resolved before cacheEntryRemoved."),
  $3 = ({
    api: t,
    reducerPath: e,
    context: n,
    queryThunk: r,
    mutationThunk: i,
    internalState: o,
  }) => {
    const a = oy(r),
      l = oy(i),
      c = Io(r, i),
      u = {},
      d = (p, m, v) => {
        const C = h(p);
        if (r.pending.match(p)) {
          const b = v[e].queries[C],
            g = m.getState()[e].queries[C];
          !b &&
            g &&
            f(
              p.meta.arg.endpointName,
              p.meta.arg.originalArgs,
              C,
              m,
              p.meta.requestId
            );
        } else if (i.pending.match(p))
          m.getState()[e].mutations[C] &&
            f(
              p.meta.arg.endpointName,
              p.meta.arg.originalArgs,
              C,
              m,
              p.meta.requestId
            );
        else if (c(p)) {
          const b = u[C];
          b != null &&
            b.valueResolved &&
            (b.valueResolved({ data: p.payload, meta: p.meta.baseQueryMeta }),
            delete b.valueResolved);
        } else if (
          t.internalActions.removeQueryResult.match(p) ||
          t.internalActions.removeMutationResult.match(p)
        ) {
          const b = u[C];
          b && (delete u[C], b.cacheEntryRemoved());
        } else if (t.util.resetApiState.match(p))
          for (const [b, g] of Object.entries(u))
            delete u[b], g.cacheEntryRemoved();
      };
    function h(p) {
      return a(p)
        ? p.meta.arg.queryCacheKey
        : l(p)
        ? p.meta.arg.fixedCacheKey ?? p.meta.requestId
        : t.internalActions.removeQueryResult.match(p)
        ? p.payload.queryCacheKey
        : t.internalActions.removeMutationResult.match(p)
        ? Nc(p.payload)
        : "";
    }
    function f(p, m, v, C, b) {
      const g = n.endpointDefinitions[p],
        y = g == null ? void 0 : g.onCacheEntryAdded;
      if (!y) return;
      const w = {},
        E = new Promise((O) => {
          w.cacheEntryRemoved = O;
        }),
        S = Promise.race([
          new Promise((O) => {
            w.valueResolved = O;
          }),
          E.then(() => {
            throw GS;
          }),
        ]);
      S.catch(() => {}), (u[v] = w);
      const T = t.endpoints[p].select(g.type === "query" ? m : v),
        I = C.dispatch((O, _, F) => F),
        R = {
          ...C,
          getCacheEntry: () => T(C.getState()),
          requestId: b,
          extra: I,
          updateCachedData:
            g.type === "query"
              ? (O) => C.dispatch(t.util.updateQueryData(p, m, O))
              : void 0,
          cacheDataLoaded: S,
          cacheEntryRemoved: E,
        },
        A = y(m, R);
      Promise.resolve(A).catch((O) => {
        if (O !== GS) throw O;
      });
    }
    return d;
  },
  K3 =
    ({ api: t, context: { apiUid: e }, reducerPath: n }) =>
    (r, i) => {
      t.util.resetApiState.match(r) &&
        i.dispatch(t.internalActions.middlewareRegistered(e)),
        typeof process < "u";
    },
  q3 = ({
    reducerPath: t,
    context: e,
    context: { endpointDefinitions: n },
    mutationThunk: r,
    queryThunk: i,
    api: o,
    assertTagType: a,
    refetchQuery: l,
    internalState: c,
  }) => {
    const { removeQueryResult: u } = o.internalActions,
      d = zi(Io(r), Rf(r)),
      h = zi(Io(r, i), _s(r, i));
    let f = [];
    const p = (C, b) => {
      d(C)
        ? v(zR(C, "invalidatesTags", n, a), b)
        : h(C)
        ? v([], b)
        : o.util.invalidateTags.match(C) &&
          v(uC(C.payload, void 0, void 0, void 0, void 0, a), b);
    };
    function m(C) {
      var b, g;
      for (const y in C.queries)
        if (((b = C.queries[y]) == null ? void 0 : b.status) === "pending")
          return !0;
      for (const y in C.mutations)
        if (((g = C.mutations[y]) == null ? void 0 : g.status) === "pending")
          return !0;
      return !1;
    }
    function v(C, b) {
      const g = b.getState(),
        y = g[t];
      if ((f.push(...C), y.config.invalidationBehavior === "delayed" && m(y)))
        return;
      const w = f;
      if (((f = []), w.length === 0)) return;
      const E = o.util.selectInvalidatedBy(g, w);
      e.batch(() => {
        const S = Array.from(E.values());
        for (const { queryCacheKey: T } of S) {
          const I = y.queries[T],
            R = c.currentSubscriptions[T] ?? {};
          I &&
            (gs(R) === 0
              ? b.dispatch(u({ queryCacheKey: T }))
              : I.status !== "uninitialized" && b.dispatch(l(I, T)));
        }
      });
    }
    return p;
  },
  G3 = ({
    reducerPath: t,
    queryThunk: e,
    api: n,
    refetchQuery: r,
    internalState: i,
  }) => {
    const o = {},
      a = (f, p) => {
        (n.internalActions.updateSubscriptionOptions.match(f) ||
          n.internalActions.unsubscribeQueryResult.match(f)) &&
          c(f.payload, p),
          (e.pending.match(f) || (e.rejected.match(f) && f.meta.condition)) &&
            c(f.meta.arg, p),
          (e.fulfilled.match(f) ||
            (e.rejected.match(f) && !f.meta.condition)) &&
            l(f.meta.arg, p),
          n.util.resetApiState.match(f) && d();
      };
    function l({ queryCacheKey: f }, p) {
      const m = p.getState()[t],
        v = m.queries[f],
        C = i.currentSubscriptions[f];
      if (!v || v.status === "uninitialized") return;
      const { lowestPollingInterval: b, skipPollingIfUnfocused: g } = h(C);
      if (!Number.isFinite(b)) return;
      const y = o[f];
      y != null && y.timeout && (clearTimeout(y.timeout), (y.timeout = void 0));
      const w = Date.now() + b;
      o[f] = {
        nextPollTimestamp: w,
        pollingInterval: b,
        timeout: setTimeout(() => {
          (m.config.focused || !g) && p.dispatch(r(v, f)),
            l({ queryCacheKey: f }, p);
        }, b),
      };
    }
    function c({ queryCacheKey: f }, p) {
      const v = p.getState()[t].queries[f],
        C = i.currentSubscriptions[f];
      if (!v || v.status === "uninitialized") return;
      const { lowestPollingInterval: b } = h(C);
      if (!Number.isFinite(b)) {
        u(f);
        return;
      }
      const g = o[f],
        y = Date.now() + b;
      (!g || y < g.nextPollTimestamp) && l({ queryCacheKey: f }, p);
    }
    function u(f) {
      const p = o[f];
      p != null && p.timeout && clearTimeout(p.timeout), delete o[f];
    }
    function d() {
      for (const f of Object.keys(o)) u(f);
    }
    function h(f = {}) {
      let p = !1,
        m = Number.POSITIVE_INFINITY;
      for (let v in f)
        f[v].pollingInterval &&
          ((m = Math.min(f[v].pollingInterval, m)),
          (p = f[v].skipPollingIfUnfocused || p));
      return { lowestPollingInterval: m, skipPollingIfUnfocused: p };
    }
    return a;
  },
  W3 = ({ api: t, context: e, queryThunk: n, mutationThunk: r }) => {
    const i = sC(n, r),
      o = _s(n, r),
      a = Io(n, r),
      l = {};
    return (u, d) => {
      var h, f;
      if (i(u)) {
        const {
            requestId: p,
            arg: { endpointName: m, originalArgs: v },
          } = u.meta,
          C = e.endpointDefinitions[m],
          b = C == null ? void 0 : C.onQueryStarted;
        if (b) {
          const g = {},
            y = new Promise((T, I) => {
              (g.resolve = T), (g.reject = I);
            });
          y.catch(() => {}), (l[p] = g);
          const w = t.endpoints[m].select(C.type === "query" ? v : p),
            E = d.dispatch((T, I, R) => R),
            S = {
              ...d,
              getCacheEntry: () => w(d.getState()),
              requestId: p,
              extra: E,
              updateCachedData:
                C.type === "query"
                  ? (T) => d.dispatch(t.util.updateQueryData(m, v, T))
                  : void 0,
              queryFulfilled: y,
            };
          b(v, S);
        }
      } else if (a(u)) {
        const { requestId: p, baseQueryMeta: m } = u.meta;
        (h = l[p]) == null || h.resolve({ data: u.payload, meta: m }),
          delete l[p];
      } else if (o(u)) {
        const { requestId: p, rejectedWithValue: m, baseQueryMeta: v } = u.meta;
        (f = l[p]) == null ||
          f.reject({
            error: u.payload ?? u.error,
            isUnhandledError: !m,
            meta: v,
          }),
          delete l[p];
      }
    };
  },
  V3 = ({
    reducerPath: t,
    context: e,
    api: n,
    refetchQuery: r,
    internalState: i,
  }) => {
    const { removeQueryResult: o } = n.internalActions,
      a = (c, u) => {
        Af.match(c) && l(u, "refetchOnFocus"),
          jf.match(c) && l(u, "refetchOnReconnect");
      };
    function l(c, u) {
      const d = c.getState()[t],
        h = d.queries,
        f = i.currentSubscriptions;
      e.batch(() => {
        for (const p of Object.keys(f)) {
          const m = h[p],
            v = f[p];
          if (!v || !m) continue;
          (Object.values(v).some((b) => b[u] === !0) ||
            (Object.values(v).every((b) => b[u] === void 0) && d.config[u])) &&
            (gs(v) === 0
              ? c.dispatch(o({ queryCacheKey: p }))
              : m.status !== "uninitialized" && c.dispatch(r(m, p)));
        }
      });
    }
    return a;
  };
function Q3(t) {
  const { reducerPath: e, queryThunk: n, api: r, context: i } = t,
    { apiUid: o } = i,
    a = { invalidateTags: Rr(`${e}/invalidateTags`) },
    l = (h) => h.type.startsWith(`${e}/`),
    c = [K3, H3, q3, G3, $3, W3];
  return {
    middleware: (h) => {
      let f = !1;
      const m = {
          ...t,
          internalState: { currentSubscriptions: {} },
          refetchQuery: d,
          isThisApiSliceAction: l,
        },
        v = c.map((g) => g(m)),
        C = B3(m),
        b = V3(m);
      return (g) => (y) => {
        if (!TR(y)) return g(y);
        f || ((f = !0), h.dispatch(r.internalActions.middlewareRegistered(o)));
        const w = { ...h, next: g },
          E = h.getState(),
          [S, T] = C(y, w, E);
        let I;
        if (
          (S ? (I = g(y)) : (I = T),
          h.getState()[e] && (b(y, w, E), l(y) || i.hasRehydrationInfo(y)))
        )
          for (const R of v) R(y, w, E);
        return I;
      };
    },
    actions: a,
  };
  function d(h, f, p = {}) {
    return n({
      type: "query",
      endpointName: h.endpointName,
      originalArgs: h.originalArgs,
      subscribe: !1,
      forceRefetch: !0,
      queryCacheKey: f,
      ...p,
    });
  }
}
var WS = Symbol(),
  Y3 = ({ createSelector: t = aC } = {}) => ({
    name: WS,
    init(
      e,
      {
        baseQuery: n,
        tagTypes: r,
        reducerPath: i,
        serializeQueryArgs: o,
        keepUnusedDataFor: a,
        refetchOnMountOrArgChange: l,
        refetchOnFocus: c,
        refetchOnReconnect: u,
        invalidationBehavior: d,
      },
      h
    ) {
      M4();
      const f = (z) => (typeof process < "u", z);
      Object.assign(e, {
        reducerPath: i,
        endpoints: {},
        internalActions: {
          onOnline: jf,
          onOffline: cC,
          onFocus: Af,
          onFocusLost: lC,
        },
        util: {},
      });
      const {
          queryThunk: p,
          mutationThunk: m,
          patchQueryData: v,
          updateQueryData: C,
          upsertQueryData: b,
          prefetch: g,
          buildMatchThunkActions: y,
        } = P3({
          baseQuery: n,
          reducerPath: i,
          context: h,
          api: e,
          serializeQueryArgs: o,
          assertTagType: f,
        }),
        { reducer: w, actions: E } = _3({
          context: h,
          queryThunk: p,
          mutationThunk: m,
          reducerPath: i,
          assertTagType: f,
          config: {
            refetchOnFocus: c,
            refetchOnReconnect: u,
            refetchOnMountOrArgChange: l,
            keepUnusedDataFor: a,
            reducerPath: i,
            invalidationBehavior: d,
          },
        });
      Ji(e.util, {
        patchQueryData: v,
        updateQueryData: C,
        upsertQueryData: b,
        prefetch: g,
        resetApiState: E.resetApiState,
      }),
        Ji(e.internalActions, E);
      const { middleware: S, actions: T } = Q3({
        reducerPath: i,
        context: h,
        queryThunk: p,
        mutationThunk: m,
        api: e,
        assertTagType: f,
      });
      Ji(e.util, T), Ji(e, { reducer: w, middleware: S });
      const {
        buildQuerySelector: I,
        buildMutationSelector: R,
        selectInvalidatedBy: A,
        selectCachedArgsForQuery: O,
      } = M3({ serializeQueryArgs: o, reducerPath: i, createSelector: t });
      Ji(e.util, { selectInvalidatedBy: A, selectCachedArgsForQuery: O });
      const {
        buildInitiateQuery: _,
        buildInitiateMutation: F,
        getRunningMutationThunk: $,
        getRunningMutationsThunk: Z,
        getRunningQueriesThunk: X,
        getRunningQueryThunk: W,
      } = L3({
        queryThunk: p,
        mutationThunk: m,
        api: e,
        serializeQueryArgs: o,
        context: h,
      });
      return (
        Ji(e.util, {
          getRunningMutationThunk: $,
          getRunningMutationsThunk: Z,
          getRunningQueryThunk: W,
          getRunningQueriesThunk: X,
        }),
        {
          name: WS,
          injectEndpoint(z, Q) {
            var ie;
            const q = e;
            (ie = q.endpoints)[z] ?? (ie[z] = {}),
              UR(Q)
                ? Ji(
                    q.endpoints[z],
                    { name: z, select: I(z, Q), initiate: _(z, Q) },
                    y(p, z)
                  )
                : j3(Q) &&
                  Ji(
                    q.endpoints[z],
                    { name: z, select: R(), initiate: F(z) },
                    y(m, z)
                  );
          },
        }
      );
    },
  }),
  $R = { exports: {} },
  KR = {};
/**
 * @license React
 * use-sync-external-store-with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var Qc = x;
function X3(t, e) {
  return (t === e && (t !== 0 || 1 / t === 1 / e)) || (t !== t && e !== e);
}
var J3 = typeof Object.is == "function" ? Object.is : X3,
  Z3 = Qc.useSyncExternalStore,
  eH = Qc.useRef,
  tH = Qc.useEffect,
  nH = Qc.useMemo,
  rH = Qc.useDebugValue;
KR.useSyncExternalStoreWithSelector = function (t, e, n, r, i) {
  var o = eH(null);
  if (o.current === null) {
    var a = { hasValue: !1, value: null };
    o.current = a;
  } else a = o.current;
  o = nH(
    function () {
      function c(p) {
        if (!u) {
          if (((u = !0), (d = p), (p = r(p)), i !== void 0 && a.hasValue)) {
            var m = a.value;
            if (i(m, p)) return (h = m);
          }
          return (h = p);
        }
        if (((m = h), J3(d, p))) return m;
        var v = r(p);
        return i !== void 0 && i(m, v) ? m : ((d = p), (h = v));
      }
      var u = !1,
        d,
        h,
        f = n === void 0 ? null : n;
      return [
        function () {
          return c(e());
        },
        f === null
          ? void 0
          : function () {
              return c(f());
            },
      ];
    },
    [e, n, r, i]
  );
  var l = Z3(t, o[0], o[1]);
  return (
    tH(
      function () {
        (a.hasValue = !0), (a.value = l);
      },
      [l]
    ),
    rH(l),
    l
  );
};
$R.exports = KR;
var iH = $R.exports,
  $n = "default" in em ? k : em,
  VS = Symbol.for("react-redux-context"),
  QS = typeof globalThis < "u" ? globalThis : {};
function oH() {
  if (!$n.createContext) return {};
  const t = QS[VS] ?? (QS[VS] = new Map());
  let e = t.get($n.createContext);
  return e || ((e = $n.createContext(null)), t.set($n.createContext, e)), e;
}
var No = oH(),
  aH = () => {
    throw new Error("uSES not initialized!");
  };
function dC(t = No) {
  return function () {
    return $n.useContext(t);
  };
}
var qR = dC(),
  GR = aH,
  sH = (t) => {
    GR = t;
  },
  lH = (t, e) => t === e;
function cH(t = No) {
  const e = t === No ? qR : dC(t),
    n = (r, i = {}) => {
      const { equalityFn: o = lH, devModeChecks: a = {} } =
          typeof i == "function" ? { equalityFn: i } : i,
        {
          store: l,
          subscription: c,
          getServerState: u,
          stabilityCheck: d,
          identityFunctionCheck: h,
        } = e();
      $n.useRef(!0);
      const f = $n.useCallback(
          {
            [r.name](m) {
              return r(m);
            },
          }[r.name],
          [r, d, a.stabilityCheck]
        ),
        p = GR(c.addNestedSub, l.getState, u || l.getState, f, o);
      return $n.useDebugValue(p), p;
    };
  return Object.assign(n, { withTypes: () => n }), n;
}
var WR = cH();
function VR(t) {
  t();
}
function uH() {
  let t = null,
    e = null;
  return {
    clear() {
      (t = null), (e = null);
    },
    notify() {
      VR(() => {
        let n = t;
        for (; n; ) n.callback(), (n = n.next);
      });
    },
    get() {
      const n = [];
      let r = t;
      for (; r; ) n.push(r), (r = r.next);
      return n;
    },
    subscribe(n) {
      let r = !0;
      const i = (e = { callback: n, next: null, prev: e });
      return (
        i.prev ? (i.prev.next = i) : (t = i),
        function () {
          !r ||
            t === null ||
            ((r = !1),
            i.next ? (i.next.prev = i.prev) : (e = i.prev),
            i.prev ? (i.prev.next = i.next) : (t = i.next));
        }
      );
    },
  };
}
var YS = { notify() {}, get: () => [] };
function dH(t, e) {
  let n,
    r = YS,
    i = 0,
    o = !1;
  function a(v) {
    d();
    const C = r.subscribe(v);
    let b = !1;
    return () => {
      b || ((b = !0), C(), h());
    };
  }
  function l() {
    r.notify();
  }
  function c() {
    m.onStateChange && m.onStateChange();
  }
  function u() {
    return o;
  }
  function d() {
    i++, n || ((n = t.subscribe(c)), (r = uH()));
  }
  function h() {
    i--, n && i === 0 && (n(), (n = void 0), r.clear(), (r = YS));
  }
  function f() {
    o || ((o = !0), d());
  }
  function p() {
    o && ((o = !1), h());
  }
  const m = {
    addNestedSub: a,
    notifyNestedSubs: l,
    handleChangeWrapper: c,
    isSubscribed: u,
    trySubscribe: f,
    tryUnsubscribe: p,
    getListeners: () => r,
  };
  return m;
}
var hH =
    typeof window < "u" &&
    typeof window.document < "u" &&
    typeof window.document.createElement < "u",
  fH = typeof navigator < "u" && navigator.product === "ReactNative",
  pH = hH || fH ? $n.useLayoutEffect : $n.useEffect;
function XS(t, e) {
  return t === e ? t !== 0 || e !== 0 || 1 / t === 1 / e : t !== t && e !== e;
}
function Gl(t, e) {
  if (XS(t, e)) return !0;
  if (typeof t != "object" || t === null || typeof e != "object" || e === null)
    return !1;
  const n = Object.keys(t),
    r = Object.keys(e);
  if (n.length !== r.length) return !1;
  for (let i = 0; i < n.length; i++)
    if (!Object.prototype.hasOwnProperty.call(e, n[i]) || !XS(t[n[i]], e[n[i]]))
      return !1;
  return !0;
}
function mH({
  store: t,
  context: e,
  children: n,
  serverState: r,
  stabilityCheck: i = "once",
  identityFunctionCheck: o = "once",
}) {
  const a = $n.useMemo(() => {
      const u = dH(t);
      return {
        store: t,
        subscription: u,
        getServerState: r ? () => r : void 0,
        stabilityCheck: i,
        identityFunctionCheck: o,
      };
    }, [t, r, i, o]),
    l = $n.useMemo(() => t.getState(), [t]);
  pH(() => {
    const { subscription: u } = a;
    return (
      (u.onStateChange = u.notifyNestedSubs),
      u.trySubscribe(),
      l !== t.getState() && u.notifyNestedSubs(),
      () => {
        u.tryUnsubscribe(), (u.onStateChange = void 0);
      }
    );
  }, [a, l]);
  const c = e || No;
  return $n.createElement(c.Provider, { value: a }, n);
}
var gH = mH;
function QR(t = No) {
  const e = t === No ? qR : dC(t),
    n = () => {
      const { store: r } = e();
      return r;
    };
  return Object.assign(n, { withTypes: () => n }), n;
}
var YR = QR();
function yH(t = No) {
  const e = t === No ? YR : QR(t),
    n = () => e().dispatch;
  return Object.assign(n, { withTypes: () => n }), n;
}
var XR = yH(),
  vH = VR;
sH(iH.useSyncExternalStoreWithSelector);
function bH(t) {
  return t.type === "query";
}
function CH(t) {
  return t.type === "mutation";
}
function Mu(t, ...e) {
  return Object.assign(t, ...e);
}
function _p(t) {
  return t.replace(t[0], t[0].toUpperCase());
}
var Ma = WeakMap ? new WeakMap() : void 0,
  wH = ({ endpointName: t, queryArgs: e }) => {
    let n = "";
    const r = Ma == null ? void 0 : Ma.get(e);
    if (typeof r == "string") n = r;
    else {
      const i = JSON.stringify(
        e,
        (o, a) => (
          (a = typeof a == "bigint" ? { $bigint: a.toString() } : a),
          (a = li(a)
            ? Object.keys(a)
                .sort()
                .reduce((l, c) => ((l[c] = a[c]), l), {})
            : a),
          a
        )
      );
      li(e) && (Ma == null || Ma.set(e, i)), (n = i);
    }
    return `${t}(${n})`;
  },
  Mp = Symbol();
function JS(t, e, n, r) {
  const i = x.useMemo(
      () => ({
        queryArgs: t,
        serialized:
          typeof t == "object"
            ? e({ queryArgs: t, endpointDefinition: n, endpointName: r })
            : t,
      }),
      [t, e, n, r]
    ),
    o = x.useRef(i);
  return (
    x.useEffect(() => {
      o.current.serialized !== i.serialized && (o.current = i);
    }, [i]),
    o.current.serialized === i.serialized ? o.current.queryArgs : t
  );
}
function Fp(t) {
  const e = x.useRef(t);
  return (
    x.useEffect(() => {
      Gl(e.current, t) || (e.current = t);
    }, [t]),
    Gl(e.current, t) ? e.current : t
  );
}
var SH = () =>
    typeof window < "u" &&
    typeof window.document < "u" &&
    typeof window.document.createElement < "u",
  xH = SH(),
  EH = () => typeof navigator < "u" && navigator.product === "ReactNative",
  TH = EH(),
  IH = () => (xH || TH ? x.useLayoutEffect : x.useEffect),
  NH = IH(),
  kH = (t) =>
    t.isUninitialized
      ? {
          ...t,
          isUninitialized: !1,
          isFetching: !0,
          isLoading: t.data === void 0,
          status: FR.pending,
        }
      : t;
function RH({
  api: t,
  moduleOptions: {
    batch: e,
    hooks: { useDispatch: n, useSelector: r, useStore: i },
    unstable__sideEffectsInRender: o,
    createSelector: a,
  },
  serializeQueryArgs: l,
  context: c,
}) {
  const u = o ? (m) => m() : x.useEffect;
  return { buildQueryHooks: f, buildMutationHook: p, usePrefetch: h };
  function d(m, v, C) {
    if (v != null && v.endpointName && m.isUninitialized) {
      const { endpointName: S } = v,
        T = c.endpointDefinitions[S];
      l({
        queryArgs: v.originalArgs,
        endpointDefinition: T,
        endpointName: S,
      }) === l({ queryArgs: C, endpointDefinition: T, endpointName: S }) &&
        (v = void 0);
    }
    let b = m.isSuccess ? m.data : v == null ? void 0 : v.data;
    b === void 0 && (b = m.data);
    const g = b !== void 0,
      y = m.isLoading,
      w = (!v || v.isLoading || v.isUninitialized) && !g && y,
      E = m.isSuccess || (y && g);
    return {
      ...m,
      data: b,
      currentData: m.data,
      isFetching: y,
      isLoading: w,
      isSuccess: E,
    };
  }
  function h(m, v) {
    const C = n(),
      b = Fp(v);
    return x.useCallback(
      (g, y) => C(t.util.prefetch(m, g, { ...b, ...y })),
      [m, C, b]
    );
  }
  function f(m) {
    const v = (
        g,
        {
          refetchOnReconnect: y,
          refetchOnFocus: w,
          refetchOnMountOrArgChange: E,
          skip: S = !1,
          pollingInterval: T = 0,
          skipPollingIfUnfocused: I = !1,
        } = {}
      ) => {
        const { initiate: R } = t.endpoints[m],
          A = n(),
          O = x.useRef(void 0);
        if (!O.current) {
          const q = A(t.internalActions.internal_getRTKQSubscriptions());
          O.current = q;
        }
        const _ = JS(S ? Vo : g, wH, c.endpointDefinitions[m], m),
          F = Fp({
            refetchOnReconnect: y,
            refetchOnFocus: w,
            pollingInterval: T,
            skipPollingIfUnfocused: I,
          }),
          $ = x.useRef(!1),
          Z = x.useRef(void 0);
        let { queryCacheKey: X, requestId: W } = Z.current || {},
          z = !1;
        X && W && (z = O.current.isRequestSubscribed(X, W));
        const Q = !z && $.current;
        return (
          u(() => {
            $.current = z;
          }),
          u(() => {
            Q && (Z.current = void 0);
          }, [Q]),
          u(() => {
            var oe;
            const q = Z.current;
            if ((typeof process < "u", _ === Vo)) {
              q == null || q.unsubscribe(), (Z.current = void 0);
              return;
            }
            const ie =
              (oe = Z.current) == null ? void 0 : oe.subscriptionOptions;
            if (!q || q.arg !== _) {
              q == null || q.unsubscribe();
              const pe = A(R(_, { subscriptionOptions: F, forceRefetch: E }));
              Z.current = pe;
            } else F !== ie && q.updateSubscriptionOptions(F);
          }, [A, R, E, _, F, Q]),
          x.useEffect(
            () => () => {
              var q;
              (q = Z.current) == null || q.unsubscribe(), (Z.current = void 0);
            },
            []
          ),
          x.useMemo(
            () => ({
              refetch: () => {
                var q;
                if (!Z.current) throw new Error(qn(38));
                return (q = Z.current) == null ? void 0 : q.refetch();
              },
            }),
            []
          )
        );
      },
      C = ({
        refetchOnReconnect: g,
        refetchOnFocus: y,
        pollingInterval: w = 0,
        skipPollingIfUnfocused: E = !1,
      } = {}) => {
        const { initiate: S } = t.endpoints[m],
          T = n(),
          [I, R] = x.useState(Mp),
          A = x.useRef(void 0),
          O = Fp({
            refetchOnReconnect: g,
            refetchOnFocus: y,
            pollingInterval: w,
            skipPollingIfUnfocused: E,
          });
        u(() => {
          var Z, X;
          const $ = (Z = A.current) == null ? void 0 : Z.subscriptionOptions;
          O !== $ &&
            ((X = A.current) == null || X.updateSubscriptionOptions(O));
        }, [O]);
        const _ = x.useRef(O);
        u(() => {
          _.current = O;
        }, [O]);
        const F = x.useCallback(
          function ($, Z = !1) {
            let X;
            return (
              e(() => {
                var W;
                (W = A.current) == null || W.unsubscribe(),
                  (A.current = X =
                    T(
                      S($, { subscriptionOptions: _.current, forceRefetch: !Z })
                    )),
                  R($);
              }),
              X
            );
          },
          [T, S]
        );
        return (
          x.useEffect(
            () => () => {
              var $;
              ($ = A == null ? void 0 : A.current) == null || $.unsubscribe();
            },
            []
          ),
          x.useEffect(() => {
            I !== Mp && !A.current && F(I, !0);
          }, [I, F]),
          x.useMemo(() => [F, I], [F, I])
        );
      },
      b = (g, { skip: y = !1, selectFromResult: w } = {}) => {
        const { select: E } = t.endpoints[m],
          S = JS(y ? Vo : g, l, c.endpointDefinitions[m], m),
          T = x.useRef(void 0),
          I = x.useMemo(
            () =>
              a([E(S), (F, $) => $, (F) => S], d, {
                memoizeOptions: { resultEqualityCheck: Gl },
              }),
            [E, S]
          ),
          R = x.useMemo(
            () =>
              w
                ? a([I], w, {
                    devModeChecks: { identityFunctionCheck: "never" },
                  })
                : I,
            [I, w]
          ),
          A = r((F) => R(F, T.current), Gl),
          O = i(),
          _ = I(O.getState(), T.current);
        return (
          NH(() => {
            T.current = _;
          }, [_]),
          A
        );
      };
    return {
      useQueryState: b,
      useQuerySubscription: v,
      useLazyQuerySubscription: C,
      useLazyQuery(g) {
        const [y, w] = C(g),
          E = b(w, { ...g, skip: w === Mp }),
          S = x.useMemo(() => ({ lastArg: w }), [w]);
        return x.useMemo(() => [y, E, S], [y, E, S]);
      },
      useQuery(g, y) {
        const w = v(g, y),
          E = b(g, {
            selectFromResult: g === Vo || (y != null && y.skip) ? void 0 : kH,
            ...y,
          }),
          {
            data: S,
            status: T,
            isLoading: I,
            isSuccess: R,
            isError: A,
            error: O,
          } = E;
        return (
          x.useDebugValue({
            data: S,
            status: T,
            isLoading: I,
            isSuccess: R,
            isError: A,
            error: O,
          }),
          x.useMemo(() => ({ ...E, ...w }), [E, w])
        );
      },
    };
  }
  function p(m) {
    return ({ selectFromResult: v, fixedCacheKey: C } = {}) => {
      const { select: b, initiate: g } = t.endpoints[m],
        y = n(),
        [w, E] = x.useState();
      x.useEffect(
        () => () => {
          (w != null && w.arg.fixedCacheKey) || w == null || w.reset();
        },
        [w]
      );
      const S = x.useCallback(
          function (ie) {
            const oe = y(g(ie, { fixedCacheKey: C }));
            return E(oe), oe;
          },
          [y, g, C]
        ),
        { requestId: T } = w || {},
        I = x.useMemo(
          () =>
            b({
              fixedCacheKey: C,
              requestId: w == null ? void 0 : w.requestId,
            }),
          [C, w, b]
        ),
        R = x.useMemo(() => (v ? a([I], v) : I), [v, I]),
        A = r(R, Gl),
        O = C == null ? (w == null ? void 0 : w.arg.originalArgs) : void 0,
        _ = x.useCallback(() => {
          e(() => {
            w && E(void 0),
              C &&
                y(
                  t.internalActions.removeMutationResult({
                    requestId: T,
                    fixedCacheKey: C,
                  })
                );
          });
        }, [y, C, w, T]),
        {
          endpointName: F,
          data: $,
          status: Z,
          isLoading: X,
          isSuccess: W,
          isError: z,
          error: Q,
        } = A;
      x.useDebugValue({
        endpointName: F,
        data: $,
        status: Z,
        isLoading: X,
        isSuccess: W,
        isError: z,
        error: Q,
      });
      const q = x.useMemo(
        () => ({ ...A, originalArgs: O, reset: _ }),
        [A, O, _]
      );
      return x.useMemo(() => [S, q], [S, q]);
    };
  }
}
var AH = Symbol(),
  jH = ({
    batch: t = vH,
    hooks: e = { useDispatch: XR, useSelector: WR, useStore: YR },
    createSelector: n = aC,
    unstable__sideEffectsInRender: r = !1,
    ...i
  } = {}) => ({
    name: AH,
    init(o, { serializeQueryArgs: a }, l) {
      const c = o,
        {
          buildQueryHooks: u,
          buildMutationHook: d,
          usePrefetch: h,
        } = RH({
          api: o,
          moduleOptions: {
            batch: t,
            hooks: e,
            unstable__sideEffectsInRender: r,
            createSelector: n,
          },
          serializeQueryArgs: a,
          context: l,
        });
      return (
        Mu(c, { usePrefetch: h }),
        Mu(l, { batch: t }),
        {
          injectEndpoint(f, p) {
            if (bH(p)) {
              const {
                useQuery: m,
                useLazyQuery: v,
                useLazyQuerySubscription: C,
                useQueryState: b,
                useQuerySubscription: g,
              } = u(f);
              Mu(c.endpoints[f], {
                useQuery: m,
                useLazyQuery: v,
                useLazyQuerySubscription: C,
                useQueryState: b,
                useQuerySubscription: g,
              }),
                (o[`use${_p(f)}Query`] = m),
                (o[`useLazy${_p(f)}Query`] = v);
            } else if (CH(p)) {
              const m = d(f);
              Mu(c.endpoints[f], { useMutation: m }),
                (o[`use${_p(f)}Mutation`] = m);
            }
          },
        }
      );
    },
  }),
  ln = F3(Y3(), jH());
const ss = class ss {
  constructor() {}
  static getInstance() {
    return ss._instance || (ss._instance = new Xv(C4)), ss._instance;
  }
};
ae(ss, "_instance");
let ly = ss;
const ad = ly.getInstance(),
  zo = class zo {
    constructor() {}
    async getToken() {
      const e = ad.getAllAccounts()[0];
      try {
        return (await ad.acquireTokenSilent({ scopes: SR, account: e }))
          .accessToken;
      } catch {
        ad.loginRedirect(eC).catch((r) => {
          console.error("Login error:", r);
        });
      }
    }
    static getInstance() {
      return zo._instance || (zo._instance = new zo()), zo._instance;
    }
  };
ae(zo, "_instance");
let cy = zo;
const JR = cy.getInstance(),
  ZR = async (t) => {
    const e = await JR.getToken();
    return (
      t.set("Content-Type", "application/json"),
      t.set("Authorization", `Bearer ${e}`),
      t
    );
  },
  OH = async () => `Bearer ${await JR.getToken()}`;
function hC(t) {
  return Object.entries(t)
    .filter(([, e]) => e !== null && (typeof e != "object" || Array.isArray(e)))
    .flatMap(([e, n]) =>
      Array.isArray(n)
        ? n.map((r) => `${encodeURIComponent(e)}=${encodeURIComponent(r)}`)
        : `${encodeURIComponent(e)}=${encodeURIComponent(n)}`
    )
    .join("&");
}
function DH(t) {
  const e = {};
  for (const [n, r] of Object.entries(t)) r !== null && (e[n] = r);
  return e;
}
const cn = R3({
    baseUrl: tC,
    prepareHeaders: async (t) => await ZR(t),
    paramsSerializer: (t) => {
      const e = DH(t);
      return hC(e);
    },
  }),
  sd = ln({
    reducerPath: "userLookupApi",
    baseQuery: cn,
    tagTypes: ["CCISUsers", "UserRoles", "UserLookup"],
    endpoints: (t) => ({
      getUserLookup: t.query({
        query: () => ({ url: "/user/lookup" }),
        providesTags: ["UserLookup"],
      }),
      getCCISUsers: t.query({
        query: (e) => ({ url: "/user/CCISUsers", params: e }),
        providesTags: ["CCISUsers"],
      }),
      getRoles: t.query({
        query: () => ({ url: "/user/roles" }),
        providesTags: ["UserRoles"],
      }),
      linkCCISUser: t.mutation({
        query: (e) => ({ url: "/user/CCISUsers", method: "POST", body: e }),
        invalidatesTags: ["CCISUsers", "UserRoles"],
      }),
      updateCCISUser: t.mutation({
        query: (e) => ({ url: "/user/CCISUsers", method: "PUT", body: e }),
        invalidatesTags: ["CCISUsers", "UserRoles"],
      }),
      clearCache: t.mutation({
        query: () => ({ url: "/user/clearCache", method: "POST" }),
        invalidatesTags: ["CCISUsers", "UserRoles"],
      }),
    }),
  }),
  {
    useGetUserLookupQuery: eA,
    useGetCCISUsersQuery: LH,
    useLinkCCISUserMutation: PH,
    useUpdateCCISUserMutation: _H,
    useGetRolesQuery: MH,
    useClearCacheMutation: FH,
  } = sd;
var uy = ((t) => (
  (t[(t.None = 0)] = "None"),
  (t[(t.Admin = 1)] = "Admin"),
  (t[(t.QuickInvoice = 2)] = "QuickInvoice"),
  t
))(uy || {});
function BH() {
  const { data: t, error: e } = MH();
  return s.jsx(s.Fragment, {
    children: s.jsxs(nC, {
      children: [
        s.jsx(ph.Toggle, { "aria-controls": "basic-navbar-nav" }),
        !e &&
          s.jsxs(ph.Collapse, {
            id: "basic-navbar-nav",
            children: [
              s.jsxs(yi, {
                className: "me-auto align-items-end",
                children: [
                  s.jsx(yi.Link, {
                    as: Hr,
                    to: "/licences",
                    children: "Licence",
                  }),
                  s.jsx(yi.Link, {
                    as: Hr,
                    to: "/debtors",
                    children: "Debtors",
                  }),
                  s.jsx(yi.Link, {
                    as: Hr,
                    to: "/debtor-groups",
                    children: "Debtor Groups",
                  }),
                  s.jsxs(Rp, {
                    title: "Delivery Notes",
                    children: [
                      s.jsx(Rp.Item, {
                        as: Hr,
                        to: "/delivery-note-tracking",
                        children: "Delivery Note Tracking",
                      }),
                      s.jsx(Rp.Item, {
                        as: Hr,
                        to: "/delivery-note-report",
                        children: "Delivery Note Report",
                      }),
                    ],
                  }),
                  s.jsx(yi.Link, {
                    as: Hr,
                    to: "/reports/licence-list",
                    children: "Licence List with Client",
                  }),
                  s.jsx(yi.Link, {
                    as: Hr,
                    to: "/client-support/system-info-list",
                    children: "System Information List",
                  }),
                  (t == null ? void 0 : t.includes(uy.Admin)) &&
                    s.jsx(yi.Link, {
                      as: Hr,
                      to: "/admin/users",
                      children: "Users",
                    }),
                  (t == null ? void 0 : t.includes(uy.QuickInvoice)) &&
                    s.jsx(yi.Link, {
                      as: Hr,
                      to: "quick-invoice",
                      children: "Quick Invoice",
                    }),
                ],
              }),
              s.jsx(yi, {
                className: "me-1 align-right",
                children: s.jsx(w4, {}),
              }),
            ],
          }),
      ],
    }),
  });
}
const UH = () =>
    s.jsxs(s.Fragment, { children: [s.jsx(BH, {}), s.jsx(e2, {})] }),
  zH = () => {
    const { instance: t } = Gs(),
      e = () => {
        t.loginRedirect(eC).catch((n) => {
          console.error("Login error:", n);
        });
      };
    return s.jsxs(xe, {
      variant: "primary",
      onClick: e,
      className: "ms-2",
      children: [
        s.jsx(Bb, { className: "me-1 mb-1" }),
        s.jsx("span", { children: " Login" }),
      ],
    });
  },
  ld = ln({
    reducerPath: "requestAccessApi",
    baseQuery: cn,
    endpoints: (t) => ({
      requestAccess: t.mutation({
        query: () => ({ url: "/accessRequest", method: "POST" }),
      }),
    }),
  }),
  { useRequestAccessMutation: HH } = ld,
  Ae = XR,
  Re = WR,
  $H = () => ({
    isRequestingAccess: !1,
    requestAccessSuccess: !1,
    requestAccessError: null,
    isLoading: !1,
  }),
  KH = $H(),
  tA = st({
    name: "requestAccess",
    initialState: KH,
    reducers: {
      setIsRequestingAccess: (t, e) => {
        t.isRequestingAccess = e.payload;
      },
      setRequestAccessSuccess: (t, e) => {
        t.requestAccessSuccess = e.payload;
      },
      setRequestAccessError: (t, e) => {
        t.requestAccessError = e.payload;
      },
      setRequestAccessLoading: (t, e) => {
        t.isLoading = e.payload;
      },
    },
  }),
  {
    setIsRequestingAccess: qH,
    setRequestAccessSuccess: GH,
    setRequestAccessError: ZS,
    setRequestAccessLoading: ex,
  } = tA.actions,
  WH = tA.reducer,
  VH = () => {
    const { instance: t } = Gs(),
      e = Ae(),
      [n] = HH(),
      { isLoading: r } = Re((o) => o.requestAccess),
      i = async () => {
        e(qH(!0)), e(ZS(null));
        try {
          if (
            !(await t.acquireTokenPopup(eC).catch((a) => {
              console.error("Login error:", a);
            }))
          )
            return;
          e(ex(!0)), await n().unwrap(), e(GH(!0));
        } catch (o) {
          const a = o;
          e(ZS(a)), console.error("Request access error:", a);
        } finally {
          e(ex(!1));
        }
      };
    return s.jsxs(s.Fragment, {
      children: [
        s.jsxs(xe, {
          variant: "info",
          onClick: i,
          disabled: r,
          children: [
            s.jsx(qb, { className: "me-1 mb-1" }),
            s.jsx("span", { children: " Request Access" }),
          ],
        }),
        r &&
          s.jsx(Ve, {
            as: "span",
            animation: "border",
            size: "sm",
            role: "status",
            "aria-hidden": "true",
          }),
      ],
    });
  },
  ur = "/licences",
  Of = "/delivery-note",
  QH = "Backspace",
  YH = "Delete",
  XH = "ArrowLeft",
  JH = "ArrowRight",
  fC = "Enter",
  ZH = "Tab",
  Df = [QH, YH, XH, JH, ZH],
  e$ = "/licence/export",
  t$ = "Licences.xlsx",
  n$ = "/report/LicenceListWithClientReportXlsx",
  r$ = "LicenceListWithClientReport.xlsx",
  i$ = "/report/LicenceListWithClientReportPdf",
  nA = "/reports/licence-list-pdf",
  o$ = "/deliveryNote/DeliveryNoteExport",
  a$ = "Delivery Note Export.xlsx",
  s$ = 25379,
  rA =
    "You do not have the necessary permissions to perform this action for this organization.",
  iA = "Failed to retrieve data.",
  l$ =
    "The checkbox indicates the debtor group is designated for Quick Invoice consolidation.";
function c$(t) {
  return (
    typeof t == "object" &&
    t !== null &&
    "status" in t &&
    "data" in t &&
    typeof t.data == "object" &&
    t.data !== null &&
    "message" in t.data
  );
}
function oA(t) {
  return typeof t == "object" && t !== null && "status" in t;
}
function dy(t) {
  return c$(t)
    ? t.data
    : oA(t) && t.status === 403
    ? { message: rA }
    : (console.log(t), { message: iA });
}
function u$(t) {
  return oA(t) ? t.status : null;
}
const Qe = ({ error: t, size: e = "lg" }) => {
  const n = Lt(),
    r = typeof t == "string" ? t : dy(t).message;
  return (
    k.useEffect(() => {
      typeof t != "string" &&
        u$(t) === 401 &&
        n("/unauthorized", { state: { message: dy(t).message } });
    }, [t, n]),
    e === "sm" && t
      ? s.jsx("div", {
          className: "alert alert-danger alert-small",
          children: r,
        })
      : e === "lg" && t
      ? s.jsx("pre", {
          children: s.jsx(Cb, { variant: "danger", children: r }, "danger"),
        })
      : s.jsx(s.Fragment, {})
  );
};
function aA() {
  const { requestAccessSuccess: t, requestAccessError: e } = Re(
    (n) => n.requestAccess
  );
  return s.jsxs(s.Fragment, {
    children: [
      s.jsx(nC, {}),
      s.jsxs(D, {
        sm: 3,
        children: [
          s.jsxs(M, {
            children: [
              t &&
                s.jsx(
                  Cb,
                  {
                    variant: "primary",
                    children:
                      "Request sent successfully. We will attend to your request shortly.",
                  },
                  "success"
                ),
              e && s.jsx(Qe, { error: e }),
            ],
          }),
          s.jsxs(M, {
            xs: "auto",
            children: [
              s.jsx(D, { children: s.jsx(zH, {}) }),
              s.jsx(D, {}),
              s.jsx(D, { children: s.jsx(VH, {}) }),
            ],
          }),
        ],
      }),
    ],
  });
}
const tx = () => s.jsx(aA, {});
function d$() {
  const t = Re((e) => e.requestAccess);
  return s.jsxs("div", {
    className: "App",
    children: [
      s.jsx(zM, {
        children: t.isRequestingAccess === !1 ? s.jsx(UH, {}) : s.jsx(tx, {}),
      }),
      s.jsx(HM, { children: s.jsx(tx, {}) }),
    ],
  });
}
const cd = ln({
    reducerPath: "licenceApi",
    baseQuery: cn,
    tagTypes: [
      "Licences",
      "LicenceSeries",
      "PendingLicence",
      "Licence",
      "TransferLicence",
    ],
    endpoints: (t) => ({
      getLicencesByFilters: t.query({
        query: (e) => ({ url: "/licence", params: e }),
        providesTags: ["Licences"],
      }),
      getLicenceSeries: t.query({
        query: (e) => ({ url: `/licence/series?organisationId=${e}` }),
        providesTags: ["LicenceSeries"],
      }),
      getPendingLicences: t.query({
        query: (e) => ({ url: "/licence/pending", params: e }),
        providesTags: ["PendingLicence"],
      }),
      getLicence: t.query({
        query: (e) => ({ url: `/licence/${e}` }),
        providesTags: ["Licence"],
      }),
      getLicencesByDebtor: t.query({
        query: (e) => ({ url: `/licence/byDebtor?debtorCode=${e}` }),
        providesTags: ["Licences"],
      }),
      exportToExcel: t.query({
        query: (e) => ({ url: "/licence/export", params: e }),
      }),
      deleteLicence: t.mutation({
        query: (e) => ({ url: "/licence", method: "DELETE", params: e }),
        invalidatesTags: ["Licences", "Licence"],
      }),
      savePendingLicence: t.mutation({
        query: (e) => ({ url: "/licence/pending", method: "POST", body: e }),
        invalidatesTags: ["Licences", "PendingLicence"],
      }),
      updatePendingLicence: t.mutation({
        query: (e) => ({ url: "/licence/pending", method: "PUT", body: e }),
        invalidatesTags: ["Licences", "PendingLicence", "Licence"],
      }),
      activateLicence: t.mutation({
        query: (e) => ({ url: "/licence/activate", method: "PUT", body: e }),
        invalidatesTags: ["Licences", "Licence"],
      }),
      editLicence: t.mutation({
        query: (e) => ({ url: "/licence", method: "PUT", body: e }),
        invalidatesTags: ["Licences", "Licence"],
      }),
      changeLicenceCount: t.mutation({
        query: (e) => ({ url: "/licence/ChangeCount", method: "PUT", body: e }),
        invalidatesTags: ["Licences", "Licence"],
      }),
      replaceLicence: t.mutation({
        query: (e) => ({ url: "/licence/replace", method: "PUT", body: e }),
        invalidatesTags: ["Licences", "Licence", "PendingLicence"],
      }),
      transferLicence: t.mutation({
        query: (e) => ({ url: "/licence/transfer", method: "PUT", body: e }),
        invalidatesTags: ["Licences", "TransferLicence", "Licence"],
      }),
      getLicenceStatuses: t.query({
        query: () => ({ url: "/licence/statuses" }),
      }),
    }),
  }),
  {
    useGetLicencesByFiltersQuery: h$,
    useGetLicenceSeriesQuery: f$,
    useGetPendingLicencesQuery: sA,
    useLazyExportToExcelQuery: EY,
    useDeleteLicenceMutation: p$,
    useSavePendingLicenceMutation: m$,
    useUpdatePendingLicenceMutation: g$,
    useActivateLicenceMutation: y$,
    useEditLicenceMutation: v$,
    useReplaceLicenceMutation: b$,
    useGetLicenceQuery: Js,
    useTransferLicenceMutation: C$,
    useLazyGetLicencesByDebtorQuery: TY,
    useGetLicencesByDebtorQuery: w$,
    useChangeLicenceCountMutation: S$,
    useGetLicenceStatusesQuery: x$,
    useLazyGetLicenceStatusesQuery: IY,
  } = cd,
  ud = ln({
    reducerPath: "organisationApi",
    baseQuery: cn,
    endpoints: (t) => ({
      getOrganisations: t.query({ query: () => "/organisation" }),
    }),
  }),
  { useGetOrganisationsQuery: Zs } = ud,
  Wl = ln({
    reducerPath: "debtorApi",
    baseQuery: cn,
    tagTypes: ["Debtor", "DebtorLookup", "DebtIdLookup"],
    endpoints: (t) => ({
      getDebtors: t.query({
        query: (e) => ({ url: "/debtor", params: e }),
        providesTags: ["Debtor"],
      }),
      getDebtorsLookup: t.query({
        query: (e) => ({ url: "/debtor/lookup", params: e }),
        providesTags: ["DebtorLookup"],
      }),
      getDebtIdLookup: t.query({
        query: (e) => ({ url: "/debtor/debtIdLookup", params: e }),
        providesTags: ["DebtIdLookup"],
      }),
      searchDebtors: t.query({
        query: (e) => ({ url: "/debtor/search", params: e }),
        providesTags: ["DebtorLookup"],
      }),
      filterDebtorsByCodeStart: t.query({
        query: (e) => ({ url: "/debtor/FilterByCodeStart", params: e }),
        providesTags: ["Debtor"],
      }),
      addDebtor: t.mutation({
        query: (e) => ({ url: "/debtor", method: "POST", body: e }),
        invalidatesTags: ["Debtor", "DebtorLookup", "DebtIdLookup"],
      }),
      editDebtor: t.mutation({
        query: (e) => ({ url: "/debtor", method: "PUT", body: e }),
        invalidatesTags: ["Debtor", "DebtorLookup", "DebtIdLookup"],
      }),
    }),
  }),
  {
    useGetDebtorsQuery: E$,
    useLazySearchDebtorsQuery: T$,
    useSearchDebtorsQuery: I$,
    useFilterDebtorsByCodeStartQuery: N$,
    useLazyGetDebtorsQuery: NY,
    useAddDebtorMutation: k$,
    useLazyGetDebtorsLookupQuery: lA,
    useGetDebtorsLookupQuery: R$,
    useEditDebtorMutation: A$,
    useGetDebtIdLookupQuery: j$,
  } = Wl,
  dd = ln({
    reducerPath: "debtRatingApi",
    baseQuery: cn,
    tagTypes: ["DebtRatings", "DefaultDebtRatings"],
    endpoints: (t) => ({
      getDebtRatings: t.query({
        query: () => ({ url: "/debtRating" }),
        providesTags: ["DebtRatings"],
      }),
      getDefaultDebtRatings: t.query({
        query: () => ({ url: "/debtRating/default" }),
        providesTags: ["DefaultDebtRatings"],
      }),
    }),
  }),
  { useGetDebtRatingsQuery: cA, useGetDefaultDebtRatingsQuery: O$ } = dd,
  hd = ln({
    reducerPath: "discountTypeApi",
    baseQuery: cn,
    endpoints: (t) => ({
      getDiscountTypes: t.query({
        query: (e) => ({ url: "/discountType", params: e }),
      }),
    }),
  }),
  { useGetDiscountTypesQuery: uA } = hd,
  fd = ln({
    reducerPath: "ledgerCodeLookupApi",
    baseQuery: cn,
    tagTypes: ["LedgerCodes", "DebtorControlCodes"],
    endpoints: (t) => ({
      getContractLedgerCodeLookup: t.query({
        query: () => ({ url: "/ledgerCode/contractLedgerCode" }),
        providesTags: ["LedgerCodes"],
      }),
      getDebtorControlCodeLookup: t.query({
        query: () => ({ url: "/ledgerCode/debtorControlCode" }),
        providesTags: ["DebtorControlCodes"],
      }),
    }),
  }),
  {
    useGetContractLedgerCodeLookupQuery: D$,
    useGetDebtorControlCodeLookupQuery: L$,
  } = fd,
  pd = ln({
    reducerPath: "currencyLookupApi",
    baseQuery: cn,
    endpoints: (t) => ({
      getCurrencyLookup: t.query({
        query: () => ({ url: "/currency/lookup" }),
      }),
    }),
  }),
  { useGetCurrencyLookupQuery: dA, useLazyGetCurrencyLookupQuery: kY } = pd,
  md = ln({
    reducerPath: "countryLookupApi",
    baseQuery: cn,
    endpoints: (t) => ({
      getCountryLookup: t.query({ query: () => ({ url: "/country/lookup" }) }),
    }),
  }),
  { useGetCountryLookupQuery: hA } = md,
  gd = ln({
    reducerPath: "billingTypeApi",
    baseQuery: cn,
    endpoints: (t) => ({
      getBillingTypes: t.query({ query: () => ({ url: "/billingType" }) }),
    }),
  }),
  { useGetBillingTypesQuery: pC, useLazyGetBillingTypesQuery: RY } = gd,
  yd = ln({
    reducerPath: "debtorGroupGroupApi",
    baseQuery: cn,
    tagTypes: ["DebtorGroup", "DebtorGroupLookup"],
    endpoints: (t) => ({
      getDebtorGroups: t.query({
        query: (e) => ({ url: "/debtorGroup", params: e }),
        providesTags: ["DebtorGroup"],
      }),
      getDebtorGroupsLookup: t.query({
        query: () => ({ url: "/debtorGroup/lookup" }),
        providesTags: ["DebtorGroupLookup"],
      }),
      saveDebtorGroup: t.mutation({
        query: (e) => ({ url: "/debtorGroup", method: "POST", body: e }),
        invalidatesTags: ["DebtorGroup", "DebtorGroupLookup"],
      }),
      updateDebtorGroup: t.mutation({
        query: (e) => ({ url: "/debtorGroup", method: "PUT", body: e }),
        invalidatesTags: ["DebtorGroup", "DebtorGroupLookup"],
      }),
      deleteDebtorGroup: t.mutation({
        query: (e) => ({ url: "/debtorGroup", method: "DELETE", params: e }),
        invalidatesTags: ["DebtorGroup", "DebtorGroupLookup"],
      }),
    }),
  }),
  {
    useGetDebtorGroupsQuery: P$,
    useGetDebtorGroupsLookupQuery: fA,
    useLazyGetDebtorGroupsQuery: AY,
    useLazyGetDebtorGroupsLookupQuery: jY,
    useSaveDebtorGroupMutation: _$,
    useUpdateDebtorGroupMutation: M$,
    useDeleteDebtorGroupMutation: F$,
  } = yd,
  vd = ln({
    reducerPath: "debtorRegionLookupApi",
    baseQuery: cn,
    endpoints: (t) => ({
      getDebtorRegionLookup: t.query({
        query: (e) => ({
          url: "/debtorRegion/lookup",
          params: { organisationId: e },
        }),
      }),
    }),
  }),
  { useGetDebtorRegionLookupQuery: B$ } = vd,
  bd = ln({
    reducerPath: "deliveryNoteApi",
    baseQuery: cn,
    tagTypes: ["LicenceTransactions", "LicenceTransaction"],
    endpoints: (t) => ({
      getLicenceTransactions: t.query({
        query: (e) => ({
          url: "/deliveryNote/licenceTransactions",
          method: "POST",
          body: e,
        }),
        providesTags: ["LicenceTransactions"],
      }),
      getLatestDeliveryNoteId: t.query({
        query: () => ({ url: "/deliveryNote/latest" }),
      }),
      updateLicenceTransaction: t.mutation({
        query: (e) => ({
          url: "/deliveryNote/licenceTransaction/update",
          method: "PUT",
          body: e,
        }),
        invalidatesTags: ["LicenceTransactions", "LicenceTransaction"],
      }),
      getLicenceTransaction: t.query({
        query: (e) => ({ url: `deliveryNote/licenceTransaction/${e}` }),
        providesTags: ["LicenceTransaction"],
      }),
    }),
  }),
  {
    useGetLicenceTransactionsQuery: U$,
    useUpdateLicenceTransactionMutation: z$,
    useGetLicenceTransactionQuery: H$,
    useGetLatestDeliveryNoteIdQuery: $$,
  } = bd,
  Cd = ln({
    reducerPath: "licenceValidationExemptionApi",
    baseQuery: cn,
    tagTypes: ["Exemptions"],
    endpoints: (t) => ({
      getLicenceValidationExemption: t.query({
        query: (e) => ({ url: `/licenceValidationExemption/${e}` }),
        providesTags: ["Exemptions"],
      }),
      saveLicenceValidationExemption: t.mutation({
        query: (e) => ({
          url: "/licenceValidationExemption",
          method: "POST",
          body: e,
        }),
        invalidatesTags: ["Exemptions"],
      }),
      updateLicenceValidationExemption: t.mutation({
        query: (e) => ({
          url: "/licenceValidationExemption",
          method: "PUT",
          body: e,
        }),
        invalidatesTags: ["Exemptions"],
      }),
      deleteLicenceValidationExemption: t.mutation({
        query: (e) => ({
          url: "/licenceValidationExemption",
          method: "DELETE",
          params: e,
        }),
        invalidatesTags: ["Exemptions"],
      }),
    }),
  }),
  {
    useGetLicenceValidationExemptionQuery: K$,
    useSaveLicenceValidationExemptionMutation: q$,
    useUpdateLicenceValidationExemptionMutation: G$,
    useDeleteLicenceValidationExemptionMutation: W$,
  } = Cd,
  wd = ln({
    reducerPath: "clientSupportApi",
    baseQuery: cn,
    tagTypes: ["SystemInformationList", "SystemInformation"],
    endpoints: (t) => ({
      getSystemInformationList: t.query({
        query: (e) => ({
          url: "/clientSupport/systemInformationList",
          params: e,
        }),
        providesTags: ["SystemInformationList"],
      }),
      getSystemInformation: t.query({
        query: (e) => ({ url: `/clientSupport/${e}` }),
        providesTags: ["SystemInformation"],
      }),
    }),
  }),
  { useGetSystemInformationListQuery: V$, useGetSystemInformationQuery: Q$ } =
    wd;
var Je = ((t) => (
  (t[(t.None = 0)] = "None"),
  (t[(t.EqualTo = 1)] = "EqualTo"),
  (t[(t.LessThan = 2)] = "LessThan"),
  (t[(t.GreaterThan = 3)] = "GreaterThan"),
  t
))(Je || {});
const Y$ = () => ({
    licenceNumber: null,
    pageSize: Jt,
    clientName: null,
    clientSurname: null,
    clientEmail: null,
    clientTel: null,
    clientMobile: null,
    debtorName: null,
    debtorCode: null,
    debtRating: null,
    sortBy: null,
    sortByDirection: null,
    count: null,
    countOperator: Je.EqualTo,
    showPending: !0,
    countComparison: null,
  }),
  X$ = () => ({
    ...Y$(),
    organisationId: 0,
    sortByParameters: null,
    debtorCodeStartsWithSwitch: !1,
  }),
  J$ = () => ({
    id: 0,
    name: null,
    code: null,
    tel: null,
    email: null,
    contact: null,
    currencyCode: null,
    debtRatingId: null,
    billingTypeId: null,
    sortBy: null,
    sortByDirection: null,
    pageSize: Jt,
    totalSystems: null,
    totalSystemsOperator: Je.EqualTo,
    totalSystemsComparison: null,
    licenceCount: null,
    licenceCountOperator: Je.EqualTo,
    licenceCountComparison: null,
    user: null,
    isInvoiced: null,
    debtorGroupId: null,
    rate: null,
    rateOperator: Je.EqualTo,
    rateComparison: null,
    fee: null,
    feeOperator: Je.EqualTo,
    feeComparison: null,
  }),
  Lf = () => ({
    ...J$(),
    organisationId: 0,
    concatenateCodeAndDescription: !0,
    sortByParameters: null,
    debtorCodeStartsWithSwitch: !1,
  }),
  Z$ = () => ({ id: 0, name: "", description: "" }),
  e6 = Z$(),
  Lr = st({
    name: "organisation",
    initialState: e6,
    reducers: {
      setOrganisation: (t, e) => {
        (t.id = e.payload.id), (t.name = e.payload.name);
      },
    },
  }),
  { setOrganisation: t6 } = Lr.actions,
  n6 = Lr.reducer,
  Bp = Lf(),
  Vr = st({
    name: "debtorFilter",
    initialState: Bp,
    reducers: {
      setDebtorFilterName: (t, e) => {
        t.name = e.payload;
      },
      setDebtorFilterCode: (t, e) => {
        t.code = e.payload;
      },
      setDebtorFilterCodeStartsWithSwitch: (t, e) => {
        t.debtorCodeStartsWithSwitch = e.payload;
      },
      setDebtorFilterTel: (t, e) => {
        t.tel = e.payload;
      },
      setDebtorFilterEmail: (t, e) => {
        t.email = e.payload;
      },
      setDebtorFilterContact: (t, e) => {
        t.contact = e.payload;
      },
      setDebtorFilterCurrencyCode: (t, e) => {
        t.currencyCode = e.payload;
      },
      setDebtorFilterUser: (t, e) => {
        t.user = e.payload;
      },
      setDebtorFilterDebtRatingId: (t, e) => {
        t.debtRatingId = e.payload;
      },
      setDebtorFilterBillingTypeId: (t, e) => {
        t.billingTypeId = e.payload;
      },
      setDebtorFilterId: (t, e) => {
        t.id = e.payload;
      },
      setDebtorFilterPageSize: (t, e) => {
        t.pageSize = e.payload;
      },
      setDebtorFilterSortBy: (t, e) => {
        (t.sortByDirection = e.payload.sortByDirection),
          (t.sortBy = e.payload.sortByFieldName),
          (t.sortByParameters = e.payload);
      },
      setDebtorFilterTotalSystemsComparison: (t, e) => {
        (t.totalSystemsComparison = e.payload),
          (t.totalSystems = e.payload.operand),
          (t.totalSystemsOperator = e.payload.operator);
      },
      setDebtorFilterLicenceCountComparison: (t, e) => {
        (t.licenceCountComparison = e.payload),
          (t.licenceCount = e.payload.operand),
          (t.licenceCountOperator = e.payload.operator);
      },
      setDebtorFilterIsInvoiced: (t, e) => {
        t.isInvoiced = e.payload.value;
      },
      setDebtorFilterDebtorGroupId: (t, e) => {
        t.debtorGroupId = e.payload;
      },
      setDebtorFilterRateComparison: (t, e) => {
        (t.rateComparison = e.payload),
          (t.rate = e.payload.operand),
          (t.rateOperator = e.payload.operator);
      },
      setDebtorFilterFeeComparison: (t, e) => {
        (t.feeComparison = e.payload),
          (t.fee = e.payload.operand),
          (t.feeOperator = e.payload.operator);
      },
      clearDebtorFilterSortBy: (t) => {
        (t.sortBy = null),
          (t.sortByDirection = null),
          (t.sortByParameters = null);
      },
      clearDebtorFilterAllFilters: (t) => ({
        ...Bp,
        organisationId: t.organisationId,
        sortBy: t.sortBy,
        sortByDirection: t.sortByDirection,
        sortByParameters: t.sortByParameters,
      }),
    },
    extraReducers: (t) => {
      t.addCase(Eh.actions.clearLicenceFilterAllFilters, (e) => ({
        ...Bp,
        organisationId: e.organisationId,
        sortBy: e.sortBy,
        sortByDirection: e.sortByDirection,
        sortByParameters: e.sortByParameters,
      }))
        .addCase(
          Eh.actions.setLicenceFilterDebtorCodeStartsWithSwitch,
          (e, n) => {
            e.debtorCodeStartsWithSwitch = n.payload;
          }
        )
        .addCase(Lr.actions.setOrganisation, (e, n) => {
          e.organisationId = n.payload.id;
        });
    },
  }),
  {
    setDebtorFilterName: mC,
    setDebtorFilterCode: gC,
    setDebtorFilterCodeStartsWithSwitch: r6,
    setDebtorFilterId: OY,
    setDebtorFilterPageSize: i6,
    setDebtorFilterSortBy: o6,
    setDebtorFilterContact: a6,
    setDebtorFilterEmail: s6,
    setDebtorFilterTel: l6,
    setDebtorFilterCurrencyCode: c6,
    setDebtorFilterDebtRatingId: pA,
    setDebtorFilterBillingTypeId: u6,
    clearDebtorFilterAllFilters: d6,
    clearDebtorFilterSortBy: h6,
    setDebtorFilterLicenceCountComparison: f6,
    setDebtorFilterTotalSystemsComparison: p6,
    setDebtorFilterUser: m6,
    setDebtorFilterIsInvoiced: g6,
    setDebtorFilterDebtorGroupId: y6,
    setDebtorFilterRateComparison: v6,
    setDebtorFilterFeeComparison: b6,
  } = Vr.actions,
  C6 = Vr.reducer,
  nx = X$(),
  Eh = st({
    name: "licenceFilter",
    initialState: nx,
    reducers: {
      setLicenceFilterLicenceNumber: (t, e) => {
        t.licenceNumber = e.payload;
      },
      setLicenceFilterClientName: (t, e) => {
        t.clientName = e.payload;
      },
      setLicenceFilterClientSurname: (t, e) => {
        t.clientSurname = e.payload;
      },
      setLicenceFilterClientEmail: (t, e) => {
        t.clientEmail = e.payload;
      },
      setLicenceFilterClientTel: (t, e) => {
        t.clientTel = e.payload;
      },
      setLicenceFilterClientMobile: (t, e) => {
        t.clientMobile = e.payload;
      },
      setLicenceFilterDebtorName: (t, e) => {
        t.debtorName = e.payload;
      },
      setLicenceFilterDebtorCode: (t, e) => {
        t.debtorCode = e.payload;
      },
      setLicenceFilterDebtorCodeStartsWithSwitch: (t, e) => {
        t.debtorCodeStartsWithSwitch = e.payload;
      },
      setLicenceFilterDebtRating: (t, e) => {
        t.debtRating = e.payload;
      },
      setLicenceFilterPageSize: (t, e) => {
        t.pageSize = e.payload;
      },
      setLicenceFilterSortBy: (t, e) => {
        (t.sortByDirection = e.payload.sortByDirection),
          (t.sortBy = e.payload.sortByFieldName),
          (t.sortByParameters = e.payload);
      },
      setLicenceFilterCountComparison: (t, e) => {
        (t.countComparison = e.payload),
          (t.count = e.payload.operand),
          (t.countOperator = e.payload.operator);
      },
      setLicenceFilterShowPending: (t, e) => {
        t.showPending = e.payload;
      },
      clearLicenceFilterSortBy: (t) => {
        (t.sortBy = null),
          (t.sortByDirection = null),
          (t.sortByParameters = null);
      },
      clearLicenceFilterAllFilters: (t) => {
        const e = {
          ...nx,
          organisationId: t.organisationId,
          sortBy: t.sortBy,
          sortByDirection: t.sortByDirection,
          sortByParameters: t.sortByParameters,
        };
        Object.assign(t, e);
      },
    },
    extraReducers: (t) => {
      t.addCase(Lr.actions.setOrganisation, (e, n) => {
        e.organisationId = n.payload.id;
      })
        .addCase(Vr.actions.setDebtorFilterName, (e, n) => {
          e.debtorName = n.payload;
        })
        .addCase(Vr.actions.setDebtorFilterCode, (e, n) => {
          e.debtorCode = n.payload;
        })
        .addCase(Vr.actions.setDebtorFilterDebtRatingId, (e, n) => {
          e.debtRating = n.payload;
        })
        .addCase(Vr.actions.setDebtorFilterCodeStartsWithSwitch, (e, n) => {
          e.debtorCodeStartsWithSwitch = n.payload;
        })
        .addCase(Vr.actions.clearDebtorFilterAllFilters, (e) => {
          (e.debtorName = null), (e.debtorCode = null), (e.debtRating = null);
        });
    },
  }),
  {
    setLicenceFilterClientName: w6,
    setLicenceFilterClientSurname: S6,
    setLicenceFilterClientEmail: x6,
    setLicenceFilterClientTel: E6,
    setLicenceFilterClientMobile: T6,
    setLicenceFilterDebtorName: DY,
    setLicenceFilterDebtorCode: LY,
    setLicenceFilterDebtorCodeStartsWithSwitch: I6,
    setLicenceFilterDebtRating: PY,
    setLicenceFilterLicenceNumber: N6,
    setLicenceFilterPageSize: k6,
    setLicenceFilterSortBy: R6,
    setLicenceFilterCountComparison: A6,
    setLicenceFilterShowPending: j6,
    clearLicenceFilterSortBy: O6,
    clearLicenceFilterAllFilters: D6,
  } = Eh.actions,
  L6 = Eh.reducer,
  P6 = () => ({
    pageSize: Jt,
    organisationId: 0,
    transactionDate: null,
    transactionDateOperator: Je.GreaterThan,
    transactionDateComparison: null,
    createdDate: null,
    createdDateOperator: Je.GreaterThan,
    createdDateComparison: null,
    deliveryNoteId: null,
    from: null,
    to: null,
    debtorCode: null,
    debtorName: null,
    clientEmail: null,
    licenceNumber: null,
    licenceStatus: null,
    deliveryNoteDetail: null,
    deliveryNoteRemarks: null,
    systemSales: null,
    systemSalesOperator: Je.EqualTo,
    systemSalesComparison: null,
    systemReturns: null,
    systemReturnsOperator: Je.EqualTo,
    systemReturnsComparison: null,
    sortBy: null,
    sortByDirection: null,
    sortByParameters: null,
  }),
  rx = P6(),
  mA = st({
    name: "licenceTransactionFilter",
    initialState: rx,
    reducers: {
      setLicenceTransactionFilterPageSize: (t, e) => {
        t.pageSize = e.payload;
      },
      setLicenceTransactionFilterOrganisationId: (t, e) => {
        t.organisationId = e.payload;
      },
      setLicenceTransactionFilterTransactionDateComparison: (t, e) => {
        (t.transactionDateComparison = e.payload),
          (t.transactionDateOperator = e.payload.operator),
          (t.transactionDate = e.payload.operand);
      },
      setLicenceTransactionFilterCreatedDateComparison: (t, e) => {
        (t.createdDateComparison = e.payload),
          (t.createdDateOperator = e.payload.operator),
          (t.createdDate = e.payload.operand);
      },
      setLicenceTransactionFilterDeliveryNoteId: (t, e) => {
        t.deliveryNoteId = e.payload;
      },
      setLicenceTransactionFilterFrom: (t, e) => {
        t.from = e.payload;
      },
      setLicenceTransactionFilterTo: (t, e) => {
        t.to = e.payload;
      },
      setLicenceTransactionFilterDebtorCode: (t, e) => {
        t.debtorCode = e.payload;
      },
      setLicenceTransactionFilterDebtorName: (t, e) => {
        t.debtorName = e.payload;
      },
      setLicenceTransactionFilterClientEmail: (t, e) => {
        t.clientEmail = e.payload;
      },
      setLicenceTransactionFilterLicenceNumber: (t, e) => {
        t.licenceNumber = e.payload;
      },
      setLicenceTransactionFilterLicenceStatus: (t, e) => {
        t.licenceStatus = e.payload;
      },
      setLicenceTransactionFilterDeliveryNoteDetail: (t, e) => {
        t.deliveryNoteDetail = e.payload;
      },
      setLicenceTransactionFilterDeliveryNoteRemarks: (t, e) => {
        t.deliveryNoteRemarks = e.payload;
      },
      setLicenceFilterTransactionSystemSalesComparison: (t, e) => {
        (t.systemSalesComparison = e.payload),
          (t.systemSales = e.payload.operand),
          (t.systemSalesOperator = e.payload.operator);
      },
      setLicenceFilterTransactionSystemReturnsComparison: (t, e) => {
        (t.systemReturnsComparison = e.payload),
          (t.systemReturns = e.payload.operand),
          (t.systemReturnsOperator = e.payload.operator);
      },
      setLicenceTransactionFilterSortBy: (t, e) => {
        (t.sortByDirection = e.payload.sortByDirection),
          (t.sortBy = e.payload.sortByFieldName),
          (t.sortByParameters = e.payload);
      },
      clearLicenceTransactionFilterSortBy: (t) => {
        (t.sortBy = null),
          (t.sortByDirection = null),
          (t.sortByParameters = null);
      },
      clearLicenceTransactionFilterAllFilters: (t) => {
        const e = {
          ...rx,
          organisationId: t.organisationId,
          sortBy: t.sortBy,
          sortByDirection: t.sortByDirection,
          sortByParameters: t.sortByParameters,
        };
        Object.assign(t, e);
      },
    },
    extraReducers: (t) => {
      t.addCase(Lr.actions.setOrganisation, (e, n) => {
        e.organisationId = n.payload.id;
      })
        .addCase(Vr.actions.setDebtorFilterName, (e, n) => {
          e.debtorName = n.payload;
        })
        .addCase(Vr.actions.setDebtorFilterCode, (e, n) => {
          e.debtorCode = n.payload;
        })
        .addCase(Vr.actions.clearDebtorFilterAllFilters, (e) => {
          (e.debtorName = null), (e.debtorCode = null);
        });
    },
  }),
  {
    setLicenceTransactionFilterPageSize: _6,
    setLicenceTransactionFilterOrganisationId: _Y,
    setLicenceTransactionFilterTransactionDateComparison: M6,
    setLicenceTransactionFilterCreatedDateComparison: F6,
    setLicenceTransactionFilterDeliveryNoteId: B6,
    setLicenceTransactionFilterFrom: U6,
    setLicenceTransactionFilterTo: z6,
    setLicenceTransactionFilterDebtorCode: MY,
    setLicenceTransactionFilterDebtorName: FY,
    setLicenceTransactionFilterClientEmail: H6,
    setLicenceTransactionFilterLicenceNumber: $6,
    setLicenceTransactionFilterLicenceStatus: K6,
    setLicenceTransactionFilterDeliveryNoteDetail: q6,
    setLicenceTransactionFilterDeliveryNoteRemarks: G6,
    clearLicenceTransactionFilterAllFilters: W6,
    clearLicenceTransactionFilterSortBy: V6,
    setLicenceTransactionFilterSortBy: Q6,
    setLicenceFilterTransactionSystemSalesComparison: Y6,
    setLicenceFilterTransactionSystemReturnsComparison: X6,
  } = mA.actions,
  J6 = mA.reducer,
  Z6 = () => ({
    organisationId: null,
    pageSize: Jt,
    sortBy: null,
    sortByDirection: null,
  }),
  e7 = () => ({
    ...Z6(),
    name: null,
    tel: null,
    fax: null,
    email: null,
    web: null,
    notes: null,
    isInvoiceGroup: null,
    invoiceDebtId: null,
    invoiceDebtorCode: null,
  }),
  t7 = () => ({ sortByParameters: null }),
  n7 = () => ({ filter: e7(), ...t7() }),
  Up = n7(),
  gA = st({
    name: "debtorGroupFilter",
    initialState: Up,
    reducers: {
      setDebtorGroupFilterName: (t, e) => {
        t.filter.name = e.payload;
      },
      setDebtorGroupFilterTel: (t, e) => {
        t.filter.tel = e.payload;
      },
      setDebtorGroupFilterFax: (t, e) => {
        t.filter.fax = e.payload;
      },
      setDebtorGroupFilterEmail: (t, e) => {
        t.filter.email = e.payload;
      },
      setDebtorGroupFilterWeb: (t, e) => {
        t.filter.web = e.payload;
      },
      setDebtorGroupFilterNotes: (t, e) => {
        t.filter.notes = e.payload;
      },
      setDebtorGroupFilterIsInvoiceGroup: (t, e) => {
        t.filter.isInvoiceGroup = e.payload.value;
      },
      setDebtorGroupFilterSortBy: (t, e) => {
        (t.filter.sortByDirection = e.payload.sortByDirection),
          (t.filter.sortBy = e.payload.sortByFieldName),
          (t.sortByParameters = e.payload);
      },
      setDebtorGroupFilterPageSize: (t, e) => {
        t.filter.pageSize = e.payload;
      },
      clearDebtorGroupFilterSortBy: (t) => {
        (t.filter.sortBy = null),
          (t.filter.sortByDirection = null),
          (t.sortByParameters = null);
      },
      clearDebtorGroupFilterAllFilters: (t) => {
        const e = {
          ...Up,
          filter: {
            ...Up.filter,
            organisationId: t.filter.organisationId,
            sortBy: t.filter.sortBy,
            sortByDirection: t.filter.sortByDirection,
          },
          sortByParameters: t.sortByParameters,
        };
        Object.assign(t, e);
      },
    },
    extraReducers: (t) => {
      t.addCase(Lr.actions.setOrganisation, (e, n) => {
        e.filter.organisationId = n.payload.id;
      });
    },
  }),
  {
    setDebtorGroupFilterName: ix,
    setDebtorGroupFilterTel: BY,
    setDebtorGroupFilterFax: UY,
    setDebtorGroupFilterEmail: zY,
    setDebtorGroupFilterWeb: HY,
    setDebtorGroupFilterNotes: $Y,
    setDebtorGroupFilterIsInvoiceGroup: r7,
    setDebtorGroupFilterSortBy: i7,
    setDebtorGroupFilterPageSize: o7,
    clearDebtorGroupFilterSortBy: a7,
    clearDebtorGroupFilterAllFilters: s7,
  } = gA.actions,
  l7 = gA.reducer,
  yC = () => ({
    organisationId: 0,
    code: "",
    name: null,
    address1: null,
    address2: null,
    address3: null,
    pCode: null,
    tel: null,
    fax: null,
    email: null,
    url: null,
    contact: null,
    vatNo: null,
    paysVat: !1,
    gLCode: "9000      ",
    controlCode: "3702      ",
    debtorGroupId: -1,
    country: null,
    regionId: null,
    billedById: null,
    billingTypeId: null,
    discountTypeId: null,
    discountType: null,
    qualifyingLevel: null,
    licenceFee: null,
    monthlyRental: null,
    currencyCode: null,
    isInvoiced: !1,
    debtRatingId: null,
    id: 0,
    status: 0,
    billedBy: null,
    toJoinDT: null,
    lastInvoice: "1900-01-01",
    licenceCount: 0,
    newSales: 0,
    debtRating: null,
    billingType: null,
    debtComments: "",
    debtRatingComments: "",
    retention: null,
    debtorGroup: null,
    wasSubmitted: !1,
    daysUntilLicenceExpiry: null,
    discountPercentage: null,
    debtRatingDisplay: null,
  });
function qt(t) {
  const e = Object.prototype.toString.call(t);
  return t instanceof Date || (typeof t == "object" && e === "[object Date]")
    ? new t.constructor(+t)
    : typeof t == "number" ||
      e === "[object Number]" ||
      typeof t == "string" ||
      e === "[object String]"
    ? new Date(t)
    : new Date(NaN);
}
function It(t, e) {
  return t instanceof Date ? new t.constructor(e) : new Date(e);
}
function yA(t, e) {
  const n = qt(t);
  return isNaN(e) ? It(t, NaN) : (e && n.setDate(n.getDate() + e), n);
}
const vA = 6048e5,
  c7 = 864e5,
  u7 = 6e4,
  d7 = 36e5,
  h7 = 1e3;
let f7 = {};
function el() {
  return f7;
}
function ko(t, e) {
  var l, c, u, d;
  const n = el(),
    r =
      (e == null ? void 0 : e.weekStartsOn) ??
      ((c = (l = e == null ? void 0 : e.locale) == null ? void 0 : l.options) ==
      null
        ? void 0
        : c.weekStartsOn) ??
      n.weekStartsOn ??
      ((d = (u = n.locale) == null ? void 0 : u.options) == null
        ? void 0
        : d.weekStartsOn) ??
      0,
    i = qt(t),
    o = i.getDay(),
    a = (o < r ? 7 : 0) + o - r;
  return i.setDate(i.getDate() - a), i.setHours(0, 0, 0, 0), i;
}
function Ms(t) {
  return ko(t, { weekStartsOn: 1 });
}
function bA(t) {
  const e = qt(t),
    n = e.getFullYear(),
    r = It(t, 0);
  r.setFullYear(n + 1, 0, 4), r.setHours(0, 0, 0, 0);
  const i = Ms(r),
    o = It(t, 0);
  o.setFullYear(n, 0, 4), o.setHours(0, 0, 0, 0);
  const a = Ms(o);
  return e.getTime() >= i.getTime()
    ? n + 1
    : e.getTime() >= a.getTime()
    ? n
    : n - 1;
}
function ox(t) {
  const e = qt(t);
  return e.setHours(0, 0, 0, 0), e;
}
function Th(t) {
  const e = qt(t),
    n = new Date(
      Date.UTC(
        e.getFullYear(),
        e.getMonth(),
        e.getDate(),
        e.getHours(),
        e.getMinutes(),
        e.getSeconds(),
        e.getMilliseconds()
      )
    );
  return n.setUTCFullYear(e.getFullYear()), +t - +n;
}
function p7(t, e) {
  const n = ox(t),
    r = ox(e),
    i = +n - Th(n),
    o = +r - Th(r);
  return Math.round((i - o) / c7);
}
function m7(t) {
  const e = bA(t),
    n = It(t, 0);
  return n.setFullYear(e, 0, 4), n.setHours(0, 0, 0, 0), Ms(n);
}
function g7(t) {
  return (
    t instanceof Date ||
    (typeof t == "object" &&
      Object.prototype.toString.call(t) === "[object Date]")
  );
}
function CA(t) {
  if (!g7(t) && typeof t != "number") return !1;
  const e = qt(t);
  return !isNaN(Number(e));
}
function y7(t) {
  const e = qt(t),
    n = It(t, 0);
  return n.setFullYear(e.getFullYear(), 0, 1), n.setHours(0, 0, 0, 0), n;
}
const v7 = {
    lessThanXSeconds: {
      one: "less than a second",
      other: "less than {{count}} seconds",
    },
    xSeconds: { one: "1 second", other: "{{count}} seconds" },
    halfAMinute: "half a minute",
    lessThanXMinutes: {
      one: "less than a minute",
      other: "less than {{count}} minutes",
    },
    xMinutes: { one: "1 minute", other: "{{count}} minutes" },
    aboutXHours: { one: "about 1 hour", other: "about {{count}} hours" },
    xHours: { one: "1 hour", other: "{{count}} hours" },
    xDays: { one: "1 day", other: "{{count}} days" },
    aboutXWeeks: { one: "about 1 week", other: "about {{count}} weeks" },
    xWeeks: { one: "1 week", other: "{{count}} weeks" },
    aboutXMonths: { one: "about 1 month", other: "about {{count}} months" },
    xMonths: { one: "1 month", other: "{{count}} months" },
    aboutXYears: { one: "about 1 year", other: "about {{count}} years" },
    xYears: { one: "1 year", other: "{{count}} years" },
    overXYears: { one: "over 1 year", other: "over {{count}} years" },
    almostXYears: { one: "almost 1 year", other: "almost {{count}} years" },
  },
  b7 = (t, e, n) => {
    let r;
    const i = v7[t];
    return (
      typeof i == "string"
        ? (r = i)
        : e === 1
        ? (r = i.one)
        : (r = i.other.replace("{{count}}", e.toString())),
      n != null && n.addSuffix
        ? n.comparison && n.comparison > 0
          ? "in " + r
          : r + " ago"
        : r
    );
  };
function zp(t) {
  return (e = {}) => {
    const n = e.width ? String(e.width) : t.defaultWidth;
    return t.formats[n] || t.formats[t.defaultWidth];
  };
}
const C7 = {
    full: "EEEE, MMMM do, y",
    long: "MMMM do, y",
    medium: "MMM d, y",
    short: "MM/dd/yyyy",
  },
  w7 = {
    full: "h:mm:ss a zzzz",
    long: "h:mm:ss a z",
    medium: "h:mm:ss a",
    short: "h:mm a",
  },
  S7 = {
    full: "{{date}} 'at' {{time}}",
    long: "{{date}} 'at' {{time}}",
    medium: "{{date}}, {{time}}",
    short: "{{date}}, {{time}}",
  },
  x7 = {
    date: zp({ formats: C7, defaultWidth: "full" }),
    time: zp({ formats: w7, defaultWidth: "full" }),
    dateTime: zp({ formats: S7, defaultWidth: "full" }),
  },
  E7 = {
    lastWeek: "'last' eeee 'at' p",
    yesterday: "'yesterday at' p",
    today: "'today at' p",
    tomorrow: "'tomorrow at' p",
    nextWeek: "eeee 'at' p",
    other: "P",
  },
  T7 = (t, e, n, r) => E7[t];
function vl(t) {
  return (e, n) => {
    const r = n != null && n.context ? String(n.context) : "standalone";
    let i;
    if (r === "formatting" && t.formattingValues) {
      const a = t.defaultFormattingWidth || t.defaultWidth,
        l = n != null && n.width ? String(n.width) : a;
      i = t.formattingValues[l] || t.formattingValues[a];
    } else {
      const a = t.defaultWidth,
        l = n != null && n.width ? String(n.width) : t.defaultWidth;
      i = t.values[l] || t.values[a];
    }
    const o = t.argumentCallback ? t.argumentCallback(e) : e;
    return i[o];
  };
}
const I7 = {
    narrow: ["B", "A"],
    abbreviated: ["BC", "AD"],
    wide: ["Before Christ", "Anno Domini"],
  },
  N7 = {
    narrow: ["1", "2", "3", "4"],
    abbreviated: ["Q1", "Q2", "Q3", "Q4"],
    wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"],
  },
  k7 = {
    narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
    abbreviated: [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sep",
      "Oct",
      "Nov",
      "Dec",
    ],
    wide: [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July",
      "August",
      "September",
      "October",
      "November",
      "December",
    ],
  },
  R7 = {
    narrow: ["S", "M", "T", "W", "T", "F", "S"],
    short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    wide: [
      "Sunday",
      "Monday",
      "Tuesday",
      "Wednesday",
      "Thursday",
      "Friday",
      "Saturday",
    ],
  },
  A7 = {
    narrow: {
      am: "a",
      pm: "p",
      midnight: "mi",
      noon: "n",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night",
    },
    abbreviated: {
      am: "AM",
      pm: "PM",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night",
    },
    wide: {
      am: "a.m.",
      pm: "p.m.",
      midnight: "midnight",
      noon: "noon",
      morning: "morning",
      afternoon: "afternoon",
      evening: "evening",
      night: "night",
    },
  },
  j7 = {
    narrow: {
      am: "a",
      pm: "p",
      midnight: "mi",
      noon: "n",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night",
    },
    abbreviated: {
      am: "AM",
      pm: "PM",
      midnight: "midnight",
      noon: "noon",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night",
    },
    wide: {
      am: "a.m.",
      pm: "p.m.",
      midnight: "midnight",
      noon: "noon",
      morning: "in the morning",
      afternoon: "in the afternoon",
      evening: "in the evening",
      night: "at night",
    },
  },
  O7 = (t, e) => {
    const n = Number(t),
      r = n % 100;
    if (r > 20 || r < 10)
      switch (r % 10) {
        case 1:
          return n + "st";
        case 2:
          return n + "nd";
        case 3:
          return n + "rd";
      }
    return n + "th";
  },
  D7 = {
    ordinalNumber: O7,
    era: vl({ values: I7, defaultWidth: "wide" }),
    quarter: vl({
      values: N7,
      defaultWidth: "wide",
      argumentCallback: (t) => t - 1,
    }),
    month: vl({ values: k7, defaultWidth: "wide" }),
    day: vl({ values: R7, defaultWidth: "wide" }),
    dayPeriod: vl({
      values: A7,
      defaultWidth: "wide",
      formattingValues: j7,
      defaultFormattingWidth: "wide",
    }),
  };
function bl(t) {
  return (e, n = {}) => {
    const r = n.width,
      i = (r && t.matchPatterns[r]) || t.matchPatterns[t.defaultMatchWidth],
      o = e.match(i);
    if (!o) return null;
    const a = o[0],
      l = (r && t.parsePatterns[r]) || t.parsePatterns[t.defaultParseWidth],
      c = Array.isArray(l) ? P7(l, (h) => h.test(a)) : L7(l, (h) => h.test(a));
    let u;
    (u = t.valueCallback ? t.valueCallback(c) : c),
      (u = n.valueCallback ? n.valueCallback(u) : u);
    const d = e.slice(a.length);
    return { value: u, rest: d };
  };
}
function L7(t, e) {
  for (const n in t)
    if (Object.prototype.hasOwnProperty.call(t, n) && e(t[n])) return n;
}
function P7(t, e) {
  for (let n = 0; n < t.length; n++) if (e(t[n])) return n;
}
function _7(t) {
  return (e, n = {}) => {
    const r = e.match(t.matchPattern);
    if (!r) return null;
    const i = r[0],
      o = e.match(t.parsePattern);
    if (!o) return null;
    let a = t.valueCallback ? t.valueCallback(o[0]) : o[0];
    a = n.valueCallback ? n.valueCallback(a) : a;
    const l = e.slice(i.length);
    return { value: a, rest: l };
  };
}
const M7 = /^(\d+)(th|st|nd|rd)?/i,
  F7 = /\d+/i,
  B7 = {
    narrow: /^(b|a)/i,
    abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
    wide: /^(before christ|before common era|anno domini|common era)/i,
  },
  U7 = { any: [/^b/i, /^(a|c)/i] },
  z7 = {
    narrow: /^[1234]/i,
    abbreviated: /^q[1234]/i,
    wide: /^[1234](th|st|nd|rd)? quarter/i,
  },
  H7 = { any: [/1/i, /2/i, /3/i, /4/i] },
  $7 = {
    narrow: /^[jfmasond]/i,
    abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
    wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,
  },
  K7 = {
    narrow: [
      /^j/i,
      /^f/i,
      /^m/i,
      /^a/i,
      /^m/i,
      /^j/i,
      /^j/i,
      /^a/i,
      /^s/i,
      /^o/i,
      /^n/i,
      /^d/i,
    ],
    any: [
      /^ja/i,
      /^f/i,
      /^mar/i,
      /^ap/i,
      /^may/i,
      /^jun/i,
      /^jul/i,
      /^au/i,
      /^s/i,
      /^o/i,
      /^n/i,
      /^d/i,
    ],
  },
  q7 = {
    narrow: /^[smtwf]/i,
    short: /^(su|mo|tu|we|th|fr|sa)/i,
    abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
    wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,
  },
  G7 = {
    narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
    any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
  },
  W7 = {
    narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
    any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
  },
  V7 = {
    any: {
      am: /^a/i,
      pm: /^p/i,
      midnight: /^mi/i,
      noon: /^no/i,
      morning: /morning/i,
      afternoon: /afternoon/i,
      evening: /evening/i,
      night: /night/i,
    },
  },
  Q7 = {
    ordinalNumber: _7({
      matchPattern: M7,
      parsePattern: F7,
      valueCallback: (t) => parseInt(t, 10),
    }),
    era: bl({
      matchPatterns: B7,
      defaultMatchWidth: "wide",
      parsePatterns: U7,
      defaultParseWidth: "any",
    }),
    quarter: bl({
      matchPatterns: z7,
      defaultMatchWidth: "wide",
      parsePatterns: H7,
      defaultParseWidth: "any",
      valueCallback: (t) => t + 1,
    }),
    month: bl({
      matchPatterns: $7,
      defaultMatchWidth: "wide",
      parsePatterns: K7,
      defaultParseWidth: "any",
    }),
    day: bl({
      matchPatterns: q7,
      defaultMatchWidth: "wide",
      parsePatterns: G7,
      defaultParseWidth: "any",
    }),
    dayPeriod: bl({
      matchPatterns: W7,
      defaultMatchWidth: "any",
      parsePatterns: V7,
      defaultParseWidth: "any",
    }),
  },
  wA = {
    code: "en-US",
    formatDistance: b7,
    formatLong: x7,
    formatRelative: T7,
    localize: D7,
    match: Q7,
    options: { weekStartsOn: 0, firstWeekContainsDate: 1 },
  };
function Y7(t) {
  const e = qt(t);
  return p7(e, y7(e)) + 1;
}
function SA(t) {
  const e = qt(t),
    n = +Ms(e) - +m7(e);
  return Math.round(n / vA) + 1;
}
function vC(t, e) {
  var d, h, f, p;
  const n = qt(t),
    r = n.getFullYear(),
    i = el(),
    o =
      (e == null ? void 0 : e.firstWeekContainsDate) ??
      ((h = (d = e == null ? void 0 : e.locale) == null ? void 0 : d.options) ==
      null
        ? void 0
        : h.firstWeekContainsDate) ??
      i.firstWeekContainsDate ??
      ((p = (f = i.locale) == null ? void 0 : f.options) == null
        ? void 0
        : p.firstWeekContainsDate) ??
      1,
    a = It(t, 0);
  a.setFullYear(r + 1, 0, o), a.setHours(0, 0, 0, 0);
  const l = ko(a, e),
    c = It(t, 0);
  c.setFullYear(r, 0, o), c.setHours(0, 0, 0, 0);
  const u = ko(c, e);
  return n.getTime() >= l.getTime()
    ? r + 1
    : n.getTime() >= u.getTime()
    ? r
    : r - 1;
}
function X7(t, e) {
  var l, c, u, d;
  const n = el(),
    r =
      (e == null ? void 0 : e.firstWeekContainsDate) ??
      ((c = (l = e == null ? void 0 : e.locale) == null ? void 0 : l.options) ==
      null
        ? void 0
        : c.firstWeekContainsDate) ??
      n.firstWeekContainsDate ??
      ((d = (u = n.locale) == null ? void 0 : u.options) == null
        ? void 0
        : d.firstWeekContainsDate) ??
      1,
    i = vC(t, e),
    o = It(t, 0);
  return o.setFullYear(i, 0, r), o.setHours(0, 0, 0, 0), ko(o, e);
}
function xA(t, e) {
  const n = qt(t),
    r = +ko(n, e) - +X7(n, e);
  return Math.round(r / vA) + 1;
}
function qe(t, e) {
  const n = t < 0 ? "-" : "",
    r = Math.abs(t).toString().padStart(e, "0");
  return n + r;
}
const Zi = {
    y(t, e) {
      const n = t.getFullYear(),
        r = n > 0 ? n : 1 - n;
      return qe(e === "yy" ? r % 100 : r, e.length);
    },
    M(t, e) {
      const n = t.getMonth();
      return e === "M" ? String(n + 1) : qe(n + 1, 2);
    },
    d(t, e) {
      return qe(t.getDate(), e.length);
    },
    a(t, e) {
      const n = t.getHours() / 12 >= 1 ? "pm" : "am";
      switch (e) {
        case "a":
        case "aa":
          return n.toUpperCase();
        case "aaa":
          return n;
        case "aaaaa":
          return n[0];
        case "aaaa":
        default:
          return n === "am" ? "a.m." : "p.m.";
      }
    },
    h(t, e) {
      return qe(t.getHours() % 12 || 12, e.length);
    },
    H(t, e) {
      return qe(t.getHours(), e.length);
    },
    m(t, e) {
      return qe(t.getMinutes(), e.length);
    },
    s(t, e) {
      return qe(t.getSeconds(), e.length);
    },
    S(t, e) {
      const n = e.length,
        r = t.getMilliseconds(),
        i = Math.trunc(r * Math.pow(10, n - 3));
      return qe(i, e.length);
    },
  },
  Fa = {
    am: "am",
    pm: "pm",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night",
  },
  ax = {
    G: function (t, e, n) {
      const r = t.getFullYear() > 0 ? 1 : 0;
      switch (e) {
        case "G":
        case "GG":
        case "GGG":
          return n.era(r, { width: "abbreviated" });
        case "GGGGG":
          return n.era(r, { width: "narrow" });
        case "GGGG":
        default:
          return n.era(r, { width: "wide" });
      }
    },
    y: function (t, e, n) {
      if (e === "yo") {
        const r = t.getFullYear(),
          i = r > 0 ? r : 1 - r;
        return n.ordinalNumber(i, { unit: "year" });
      }
      return Zi.y(t, e);
    },
    Y: function (t, e, n, r) {
      const i = vC(t, r),
        o = i > 0 ? i : 1 - i;
      if (e === "YY") {
        const a = o % 100;
        return qe(a, 2);
      }
      return e === "Yo"
        ? n.ordinalNumber(o, { unit: "year" })
        : qe(o, e.length);
    },
    R: function (t, e) {
      const n = bA(t);
      return qe(n, e.length);
    },
    u: function (t, e) {
      const n = t.getFullYear();
      return qe(n, e.length);
    },
    Q: function (t, e, n) {
      const r = Math.ceil((t.getMonth() + 1) / 3);
      switch (e) {
        case "Q":
          return String(r);
        case "QQ":
          return qe(r, 2);
        case "Qo":
          return n.ordinalNumber(r, { unit: "quarter" });
        case "QQQ":
          return n.quarter(r, { width: "abbreviated", context: "formatting" });
        case "QQQQQ":
          return n.quarter(r, { width: "narrow", context: "formatting" });
        case "QQQQ":
        default:
          return n.quarter(r, { width: "wide", context: "formatting" });
      }
    },
    q: function (t, e, n) {
      const r = Math.ceil((t.getMonth() + 1) / 3);
      switch (e) {
        case "q":
          return String(r);
        case "qq":
          return qe(r, 2);
        case "qo":
          return n.ordinalNumber(r, { unit: "quarter" });
        case "qqq":
          return n.quarter(r, { width: "abbreviated", context: "standalone" });
        case "qqqqq":
          return n.quarter(r, { width: "narrow", context: "standalone" });
        case "qqqq":
        default:
          return n.quarter(r, { width: "wide", context: "standalone" });
      }
    },
    M: function (t, e, n) {
      const r = t.getMonth();
      switch (e) {
        case "M":
        case "MM":
          return Zi.M(t, e);
        case "Mo":
          return n.ordinalNumber(r + 1, { unit: "month" });
        case "MMM":
          return n.month(r, { width: "abbreviated", context: "formatting" });
        case "MMMMM":
          return n.month(r, { width: "narrow", context: "formatting" });
        case "MMMM":
        default:
          return n.month(r, { width: "wide", context: "formatting" });
      }
    },
    L: function (t, e, n) {
      const r = t.getMonth();
      switch (e) {
        case "L":
          return String(r + 1);
        case "LL":
          return qe(r + 1, 2);
        case "Lo":
          return n.ordinalNumber(r + 1, { unit: "month" });
        case "LLL":
          return n.month(r, { width: "abbreviated", context: "standalone" });
        case "LLLLL":
          return n.month(r, { width: "narrow", context: "standalone" });
        case "LLLL":
        default:
          return n.month(r, { width: "wide", context: "standalone" });
      }
    },
    w: function (t, e, n, r) {
      const i = xA(t, r);
      return e === "wo"
        ? n.ordinalNumber(i, { unit: "week" })
        : qe(i, e.length);
    },
    I: function (t, e, n) {
      const r = SA(t);
      return e === "Io"
        ? n.ordinalNumber(r, { unit: "week" })
        : qe(r, e.length);
    },
    d: function (t, e, n) {
      return e === "do"
        ? n.ordinalNumber(t.getDate(), { unit: "date" })
        : Zi.d(t, e);
    },
    D: function (t, e, n) {
      const r = Y7(t);
      return e === "Do"
        ? n.ordinalNumber(r, { unit: "dayOfYear" })
        : qe(r, e.length);
    },
    E: function (t, e, n) {
      const r = t.getDay();
      switch (e) {
        case "E":
        case "EE":
        case "EEE":
          return n.day(r, { width: "abbreviated", context: "formatting" });
        case "EEEEE":
          return n.day(r, { width: "narrow", context: "formatting" });
        case "EEEEEE":
          return n.day(r, { width: "short", context: "formatting" });
        case "EEEE":
        default:
          return n.day(r, { width: "wide", context: "formatting" });
      }
    },
    e: function (t, e, n, r) {
      const i = t.getDay(),
        o = (i - r.weekStartsOn + 8) % 7 || 7;
      switch (e) {
        case "e":
          return String(o);
        case "ee":
          return qe(o, 2);
        case "eo":
          return n.ordinalNumber(o, { unit: "day" });
        case "eee":
          return n.day(i, { width: "abbreviated", context: "formatting" });
        case "eeeee":
          return n.day(i, { width: "narrow", context: "formatting" });
        case "eeeeee":
          return n.day(i, { width: "short", context: "formatting" });
        case "eeee":
        default:
          return n.day(i, { width: "wide", context: "formatting" });
      }
    },
    c: function (t, e, n, r) {
      const i = t.getDay(),
        o = (i - r.weekStartsOn + 8) % 7 || 7;
      switch (e) {
        case "c":
          return String(o);
        case "cc":
          return qe(o, e.length);
        case "co":
          return n.ordinalNumber(o, { unit: "day" });
        case "ccc":
          return n.day(i, { width: "abbreviated", context: "standalone" });
        case "ccccc":
          return n.day(i, { width: "narrow", context: "standalone" });
        case "cccccc":
          return n.day(i, { width: "short", context: "standalone" });
        case "cccc":
        default:
          return n.day(i, { width: "wide", context: "standalone" });
      }
    },
    i: function (t, e, n) {
      const r = t.getDay(),
        i = r === 0 ? 7 : r;
      switch (e) {
        case "i":
          return String(i);
        case "ii":
          return qe(i, e.length);
        case "io":
          return n.ordinalNumber(i, { unit: "day" });
        case "iii":
          return n.day(r, { width: "abbreviated", context: "formatting" });
        case "iiiii":
          return n.day(r, { width: "narrow", context: "formatting" });
        case "iiiiii":
          return n.day(r, { width: "short", context: "formatting" });
        case "iiii":
        default:
          return n.day(r, { width: "wide", context: "formatting" });
      }
    },
    a: function (t, e, n) {
      const i = t.getHours() / 12 >= 1 ? "pm" : "am";
      switch (e) {
        case "a":
        case "aa":
          return n.dayPeriod(i, {
            width: "abbreviated",
            context: "formatting",
          });
        case "aaa":
          return n
            .dayPeriod(i, { width: "abbreviated", context: "formatting" })
            .toLowerCase();
        case "aaaaa":
          return n.dayPeriod(i, { width: "narrow", context: "formatting" });
        case "aaaa":
        default:
          return n.dayPeriod(i, { width: "wide", context: "formatting" });
      }
    },
    b: function (t, e, n) {
      const r = t.getHours();
      let i;
      switch (
        (r === 12
          ? (i = Fa.noon)
          : r === 0
          ? (i = Fa.midnight)
          : (i = r / 12 >= 1 ? "pm" : "am"),
        e)
      ) {
        case "b":
        case "bb":
          return n.dayPeriod(i, {
            width: "abbreviated",
            context: "formatting",
          });
        case "bbb":
          return n
            .dayPeriod(i, { width: "abbreviated", context: "formatting" })
            .toLowerCase();
        case "bbbbb":
          return n.dayPeriod(i, { width: "narrow", context: "formatting" });
        case "bbbb":
        default:
          return n.dayPeriod(i, { width: "wide", context: "formatting" });
      }
    },
    B: function (t, e, n) {
      const r = t.getHours();
      let i;
      switch (
        (r >= 17
          ? (i = Fa.evening)
          : r >= 12
          ? (i = Fa.afternoon)
          : r >= 4
          ? (i = Fa.morning)
          : (i = Fa.night),
        e)
      ) {
        case "B":
        case "BB":
        case "BBB":
          return n.dayPeriod(i, {
            width: "abbreviated",
            context: "formatting",
          });
        case "BBBBB":
          return n.dayPeriod(i, { width: "narrow", context: "formatting" });
        case "BBBB":
        default:
          return n.dayPeriod(i, { width: "wide", context: "formatting" });
      }
    },
    h: function (t, e, n) {
      if (e === "ho") {
        let r = t.getHours() % 12;
        return r === 0 && (r = 12), n.ordinalNumber(r, { unit: "hour" });
      }
      return Zi.h(t, e);
    },
    H: function (t, e, n) {
      return e === "Ho"
        ? n.ordinalNumber(t.getHours(), { unit: "hour" })
        : Zi.H(t, e);
    },
    K: function (t, e, n) {
      const r = t.getHours() % 12;
      return e === "Ko"
        ? n.ordinalNumber(r, { unit: "hour" })
        : qe(r, e.length);
    },
    k: function (t, e, n) {
      let r = t.getHours();
      return (
        r === 0 && (r = 24),
        e === "ko" ? n.ordinalNumber(r, { unit: "hour" }) : qe(r, e.length)
      );
    },
    m: function (t, e, n) {
      return e === "mo"
        ? n.ordinalNumber(t.getMinutes(), { unit: "minute" })
        : Zi.m(t, e);
    },
    s: function (t, e, n) {
      return e === "so"
        ? n.ordinalNumber(t.getSeconds(), { unit: "second" })
        : Zi.s(t, e);
    },
    S: function (t, e) {
      return Zi.S(t, e);
    },
    X: function (t, e, n) {
      const r = t.getTimezoneOffset();
      if (r === 0) return "Z";
      switch (e) {
        case "X":
          return lx(r);
        case "XXXX":
        case "XX":
          return Bo(r);
        case "XXXXX":
        case "XXX":
        default:
          return Bo(r, ":");
      }
    },
    x: function (t, e, n) {
      const r = t.getTimezoneOffset();
      switch (e) {
        case "x":
          return lx(r);
        case "xxxx":
        case "xx":
          return Bo(r);
        case "xxxxx":
        case "xxx":
        default:
          return Bo(r, ":");
      }
    },
    O: function (t, e, n) {
      const r = t.getTimezoneOffset();
      switch (e) {
        case "O":
        case "OO":
        case "OOO":
          return "GMT" + sx(r, ":");
        case "OOOO":
        default:
          return "GMT" + Bo(r, ":");
      }
    },
    z: function (t, e, n) {
      const r = t.getTimezoneOffset();
      switch (e) {
        case "z":
        case "zz":
        case "zzz":
          return "GMT" + sx(r, ":");
        case "zzzz":
        default:
          return "GMT" + Bo(r, ":");
      }
    },
    t: function (t, e, n) {
      const r = Math.trunc(t.getTime() / 1e3);
      return qe(r, e.length);
    },
    T: function (t, e, n) {
      const r = t.getTime();
      return qe(r, e.length);
    },
  };
function sx(t, e = "") {
  const n = t > 0 ? "-" : "+",
    r = Math.abs(t),
    i = Math.trunc(r / 60),
    o = r % 60;
  return o === 0 ? n + String(i) : n + String(i) + e + qe(o, 2);
}
function lx(t, e) {
  return t % 60 === 0
    ? (t > 0 ? "-" : "+") + qe(Math.abs(t) / 60, 2)
    : Bo(t, e);
}
function Bo(t, e = "") {
  const n = t > 0 ? "-" : "+",
    r = Math.abs(t),
    i = qe(Math.trunc(r / 60), 2),
    o = qe(r % 60, 2);
  return n + i + e + o;
}
const cx = (t, e) => {
    switch (t) {
      case "P":
        return e.date({ width: "short" });
      case "PP":
        return e.date({ width: "medium" });
      case "PPP":
        return e.date({ width: "long" });
      case "PPPP":
      default:
        return e.date({ width: "full" });
    }
  },
  EA = (t, e) => {
    switch (t) {
      case "p":
        return e.time({ width: "short" });
      case "pp":
        return e.time({ width: "medium" });
      case "ppp":
        return e.time({ width: "long" });
      case "pppp":
      default:
        return e.time({ width: "full" });
    }
  },
  J7 = (t, e) => {
    const n = t.match(/(P+)(p+)?/) || [],
      r = n[1],
      i = n[2];
    if (!i) return cx(t, e);
    let o;
    switch (r) {
      case "P":
        o = e.dateTime({ width: "short" });
        break;
      case "PP":
        o = e.dateTime({ width: "medium" });
        break;
      case "PPP":
        o = e.dateTime({ width: "long" });
        break;
      case "PPPP":
      default:
        o = e.dateTime({ width: "full" });
        break;
    }
    return o.replace("{{date}}", cx(r, e)).replace("{{time}}", EA(i, e));
  },
  hy = { p: EA, P: J7 },
  Z7 = /^D+$/,
  e8 = /^Y+$/,
  t8 = ["D", "DD", "YY", "YYYY"];
function TA(t) {
  return Z7.test(t);
}
function IA(t) {
  return e8.test(t);
}
function fy(t, e, n) {
  const r = n8(t, e, n);
  if ((console.warn(r), t8.includes(t))) throw new RangeError(r);
}
function n8(t, e, n) {
  const r = t[0] === "Y" ? "years" : "days of the month";
  return `Use \`${t.toLowerCase()}\` instead of \`${t}\` (in \`${e}\`) for formatting ${r} to the input \`${n}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;
}
const r8 = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,
  i8 = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,
  o8 = /^'([^]*?)'?$/,
  a8 = /''/g,
  s8 = /[a-zA-Z]/;
function pa(t, e, n) {
  var d, h, f, p;
  const r = el(),
    i = r.locale ?? wA,
    o =
      r.firstWeekContainsDate ??
      ((h = (d = r.locale) == null ? void 0 : d.options) == null
        ? void 0
        : h.firstWeekContainsDate) ??
      1,
    a =
      r.weekStartsOn ??
      ((p = (f = r.locale) == null ? void 0 : f.options) == null
        ? void 0
        : p.weekStartsOn) ??
      0,
    l = qt(t);
  if (!CA(l)) throw new RangeError("Invalid time value");
  let c = e
    .match(i8)
    .map((m) => {
      const v = m[0];
      if (v === "p" || v === "P") {
        const C = hy[v];
        return C(m, i.formatLong);
      }
      return m;
    })
    .join("")
    .match(r8)
    .map((m) => {
      if (m === "''") return { isToken: !1, value: "'" };
      const v = m[0];
      if (v === "'") return { isToken: !1, value: l8(m) };
      if (ax[v]) return { isToken: !0, value: m };
      if (v.match(s8))
        throw new RangeError(
          "Format string contains an unescaped latin alphabet character `" +
            v +
            "`"
        );
      return { isToken: !1, value: m };
    });
  i.localize.preprocessor && (c = i.localize.preprocessor(l, c));
  const u = { firstWeekContainsDate: o, weekStartsOn: a, locale: i };
  return c
    .map((m) => {
      if (!m.isToken) return m.value;
      const v = m.value;
      (IA(v) || TA(v)) && fy(v, e, String(t));
      const C = ax[v[0]];
      return C(l, v, i.localize, u);
    })
    .join("");
}
function l8(t) {
  const e = t.match(o8);
  return e ? e[1].replace(a8, "'") : t;
}
function c8() {
  return Object.assign({}, el());
}
function u8(t) {
  let n = qt(t).getDay();
  return n === 0 && (n = 7), n;
}
function d8(t, e) {
  const n = e instanceof Date ? It(e, 0) : new e(0);
  return (
    n.setFullYear(t.getFullYear(), t.getMonth(), t.getDate()),
    n.setHours(
      t.getHours(),
      t.getMinutes(),
      t.getSeconds(),
      t.getMilliseconds()
    ),
    n
  );
}
const h8 = 10;
class NA {
  constructor() {
    ae(this, "subPriority", 0);
  }
  validate(e, n) {
    return !0;
  }
}
class f8 extends NA {
  constructor(e, n, r, i, o) {
    super(),
      (this.value = e),
      (this.validateValue = n),
      (this.setValue = r),
      (this.priority = i),
      o && (this.subPriority = o);
  }
  validate(e, n) {
    return this.validateValue(e, this.value, n);
  }
  set(e, n, r) {
    return this.setValue(e, n, this.value, r);
  }
}
class p8 extends NA {
  constructor() {
    super(...arguments);
    ae(this, "priority", h8);
    ae(this, "subPriority", -1);
  }
  set(n, r) {
    return r.timestampIsSet ? n : It(n, d8(n, Date));
  }
}
class Fe {
  run(e, n, r, i) {
    const o = this.parse(e, n, r, i);
    return o
      ? {
          setter: new f8(
            o.value,
            this.validate,
            this.set,
            this.priority,
            this.subPriority
          ),
          rest: o.rest,
        }
      : null;
  }
  validate(e, n, r) {
    return !0;
  }
}
class m8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 140);
    ae(this, "incompatibleTokens", ["R", "u", "t", "T"]);
  }
  parse(n, r, i) {
    switch (r) {
      case "G":
      case "GG":
      case "GGG":
        return (
          i.era(n, { width: "abbreviated" }) || i.era(n, { width: "narrow" })
        );
      case "GGGGG":
        return i.era(n, { width: "narrow" });
      case "GGGG":
      default:
        return (
          i.era(n, { width: "wide" }) ||
          i.era(n, { width: "abbreviated" }) ||
          i.era(n, { width: "narrow" })
        );
    }
  }
  set(n, r, i) {
    return (r.era = i), n.setFullYear(i, 0, 1), n.setHours(0, 0, 0, 0), n;
  }
}
const Ot = {
    month: /^(1[0-2]|0?\d)/,
    date: /^(3[0-1]|[0-2]?\d)/,
    dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
    week: /^(5[0-3]|[0-4]?\d)/,
    hour23h: /^(2[0-3]|[0-1]?\d)/,
    hour24h: /^(2[0-4]|[0-1]?\d)/,
    hour11h: /^(1[0-1]|0?\d)/,
    hour12h: /^(1[0-2]|0?\d)/,
    minute: /^[0-5]?\d/,
    second: /^[0-5]?\d/,
    singleDigit: /^\d/,
    twoDigits: /^\d{1,2}/,
    threeDigits: /^\d{1,3}/,
    fourDigits: /^\d{1,4}/,
    anyDigitsSigned: /^-?\d+/,
    singleDigitSigned: /^-?\d/,
    twoDigitsSigned: /^-?\d{1,2}/,
    threeDigitsSigned: /^-?\d{1,3}/,
    fourDigitsSigned: /^-?\d{1,4}/,
  },
  Qr = {
    basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
    basic: /^([+-])(\d{2})(\d{2})|Z/,
    basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
    extended: /^([+-])(\d{2}):(\d{2})|Z/,
    extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/,
  };
function Dt(t, e) {
  return t && { value: e(t.value), rest: t.rest };
}
function yt(t, e) {
  const n = e.match(t);
  return n ? { value: parseInt(n[0], 10), rest: e.slice(n[0].length) } : null;
}
function Yr(t, e) {
  const n = e.match(t);
  if (!n) return null;
  if (n[0] === "Z") return { value: 0, rest: e.slice(1) };
  const r = n[1] === "+" ? 1 : -1,
    i = n[2] ? parseInt(n[2], 10) : 0,
    o = n[3] ? parseInt(n[3], 10) : 0,
    a = n[5] ? parseInt(n[5], 10) : 0;
  return { value: r * (i * d7 + o * u7 + a * h7), rest: e.slice(n[0].length) };
}
function kA(t) {
  return yt(Ot.anyDigitsSigned, t);
}
function kt(t, e) {
  switch (t) {
    case 1:
      return yt(Ot.singleDigit, e);
    case 2:
      return yt(Ot.twoDigits, e);
    case 3:
      return yt(Ot.threeDigits, e);
    case 4:
      return yt(Ot.fourDigits, e);
    default:
      return yt(new RegExp("^\\d{1," + t + "}"), e);
  }
}
function Ih(t, e) {
  switch (t) {
    case 1:
      return yt(Ot.singleDigitSigned, e);
    case 2:
      return yt(Ot.twoDigitsSigned, e);
    case 3:
      return yt(Ot.threeDigitsSigned, e);
    case 4:
      return yt(Ot.fourDigitsSigned, e);
    default:
      return yt(new RegExp("^-?\\d{1," + t + "}"), e);
  }
}
function bC(t) {
  switch (t) {
    case "morning":
      return 4;
    case "evening":
      return 17;
    case "pm":
    case "noon":
    case "afternoon":
      return 12;
    case "am":
    case "midnight":
    case "night":
    default:
      return 0;
  }
}
function RA(t, e) {
  const n = e > 0,
    r = n ? e : 1 - e;
  let i;
  if (r <= 50) i = t || 100;
  else {
    const o = r + 50,
      a = Math.trunc(o / 100) * 100,
      l = t >= o % 100;
    i = t + a - (l ? 100 : 0);
  }
  return n ? i : 1 - i;
}
function AA(t) {
  return t % 400 === 0 || (t % 4 === 0 && t % 100 !== 0);
}
class g8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 130);
    ae(this, "incompatibleTokens", [
      "Y",
      "R",
      "u",
      "w",
      "I",
      "i",
      "e",
      "c",
      "t",
      "T",
    ]);
  }
  parse(n, r, i) {
    const o = (a) => ({ year: a, isTwoDigitYear: r === "yy" });
    switch (r) {
      case "y":
        return Dt(kt(4, n), o);
      case "yo":
        return Dt(i.ordinalNumber(n, { unit: "year" }), o);
      default:
        return Dt(kt(r.length, n), o);
    }
  }
  validate(n, r) {
    return r.isTwoDigitYear || r.year > 0;
  }
  set(n, r, i) {
    const o = n.getFullYear();
    if (i.isTwoDigitYear) {
      const l = RA(i.year, o);
      return n.setFullYear(l, 0, 1), n.setHours(0, 0, 0, 0), n;
    }
    const a = !("era" in r) || r.era === 1 ? i.year : 1 - i.year;
    return n.setFullYear(a, 0, 1), n.setHours(0, 0, 0, 0), n;
  }
}
class y8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 130);
    ae(this, "incompatibleTokens", [
      "y",
      "R",
      "u",
      "Q",
      "q",
      "M",
      "L",
      "I",
      "d",
      "D",
      "i",
      "t",
      "T",
    ]);
  }
  parse(n, r, i) {
    const o = (a) => ({ year: a, isTwoDigitYear: r === "YY" });
    switch (r) {
      case "Y":
        return Dt(kt(4, n), o);
      case "Yo":
        return Dt(i.ordinalNumber(n, { unit: "year" }), o);
      default:
        return Dt(kt(r.length, n), o);
    }
  }
  validate(n, r) {
    return r.isTwoDigitYear || r.year > 0;
  }
  set(n, r, i, o) {
    const a = vC(n, o);
    if (i.isTwoDigitYear) {
      const c = RA(i.year, a);
      return (
        n.setFullYear(c, 0, o.firstWeekContainsDate),
        n.setHours(0, 0, 0, 0),
        ko(n, o)
      );
    }
    const l = !("era" in r) || r.era === 1 ? i.year : 1 - i.year;
    return (
      n.setFullYear(l, 0, o.firstWeekContainsDate),
      n.setHours(0, 0, 0, 0),
      ko(n, o)
    );
  }
}
class v8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 130);
    ae(this, "incompatibleTokens", [
      "G",
      "y",
      "Y",
      "u",
      "Q",
      "q",
      "M",
      "L",
      "w",
      "d",
      "D",
      "e",
      "c",
      "t",
      "T",
    ]);
  }
  parse(n, r) {
    return Ih(r === "R" ? 4 : r.length, n);
  }
  set(n, r, i) {
    const o = It(n, 0);
    return o.setFullYear(i, 0, 4), o.setHours(0, 0, 0, 0), Ms(o);
  }
}
class b8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 130);
    ae(this, "incompatibleTokens", [
      "G",
      "y",
      "Y",
      "R",
      "w",
      "I",
      "i",
      "e",
      "c",
      "t",
      "T",
    ]);
  }
  parse(n, r) {
    return Ih(r === "u" ? 4 : r.length, n);
  }
  set(n, r, i) {
    return n.setFullYear(i, 0, 1), n.setHours(0, 0, 0, 0), n;
  }
}
class C8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 120);
    ae(this, "incompatibleTokens", [
      "Y",
      "R",
      "q",
      "M",
      "L",
      "w",
      "I",
      "d",
      "D",
      "i",
      "e",
      "c",
      "t",
      "T",
    ]);
  }
  parse(n, r, i) {
    switch (r) {
      case "Q":
      case "QQ":
        return kt(r.length, n);
      case "Qo":
        return i.ordinalNumber(n, { unit: "quarter" });
      case "QQQ":
        return (
          i.quarter(n, { width: "abbreviated", context: "formatting" }) ||
          i.quarter(n, { width: "narrow", context: "formatting" })
        );
      case "QQQQQ":
        return i.quarter(n, { width: "narrow", context: "formatting" });
      case "QQQQ":
      default:
        return (
          i.quarter(n, { width: "wide", context: "formatting" }) ||
          i.quarter(n, { width: "abbreviated", context: "formatting" }) ||
          i.quarter(n, { width: "narrow", context: "formatting" })
        );
    }
  }
  validate(n, r) {
    return r >= 1 && r <= 4;
  }
  set(n, r, i) {
    return n.setMonth((i - 1) * 3, 1), n.setHours(0, 0, 0, 0), n;
  }
}
class w8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 120);
    ae(this, "incompatibleTokens", [
      "Y",
      "R",
      "Q",
      "M",
      "L",
      "w",
      "I",
      "d",
      "D",
      "i",
      "e",
      "c",
      "t",
      "T",
    ]);
  }
  parse(n, r, i) {
    switch (r) {
      case "q":
      case "qq":
        return kt(r.length, n);
      case "qo":
        return i.ordinalNumber(n, { unit: "quarter" });
      case "qqq":
        return (
          i.quarter(n, { width: "abbreviated", context: "standalone" }) ||
          i.quarter(n, { width: "narrow", context: "standalone" })
        );
      case "qqqqq":
        return i.quarter(n, { width: "narrow", context: "standalone" });
      case "qqqq":
      default:
        return (
          i.quarter(n, { width: "wide", context: "standalone" }) ||
          i.quarter(n, { width: "abbreviated", context: "standalone" }) ||
          i.quarter(n, { width: "narrow", context: "standalone" })
        );
    }
  }
  validate(n, r) {
    return r >= 1 && r <= 4;
  }
  set(n, r, i) {
    return n.setMonth((i - 1) * 3, 1), n.setHours(0, 0, 0, 0), n;
  }
}
class S8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "incompatibleTokens", [
      "Y",
      "R",
      "q",
      "Q",
      "L",
      "w",
      "I",
      "D",
      "i",
      "e",
      "c",
      "t",
      "T",
    ]);
    ae(this, "priority", 110);
  }
  parse(n, r, i) {
    const o = (a) => a - 1;
    switch (r) {
      case "M":
        return Dt(yt(Ot.month, n), o);
      case "MM":
        return Dt(kt(2, n), o);
      case "Mo":
        return Dt(i.ordinalNumber(n, { unit: "month" }), o);
      case "MMM":
        return (
          i.month(n, { width: "abbreviated", context: "formatting" }) ||
          i.month(n, { width: "narrow", context: "formatting" })
        );
      case "MMMMM":
        return i.month(n, { width: "narrow", context: "formatting" });
      case "MMMM":
      default:
        return (
          i.month(n, { width: "wide", context: "formatting" }) ||
          i.month(n, { width: "abbreviated", context: "formatting" }) ||
          i.month(n, { width: "narrow", context: "formatting" })
        );
    }
  }
  validate(n, r) {
    return r >= 0 && r <= 11;
  }
  set(n, r, i) {
    return n.setMonth(i, 1), n.setHours(0, 0, 0, 0), n;
  }
}
class x8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 110);
    ae(this, "incompatibleTokens", [
      "Y",
      "R",
      "q",
      "Q",
      "M",
      "w",
      "I",
      "D",
      "i",
      "e",
      "c",
      "t",
      "T",
    ]);
  }
  parse(n, r, i) {
    const o = (a) => a - 1;
    switch (r) {
      case "L":
        return Dt(yt(Ot.month, n), o);
      case "LL":
        return Dt(kt(2, n), o);
      case "Lo":
        return Dt(i.ordinalNumber(n, { unit: "month" }), o);
      case "LLL":
        return (
          i.month(n, { width: "abbreviated", context: "standalone" }) ||
          i.month(n, { width: "narrow", context: "standalone" })
        );
      case "LLLLL":
        return i.month(n, { width: "narrow", context: "standalone" });
      case "LLLL":
      default:
        return (
          i.month(n, { width: "wide", context: "standalone" }) ||
          i.month(n, { width: "abbreviated", context: "standalone" }) ||
          i.month(n, { width: "narrow", context: "standalone" })
        );
    }
  }
  validate(n, r) {
    return r >= 0 && r <= 11;
  }
  set(n, r, i) {
    return n.setMonth(i, 1), n.setHours(0, 0, 0, 0), n;
  }
}
function E8(t, e, n) {
  const r = qt(t),
    i = xA(r, n) - e;
  return r.setDate(r.getDate() - i * 7), r;
}
class T8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 100);
    ae(this, "incompatibleTokens", [
      "y",
      "R",
      "u",
      "q",
      "Q",
      "M",
      "L",
      "I",
      "d",
      "D",
      "i",
      "t",
      "T",
    ]);
  }
  parse(n, r, i) {
    switch (r) {
      case "w":
        return yt(Ot.week, n);
      case "wo":
        return i.ordinalNumber(n, { unit: "week" });
      default:
        return kt(r.length, n);
    }
  }
  validate(n, r) {
    return r >= 1 && r <= 53;
  }
  set(n, r, i, o) {
    return ko(E8(n, i, o), o);
  }
}
function I8(t, e) {
  const n = qt(t),
    r = SA(n) - e;
  return n.setDate(n.getDate() - r * 7), n;
}
class N8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 100);
    ae(this, "incompatibleTokens", [
      "y",
      "Y",
      "u",
      "q",
      "Q",
      "M",
      "L",
      "w",
      "d",
      "D",
      "e",
      "c",
      "t",
      "T",
    ]);
  }
  parse(n, r, i) {
    switch (r) {
      case "I":
        return yt(Ot.week, n);
      case "Io":
        return i.ordinalNumber(n, { unit: "week" });
      default:
        return kt(r.length, n);
    }
  }
  validate(n, r) {
    return r >= 1 && r <= 53;
  }
  set(n, r, i) {
    return Ms(I8(n, i));
  }
}
const k8 = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
  R8 = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
class A8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 90);
    ae(this, "subPriority", 1);
    ae(this, "incompatibleTokens", [
      "Y",
      "R",
      "q",
      "Q",
      "w",
      "I",
      "D",
      "i",
      "e",
      "c",
      "t",
      "T",
    ]);
  }
  parse(n, r, i) {
    switch (r) {
      case "d":
        return yt(Ot.date, n);
      case "do":
        return i.ordinalNumber(n, { unit: "date" });
      default:
        return kt(r.length, n);
    }
  }
  validate(n, r) {
    const i = n.getFullYear(),
      o = AA(i),
      a = n.getMonth();
    return o ? r >= 1 && r <= R8[a] : r >= 1 && r <= k8[a];
  }
  set(n, r, i) {
    return n.setDate(i), n.setHours(0, 0, 0, 0), n;
  }
}
class j8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 90);
    ae(this, "subpriority", 1);
    ae(this, "incompatibleTokens", [
      "Y",
      "R",
      "q",
      "Q",
      "M",
      "L",
      "w",
      "I",
      "d",
      "E",
      "i",
      "e",
      "c",
      "t",
      "T",
    ]);
  }
  parse(n, r, i) {
    switch (r) {
      case "D":
      case "DD":
        return yt(Ot.dayOfYear, n);
      case "Do":
        return i.ordinalNumber(n, { unit: "date" });
      default:
        return kt(r.length, n);
    }
  }
  validate(n, r) {
    const i = n.getFullYear();
    return AA(i) ? r >= 1 && r <= 366 : r >= 1 && r <= 365;
  }
  set(n, r, i) {
    return n.setMonth(0, i), n.setHours(0, 0, 0, 0), n;
  }
}
function CC(t, e, n) {
  var h, f, p, m;
  const r = el(),
    i =
      (n == null ? void 0 : n.weekStartsOn) ??
      ((f = (h = n == null ? void 0 : n.locale) == null ? void 0 : h.options) ==
      null
        ? void 0
        : f.weekStartsOn) ??
      r.weekStartsOn ??
      ((m = (p = r.locale) == null ? void 0 : p.options) == null
        ? void 0
        : m.weekStartsOn) ??
      0,
    o = qt(t),
    a = o.getDay(),
    c = ((e % 7) + 7) % 7,
    u = 7 - i,
    d = e < 0 || e > 6 ? e - ((a + u) % 7) : ((c + u) % 7) - ((a + u) % 7);
  return yA(o, d);
}
class O8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 90);
    ae(this, "incompatibleTokens", ["D", "i", "e", "c", "t", "T"]);
  }
  parse(n, r, i) {
    switch (r) {
      case "E":
      case "EE":
      case "EEE":
        return (
          i.day(n, { width: "abbreviated", context: "formatting" }) ||
          i.day(n, { width: "short", context: "formatting" }) ||
          i.day(n, { width: "narrow", context: "formatting" })
        );
      case "EEEEE":
        return i.day(n, { width: "narrow", context: "formatting" });
      case "EEEEEE":
        return (
          i.day(n, { width: "short", context: "formatting" }) ||
          i.day(n, { width: "narrow", context: "formatting" })
        );
      case "EEEE":
      default:
        return (
          i.day(n, { width: "wide", context: "formatting" }) ||
          i.day(n, { width: "abbreviated", context: "formatting" }) ||
          i.day(n, { width: "short", context: "formatting" }) ||
          i.day(n, { width: "narrow", context: "formatting" })
        );
    }
  }
  validate(n, r) {
    return r >= 0 && r <= 6;
  }
  set(n, r, i, o) {
    return (n = CC(n, i, o)), n.setHours(0, 0, 0, 0), n;
  }
}
class D8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 90);
    ae(this, "incompatibleTokens", [
      "y",
      "R",
      "u",
      "q",
      "Q",
      "M",
      "L",
      "I",
      "d",
      "D",
      "E",
      "i",
      "c",
      "t",
      "T",
    ]);
  }
  parse(n, r, i, o) {
    const a = (l) => {
      const c = Math.floor((l - 1) / 7) * 7;
      return ((l + o.weekStartsOn + 6) % 7) + c;
    };
    switch (r) {
      case "e":
      case "ee":
        return Dt(kt(r.length, n), a);
      case "eo":
        return Dt(i.ordinalNumber(n, { unit: "day" }), a);
      case "eee":
        return (
          i.day(n, { width: "abbreviated", context: "formatting" }) ||
          i.day(n, { width: "short", context: "formatting" }) ||
          i.day(n, { width: "narrow", context: "formatting" })
        );
      case "eeeee":
        return i.day(n, { width: "narrow", context: "formatting" });
      case "eeeeee":
        return (
          i.day(n, { width: "short", context: "formatting" }) ||
          i.day(n, { width: "narrow", context: "formatting" })
        );
      case "eeee":
      default:
        return (
          i.day(n, { width: "wide", context: "formatting" }) ||
          i.day(n, { width: "abbreviated", context: "formatting" }) ||
          i.day(n, { width: "short", context: "formatting" }) ||
          i.day(n, { width: "narrow", context: "formatting" })
        );
    }
  }
  validate(n, r) {
    return r >= 0 && r <= 6;
  }
  set(n, r, i, o) {
    return (n = CC(n, i, o)), n.setHours(0, 0, 0, 0), n;
  }
}
class L8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 90);
    ae(this, "incompatibleTokens", [
      "y",
      "R",
      "u",
      "q",
      "Q",
      "M",
      "L",
      "I",
      "d",
      "D",
      "E",
      "i",
      "e",
      "t",
      "T",
    ]);
  }
  parse(n, r, i, o) {
    const a = (l) => {
      const c = Math.floor((l - 1) / 7) * 7;
      return ((l + o.weekStartsOn + 6) % 7) + c;
    };
    switch (r) {
      case "c":
      case "cc":
        return Dt(kt(r.length, n), a);
      case "co":
        return Dt(i.ordinalNumber(n, { unit: "day" }), a);
      case "ccc":
        return (
          i.day(n, { width: "abbreviated", context: "standalone" }) ||
          i.day(n, { width: "short", context: "standalone" }) ||
          i.day(n, { width: "narrow", context: "standalone" })
        );
      case "ccccc":
        return i.day(n, { width: "narrow", context: "standalone" });
      case "cccccc":
        return (
          i.day(n, { width: "short", context: "standalone" }) ||
          i.day(n, { width: "narrow", context: "standalone" })
        );
      case "cccc":
      default:
        return (
          i.day(n, { width: "wide", context: "standalone" }) ||
          i.day(n, { width: "abbreviated", context: "standalone" }) ||
          i.day(n, { width: "short", context: "standalone" }) ||
          i.day(n, { width: "narrow", context: "standalone" })
        );
    }
  }
  validate(n, r) {
    return r >= 0 && r <= 6;
  }
  set(n, r, i, o) {
    return (n = CC(n, i, o)), n.setHours(0, 0, 0, 0), n;
  }
}
function P8(t, e) {
  const n = qt(t),
    r = u8(n),
    i = e - r;
  return yA(n, i);
}
class _8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 90);
    ae(this, "incompatibleTokens", [
      "y",
      "Y",
      "u",
      "q",
      "Q",
      "M",
      "L",
      "w",
      "d",
      "D",
      "E",
      "e",
      "c",
      "t",
      "T",
    ]);
  }
  parse(n, r, i) {
    const o = (a) => (a === 0 ? 7 : a);
    switch (r) {
      case "i":
      case "ii":
        return kt(r.length, n);
      case "io":
        return i.ordinalNumber(n, { unit: "day" });
      case "iii":
        return Dt(
          i.day(n, { width: "abbreviated", context: "formatting" }) ||
            i.day(n, { width: "short", context: "formatting" }) ||
            i.day(n, { width: "narrow", context: "formatting" }),
          o
        );
      case "iiiii":
        return Dt(i.day(n, { width: "narrow", context: "formatting" }), o);
      case "iiiiii":
        return Dt(
          i.day(n, { width: "short", context: "formatting" }) ||
            i.day(n, { width: "narrow", context: "formatting" }),
          o
        );
      case "iiii":
      default:
        return Dt(
          i.day(n, { width: "wide", context: "formatting" }) ||
            i.day(n, { width: "abbreviated", context: "formatting" }) ||
            i.day(n, { width: "short", context: "formatting" }) ||
            i.day(n, { width: "narrow", context: "formatting" }),
          o
        );
    }
  }
  validate(n, r) {
    return r >= 1 && r <= 7;
  }
  set(n, r, i) {
    return (n = P8(n, i)), n.setHours(0, 0, 0, 0), n;
  }
}
class M8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 80);
    ae(this, "incompatibleTokens", ["b", "B", "H", "k", "t", "T"]);
  }
  parse(n, r, i) {
    switch (r) {
      case "a":
      case "aa":
      case "aaa":
        return (
          i.dayPeriod(n, { width: "abbreviated", context: "formatting" }) ||
          i.dayPeriod(n, { width: "narrow", context: "formatting" })
        );
      case "aaaaa":
        return i.dayPeriod(n, { width: "narrow", context: "formatting" });
      case "aaaa":
      default:
        return (
          i.dayPeriod(n, { width: "wide", context: "formatting" }) ||
          i.dayPeriod(n, { width: "abbreviated", context: "formatting" }) ||
          i.dayPeriod(n, { width: "narrow", context: "formatting" })
        );
    }
  }
  set(n, r, i) {
    return n.setHours(bC(i), 0, 0, 0), n;
  }
}
class F8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 80);
    ae(this, "incompatibleTokens", ["a", "B", "H", "k", "t", "T"]);
  }
  parse(n, r, i) {
    switch (r) {
      case "b":
      case "bb":
      case "bbb":
        return (
          i.dayPeriod(n, { width: "abbreviated", context: "formatting" }) ||
          i.dayPeriod(n, { width: "narrow", context: "formatting" })
        );
      case "bbbbb":
        return i.dayPeriod(n, { width: "narrow", context: "formatting" });
      case "bbbb":
      default:
        return (
          i.dayPeriod(n, { width: "wide", context: "formatting" }) ||
          i.dayPeriod(n, { width: "abbreviated", context: "formatting" }) ||
          i.dayPeriod(n, { width: "narrow", context: "formatting" })
        );
    }
  }
  set(n, r, i) {
    return n.setHours(bC(i), 0, 0, 0), n;
  }
}
class B8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 80);
    ae(this, "incompatibleTokens", ["a", "b", "t", "T"]);
  }
  parse(n, r, i) {
    switch (r) {
      case "B":
      case "BB":
      case "BBB":
        return (
          i.dayPeriod(n, { width: "abbreviated", context: "formatting" }) ||
          i.dayPeriod(n, { width: "narrow", context: "formatting" })
        );
      case "BBBBB":
        return i.dayPeriod(n, { width: "narrow", context: "formatting" });
      case "BBBB":
      default:
        return (
          i.dayPeriod(n, { width: "wide", context: "formatting" }) ||
          i.dayPeriod(n, { width: "abbreviated", context: "formatting" }) ||
          i.dayPeriod(n, { width: "narrow", context: "formatting" })
        );
    }
  }
  set(n, r, i) {
    return n.setHours(bC(i), 0, 0, 0), n;
  }
}
class U8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 70);
    ae(this, "incompatibleTokens", ["H", "K", "k", "t", "T"]);
  }
  parse(n, r, i) {
    switch (r) {
      case "h":
        return yt(Ot.hour12h, n);
      case "ho":
        return i.ordinalNumber(n, { unit: "hour" });
      default:
        return kt(r.length, n);
    }
  }
  validate(n, r) {
    return r >= 1 && r <= 12;
  }
  set(n, r, i) {
    const o = n.getHours() >= 12;
    return (
      o && i < 12
        ? n.setHours(i + 12, 0, 0, 0)
        : !o && i === 12
        ? n.setHours(0, 0, 0, 0)
        : n.setHours(i, 0, 0, 0),
      n
    );
  }
}
class z8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 70);
    ae(this, "incompatibleTokens", ["a", "b", "h", "K", "k", "t", "T"]);
  }
  parse(n, r, i) {
    switch (r) {
      case "H":
        return yt(Ot.hour23h, n);
      case "Ho":
        return i.ordinalNumber(n, { unit: "hour" });
      default:
        return kt(r.length, n);
    }
  }
  validate(n, r) {
    return r >= 0 && r <= 23;
  }
  set(n, r, i) {
    return n.setHours(i, 0, 0, 0), n;
  }
}
class H8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 70);
    ae(this, "incompatibleTokens", ["h", "H", "k", "t", "T"]);
  }
  parse(n, r, i) {
    switch (r) {
      case "K":
        return yt(Ot.hour11h, n);
      case "Ko":
        return i.ordinalNumber(n, { unit: "hour" });
      default:
        return kt(r.length, n);
    }
  }
  validate(n, r) {
    return r >= 0 && r <= 11;
  }
  set(n, r, i) {
    return (
      n.getHours() >= 12 && i < 12
        ? n.setHours(i + 12, 0, 0, 0)
        : n.setHours(i, 0, 0, 0),
      n
    );
  }
}
class $8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 70);
    ae(this, "incompatibleTokens", ["a", "b", "h", "H", "K", "t", "T"]);
  }
  parse(n, r, i) {
    switch (r) {
      case "k":
        return yt(Ot.hour24h, n);
      case "ko":
        return i.ordinalNumber(n, { unit: "hour" });
      default:
        return kt(r.length, n);
    }
  }
  validate(n, r) {
    return r >= 1 && r <= 24;
  }
  set(n, r, i) {
    const o = i <= 24 ? i % 24 : i;
    return n.setHours(o, 0, 0, 0), n;
  }
}
class K8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 60);
    ae(this, "incompatibleTokens", ["t", "T"]);
  }
  parse(n, r, i) {
    switch (r) {
      case "m":
        return yt(Ot.minute, n);
      case "mo":
        return i.ordinalNumber(n, { unit: "minute" });
      default:
        return kt(r.length, n);
    }
  }
  validate(n, r) {
    return r >= 0 && r <= 59;
  }
  set(n, r, i) {
    return n.setMinutes(i, 0, 0), n;
  }
}
class q8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 50);
    ae(this, "incompatibleTokens", ["t", "T"]);
  }
  parse(n, r, i) {
    switch (r) {
      case "s":
        return yt(Ot.second, n);
      case "so":
        return i.ordinalNumber(n, { unit: "second" });
      default:
        return kt(r.length, n);
    }
  }
  validate(n, r) {
    return r >= 0 && r <= 59;
  }
  set(n, r, i) {
    return n.setSeconds(i, 0), n;
  }
}
class G8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 30);
    ae(this, "incompatibleTokens", ["t", "T"]);
  }
  parse(n, r) {
    const i = (o) => Math.trunc(o * Math.pow(10, -r.length + 3));
    return Dt(kt(r.length, n), i);
  }
  set(n, r, i) {
    return n.setMilliseconds(i), n;
  }
}
class W8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 10);
    ae(this, "incompatibleTokens", ["t", "T", "x"]);
  }
  parse(n, r) {
    switch (r) {
      case "X":
        return Yr(Qr.basicOptionalMinutes, n);
      case "XX":
        return Yr(Qr.basic, n);
      case "XXXX":
        return Yr(Qr.basicOptionalSeconds, n);
      case "XXXXX":
        return Yr(Qr.extendedOptionalSeconds, n);
      case "XXX":
      default:
        return Yr(Qr.extended, n);
    }
  }
  set(n, r, i) {
    return r.timestampIsSet ? n : It(n, n.getTime() - Th(n) - i);
  }
}
class V8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 10);
    ae(this, "incompatibleTokens", ["t", "T", "X"]);
  }
  parse(n, r) {
    switch (r) {
      case "x":
        return Yr(Qr.basicOptionalMinutes, n);
      case "xx":
        return Yr(Qr.basic, n);
      case "xxxx":
        return Yr(Qr.basicOptionalSeconds, n);
      case "xxxxx":
        return Yr(Qr.extendedOptionalSeconds, n);
      case "xxx":
      default:
        return Yr(Qr.extended, n);
    }
  }
  set(n, r, i) {
    return r.timestampIsSet ? n : It(n, n.getTime() - Th(n) - i);
  }
}
class Q8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 40);
    ae(this, "incompatibleTokens", "*");
  }
  parse(n) {
    return kA(n);
  }
  set(n, r, i) {
    return [It(n, i * 1e3), { timestampIsSet: !0 }];
  }
}
class Y8 extends Fe {
  constructor() {
    super(...arguments);
    ae(this, "priority", 20);
    ae(this, "incompatibleTokens", "*");
  }
  parse(n) {
    return kA(n);
  }
  set(n, r, i) {
    return [It(n, i), { timestampIsSet: !0 }];
  }
}
const X8 = {
    G: new m8(),
    y: new g8(),
    Y: new y8(),
    R: new v8(),
    u: new b8(),
    Q: new C8(),
    q: new w8(),
    M: new S8(),
    L: new x8(),
    w: new T8(),
    I: new N8(),
    d: new A8(),
    D: new j8(),
    E: new O8(),
    e: new D8(),
    c: new L8(),
    i: new _8(),
    a: new M8(),
    b: new F8(),
    B: new B8(),
    h: new U8(),
    H: new z8(),
    K: new H8(),
    k: new $8(),
    m: new K8(),
    s: new q8(),
    S: new G8(),
    X: new W8(),
    x: new V8(),
    t: new Q8(),
    T: new Y8(),
  },
  J8 = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,
  Z8 = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,
  eK = /^'([^]*?)'?$/,
  tK = /''/g,
  nK = /\S/,
  rK = /[a-zA-Z]/;
function iK(t, e, n, r) {
  var v, C, b, g;
  const i = c8(),
    o = i.locale ?? wA,
    a =
      i.firstWeekContainsDate ??
      ((C = (v = i.locale) == null ? void 0 : v.options) == null
        ? void 0
        : C.firstWeekContainsDate) ??
      1,
    l =
      i.weekStartsOn ??
      ((g = (b = i.locale) == null ? void 0 : b.options) == null
        ? void 0
        : g.weekStartsOn) ??
      0;
  if (e === "") return t === "" ? qt(n) : It(n, NaN);
  const c = { firstWeekContainsDate: a, weekStartsOn: l, locale: o },
    u = [new p8()],
    d = e
      .match(Z8)
      .map((y) => {
        const w = y[0];
        if (w in hy) {
          const E = hy[w];
          return E(y, o.formatLong);
        }
        return y;
      })
      .join("")
      .match(J8),
    h = [];
  for (let y of d) {
    IA(y) && fy(y, e, t), TA(y) && fy(y, e, t);
    const w = y[0],
      E = X8[w];
    if (E) {
      const { incompatibleTokens: S } = E;
      if (Array.isArray(S)) {
        const I = h.find((R) => S.includes(R.token) || R.token === w);
        if (I)
          throw new RangeError(
            `The format string mustn't contain \`${I.fullToken}\` and \`${y}\` at the same time`
          );
      } else if (E.incompatibleTokens === "*" && h.length > 0)
        throw new RangeError(
          `The format string mustn't contain \`${y}\` and any other token at the same time`
        );
      h.push({ token: w, fullToken: y });
      const T = E.run(t, y, o.match, c);
      if (!T) return It(n, NaN);
      u.push(T.setter), (t = T.rest);
    } else {
      if (w.match(rK))
        throw new RangeError(
          "Format string contains an unescaped latin alphabet character `" +
            w +
            "`"
        );
      if (
        (y === "''" ? (y = "'") : w === "'" && (y = oK(y)), t.indexOf(y) === 0)
      )
        t = t.slice(y.length);
      else return It(n, NaN);
    }
  }
  if (t.length > 0 && nK.test(t)) return It(n, NaN);
  const f = u
    .map((y) => y.priority)
    .sort((y, w) => w - y)
    .filter((y, w, E) => E.indexOf(y) === w)
    .map((y) =>
      u
        .filter((w) => w.priority === y)
        .sort((w, E) => E.subPriority - w.subPriority)
    )
    .map((y) => y[0]);
  let p = qt(n);
  if (isNaN(p.getTime())) return It(n, NaN);
  const m = {};
  for (const y of f) {
    if (!y.validate(p, c)) return It(n, NaN);
    const w = y.set(p, m, c);
    Array.isArray(w) ? ((p = w[0]), Object.assign(m, w[1])) : (p = w);
  }
  return It(n, p);
}
function oK(t) {
  return t.match(eK)[1].replace(tK, "'");
}
function aK(t) {
  return t ? t.replace(/\s/g, "") === "" : !0;
}
function ux(t) {
  if (t === null || /^[\s,]*$/.test(t)) return null;
  {
    const n = t
      .split(/[\s,]+/)
      .filter((r) => r.trim() !== "")
      .map(Number);
    for (let r = 0; r < n.length; r++)
      n[r] > 2147483647 && (n[r] = parseInt(n[r].toString().substring(0, 9)));
    return n;
  }
}
function sK(t) {
  return t === null ? null : t.join(", ");
}
function lK(t) {
  if (t === null) return null;
  const e = parseInt(t);
  return isNaN(e) ? null : e;
}
function cK(t) {
  return t === null ? null : t.toString();
}
function dr(t) {
  return pa(t === null || t === "" ? new Date() : new Date(t), SS);
}
function jA(t) {
  var n;
  if (t === null) return null;
  const e = parseFloat(t);
  return isNaN(e) ||
    e > 100 ||
    ((n = e.toString().split(".")[1]) == null ? void 0 : n.length) > 2
    ? null
    : e;
}
function uK(t) {
  if (t === null) return !1;
  let e = !1;
  return (
    (e = new RegExp(
      "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "i"
    ).test(t)),
    e
  );
}
const dx = yC(),
  OA = st({
    name: "saveDebtor",
    initialState: dx,
    reducers: {
      setCurrentDebtor: (t, e) => {
        Object.assign(t, e.payload);
      },
      setSaveDebtorOrganisationId: (t, e) => {
        t.organisationId = e.payload;
      },
      setSaveDebtorCode: (t, e) => {
        t.code = e.payload;
      },
      setSaveDebtorName: (t, e) => {
        t.name = e.payload;
      },
      setSaveDebtorAddress1: (t, e) => {
        t.address1 = e.payload;
      },
      setSaveDebtorAddress2: (t, e) => {
        t.address2 = e.payload;
      },
      setSaveDebtorAddress3: (t, e) => {
        t.address3 = e.payload;
      },
      setSaveDebtorPCode: (t, e) => {
        t.pCode = e.payload;
      },
      setSaveDebtorTel: (t, e) => {
        t.tel = e.payload;
      },
      setSaveDebtorFax: (t, e) => {
        t.fax = e.payload;
      },
      setSaveDebtorEmail: (t, e) => {
        t.email = e.payload;
      },
      setSaveDebtorUrl: (t, e) => {
        t.url = e.payload;
      },
      setSaveDebtorContact: (t, e) => {
        t.contact = e.payload;
      },
      setSaveDebtorVatNo: (t, e) => {
        t.vatNo = e.payload;
      },
      setSaveDebtorPaysVat: (t, e) => {
        t.paysVat = e.payload.checked;
      },
      setSaveDebtorGLCode: (t, e) => {
        t.gLCode = e.payload;
      },
      setSaveDebtorControl: (t, e) => {
        t.controlCode = e.payload;
      },
      setSaveDebtorDebtorGroupId: (t, e) => {
        t.debtorGroupId = e.payload;
      },
      setSaveDebtorCountry: (t, e) => {
        t.country = e.payload;
      },
      setSaveDebtorRegionId: (t, e) => {
        t.regionId = e.payload;
      },
      setSaveDebtorBilledById: (t, e) => {
        t.billedById = e.payload;
      },
      setSaveDebtorBillingTypeId: (t, e) => {
        t.billingTypeId = e.payload;
      },
      setSaveDebtorDiscountTypeId: (t, e) => {
        t.discountTypeId = e.payload;
      },
      setSaveDebtorQualifyingLevel: (t, e) => {
        t.qualifyingLevel = e.payload;
      },
      setSaveDebtorLicenceFee: (t, e) => {
        t.licenceFee = e.payload;
      },
      setSaveDebtorMonthlyRental: (t, e) => {
        t.monthlyRental = e.payload;
      },
      setSaveDebtorCurrencyCode: (t, e) => {
        t.currencyCode = e.payload;
      },
      setSaveDebtorIsInvoiced: (t, e) => {
        t.isInvoiced = e.payload.checked;
      },
      setSaveDebtorDebtRatingId: (t, e) => {
        t.debtRatingId = e.payload;
      },
      setSaveDebtorDebtRatingComments: (t, e) => {
        t.debtComments = e.payload;
      },
      setSaveLastInvoice: (t, e) => {
        t.lastInvoice = e.payload;
      },
      setSaveDebtorAsSubmitted: (t) => {
        t.wasSubmitted = !0;
      },
      setSaveDebtorDiscountPercentage: (t, e) => {
        t.discountPercentage = jA(e.payload);
      },
      clearSaveDebtor: (t, e) => {
        const n = { ...dx, organisationId: e.payload.id };
        Object.assign(t, n);
      },
    },
    extraReducers: (t) => {
      t.addCase(Lr.actions.setOrganisation, (e, n) => {
        e.organisationId = n.payload.id;
      });
    },
  }),
  {
    setCurrentDebtor: dK,
    setSaveDebtorOrganisationId: hK,
    setSaveDebtorCode: fK,
    setSaveDebtorName: pK,
    setSaveDebtorAddress1: mK,
    setSaveDebtorAddress2: gK,
    setSaveDebtorAddress3: yK,
    setSaveDebtorBilledById: vK,
    setSaveDebtorBillingTypeId: bK,
    setSaveDebtorControl: CK,
    setSaveDebtorIsInvoiced: wK,
    setSaveDebtorCurrencyCode: SK,
    setSaveDebtorDebtorGroupId: xK,
    setSaveDebtorDiscountTypeId: EK,
    setSaveDebtorEmail: TK,
    setSaveDebtorFax: IK,
    setSaveDebtorGLCode: NK,
    setSaveDebtorLicenceFee: kK,
    setSaveDebtorMonthlyRental: RK,
    setSaveDebtorPCode: AK,
    setSaveDebtorPaysVat: jK,
    setSaveDebtorQualifyingLevel: OK,
    setSaveDebtorCountry: DK,
    setSaveDebtorRegionId: LK,
    setSaveDebtorTel: PK,
    setSaveDebtorUrl: _K,
    setSaveDebtorContact: MK,
    setSaveDebtorVatNo: FK,
    setSaveDebtorDebtRatingId: BK,
    setSaveDebtorDebtRatingComments: UK,
    setSaveLastInvoice: zK,
    setSaveDebtorAsSubmitted: HK,
    setSaveDebtorDiscountPercentage: $K,
    clearSaveDebtor: DA,
  } = OA.actions,
  KK = OA.reducer,
  qK = () => ({ id: -1, wasSubmitted: !1 }),
  GK = () => ({
    id: -1,
    organisationId: 0,
    name: "",
    address1: "",
    address2: "",
    address3: "",
    pCode: "",
    tel: "",
    fax: "",
    email: "",
    web: "",
    notes: "",
    isInvoiceGroup: !1,
    invoiceDebtId: null,
    invoiceDebtorCode: null,
  }),
  WK = (t) => ({
    ...Lf(),
    organisationId: t.organisationId,
    debtorGroupId: t.id,
  }),
  VK = () => ({ ...qK(), model: GK() }),
  Fu = VK(),
  LA = st({
    name: "saveDebtorGroup",
    initialState: Fu,
    reducers: {
      setCurrentDebtorGroup: (t, e) => {
        Object.assign(t.model, e.payload);
      },
      setSaveDebtorGroupOrganisationId: (t, e) => {
        t.model.organisationId = e.payload;
      },
      setSaveDebtorGroupAddress1: (t, e) => {
        t.model.address1 = e.payload;
      },
      setSaveDebtorGroupAddress2: (t, e) => {
        t.model.address2 = e.payload;
      },
      setSaveDebtorGroupAddress3: (t, e) => {
        t.model.address3 = e.payload;
      },
      setSaveDebtorGroupPCode: (t, e) => {
        t.model.pCode = e.payload;
      },
      setSaveDebtorGroupName: (t, e) => {
        t.model.name = e.payload;
      },
      setSaveDebtorGroupTel: (t, e) => {
        t.model.tel = e.payload;
      },
      setSaveDebtorGroupFax: (t, e) => {
        t.model.fax = e.payload;
      },
      setSaveDebtorGroupEmail: (t, e) => {
        t.model.email = e.payload;
      },
      setSaveDebtorGroupWeb: (t, e) => {
        t.model.web = e.payload;
      },
      setSaveDebtorGroupNotes: (t, e) => {
        t.model.notes = e.payload;
      },
      setSaveDebtorGroupAsSubmitted: (t) => {
        t.wasSubmitted = !0;
      },
      setSaveDebtorGroupIsInvoiceGroup: (t, e) => {
        (t.model.isInvoiceGroup = e.payload.checked),
          e.payload.checked || (t.model.invoiceDebtId = null);
      },
      setSaveDebtorGroupInvoiceDebtId: (t, e) => {
        t.model.invoiceDebtId = e.payload;
      },
      initNewSaveDebtorGroup: (t, e) => {
        const n = { ...Fu, organisationId: e.payload.id };
        Object.assign(t, n);
      },
      clearSaveDebtorGroup: (t) => ({
        ...Fu,
        model: { ...Fu.model, organisationId: t.model.organisationId },
      }),
    },
    extraReducers: (t) => {
      t.addCase(Lr.actions.setOrganisation, (e, n) => {
        e.model.organisationId = n.payload.id;
      });
    },
  }),
  {
    setCurrentDebtorGroup: QK,
    setSaveDebtorGroupOrganisationId: YK,
    setSaveDebtorGroupAddress1: KY,
    setSaveDebtorGroupAddress2: qY,
    setSaveDebtorGroupAddress3: GY,
    setSaveDebtorGroupPCode: WY,
    setSaveDebtorGroupName: XK,
    setSaveDebtorGroupTel: VY,
    setSaveDebtorGroupFax: QY,
    setSaveDebtorGroupEmail: YY,
    setSaveDebtorGroupWeb: XY,
    setSaveDebtorGroupNotes: JY,
    setSaveDebtorGroupAsSubmitted: JK,
    setSaveDebtorGroupIsInvoiceGroup: ZK,
    setSaveDebtorGroupInvoiceDebtId: eq,
    initNewSaveDebtorGroup: tq,
    clearSaveDebtorGroup: nq,
  } = LA.actions,
  rq = LA.reducer;
var gt = ((t) => (
  (t[(t.None = 0)] = "None"),
  (t[(t.NewLicence = 1)] = "NewLicence"),
  (t[(t.PendingLicence = 2)] = "PendingLicence"),
  t
))(gt || {});
const iq = () => ({
    licenceNumber: null,
    series: null,
    organisationId: null,
    debtNumber: null,
    username: null,
    createDate: "",
    licenceDescription: "",
    newLicenceType: gt.NewLicence,
    wasSubmitted: !1,
  }),
  oq = (t) => ({
    licenceNumber: t.licenceNumber,
    organisationId: t.organisationId,
    series: t.series,
    debtNumber: t.debtNumber,
    username: null,
    createDate: "",
    licenceDescription: t.label,
    newLicenceType: gt.NewLicence,
    wasSubmitted: !1,
  }),
  aq = (t, e) => ({ oldLicenceNumber: t, newLicenceNumber: e }),
  sq = () => ({ oldLicenceNumber: null, newLicenceNumber: null }),
  Bu = sq(),
  Pf = st({
    name: "replaceLicence",
    initialState: Bu,
    reducers: {
      setReplaceLicenceNumbers: (t, e) => {
        Object.assign(t, e.payload);
      },
      setReplaceLicenceWithOldDetails: (t, e) => {
        (t.newLicenceNumber = e.payload.newLicenceNumber),
          (t.oldLicenceNumber = e.payload.oldLicenceNumber);
      },
      clearLicenceReplacement: (t) => {
        Object.assign(t, Bu);
      },
    },
    extraReducers: (t) => {
      t.addCase(Nh.actions.clearSavePendingLicence, (e) => {
        Object.assign(e, Bu);
      }).addCase(Nh.actions.resetSavePendingLicenceWithOrganisation, (e) => {
        Object.assign(e, Bu);
      });
    },
  }),
  {
    setReplaceLicenceNumbers: lq,
    setReplaceLicenceWithOldDetails: cq,
    clearLicenceReplacement: ZY,
  } = Pf.actions,
  uq = Pf.reducer,
  Hp = iq(),
  Nh = st({
    name: "savePendingLicence",
    initialState: Hp,
    reducers: {
      setSavePendingLicenceOrganisationId: (t, e) => {
        t.organisationId = e.payload;
      },
      setSavePendingLicenceNumber: (t, e) => {
        t.licenceNumber = e.payload;
      },
      setSavePendingLicenceSeries: (t, e) => {
        t.series = e.payload;
      },
      setSavePendingLicenceDebtNumber: (t, e) => {
        t.debtNumber = e.payload;
      },
      setSavePendingLicenceType: (t, e) => {
        t.newLicenceType = e.payload;
      },
      setSavePendingLicence: (t, e) => {
        const n = {
          ...oq(e.payload),
          licenceNumber: t.licenceNumber,
          organisationSliceId: t.organisationId,
          newLicenceType: t.newLicenceType,
        };
        Object.assign(t, n);
      },
      clearSavePendingLicence: (t) => {
        const e = { ...Hp, organisationId: t.organisationId };
        Object.assign(t, e);
      },
      setSavePendingLicenceAsSubmitted: (t) => {
        t.wasSubmitted = !0;
      },
      resetSavePendingLicenceWithOrganisation: (t, e) => {
        const n = { ...Hp, organisationId: e.payload.id };
        Object.assign(t, n);
      },
    },
    extraReducers: (t) => {
      t.addCase(Lr.actions.setOrganisation, (e, n) => {
        e.organisationId = n.payload.id;
      }).addCase(Pf.actions.setReplaceLicenceNumbers, (e, n) => {
        (e.licenceNumber = n.payload.newLicenceNumber),
          (e.newLicenceType = gt.PendingLicence);
      });
    },
  }),
  {
    setSavePendingLicenceOrganisationId: PA,
    setSavePendingLicenceNumber: _A,
    setSavePendingLicenceSeries: dq,
    setSavePendingLicenceDebtNumber: hx,
    setSavePendingLicenceType: hq,
    setSavePendingLicence: fq,
    clearSavePendingLicence: MA,
    setSavePendingLicenceAsSubmitted: FA,
    resetSavePendingLicenceWithOrganisation: pq,
  } = Nh.actions,
  mq = Nh.reducer,
  gq = () => ({
    id: 0,
    title: "",
    name: "",
    surname: "",
    email: "",
    tel: "",
    mobile: "",
    city: "",
    country: "",
    homeLic: "",
  });
var Vt = ((t) => (
    (t[(t.None = 0)] = "None"),
    (t[(t.AddOrSubtract = 1)] = "AddOrSubtract"),
    (t[(t.Migrate = 2)] = "Migrate"),
    t
  ))(Vt || {}),
  Co = ((t) => (
    (t[(t.Increase = 0)] = "Increase"), (t[(t.Decrease = 1)] = "Decrease"), t
  ))(Co || {});
const BA = () => ({
    amount: null,
    direction: Co.Increase,
    type: Vt.None,
    migrateFromLicenceNumber: null,
    isNewUser: !1,
  }),
  yq = () => ({
    licenceNumber: 0,
    organisationId: null,
    type: "",
    count: 0,
    validationDate: null,
    transactionDate: "",
    hardDriveNumber: "",
    clientId: null,
    remarks: "",
    debtor: yC(),
    licenceDrive: "",
    licenceProperties: "",
    series: 0,
    wasSubmitted: !1,
    licenceCountChange: BA(),
    client: gq(),
  }),
  UA = (t) => ({
    licenceNumber: t.licenceNumber,
    organisationId: t.organisationId,
    type: t.type,
    count: t.count,
    validationDate: t.validationDate,
    transactionDate: t.transactionDate,
    hardDriveNumber: t.hardDriveNumber,
    clientId: t.client.id,
    remarks: t.remarks,
    client: t.client,
    debtor: t.debtor,
    licenceDrive: t.share,
    licenceProperties: t.pathProperty,
    series: t.series,
    wasSubmitted: !1,
    licenceCountChange: BA(),
  }),
  $p = yq(),
  zA = st({
    name: "editLicence",
    initialState: $p,
    reducers: {
      setEditLicenceOrganisationId: (t, e) => {
        t.organisationId = e.payload;
      },
      setEditLicenceLicenceNumber: (t, e) => {
        t.licenceNumber = e.payload;
      },
      setEditLicenceType: (t, e) => {
        t.type = e.payload;
      },
      setEditLicenceDebtor: (t, e) => {
        t.debtor = e.payload;
      },
      setEditLicenceCount: (t, e) => {
        const n = e.payload ? e.payload.toString() : "",
          r = parseInt(n);
        t.series === 1
          ? (t.type = "Clerk")
          : r === 1
          ? (t.type = "Software")
          : r > 1
          ? (t.type = "Concurrent")
          : (t.type = ""),
          (t.count = r);
      },
      setEditLicenceValidationDate: (t, e) => {
        t.validationDate = e.payload;
      },
      setEditLicenceHardDriveNumber: (t, e) => {
        t.hardDriveNumber = e.payload;
      },
      setEditLicenceLicenceDrive: (t, e) => {
        t.licenceDrive = e.payload;
      },
      setEditLicenceLicenceProperties: (t, e) => {
        t.licenceProperties = e.payload;
      },
      setEditLicenceTitle: (t, e) => {
        t.client.title = e.payload;
      },
      setEditLicenceName: (t, e) => {
        t.client.name = e.payload;
      },
      setEditLicenceSurname: (t, e) => {
        t.client.surname = e.payload;
      },
      setEditLicenceTel: (t, e) => {
        t.client.tel = e.payload;
      },
      setEditLicenceMobile: (t, e) => {
        t.client.mobile = e.payload;
      },
      setEditLicenceEmail: (t, e) => {
        t.client.email = e.payload;
      },
      setEditLicenceCountry: (t, e) => {
        t.client.country = e.payload;
      },
      setEditLicenceCity: (t, e) => {
        t.client.city = e.payload;
      },
      setEditLicenceRemarks: (t, e) => {
        t.remarks = e.payload;
      },
      setEditLicenceCountChangeAmount: (t, e) => {
        t.licenceCountChange.amount = e.payload;
      },
      setEditLicenceChangeCountType: (t, e) => {
        t.licenceCountChange.type = e.payload;
      },
      setEditLicenceChangeCountDirection: (t, e) => {
        t.licenceCountChange.direction = e.payload;
      },
      setEditLicenceChangeCountMigrateFromLicenceNumber: (t, e) => {
        t.licenceCountChange.migrateFromLicenceNumber = e.payload;
      },
      setEditLicenceChangeCountIsNewUser: (t, e) => {
        t.licenceCountChange.isNewUser = e.payload.checked;
      },
      setEditLicence: (t, e) => {
        const n = t.organisationId;
        Object.assign(t, UA(e.payload)), (t.organisationId = n);
      },
      setActivateLicence: (t, e) => {
        const n = { ...$p, organisationId: t.organisationId };
        Object.assign(t, n), Object.assign(t, e.payload);
      },
      setEditLicenceAsSubmitted: (t) => {
        t.wasSubmitted = !0;
      },
      clearEditLicence: (t) => {
        const e = { ...$p, organisationId: t.organisationId };
        Object.assign(t, e);
      },
    },
    extraReducers: (t) => {
      t.addCase(Lr.actions.setOrganisation, (e, n) => {
        e.organisationId = n.payload.id;
      }).addCase(Pf.actions.setReplaceLicenceWithOldDetails, (e, n) => {
        const r = {
          ...n.payload,
          licenceNumber: n.payload.newLicenceNumber,
          organisationId: e.organisationId,
        };
        Object.assign(e, r);
      });
    },
  }),
  {
    setEditLicenceOrganisationId: eX,
    setEditLicenceLicenceNumber: tX,
    setEditLicenceType: nX,
    setEditLicenceDebtor: rX,
    setEditLicenceCount: kh,
    setEditLicenceValidationDate: HA,
    setEditLicenceHardDriveNumber: $A,
    setEditLicenceLicenceDrive: KA,
    setEditLicenceLicenceProperties: qA,
    setEditLicenceTitle: vq,
    setEditLicenceName: bq,
    setEditLicenceSurname: Cq,
    setEditLicenceTel: wq,
    setEditLicenceMobile: Sq,
    setEditLicenceEmail: xq,
    setEditLicenceCountry: Eq,
    setEditLicenceCity: Tq,
    setEditLicenceRemarks: Iq,
    setEditLicence: GA,
    setActivateLicence: Nq,
    setEditLicenceCountChangeAmount: Kp,
    setEditLicenceChangeCountType: kq,
    setEditLicenceChangeCountMigrateFromLicenceNumber: fx,
    setEditLicenceChangeCountDirection: Rq,
    setEditLicenceChangeCountIsNewUser: Aq,
    setEditLicenceAsSubmitted: Yc,
    clearEditLicence: _f,
  } = zA.actions,
  jq = zA.reducer,
  Oq = () => ({
    id: 0,
    licenceNumber: 0,
    debtor: yC(),
    organisationId: null,
    newDebtorCode: null,
    transactionDate: "",
    wasSubmitted: !1,
  }),
  qp = Oq(),
  WA = st({
    name: "transferLicence",
    initialState: qp,
    reducers: {
      setTransferLicence: (t, e) => {
        const n = { ...qp, organisationId: t.organisationId };
        Object.assign(t, n), Object.assign(t, e.payload);
      },
      setTransferLicenceNewDebtorCode: (t, e) => {
        t.newDebtorCode = e.payload;
      },
      clearTransferLicence: (t) => {
        const e = { ...qp };
        Object.assign(t, e);
      },
      setTransferLicenceAsSubmitted: (t) => {
        t.wasSubmitted = !0;
      },
    },
  }),
  {
    setTransferLicence: Dq,
    setTransferLicenceNewDebtorCode: px,
    clearTransferLicence: Lq,
    setTransferLicenceAsSubmitted: Pq,
  } = WA.actions,
  _q = WA.reducer,
  Mq = () => ({
    deliveryNoteDetail: "",
    transactionDate: new Date().toDateString(),
    processed: !1,
    wasSubmitted: !1,
    deliveryNoteId: 0,
  }),
  mx = Mq(),
  VA = st({
    name: "editLicenceTransaction",
    initialState: mx,
    reducers: {
      setEditLicenceTransactionDeliveryNoteDetail: (t, e) => {
        t.deliveryNoteDetail = e.payload;
      },
      setEditLicenceTransactionTransactionDate: (t, e) => {
        t.transactionDate = e.payload;
      },
      setEditLicenceTransactionProcessed: (t, e) => {
        t.processed = e.payload.checked;
      },
      setEditLicenceTransaction: (t, e) => {
        (t.deliveryNoteDetail = e.payload.deliveryNoteDetail),
          (t.transactionDate = e.payload.transactionDate),
          (t.processed = e.payload.processed),
          (t.deliveryNoteId = e.payload.deliveryNoteId);
      },
      setEditLicenceTransactionWasSubmitted: (t, e) => {
        t.wasSubmitted = e.payload;
      },
      clearEditLicenceTransaction: (t) => {
        const e = { ...mx };
        Object.assign(t, e);
      },
    },
  }),
  {
    setEditLicenceTransactionDeliveryNoteDetail: Fq,
    setEditLicenceTransactionProcessed: Bq,
    setEditLicenceTransaction: Uq,
    setEditLicenceTransactionTransactionDate: zq,
    setEditLicenceTransactionWasSubmitted: iX,
    clearEditLicenceTransaction: Hq,
  } = VA.actions,
  $q = VA.reducer,
  QA = () => ({
    organisationId: null,
    debtorCodes: [],
    excludedDebtorCodes: [],
    useDebtorFilter: !1,
    debtorFilter: Lf(),
  }),
  Kq = QA();
function Gp(t) {
  (t.useDebtorFilter = !1), (t.debtorCodes = []), (t.excludedDebtorCodes = []);
}
const YA = st({
    name: "licenceListWithClientReport",
    initialState: Kq,
    reducers: {
      setDebtorFilterName: (t, e) => {
        Gp(t), (t.debtorFilter.name = e.payload);
      },
      setDebtorFilterCode: (t, e) => {
        Gp(t), (t.debtorFilter.code = e.payload);
      },
      setDebtorFilterSortBy: (t, e) => {
        (t.debtorFilter.sortByDirection = e.payload.sortByDirection),
          (t.debtorFilter.sortBy = e.payload.sortByFieldName),
          (t.debtorFilter.sortByParameters = e.payload);
      },
      addDebtorCode: (t, e) => {
        t.useDebtorFilter === !0
          ? (t.excludedDebtorCodes = t.excludedDebtorCodes.filter(
              (n) => n !== e.payload
            ))
          : t.debtorCodes.push(e.payload);
      },
      removeDebtorCode: (t, e) => {
        const n = t.debtorCodes.indexOf(e.payload);
        t.useDebtorFilter === !0
          ? t.excludedDebtorCodes.push(e.payload)
          : n > -1 && t.debtorCodes.splice(n, 1);
      },
      setUseDebtorFilter: (t, e) => {
        Gp(t), (t.useDebtorFilter = e.payload.checked);
      },
      clearDebtorFilterSortBy: (t) => {
        (t.debtorFilter.sortBy = null),
          (t.debtorFilter.sortByDirection = null),
          (t.debtorFilter.sortByParameters = null);
      },
      clearLicenceListWithClientReportAllFilters: (t) => {
        const e = QA();
        return (
          (e.organisationId = t.organisationId),
          (e.debtorFilter.organisationId = t.debtorFilter.organisationId),
          (e.debtorFilter.sortBy = t.debtorFilter.sortBy),
          (e.debtorFilter.sortByDirection = t.debtorFilter.sortByDirection),
          (e.debtorFilter.sortByParameters = t.debtorFilter.sortByParameters),
          e
        );
      },
    },
    extraReducers: (t) => {
      t.addCase(Lr.actions.setOrganisation, (e, n) => {
        (e.organisationId = n.payload.id),
          (e.debtorFilter.organisationId = n.payload.id);
      });
    },
  }),
  {
    setDebtorFilterName: qq,
    setDebtorFilterCode: Gq,
    setDebtorFilterSortBy: Wq,
    addDebtorCode: Vq,
    removeDebtorCode: Qq,
    clearDebtorFilterSortBy: Yq,
    setUseDebtorFilter: Xq,
    clearLicenceListWithClientReportAllFilters: Jq,
  } = YA.actions,
  Zq = YA.reducer,
  eG = () => ({
    organisationId: null,
    debtorCode: null,
    billedByUserId: null,
    setByUserId: null,
    fromDeliveryNoteId: s$,
    toDeliveryNoteId: null,
  }),
  gx = eG(),
  XA = st({
    name: "deliveryNoteReportFilter",
    initialState: gx,
    reducers: {
      setDeliveryNoteReportFilterOrganisationId: (t, e) => {
        t.organisationId = e.payload;
      },
      setDeliveryNoteReportFilterDebtorCode: (t, e) => {
        t.debtorCode = e.payload;
      },
      setDeliveryNoteReportFilterBilledBy: (t, e) => {
        t.billedByUserId = e.payload;
      },
      setDeliveryNoteReportFilterSetBy: (t, e) => {
        t.setByUserId = e.payload;
      },
      setDeliveryNoteReportFilterFromDeliveryNoteId: (t, e) => {
        t.fromDeliveryNoteId = e.payload;
      },
      setDeliveryNoteReportFilterToDeliveryNoteId: (t, e) => {
        t.toDeliveryNoteId = e.payload;
      },
      clearDeliveryNoteReportFilters: (t) => {
        const e = { ...gx };
        Object.assign(t, e);
      },
    },
  }),
  {
    setDeliveryNoteReportFilterOrganisationId: tG,
    setDeliveryNoteReportFilterDebtorCode: nG,
    setDeliveryNoteReportFilterBilledBy: rG,
    setDeliveryNoteReportFilterSetBy: iG,
    setDeliveryNoteReportFilterFromDeliveryNoteId: JA,
    setDeliveryNoteReportFilterToDeliveryNoteId: wC,
    clearDeliveryNoteReportFilters: oG,
  } = XA.actions,
  aG = XA.reducer,
  Sd = (t, e) => ({ operand: e, operator: t }),
  sG = () => ({
    id: null,
    pageSize: Jt,
    submitDate: null,
    submitDateOperator: Je.GreaterThan,
    submitDateComparison: Sd(Je.GreaterThan, null),
    licenceSerialNumber: null,
    userName: null,
    userCompany: null,
    version: null,
    debtNumber: null,
    sortBy: null,
    sortByDirection: null,
    sortByParameters: null,
  }),
  yx = sG(),
  ZA = st({
    name: "systemInformationListFilter",
    initialState: yx,
    reducers: {
      setSystemInformationListFilterId: (t, e) => {
        t.id = e.payload;
      },
      setSystemInformationListFilterDateComparison: (t, e) => {
        (t.submitDateComparison = e.payload),
          (t.submitDate = e.payload.operand),
          (t.submitDateOperator = e.payload.operator);
      },
      setSystemInformationListFilterLicenceSerialNumber: (t, e) => {
        t.licenceSerialNumber = e.payload;
      },
      setSystemInformationListFilterUserName: (t, e) => {
        t.userName = e.payload;
      },
      setSystemInformationListFilterUserCompany: (t, e) => {
        t.userCompany = e.payload;
      },
      setSystemInformationListFilterVersion: (t, e) => {
        t.version = e.payload;
      },
      setSystemInformationListFilterDebtNumber: (t, e) => {
        t.debtNumber = e.payload;
      },
      setSystemInformationListFilterSortBy: (t, e) => {
        (t.sortByDirection = e.payload.sortByDirection),
          (t.sortBy = e.payload.sortByFieldName),
          (t.sortByParameters = e.payload);
      },
      setSystemInformationListFilterPageSize: (t, e) => {
        t.pageSize = e.payload;
      },
      clearSystemInformationListFilterSortBy: (t) => {
        (t.sortBy = null),
          (t.sortByDirection = null),
          (t.sortByParameters = null);
      },
      clearSystemInformationListFilterAllFilters: (t) => {
        const e = {
          ...yx,
          sortBy: t.sortBy,
          sortByDirection: t.sortByDirection,
          sortByParameters: t.sortByParameters,
        };
        Object.assign(t, e);
      },
    },
  }),
  {
    setSystemInformationListFilterId: lG,
    setSystemInformationListFilterDateComparison: cG,
    setSystemInformationListFilterLicenceSerialNumber: uG,
    setSystemInformationListFilterUserName: dG,
    setSystemInformationListFilterUserCompany: hG,
    setSystemInformationListFilterVersion: fG,
    setSystemInformationListFilterDebtNumber: pG,
    setSystemInformationListFilterSortBy: mG,
    setSystemInformationListFilterPageSize: gG,
    clearSystemInformationListFilterSortBy: yG,
    clearSystemInformationListFilterAllFilters: vG,
  } = ZA.actions,
  bG = ZA.reducer,
  CG = () => ({ ccisId: null, sub: null }),
  vx = CG(),
  ej = st({
    name: "linkUser",
    initialState: vx,
    reducers: {
      setLinkUserCCISUserId: (t, e) => {
        t.ccisId = e.payload;
      },
      setLinkUserSub: (t, e) => {
        t.sub = e.payload;
      },
      clearLinkUserToSub: (t) => {
        Object.assign(t, vx);
      },
    },
  }),
  {
    setLinkUserCCISUserId: wG,
    setLinkUserSub: SG,
    clearLinkUserToSub: xG,
  } = ej.actions,
  EG = ej.reducer,
  TG = () => ({
    id: 0,
    licenceNumber: 0,
    exemptionDate: pa(new Date(), Kc),
    wasSubmitted: !1,
  }),
  bx = TG(),
  tj = st({
    name: "saveLicenceValidationExemption",
    initialState: bx,
    reducers: {
      setExemptionDate: (t, e) => {
        t.exemptionDate = e.payload;
      },
      setLicenceNumber: (t, e) => {
        t.licenceNumber = e.payload;
      },
      setLicenceValidationExemption: (t, e) => {
        (t.licenceNumber = e.payload.licenceNumber),
          (t.id = e.payload.id),
          (t.exemptionDate = pa(e.payload.exemptionDate, Kc)),
          (t.wasSubmitted = !1);
      },
      setWasSubmitted: (t) => {
        t.wasSubmitted = !0;
      },
      clearExemption: (t, e) => {
        Object.assign(t, bx), (t.licenceNumber = e.payload);
      },
    },
  }),
  {
    setExemptionDate: IG,
    setLicenceNumber: NG,
    setWasSubmitted: kG,
    setLicenceValidationExemption: RG,
    clearExemption: AG,
  } = tj.actions,
  jG = tj.reducer,
  OG = () => ({
    ccisId: null,
    pageSize: Jt,
    email: null,
    comment: null,
    isApproved: null,
    isLockedOut: null,
    sub: null,
    sortBy: null,
    sortByDirection: null,
    sortByParameters: null,
  }),
  Cx = OG(),
  nj = st({
    name: "ccisUserFilter",
    initialState: Cx,
    reducers: {
      setCCISUserFilterId: (t, e) => {
        t.ccisId = e.payload;
      },
      setCCISUserFilterEmail: (t, e) => {
        t.email = e.payload;
      },
      setCCISUserFilterComment: (t, e) => {
        t.comment = e.payload;
      },
      setCCISUserFilterIsApproved: (t, e) => {
        t.isApproved = e.payload;
      },
      setCCISUserFilterIsLockedOut: (t, e) => {
        t.isLockedOut = e.payload;
      },
      setCCISUserFilterSub: (t, e) => {
        t.sub = e.payload;
      },
      setCCISUserFilterSortBy: (t, e) => {
        (t.sortByDirection = e.payload.sortByDirection),
          (t.sortBy = e.payload.sortByFieldName),
          (t.sortByParameters = e.payload);
      },
      setCCISUserFilterPageSize: (t, e) => {
        t.pageSize = e.payload;
      },
      clearCCISUserFilterSortBy: (t) => {
        (t.sortBy = null),
          (t.sortByDirection = null),
          (t.sortByParameters = null);
      },
      clearCCISUserFilter: (t) => {
        Object.assign(t, Cx);
      },
    },
  }),
  {
    setCCISUserFilterId: DG,
    setCCISUserFilterEmail: LG,
    setCCISUserFilterComment: PG,
    setCCISUserFilterIsApproved: oX,
    setCCISUserFilterIsLockedOut: aX,
    setCCISUserFilterSub: _G,
    setCCISUserFilterSortBy: MG,
    setCCISUserFilterPageSize: FG,
    clearCCISUserFilterSortBy: BG,
    clearCCISUserFilter: UG,
  } = nj.actions,
  zG = nj.reducer,
  HG = () => ({
    debtorCodes: [],
    excludedDebtorCodes: [],
    useDebtorFilter: !1,
  }),
  $G = () => ({
    organisationId: 3,
    billingType: 1,
    transactionDate: pa(new Date(), Kc),
    fromDebtor: "",
    toDebtor: "",
    doNewOnly: !1,
    discountType: 0,
    paysVat: !0,
    sortBy: null,
    sortByDirection: null,
    pageSize: Jt,
  }),
  KG = () => ({
    standingRental: "5001",
    rentalsDuringMonth: "5002",
    advancedRentals: "5004",
    licenceSales: "5005",
    vatType: "Z",
    terms: 0,
    division: 1,
    invoiceType: 0,
    forFinancialYear: -1,
    header: "",
    date: pa(new Date(), Kc),
    orderNumber: "",
    periodAdd: 0,
    forFinancialPeriod: 0,
  }),
  qG = () => ({
    wasSubmitted: !1,
    filter: $G(),
    header: KG(),
    sortByParameters: null,
    debtorSelection: HG(),
  }),
  wx = (t) => {
    (t.useDebtorFilter = !1),
      (t.debtorCodes = []),
      (t.excludedDebtorCodes = []);
  },
  Wp = qG(),
  rj = st({
    name: "quickInvoice",
    initialState: Wp,
    reducers: {
      setQuickInvoiceSortBy: (t, e) => {
        (t.sortByParameters = e.payload),
          (t.filter.sortBy = e.payload.sortByFieldName),
          (t.filter.sortByDirection = e.payload.sortByDirection);
      },
      clearQuickInvoiceSort: (t) => {
        (t.sortByParameters = null),
          (t.filter.sortBy = null),
          (t.filter.sortByDirection = null);
      },
      clearQuickInvoiceFilter: (t) => {
        var e, n;
        return {
          ...Wp,
          filter: {
            ...Wp.filter,
            organisationId: t.filter.organisationId,
            sortBy:
              ((e = t.sortByParameters) == null ? void 0 : e.sortByFieldName) ??
              null,
            sortByDirection:
              ((n = t.sortByParameters) == null ? void 0 : n.sortByDirection) ??
              null,
          },
          sortByParameters: t.sortByParameters,
        };
      },
      clearQuickInvoiceDebtorCodeSelection: (t) => {
        wx(t.debtorSelection);
      },
      setQuickInvoicePageSize: (t, e) => {
        t.filter.pageSize = e.payload;
      },
      setDebtorSelection: (t, e) => {
        if (e.payload.checked === !0)
          t.debtorSelection.useDebtorFilter === !0
            ? (t.debtorSelection.excludedDebtorCodes =
                t.debtorSelection.excludedDebtorCodes.filter(
                  (n) => n !== e.payload.value
                ))
            : t.debtorSelection.debtorCodes.push(e.payload.value ?? "");
        else {
          const n = t.debtorSelection.debtorCodes.indexOf(
            e.payload.value ?? ""
          );
          t.debtorSelection.useDebtorFilter === !0
            ? t.debtorSelection.excludedDebtorCodes.push(e.payload.value ?? "")
            : n > -1 && t.debtorSelection.debtorCodes.splice(n, 1);
        }
      },
      setUseDebtorFilter: (t, e) => {
        wx(t.debtorSelection),
          (t.debtorSelection.useDebtorFilter = e.payload.checked);
      },
      setQuickInvoiceAsSubmitted: (t) => {
        t.wasSubmitted = !0;
      },
      setQuickInvoiceOrganisationId: (t, e) => {
        t.filter.organisationId = e.payload;
      },
      setQuickInvoiceDiscountType: (t, e) => {
        t.filter.discountType = e.payload;
      },
      setQuickInvoiceTransactionDate: (t, e) => {
        t.filter.transactionDate = e.payload;
      },
      setQuickInvoiceFromDebtor: (t, e) => {
        t.filter.fromDebtor = e.payload;
      },
      setQuickInvoiceToDebtor: (t, e) => {
        t.filter.toDebtor = e.payload;
      },
      setQuickInvoiceDoNewOnly: (t, e) => {
        t.filter.doNewOnly = e.payload.checked;
      },
      setQuickInvoiceBillingType: (t, e) => {
        t.filter.billingType = e.payload;
      },
      setQuickInvoicePaysVat: (t, e) => {
        t.filter.paysVat = e.payload.checked;
      },
      setQuickInvoiceSearchDefaults: (t, e) => {
        (t.filter.paysVat = e.payload.paysVat),
          (t.filter.fromDebtor = e.payload.fromDebtor),
          (t.filter.toDebtor = e.payload.toDebtor);
      },
      setQuickInvoiceHeaderDefaults: (t, e) => {
        (t.header.standingRental = e.payload.standingRental),
          (t.header.rentalsDuringMonth = e.payload.rentalsDuringMonth),
          (t.header.advancedRentals = e.payload.advancedRentals),
          (t.header.licenceSales = e.payload.licenceSales),
          (t.header.vatType = e.payload.vatType),
          (t.header.terms = e.payload.terms),
          (t.header.division = e.payload.division),
          (t.header.invoiceType = e.payload.invoiceType),
          (t.header.forFinancialYear = e.payload.forFinancialYear),
          (t.header.header = e.payload.header),
          (t.header.date = e.payload.date),
          (t.header.orderNumber = e.payload.orderNumber),
          (t.header.periodAdd = e.payload.periodAdd),
          (t.header.forFinancialPeriod = e.payload.forFinancialPeriod);
      },
      setQuickInvoiceHeader: (t, e) => {
        t.header.header = e.payload;
      },
      setQuickInvoiceHeaderInvoiceType: (t, e) => {
        t.header.invoiceType = e.payload;
      },
      setQuickInvoiceHeaderStandingRental: (t, e) => {
        t.header.standingRental = e.payload;
      },
      setQuickInvoiceHeaderDate: (t, e) => {
        t.header.date = e.payload;
      },
      setQuickInvoiceHeaderRentalsDuringMonth: (t, e) => {
        t.header.rentalsDuringMonth = e.payload;
      },
      setQuickInvoiceHeaderForFinancialPeriod: (t, e) => {
        t.header.forFinancialPeriod = e.payload;
      },
      setQuickInvoiceHeaderVatType: (t, e) => {
        t.header.vatType = e.payload;
      },
      setQuickInvoiceHeaderAdvancedRentals: (t, e) => {
        t.header.advancedRentals = e.payload;
      },
      setQuickInvoiceHeaderForFinancialYear: (t, e) => {
        t.header.forFinancialYear = e.payload;
      },
      setQuickInvoiceHeaderDivision: (t, e) => {
        t.header.division = e.payload;
      },
      setQuickInvoiceHeaderLicenceSales: (t, e) => {
        t.header.licenceSales = e.payload;
      },
      setQuickInvoiceHeaderOrderNumber: (t, e) => {
        t.header.orderNumber = e.payload;
      },
    },
  }),
  {
    setQuickInvoiceSortBy: GG,
    clearQuickInvoiceSort: WG,
    clearQuickInvoiceFilter: VG,
    setQuickInvoicePageSize: QG,
    setUseDebtorFilter: YG,
    setDebtorSelection: XG,
    clearQuickInvoiceDebtorCodeSelection: JG,
    setQuickInvoiceAsSubmitted: ZG,
    setQuickInvoiceOrganisationId: eW,
    setQuickInvoiceDiscountType: tW,
    setQuickInvoiceTransactionDate: nW,
    setQuickInvoiceFromDebtor: rW,
    setQuickInvoiceToDebtor: iW,
    setQuickInvoiceDoNewOnly: oW,
    setQuickInvoiceBillingType: aW,
    setQuickInvoicePaysVat: sW,
    setQuickInvoiceSearchDefaults: lW,
    setQuickInvoiceHeaderDefaults: cW,
    setQuickInvoiceHeader: uW,
    setQuickInvoiceHeaderInvoiceType: dW,
    setQuickInvoiceHeaderStandingRental: hW,
    setQuickInvoiceHeaderDate: fW,
    setQuickInvoiceHeaderRentalsDuringMonth: pW,
    setQuickInvoiceHeaderForFinancialPeriod: mW,
    setQuickInvoiceHeaderVatType: gW,
    setQuickInvoiceHeaderAdvancedRentals: yW,
    setQuickInvoiceHeaderForFinancialYear: vW,
    setQuickInvoiceHeaderDivision: bW,
    setQuickInvoiceHeaderLicenceSales: CW,
    setQuickInvoiceHeaderOrderNumber: wW,
  } = rj.actions,
  SW = rj.reducer,
  xd = ln({
    reducerPath: "quickInvoiceApi",
    baseQuery: cn,
    tagTypes: [
      "QuickInvoice",
      "QuickInvoiceSearchDefaults",
      "QuickInvoiceHeaderDefaults",
      "QuickInvoiceTypes",
      "QuickInvoiceLedgerCodes",
      "QuickInvoiceFinancialPeriods",
      "QuickInvoiceVatTypes",
      "QuickInvoiceFinancialYears",
      "QuickInvoiceDivisions",
    ],
    endpoints: (t) => ({
      getQuickInvoices: t.query({
        query: (e) => ({ url: "/quickInvoice", params: e }),
        providesTags: ["QuickInvoice"],
      }),
      getQuickInvoiceSearchDefaults: t.query({
        query: (e) => `/quickInvoice/SearchDefaults?organisationId=${e}`,
        providesTags: ["QuickInvoiceSearchDefaults"],
      }),
      getQuickInvoiceFinancialPeriods: t.query({
        query: (e) => `/quickInvoice/FinancialPeriods?organisationId=${e}`,
        providesTags: ["QuickInvoiceFinancialPeriods"],
      }),
      getQuickInvoiceVatTypes: t.query({
        query: (e) => `/quickInvoice/VatTypes?organisationId=${e}`,
        providesTags: ["QuickInvoiceVatTypes"],
      }),
      getQuickInvoiceDivisions: t.query({
        query: (e) => `/quickInvoice/Divisions?organisationId=${e}`,
        providesTags: ["QuickInvoiceDivisions"],
      }),
      getQuickInvoiceHeaderDefaults: t.query({
        query: (e) => ({ url: "/quickInvoice/HeaderDefaults", params: e }),
        providesTags: ["QuickInvoiceHeaderDefaults"],
      }),
      getQuickInvoiceHeaderInvoiceTypes: t.query({
        query: () => "/quickInvoice/InvoiceTypes",
        providesTags: ["QuickInvoiceTypes"],
      }),
      getQuickInvoiceFinancialYears: t.query({
        query: () => "/quickInvoice/FinancialYears",
        providesTags: ["QuickInvoiceFinancialYears"],
      }),
      getQuickInvoiceHeaderLedgerCodes: t.query({
        query: () => "/quickInvoice/LedgerCodes",
        providesTags: ["QuickInvoiceLedgerCodes"],
      }),
      createQuickInvoices: t.mutation({
        query: (e) => ({ url: "/quickInvoice", method: "POST", body: e }),
        invalidatesTags: ["QuickInvoice"],
      }),
    }),
  }),
  {
    useGetQuickInvoicesQuery: xW,
    useCreateQuickInvoicesMutation: EW,
    useGetQuickInvoiceSearchDefaultsQuery: TW,
    useGetQuickInvoiceHeaderDefaultsQuery: IW,
    useGetQuickInvoiceHeaderInvoiceTypesQuery: NW,
    useGetQuickInvoiceHeaderLedgerCodesQuery: kW,
    useGetQuickInvoiceFinancialPeriodsQuery: RW,
    useGetQuickInvoiceVatTypesQuery: AW,
    useGetQuickInvoiceFinancialYearsQuery: jW,
    useGetQuickInvoiceDivisionsQuery: OW,
    util: { invalidateTags: DW },
  } = xd,
  ij = r3({
    reducer: {
      licenceFilter: L6,
      licenceTransactionFilter: J6,
      organisation: n6,
      debtorFilter: C6,
      debtorGroupFilter: l7,
      saveDebtor: KK,
      saveDebtorGroup: rq,
      savePendingLicence: mq,
      replaceLicence: uq,
      transferLicence: _q,
      deliveryNoteReportFilter: aG,
      editLicence: jq,
      editLicenceTransaction: $q,
      systemInformationListFilter: bG,
      licenceListWithClientReport: Zq,
      ccisUserFilter: zG,
      linkUser: EG,
      saveLicenceValidationExemption: jG,
      requestAccess: WH,
      quickInvoice: SW,
      [cd.reducerPath]: cd.reducer,
      [ud.reducerPath]: ud.reducer,
      [Wl.reducerPath]: Wl.reducer,
      [dd.reducerPath]: dd.reducer,
      [hd.reducerPath]: hd.reducer,
      [yd.reducerPath]: yd.reducer,
      [vd.reducerPath]: vd.reducer,
      [fd.reducerPath]: fd.reducer,
      [pd.reducerPath]: pd.reducer,
      [sd.reducerPath]: sd.reducer,
      [md.reducerPath]: md.reducer,
      [gd.reducerPath]: gd.reducer,
      [bd.reducerPath]: bd.reducer,
      [wd.reducerPath]: wd.reducer,
      [Cd.reducerPath]: Cd.reducer,
      [ld.reducerPath]: ld.reducer,
      [xd.reducerPath]: xd.reducer,
    },
    middleware: (t) =>
      t().concat(
        cd.middleware,
        ud.middleware,
        Wl.middleware,
        dd.middleware,
        hd.middleware,
        yd.middleware,
        vd.middleware,
        fd.middleware,
        pd.middleware,
        sd.middleware,
        md.middleware,
        gd.middleware,
        bd.middleware,
        wd.middleware,
        Cd.middleware,
        ld.middleware,
        xd.middleware
      ),
  });
A3(ij.dispatch);
const Fs = ({ reducer: t = null }) => {
    const e = Ae();
    function n(r) {
      t !== null && e(t(r));
    }
    return { dispatchReducer: n };
  },
  SC = ({
    items: t,
    dispatchReducer: e,
    selectItem: n,
    alwaysSelectFirstCondition: r = null,
  }) => {
    k.useEffect(() => {
      if (t && t.length > 0 && ((r != null && r()) || t.length === 1)) {
        const i = n(t);
        e(i);
      }
    }, [t, e, n, r]);
  },
  Xc = () => {
    const t = Re((l) => l.organisation),
      { data: e, isFetching: n, error: r } = Zs(),
      { dispatchReducer: i } = Fs({ reducer: t6 });
    SC({
      items: e ?? null,
      dispatchReducer: i,
      selectItem: (l) => l[0],
      alwaysSelectFirstCondition: () => t.id === 0,
    });
    const o =
      e == null
        ? void 0
        : e.map((l) =>
            s.jsx(
              x.Fragment,
              {
                children: s.jsx(Ge.Item, {
                  onClick: () => i(l),
                  children: l.description,
                }),
              },
              l.id
            )
          );
    let a;
    return (
      n
        ? (a = s.jsx(Ve, { animation: "border", variant: "primary" }))
        : r
        ? (a = s.jsx(Qe, { error: r }))
        : (a = s.jsxs(Ge, {
            children: [
              s.jsxs(Ge.Toggle, {
                size: "sm",
                variant: "primary",
                id: "dropdown-basic",
                value: t.id,
                children: [t.id, " - ", t.name],
              }),
              s.jsx(Ge.Menu, { children: o }),
            ],
          })),
      s.jsx(s.Fragment, { children: a })
    );
  },
  ma = ({ reducer: t = null, value: e }) => {
    const n = Ae(),
      [r, i] = k.useState(e);
    k.useEffect(() => {
      i(e);
    }, [e]);
    function o(a) {
      i(a), t !== null && n(t(a));
    }
    return { localValue: r, setLocalValue: i, dispatchReducer: o };
  };
var le = ((t) => (
  (t[(t.None = 0)] = "None"),
  (t[(t.Text = 1)] = "Text"),
  (t[(t.Number = 2)] = "Number"),
  (t[(t.Currency = 3)] = "Currency"),
  (t[(t.Date = 4)] = "Date"),
  (t[(t.TextArea = 5)] = "TextArea"),
  (t[(t.Percentage = 6)] = "Percentage"),
  t
))(le || {});
const oj = (t) => {
    switch (t) {
      case 1:
        return "text";
      case 5:
        return "textarea";
      case 2:
        return "number";
      case 3:
        return "text";
      case 4:
        return "date";
      case 6:
        return "number";
      default:
        return "none";
    }
  },
  ze = ({ id: t, value: e, reducer: n, inputRegex: r, type: i = le.Text }) => {
    const {
        dispatchReducer: o,
        localValue: a,
        setLocalValue: l,
      } = ma({ reducer: n, value: e }),
      c = () => {
        o(null);
      },
      u = (m) => {
        const v = m.target.value;
        (!r || r.test(v)) && l(v), i == le.Date && o(v);
      },
      d = (m, v) => {
        m.preventDefault(), o(v);
      },
      h = () => {
        o(a);
      },
      f = a ?? "",
      p = oj(i);
    return s.jsx(rt, {
      className: "m-1",
      onSubmit: (m) => d(m, a),
      children: s.jsxs(si, {
        size: "sm",
        className: "xs",
        children: [
          s.jsx(rt.Control, {
            type: p,
            id: t,
            size: "sm",
            className: "xs",
            onChange: u,
            onBlur: h,
            placeholder: "Search...",
            autoComplete: "off",
            value: f,
          }),
          s.jsx(si.Text, {
            className: "xs clear-x",
            onMouseDown: c,
            children: s.jsx(Xs, {}),
          }),
        ],
      }),
    });
  },
  Vp = (t, e) => ({ operand: e, operator: t }),
  Qo = ({ value: t, reducer: e, type: n, maxLength: r = 8, step: i = 1 }) => {
    var C;
    const {
        dispatchReducer: o,
        localValue: a,
        setLocalValue: l,
      } = ma({ reducer: e, value: t }),
      c = (b) => {
        const g = b.target.value;
        let y = null;
        if (g !== "" && ((y = Number(g)), y < 0)) return;
        if (n === le.Currency) {
          const E = (y == null ? void 0 : y.toString()) ?? "";
          if (
            (E.includes(".") && E.split(".")[1].length > 2) ||
            E.split(".").length > 2
          )
            return;
        }
        const w = Vp((a == null ? void 0 : a.operator) ?? Je.EqualTo, y);
        l(w);
      },
      u = (b) => {
        var g;
        Df.includes(b.key) ||
          ((
            ((g = a == null ? void 0 : a.operand) == null
              ? void 0
              : g.toString()) ?? ""
          ).length >= r && b.preventDefault(),
          (n === le.Number || n === le.Currency) &&
            b.key === "e" &&
            b.preventDefault(),
          n === le.Number &&
            (b.key === "." || b.key === "-") &&
            b.preventDefault());
      },
      d = (b) => {
        const g = Vp(b, (a == null ? void 0 : a.operand) ?? null);
        o(g);
      },
      h = (b) => {
        b.preventDefault(), p();
      },
      f = () => {
        p();
      },
      p = () => {
        const b = Vp(
          (a == null ? void 0 : a.operator) ?? Je.EqualTo,
          (a == null ? void 0 : a.operand) ?? null
        );
        o(b);
      },
      m =
        (a == null ? void 0 : a.operator) === Je.GreaterThan
          ? ">"
          : (a == null ? void 0 : a.operator) === Je.LessThan
          ? "<"
          : "=",
      v =
        ((C = a == null ? void 0 : a.operand) == null
          ? void 0
          : C.toString()) ?? "";
    return s.jsx(rt, {
      className: "m-1",
      onSubmit: (b) => h(b),
      onBlur: f,
      children: s.jsxs(si, {
        size: "sm",
        className: "xs",
        children: [
          s.jsx(rt.Control, {
            type: "number",
            step: i,
            size: "sm",
            className: "xs",
            onChange: c,
            onKeyDown: u,
            value: v,
          }),
          s.jsx("div", {
            className: "xs-split-button info",
            children: s.jsxs(Sf, {
              size: "sm",
              variant: "default",
              title: m,
              onClick: () => d((a == null ? void 0 : a.operator) ?? Je.EqualTo),
              children: [
                s.jsx(Ge.Item, {
                  onClick: () => {
                    d(Je.GreaterThan);
                  },
                  children: ">",
                }),
                s.jsx(Ge.Item, {
                  onClick: () => {
                    d(Je.EqualTo);
                  },
                  children: "=",
                }),
                s.jsx(Ge.Item, {
                  onClick: () => {
                    d(Je.LessThan);
                  },
                  children: "<",
                }),
              ],
            }),
          }),
        ],
      }),
    });
  };
function Bs(t) {
  "@babel/helpers - typeof";
  return (
    (Bs =
      typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e &&
              typeof Symbol == "function" &&
              e.constructor === Symbol &&
              e !== Symbol.prototype
              ? "symbol"
              : typeof e;
          }),
    Bs(t)
  );
}
function LW(t, e) {
  if (Bs(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(t, e || "default");
    if (Bs(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function aj(t) {
  var e = LW(t, "string");
  return Bs(e) == "symbol" ? e : e + "";
}
function be(t, e, n) {
  return (
    (e = aj(e)) in t
      ? Object.defineProperty(t, e, {
          value: n,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (t[e] = n),
    t
  );
}
function sn(t, e) {
  if (t == null) return {};
  var n,
    r,
    i = ab(t, e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (r = 0; r < o.length; r++)
      (n = o[r]),
        e.indexOf(n) >= 0 ||
          ({}.propertyIsEnumerable.call(t, n) && (i[n] = t[n]));
  }
  return i;
}
var PW = "Expected a function",
  Sx = NaN,
  _W = "[object Symbol]",
  MW = /^\s+|\s+$/g,
  FW = /^[-+]0x[0-9a-f]+$/i,
  BW = /^0b[01]+$/i,
  UW = /^0o[0-7]+$/i,
  zW = parseInt,
  HW = typeof ou == "object" && ou && ou.Object === Object && ou,
  $W = typeof self == "object" && self && self.Object === Object && self,
  KW = HW || $W || Function("return this")(),
  qW = Object.prototype,
  GW = qW.toString,
  WW = Math.max,
  VW = Math.min,
  Qp = function () {
    return KW.Date.now();
  };
function QW(t, e, n) {
  var r,
    i,
    o,
    a,
    l,
    c,
    u = 0,
    d = !1,
    h = !1,
    f = !0;
  if (typeof t != "function") throw new TypeError(PW);
  (e = xx(e) || 0),
    py(n) &&
      ((d = !!n.leading),
      (h = "maxWait" in n),
      (o = h ? WW(xx(n.maxWait) || 0, e) : o),
      (f = "trailing" in n ? !!n.trailing : f));
  function p(S) {
    var T = r,
      I = i;
    return (r = i = void 0), (u = S), (a = t.apply(I, T)), a;
  }
  function m(S) {
    return (u = S), (l = setTimeout(b, e)), d ? p(S) : a;
  }
  function v(S) {
    var T = S - c,
      I = S - u,
      R = e - T;
    return h ? VW(R, o - I) : R;
  }
  function C(S) {
    var T = S - c,
      I = S - u;
    return c === void 0 || T >= e || T < 0 || (h && I >= o);
  }
  function b() {
    var S = Qp();
    if (C(S)) return g(S);
    l = setTimeout(b, v(S));
  }
  function g(S) {
    return (l = void 0), f && r ? p(S) : ((r = i = void 0), a);
  }
  function y() {
    l !== void 0 && clearTimeout(l), (u = 0), (r = c = i = l = void 0);
  }
  function w() {
    return l === void 0 ? a : g(Qp());
  }
  function E() {
    var S = Qp(),
      T = C(S);
    if (((r = arguments), (i = this), (c = S), T)) {
      if (l === void 0) return m(c);
      if (h) return (l = setTimeout(b, e)), p(c);
    }
    return l === void 0 && (l = setTimeout(b, e)), a;
  }
  return (E.cancel = y), (E.flush = w), E;
}
function py(t) {
  var e = typeof t;
  return !!t && (e == "object" || e == "function");
}
function YW(t) {
  return !!t && typeof t == "object";
}
function XW(t) {
  return typeof t == "symbol" || (YW(t) && GW.call(t) == _W);
}
function xx(t) {
  if (typeof t == "number") return t;
  if (XW(t)) return Sx;
  if (py(t)) {
    var e = typeof t.valueOf == "function" ? t.valueOf() : t;
    t = py(e) ? e + "" : e;
  }
  if (typeof t != "string") return t === 0 ? t : +t;
  t = t.replace(MW, "");
  var n = BW.test(t);
  return n || UW.test(t) ? zW(t.slice(2), n ? 2 : 8) : FW.test(t) ? Sx : +t;
}
var JW = QW;
const ZW = Hi(JW);
var eV = ["justify", "left", "right"],
  sj = "label",
  tV = ["lg", "sm"];
function my(t) {
  return typeof t == "string" ? t : sj;
}
function Rh(t, e) {
  return Object.prototype.hasOwnProperty.call(t, e);
}
var Ex = 0;
function On(t) {
  return typeof t == "function";
}
function ri(t) {
  return typeof t == "string";
}
function rr() {}
function Ed(t, e) {
  var n = {};
  return (
    e.forEach(function (r) {
      n[r] = t[r];
    }),
    n
  );
}
function nV(t) {
  return (Ex += 1), String(t) + Ex;
}
function ui(t, e) {
  if (!ri(t) && (Rh(t, "paginationOption") || Rh(t, "customOption")))
    return t[my(e)];
  var n;
  return On(e) ? (n = e(t)) : ri(t) ? (n = t) : (n = t[e]), ri(n) || wN(!1), n;
}
function rV(t, e) {
  var n = e.allowNew,
    r = e.labelKey,
    i = e.text;
  return !n || !i.trim()
    ? !1
    : On(n)
    ? n(t, e)
    : !t.some(function (o) {
        return ui(o, r) === i;
      });
}
var iV = function t(e, n) {
  if (e === n) return !0;
  if (e && n && typeof e == "object" && typeof n == "object") {
    if (e.constructor !== n.constructor) return !1;
    var r, i, o;
    if (Array.isArray(e)) {
      if (((r = e.length), r != n.length)) return !1;
      for (i = r; i-- !== 0; ) if (!t(e[i], n[i])) return !1;
      return !0;
    }
    if (e.constructor === RegExp)
      return e.source === n.source && e.flags === n.flags;
    if (e.valueOf !== Object.prototype.valueOf)
      return e.valueOf() === n.valueOf();
    if (e.toString !== Object.prototype.toString)
      return e.toString() === n.toString();
    if (((o = Object.keys(e)), (r = o.length), r !== Object.keys(n).length))
      return !1;
    for (i = r; i-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(n, o[i])) return !1;
    for (i = r; i-- !== 0; ) {
      var a = o[i];
      if (!t(e[a], n[a])) return !1;
    }
    return !0;
  }
  return e !== e && n !== n;
};
const kl = Hi(iV);
function Zo(t, e) {
  if (!ri(t)) return t[e];
}
var oV = [
    { base: "A", letters: "AⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ" },
    { base: "AA", letters: "Ꜳ" },
    { base: "AE", letters: "ÆǼǢ" },
    { base: "AO", letters: "Ꜵ" },
    { base: "AU", letters: "Ꜷ" },
    { base: "AV", letters: "ꜸꜺ" },
    { base: "AY", letters: "Ꜽ" },
    { base: "B", letters: "BⒷＢḂḄḆɃƂƁ" },
    { base: "C", letters: "CⒸＣĆĈĊČÇḈƇȻꜾ" },
    { base: "D", letters: "DⒹＤḊĎḌḐḒḎĐƋƊƉꝹÐ" },
    { base: "DZ", letters: "ǱǄ" },
    { base: "Dz", letters: "ǲǅ" },
    { base: "E", letters: "EⒺＥÈÉÊỀẾỄỂẼĒḔḖĔĖËẺĚȄȆẸỆȨḜĘḘḚƐƎ" },
    { base: "F", letters: "FⒻＦḞƑꝻ" },
    { base: "G", letters: "GⒼＧǴĜḠĞĠǦĢǤƓꞠꝽꝾ" },
    { base: "H", letters: "HⒽＨĤḢḦȞḤḨḪĦⱧⱵꞍ" },
    { base: "I", letters: "IⒾＩÌÍÎĨĪĬİÏḮỈǏȈȊỊĮḬƗ" },
    { base: "J", letters: "JⒿＪĴɈ" },
    { base: "K", letters: "KⓀＫḰǨḲĶḴƘⱩꝀꝂꝄꞢ" },
    { base: "L", letters: "LⓁＬĿĹĽḶḸĻḼḺŁȽⱢⱠꝈꝆꞀ" },
    { base: "LJ", letters: "Ǉ" },
    { base: "Lj", letters: "ǈ" },
    { base: "M", letters: "MⓂＭḾṀṂⱮƜ" },
    { base: "N", letters: "NⓃＮǸŃÑṄŇṆŅṊṈȠƝꞐꞤ" },
    { base: "NJ", letters: "Ǌ" },
    { base: "Nj", letters: "ǋ" },
    { base: "O", letters: "OⓄＯÒÓÔỒỐỖỔÕṌȬṎŌṐṒŎȮȰÖȪỎŐǑȌȎƠỜỚỠỞỢỌỘǪǬØǾƆƟꝊꝌ" },
    { base: "OI", letters: "Ƣ" },
    { base: "OO", letters: "Ꝏ" },
    { base: "OU", letters: "Ȣ" },
    { base: "OE", letters: "Œ" },
    { base: "oe", letters: "œ" },
    { base: "P", letters: "PⓅＰṔṖƤⱣꝐꝒꝔ" },
    { base: "Q", letters: "QⓆＱꝖꝘɊ" },
    { base: "R", letters: "RⓇＲŔṘŘȐȒṚṜŖṞɌⱤꝚꞦꞂ" },
    { base: "S", letters: "SⓈＳẞŚṤŜṠŠṦṢṨȘŞⱾꞨꞄ" },
    { base: "T", letters: "TⓉＴṪŤṬȚŢṰṮŦƬƮȾꞆ" },
    { base: "TZ", letters: "Ꜩ" },
    { base: "U", letters: "UⓊＵÙÚÛŨṸŪṺŬÜǛǗǕǙỦŮŰǓȔȖƯỪỨỮỬỰỤṲŲṶṴɄ" },
    { base: "V", letters: "VⓋＶṼṾƲꝞɅ" },
    { base: "VY", letters: "Ꝡ" },
    { base: "W", letters: "WⓌＷẀẂŴẆẄẈⱲ" },
    { base: "X", letters: "XⓍＸẊẌ" },
    { base: "Y", letters: "YⓎＹỲÝŶỸȲẎŸỶỴƳɎỾ" },
    { base: "Z", letters: "ZⓏＺŹẐŻŽẒẔƵȤⱿⱫꝢ" },
    { base: "a", letters: "aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐ" },
    { base: "aa", letters: "ꜳ" },
    { base: "ae", letters: "æǽǣ" },
    { base: "ao", letters: "ꜵ" },
    { base: "au", letters: "ꜷ" },
    { base: "av", letters: "ꜹꜻ" },
    { base: "ay", letters: "ꜽ" },
    { base: "b", letters: "bⓑｂḃḅḇƀƃɓ" },
    { base: "c", letters: "cⓒｃćĉċčçḉƈȼꜿↄ" },
    { base: "d", letters: "dⓓｄḋďḍḑḓḏđƌɖɗꝺ" },
    { base: "dz", letters: "ǳǆ" },
    { base: "e", letters: "eⓔｅèéêềếễểẽēḕḗĕėëẻěȅȇẹệȩḝęḙḛɇɛǝ" },
    { base: "f", letters: "fⓕｆḟƒꝼ" },
    { base: "g", letters: "gⓖｇǵĝḡğġǧģǥɠꞡᵹꝿ" },
    { base: "h", letters: "hⓗｈĥḣḧȟḥḩḫẖħⱨⱶɥ" },
    { base: "hv", letters: "ƕ" },
    { base: "i", letters: "iⓘｉìíîĩīĭïḯỉǐȉȋịįḭɨı" },
    { base: "j", letters: "jⓙｊĵǰɉ" },
    { base: "k", letters: "kⓚｋḱǩḳķḵƙⱪꝁꝃꝅꞣ" },
    { base: "l", letters: "lⓛｌŀĺľḷḹļḽḻſłƚɫⱡꝉꞁꝇ" },
    { base: "lj", letters: "ǉ" },
    { base: "m", letters: "mⓜｍḿṁṃɱɯ" },
    { base: "n", letters: "nⓝｎǹńñṅňṇņṋṉƞɲŉꞑꞥ" },
    { base: "nj", letters: "ǌ" },
    { base: "o", letters: "oⓞｏòóôồốỗổõṍȭṏōṑṓŏȯȱöȫỏőǒȍȏơờớỡởợọộǫǭøǿɔꝋꝍɵ" },
    { base: "oi", letters: "ƣ" },
    { base: "ou", letters: "ȣ" },
    { base: "oo", letters: "ꝏ" },
    { base: "p", letters: "pⓟｐṕṗƥᵽꝑꝓꝕ" },
    { base: "q", letters: "qⓠｑɋꝗꝙ" },
    { base: "r", letters: "rⓡｒŕṙřȑȓṛṝŗṟɍɽꝛꞧꞃ" },
    { base: "s", letters: "sⓢｓßśṥŝṡšṧṣṩșşȿꞩꞅẛ" },
    { base: "t", letters: "tⓣｔṫẗťṭțţṱṯŧƭʈⱦꞇ" },
    { base: "tz", letters: "ꜩ" },
    { base: "u", letters: "uⓤｕùúûũṹūṻŭüǜǘǖǚủůűǔȕȗưừứữửựụṳųṷṵʉ" },
    { base: "v", letters: "vⓥｖṽṿʋꝟʌ" },
    { base: "vy", letters: "ꝡ" },
    { base: "w", letters: "wⓦｗẁẃŵẇẅẘẉⱳ" },
    { base: "x", letters: "xⓧｘẋẍ" },
    { base: "y", letters: "yⓨｙỳýŷỹȳẏÿỷẙỵƴɏỿ" },
    { base: "z", letters: "zⓩｚźẑżžẓẕƶȥɀⱬꝣ" },
  ].reduce(function (t, e) {
    var n = e.base,
      r = e.letters;
    return (
      r.split("").forEach(function (i) {
        t[i] = n;
      }),
      t
    );
  }, {}),
  aV = "̀-ͯ",
  sV = "゙゚";
function Ah(t) {
  return t
    .normalize("NFD")
    .replace(new RegExp("[".concat(aV).concat(sV, "]"), "g"), "")
    .replace(/[^\u0000-\u007E]/g, function (e) {
      return oV[e] || e;
    });
}
var Tx = {};
function Yn(t, e) {
  if (!t && e.indexOf("deprecated") !== -1) {
    if (Tx[e]) return;
    Tx[e] = !0;
  }
  for (
    var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), i = 2;
    i < n;
    i++
  )
    r[i - 2] = arguments[i];
  kb.apply(void 0, [t, "[react-bootstrap-typeahead] ".concat(e)].concat(r));
}
function Yp(t, e, n) {
  var r = t,
    i = e;
  return (
    n.caseSensitive || ((r = r.toLowerCase()), (i = i.toLowerCase())),
    n.ignoreDiacritics && ((r = Ah(r)), (i = Ah(i))),
    i.indexOf(r) !== -1
  );
}
function lV(t, e) {
  var n = e.filterBy,
    r = e.labelKey,
    i = e.multiple,
    o = e.selected,
    a = e.text;
  if (
    i &&
    o.some(function (c) {
      return kl(c, t);
    })
  )
    return !1;
  if (On(r)) return Yp(a, r(t), e);
  var l = n.slice();
  return (
    ri(r) && l.indexOf(r) === -1 && l.unshift(r),
    ri(t)
      ? (Yn(
          l.length <= 1,
          "You cannot filter by properties when `option` is a string."
        ),
        Yp(a, t, e))
      : l.some(function (c) {
          var u = Zo(t, c);
          return (
            ri(u) ||
              (Yn(
                !1,
                "Fields passed to `filterBy` should have string values. Value will be converted to a string; results may be unexpected."
              ),
              (u = String(u))),
            Yp(a, u, e)
          );
        })
  );
}
function lj(t) {
  return t.selectionStart != null;
}
function cV(t, e) {
  var n = !1;
  return (
    t.key === "ArrowRight" &&
      (n = lj(t.currentTarget)
        ? t.currentTarget.selectionStart === t.currentTarget.value.length
        : !0),
    t.key === "Tab" && (t.preventDefault(), (n = !0)),
    e ? e(n, t) : n
  );
}
var uV = "i",
  Xp = /[\u0300-\u036F]/;
function dV(t) {
  return (
    typeof t != "string" && wN(!1),
    t.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d")
  );
}
function cj(t, e) {
  var n = new RegExp(dV(Ah(e)), uV),
    r = n.exec(Ah(t));
  if (!r) return null;
  var i = r.index,
    o = r[0].length;
  if (Xp.test(t)) {
    for (var a = 0; a <= i; a++) Xp.test(t[a]) && (i += 1);
    for (var l = i; l <= i + o; l++) Xp.test(t[l]) && (o += 1);
  }
  return { end: i + o, start: i };
}
function hV(t) {
  var e = t.activeIndex,
    n = t.initialItem,
    r = t.isFocused,
    i = t.isMenuShown,
    o = t.labelKey,
    a = t.multiple,
    l = t.selected,
    c = t.text;
  if (
    !c ||
    !r ||
    !i ||
    !n ||
    (!ri(n) && Rh(n, "customOption")) ||
    e > -1 ||
    (l.length && !a)
  )
    return "";
  var u = ui(n, o),
    d = cj(u.toLowerCase(), c.toLowerCase());
  return d && d.start === 0 ? c + u.slice(d.end, u.length) : "";
}
function uj() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "",
    e = arguments.length > 1 ? arguments[1] : void 0;
  return "".concat(t, "-item-").concat(e);
}
var fV = [
  "activeIndex",
  "id",
  "isFocused",
  "isMenuShown",
  "multiple",
  "onClick",
  "onFocus",
  "placeholder",
];
function Ix(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function Uu(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Ix(Object(n), !0).forEach(function (r) {
          be(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : Ix(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
var pV = function (e) {
  var n = e.activeIndex,
    r = e.id,
    i = e.isFocused,
    o = e.isMenuShown,
    a = e.multiple,
    l = e.onClick,
    c = e.onFocus,
    u = e.placeholder,
    d = sn(e, fV);
  return function () {
    var h,
      f = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
      p = Rh(f, "className") ? String(f.className) : void 0;
    return Uu(
      Uu(
        Uu(Uu({ autoComplete: "off", placeholder: u, type: "text" }, f), d),
        {},
        {
          "aria-activedescendant": n >= 0 ? uj(r, n) : void 0,
          "aria-autocomplete": "both",
          "aria-expanded": o,
          "aria-haspopup": "listbox",
          "aria-multiselectable": a || void 0,
          "aria-owns": o ? r : void 0,
          className: J(((h = {}), be(h, p || "", !a), be(h, "focus", i), h)),
        },
        a && { inputClassName: p }
      ),
      {},
      { onClick: l, onFocus: c, role: "combobox" }
    );
  };
};
function mV(t) {
  var e = t.activeItem,
    n = t.labelKey,
    r = t.multiple,
    i = t.selected,
    o = t.text;
  return e ? ui(e, n) : !r && i.length && i[0] ? ui(i[0], n) : o;
}
function Nx(t) {
  var e = t.allowNew,
    n = t.highlightOnlyResult,
    r = t.results;
  return !n || e ? !1 : r.length === 1 && !Zo(r[0], "disabled");
}
function gV(t, e) {
  return !e || e >= t.length ? t : t.slice(0, e);
}
function yV(t, e) {
  var n = e[t];
  return !!n && !!Zo(n, "disabled");
}
function kx(t, e, n) {
  for (var r = t; yV(r, n); ) r += e === "ArrowUp" ? -1 : 1;
  return r;
}
function vV(t, e, n) {
  var r = t;
  return (
    (r += e === "ArrowUp" ? -1 : 1),
    (r = kx(r, e, n)),
    r === n.length
      ? (r = -1)
      : r === -2 && ((r = n.length - 1), (r = kx(r, e, n))),
    r
  );
}
function bV(t) {
  var e = t.open,
    n = t.minLength,
    r = t.showMenu,
    i = t.text;
  return e || e === !1 ? e : i.length < n ? !1 : r;
}
function xC(t) {
  t.preventDefault();
}
function EC(t) {
  return t === "lg";
}
function dj(t) {
  return t === "sm";
}
var CV = ["className", "isInvalid", "isValid", "size"];
function Rx(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function Ax(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Rx(Object(n), !0).forEach(function (r) {
          be(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : Rx(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
function hj(t) {
  var e = t.className,
    n = t.isInvalid,
    r = t.isValid,
    i = t.size,
    o = sn(t, CV);
  return Ax(
    Ax({}, o),
    {},
    {
      className: J(
        "form-control",
        "rbt-input",
        {
          "form-control-lg": EC(i),
          "form-control-sm": dj(i),
          "is-invalid": n,
          "is-valid": r,
        },
        e
      ),
    }
  );
}
function wV(t, e) {
  var n = !t && e,
    r = t && !e,
    i,
    o,
    a;
  n
    ? ((i = "uncontrolled"), (o = "controlled"), (a = "an"))
    : ((i = "controlled"), (o = "uncontrolled"), (a = "a"));
  var l =
    "You are changing "
      .concat(a, " ")
      .concat(i, " typeahead to be ")
      .concat(o, ". ") +
    "Input elements should not switch from "
      .concat(i, " to ")
      .concat(o, " (or vice versa). ") +
    "Decide between using a controlled or uncontrolled element for the lifetime of the component.";
  Yn(!(n || r), l);
}
var SV = [
    { alt: "onBlur", prop: "onBlur" },
    { alt: "onInputChange", prop: "onChange" },
    { alt: "onFocus", prop: "onFocus" },
    { alt: "onKeyDown", prop: "onKeyDown" },
  ],
  fj = N.oneOf(tV);
function Kr(t, e) {
  return function (n, r, i) {
    N.checkPropTypes(be({}, r, t), n, "prop", i), On(e) && e(n, r, i);
  };
}
function xV(t) {
  var e = t.caseSensitive,
    n = t.filterBy;
  Yn(
    !e || typeof n != "function",
    "Your `filterBy` function will override the `caseSensitive` prop."
  );
}
function EV(t) {
  var e = t.defaultInputValue,
    n = t.defaultSelected,
    r = t.multiple,
    i = t.selected,
    o = n.length ? "defaultSelected" : "selected";
  Yn(
    !(!r && e && (n.length || (i && i.length))),
    "`defaultInputValue` will be overridden by the value from `".concat(o, "`.")
  );
}
function TV(t) {
  var e = t.defaultSelected,
    n = t.multiple;
  Yn(
    n || e.length <= 1,
    "You are passing multiple options to the `defaultSelected` prop of a Typeahead in single-select mode. The selections will be truncated to a single selection."
  );
}
function IV(t) {
  var e = t.allowNew,
    n = t.highlightOnlyResult;
  Yn(!(n && e), "`highlightOnlyResult` will not work with `allowNew`.");
}
function NV(t) {
  var e = t.filterBy,
    n = t.ignoreDiacritics;
  Yn(
    n || typeof e != "function",
    "Your `filterBy` function will override the `ignoreDiacritics` prop."
  );
}
function kV(t) {
  var e = t.inputProps;
  e &&
    Object.prototype.toString.call(e) === "[object Object]" &&
    SV.forEach(function (n) {
      var r = n.alt,
        i = n.prop,
        o = r ? " Use the top-level `".concat(r, "` prop instead.") : null;
      Yn(
        !e[i],
        "The `"
          .concat(i, "` property of `inputProps` will be ignored.")
          .concat(o)
      );
    });
}
function pj(t, e, n) {
  Yn(
    t[e] != null,
    "The prop `".concat(e, "` is required to make `").concat(n, "` ") +
      "accessible for users of assistive technologies such as screen readers."
  );
}
function RV(t) {
  var e = t.allowNew,
    n = t.labelKey;
  Yn(!(On(n) && e), "`labelKey` must be a string when `allowNew={true}`.");
}
var ys = N.oneOfType([N.object, N.string]);
function AV(t) {
  var e = t.multiple,
    n = t.onChange,
    r = t.selected;
  Yn(
    e || !r || r.length <= 1,
    "You are passing multiple options to the `selected` prop of a Typeahead in single-select mode. This may lead to unexpected behaviors or errors."
  ),
    Yn(
      !r || (r && On(n)),
      "You provided a `selected` prop without an `onChange` handler. If you want the typeahead to be uncontrolled, use `defaultSelected`. Otherwise, set `onChange`."
    );
}
var jV = [
  "allowNew",
  "delay",
  "emptyLabel",
  "isLoading",
  "minLength",
  "onInputChange",
  "onSearch",
  "options",
  "promptText",
  "searchText",
  "useCache",
];
function jx(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function Ox(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? jx(Object(n), !0).forEach(function (r) {
          be(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : jx(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
N.number,
  N.bool.isRequired,
  N.number,
  N.func.isRequired,
  N.arrayOf(ys),
  N.node,
  N.node,
  N.bool;
function OV(t) {
  var e = t.allowNew,
    n = t.delay,
    r = n === void 0 ? 200 : n,
    i = t.emptyLabel,
    o = t.isLoading,
    a = t.minLength,
    l = a === void 0 ? 2 : a,
    c = t.onInputChange,
    u = t.onSearch,
    d = t.options,
    h = d === void 0 ? [] : d,
    f = t.promptText,
    p = f === void 0 ? "Type to search..." : f,
    m = t.searchText,
    v = m === void 0 ? "Searching..." : m,
    C = t.useCache,
    b = C === void 0 ? !0 : C,
    g = sn(t, jV),
    y = x.useRef({}),
    w = x.useRef(null),
    E = x.useRef(t.defaultInputValue || ""),
    S = sb(),
    T = fb(t),
    I = x.useCallback(
      function (_) {
        if (((E.current = _), !(!_ || (l && _.length < l)))) {
          if (b && y.current[_]) {
            S();
            return;
          }
          u(_);
        }
      },
      [S, l, u, b]
    );
  x.useEffect(
    function () {
      return (
        (w.current = ZW(I, r)),
        function () {
          w.current && w.current.cancel();
        }
      );
    },
    [r, I]
  ),
    x.useEffect(function () {
      !o && T && T.isLoading && b && (y.current[E.current] = h);
    });
  var R = function () {
      return E.current.length ? (o ? v : i) : p;
    },
    A = x.useCallback(
      function (_, F) {
        c && c(_, F), w.current && w.current(_);
      },
      [c]
    ),
    O = y.current[E.current];
  return Ox(
    Ox({}, g),
    {},
    {
      allowNew: On(e) ? e : e && !o,
      emptyLabel: R(),
      isLoading: o,
      minLength: l,
      onInputChange: A,
      options: b && O ? O : h,
    }
  );
}
function mj(t, e) {
  if (!(t instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function DV(t, e) {
  for (var n = 0; n < e.length; n++) {
    var r = e[n];
    (r.enumerable = r.enumerable || !1),
      (r.configurable = !0),
      "value" in r && (r.writable = !0),
      Object.defineProperty(t, aj(r.key), r);
  }
}
function gj(t, e, n) {
  return (
    e && DV(t.prototype, e),
    Object.defineProperty(t, "prototype", { writable: !1 }),
    t
  );
}
function _e(t) {
  if (t === void 0)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return t;
}
function yj(t, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Super expression must either be null or a function");
  (t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 },
  })),
    Object.defineProperty(t, "prototype", { writable: !1 }),
    e && hh(t, e);
}
function vj(t, e) {
  if (e && (Bs(e) == "object" || typeof e == "function")) return e;
  if (e !== void 0)
    throw new TypeError(
      "Derived constructors may only return object or undefined"
    );
  return _e(t);
}
function Us(t) {
  return (
    (Us = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function (e) {
          return e.__proto__ || Object.getPrototypeOf(e);
        }),
    Us(t)
  );
}
var LV = {
    activeIndex: -1,
    hintText: "",
    id: "",
    initialItem: null,
    inputNode: null,
    isOnlyResult: !1,
    onActiveItemChange: rr,
    onAdd: rr,
    onInitialItemChange: rr,
    onMenuItemClick: rr,
    setItem: rr,
  },
  bj = x.createContext(LV),
  Cj = function () {
    return x.useContext(bj);
  };
function Dx(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function Ba(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Dx(Object(n), !0).forEach(function (r) {
          be(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : Dx(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
var PV = [
    "activeIndex",
    "disabled",
    "id",
    "inputRef",
    "isFocused",
    "isMenuShown",
    "multiple",
    "onBlur",
    "onChange",
    "onClick",
    "onFocus",
    "onKeyDown",
    "placeholder",
  ],
  _V = [
    "activeIndex",
    "hideMenu",
    "isMenuShown",
    "labelKey",
    "onClear",
    "onHide",
    "onRemove",
    "results",
    "selected",
    "text",
    "toggleMenu",
  ],
  MV = [
    "activeIndex",
    "id",
    "initialItem",
    "inputNode",
    "onActiveItemChange",
    "onAdd",
    "onInitialItemChange",
    "onMenuItemClick",
    "setItem",
  ],
  FV = function (e) {
    var n = e.allowNew,
      r = e.children,
      i = e.initialItem,
      o = e.isMenuShown,
      a = e.onAdd,
      l = e.onInitialItemChange,
      c = e.onKeyDown,
      u = e.onMenuToggle,
      d = e.results,
      h = e.selectHint,
      f = hV(e);
    x.useEffect(function () {
      n || d.length || l();
    });
    var p = x.useRef(!0);
    x.useEffect(
      function () {
        if (p.current) {
          p.current = !1;
          return;
        }
        u(o);
      },
      [o, u]
    );
    var m = function (g) {
        if ((c(g), !!i)) {
          var y = g.key === "Enter" && Nx(e),
            w = f && cV(g, h);
          (y || w) && a(i);
        }
      },
      v = Ba(
        Ba({}, Ed(e, _V)),
        {},
        {
          getInputProps: pV(
            Ba(Ba({}, Ed(e, PV)), {}, { onKeyDown: m, value: mV(e) })
          ),
        }
      ),
      C = Ba(Ba({}, Ed(e, MV)), {}, { hintText: f, isOnlyResult: Nx(e) });
    return k.createElement(bj.Provider, { value: C }, On(r) ? r(v) : r);
  };
function Lx(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function Ro(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Lx(Object(n), !0).forEach(function (r) {
          be(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : Lx(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
function jh(t) {
  var e = t.defaultInputValue,
    n = t.defaultOpen,
    r = t.defaultSelected,
    i = t.maxResults,
    o = t.multiple,
    a = t.selected ? t.selected.slice() : r.slice(),
    l = e;
  return (
    !o &&
      a.length &&
      ((l = ui(a[0], t.labelKey)), a.length > 1 && (a = a.slice(0, 1))),
    {
      activeIndex: -1,
      activeItem: void 0,
      initialItem: void 0,
      isFocused: !1,
      selected: a,
      showMenu: n,
      shownResults: i,
      text: l,
    }
  );
}
function Px(t, e) {
  return Ro(
    Ro({}, jh(e)),
    {},
    { isFocused: t.isFocused, selected: [], text: "" }
  );
}
function _x(t) {
  return Ro(Ro({}, t), {}, { isFocused: !0, showMenu: !0 });
}
function Td(t, e) {
  var n = jh(e),
    r = n.activeIndex,
    i = n.activeItem,
    o = n.initialItem,
    a = n.shownResults;
  return Ro(
    Ro({}, t),
    {},
    {
      activeIndex: r,
      activeItem: i,
      initialItem: o,
      showMenu: !1,
      shownResults: a,
    }
  );
}
function BV(t, e) {
  return t.showMenu ? Td(t, e) : Ro(Ro({}, t), {}, { showMenu: !0 });
}
var UV = ["onChange"];
function Mx(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function eo(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Mx(Object(n), !0).forEach(function (r) {
          be(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : Mx(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
function zV(t) {
  var e = HV();
  return function () {
    var r = Us(t),
      i;
    if (e) {
      var o = Us(this).constructor;
      i = Reflect.construct(r, arguments, o);
    } else i = r.apply(this, arguments);
    return vj(this, i);
  };
}
function HV() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
var $V = {
    allowNew: N.oneOfType([N.bool, N.func]),
    autoFocus: N.bool,
    caseSensitive: Kr(N.bool, xV),
    defaultInputValue: Kr(N.string, EV),
    defaultOpen: N.bool,
    defaultSelected: Kr(N.arrayOf(ys), TV),
    filterBy: N.oneOfType([N.arrayOf(N.string.isRequired), N.func]),
    highlightOnlyResult: Kr(N.bool, IV),
    id: Kr(N.oneOfType([N.number, N.string]), pj),
    ignoreDiacritics: Kr(N.bool, NV),
    labelKey: Kr(N.oneOfType([N.string, N.func]), RV),
    maxResults: N.number,
    minLength: N.number,
    multiple: N.bool,
    onBlur: N.func,
    onChange: N.func,
    onFocus: N.func,
    onInputChange: N.func,
    onKeyDown: N.func,
    onMenuToggle: N.func,
    onPaginate: N.func,
    open: N.bool,
    options: N.arrayOf(ys).isRequired,
    paginate: N.bool,
    selected: Kr(N.arrayOf(ys), AV),
  },
  KV = {
    allowNew: !1,
    autoFocus: !1,
    caseSensitive: !1,
    defaultInputValue: "",
    defaultOpen: !1,
    defaultSelected: [],
    filterBy: [],
    highlightOnlyResult: !1,
    ignoreDiacritics: !0,
    labelKey: sj,
    maxResults: 100,
    minLength: 0,
    multiple: !1,
    onBlur: rr,
    onFocus: rr,
    onInputChange: rr,
    onKeyDown: rr,
    onMenuToggle: rr,
    onPaginate: rr,
    paginate: !0,
  };
function qV(t, e) {
  var n = Object.getOwnPropertyDescriptor(
    window.HTMLInputElement.prototype,
    "value"
  );
  n && n.set && n.set.call(t, e);
  var r = new Event("input", { bubbles: !0 });
  t.dispatchEvent(r);
}
var TC = (function (t) {
  yj(n, t);
  var e = zV(n);
  function n() {
    var r;
    mj(this, n);
    for (var i = arguments.length, o = new Array(i), a = 0; a < i; a++)
      o[a] = arguments[a];
    return (
      (r = e.call.apply(e, [this].concat(o))),
      be(_e(r), "state", jh(r.props)),
      be(_e(r), "inputNode", null),
      be(_e(r), "isMenuShown", !1),
      be(_e(r), "items", []),
      be(_e(r), "blur", function () {
        r.inputNode && r.inputNode.blur(), r.hideMenu();
      }),
      be(_e(r), "clear", function () {
        r.setState(Px);
      }),
      be(_e(r), "focus", function () {
        r.inputNode && r.inputNode.focus();
      }),
      be(_e(r), "getInput", function () {
        return r.inputNode;
      }),
      be(_e(r), "inputRef", function (l) {
        r.inputNode = l;
      }),
      be(_e(r), "setItem", function (l, c) {
        r.items[c] = l;
      }),
      be(_e(r), "hideMenu", function () {
        r.setState(Td);
      }),
      be(_e(r), "toggleMenu", function () {
        r.setState(BV);
      }),
      be(_e(r), "_handleActiveIndexChange", function (l) {
        r.setState(function (c) {
          return { activeIndex: l, activeItem: l >= 0 ? c.activeItem : void 0 };
        });
      }),
      be(_e(r), "_handleActiveItemChange", function (l) {
        kl(l, r.state.activeItem) || r.setState({ activeItem: l });
      }),
      be(_e(r), "_handleBlur", function (l) {
        l.persist(),
          r.setState({ isFocused: !1 }, function () {
            return r.props.onBlur(l);
          });
      }),
      be(_e(r), "_handleChange", function (l) {
        r.props.onChange && r.props.onChange(l);
      }),
      be(_e(r), "_handleClear", function () {
        r.inputNode && qV(r.inputNode, ""),
          r.setState(Px, function () {
            r.props.multiple && r._handleChange([]);
          });
      }),
      be(_e(r), "_handleClick", function (l) {
        var c;
        l.persist();
        var u =
          (c = r.props.inputProps) === null || c === void 0
            ? void 0
            : c.onClick;
        r.setState(_x, function () {
          return On(u) && u(l);
        });
      }),
      be(_e(r), "_handleFocus", function (l) {
        l.persist(),
          r.setState(_x, function () {
            return r.props.onFocus(l);
          });
      }),
      be(_e(r), "_handleInitialItemChange", function (l) {
        kl(l, r.state.initialItem) || r.setState({ initialItem: l });
      }),
      be(_e(r), "_handleInputChange", function (l) {
        l.persist();
        var c = l.currentTarget.value,
          u = r.props,
          d = u.multiple,
          h = u.onInputChange,
          f = r.state.selected.length && !d;
        r.setState(
          function (p, m) {
            var v = jh(m),
              C = v.activeIndex,
              b = v.activeItem,
              g = v.shownResults;
            return {
              activeIndex: C,
              activeItem: b,
              selected: f ? [] : p.selected,
              showMenu: !0,
              shownResults: g,
              text: c,
            };
          },
          function () {
            h(c, l), f && r._handleChange([]);
          }
        );
      }),
      be(_e(r), "_handleKeyDown", function (l) {
        var c = r.state.activeItem;
        if (!r.isMenuShown) {
          (l.key === "ArrowUp" || l.key === "ArrowDown") &&
            r.setState({ showMenu: !0 }),
            r.props.onKeyDown(l);
          return;
        }
        switch (l.key) {
          case "ArrowUp":
          case "ArrowDown":
            l.preventDefault(),
              r._handleActiveIndexChange(
                vV(r.state.activeIndex, l.key, r.items)
              );
            break;
          case "Enter":
            l.preventDefault(), c && r._handleMenuItemSelect(c, l);
            break;
          case "Escape":
          case "Tab":
            r.hideMenu();
            break;
        }
        r.props.onKeyDown(l);
      }),
      be(_e(r), "_handleMenuItemSelect", function (l, c) {
        Zo(l, "paginationOption")
          ? r._handlePaginate(c)
          : r._handleSelectionAdd(l);
      }),
      be(_e(r), "_handlePaginate", function (l) {
        l.persist(),
          r.setState(
            function (c, u) {
              return { shownResults: c.shownResults + u.maxResults };
            },
            function () {
              return r.props.onPaginate(l, r.state.shownResults);
            }
          );
      }),
      be(_e(r), "_handleSelectionAdd", function (l) {
        var c = r.props,
          u = c.multiple,
          d = c.labelKey,
          h,
          f = l,
          p;
        !ri(f) &&
          f.customOption &&
          (f = eo(eo({}, f), {}, { id: nV("new-id-") })),
          u
            ? ((h = r.state.selected.concat(f)), (p = ""))
            : ((h = [f]), (p = ui(f, d))),
          r.setState(
            function (m, v) {
              return eo(
                eo({}, Td(m, v)),
                {},
                { initialItem: f, selected: h, text: p }
              );
            },
            function () {
              return r._handleChange(h);
            }
          );
      }),
      be(_e(r), "_handleSelectionRemove", function (l) {
        var c = r.state.selected.filter(function (u) {
          return !kl(u, l);
        });
        r.focus(),
          r.setState(
            function (u, d) {
              return eo(eo({}, Td(u, d)), {}, { selected: c });
            },
            function () {
              return r._handleChange(c);
            }
          );
      }),
      r
    );
  }
  return (
    gj(n, [
      {
        key: "componentDidMount",
        value: function () {
          this.props.autoFocus && this.focus();
        },
      },
      {
        key: "componentDidUpdate",
        value: function (i, o) {
          var a = this.props,
            l = a.labelKey,
            c = a.multiple,
            u = a.selected;
          wV(u, i.selected),
            u &&
              !kl(u, o.selected) &&
              (this.setState({ selected: u }),
              c || this.setState({ text: u.length ? ui(u[0], l) : "" }));
        },
      },
      {
        key: "render",
        value: function () {
          var i = this.props;
          i.onChange;
          var o = sn(i, UV),
            a = eo(eo({}, o), this.state),
            l = a.filterBy,
            c = a.labelKey,
            u = a.options,
            d = a.paginate,
            h = a.shownResults,
            f = a.text;
          (this.isMenuShown = bV(a)), (this.items = []);
          var p = [];
          if (this.isMenuShown) {
            var m = On(l) ? l : lV;
            p = u.filter(function (b) {
              return m(b, a);
            });
            var v = d && p.length > h;
            if (
              ((p = gV(p, h)),
              rV(p, a) && p.push(be({ customOption: !0 }, my(c), f)),
              v)
            ) {
              var C;
              p.push(
                ((C = {}), be(C, my(c), ""), be(C, "paginationOption", !0), C)
              );
            }
          }
          return k.createElement(
            FV,
            vt({}, a, {
              hideMenu: this.hideMenu,
              inputNode: this.inputNode,
              inputRef: this.inputRef,
              isMenuShown: this.isMenuShown,
              onActiveItemChange: this._handleActiveItemChange,
              onAdd: this._handleSelectionAdd,
              onBlur: this._handleBlur,
              onChange: this._handleInputChange,
              onClear: this._handleClear,
              onClick: this._handleClick,
              onFocus: this._handleFocus,
              onHide: this.hideMenu,
              onInitialItemChange: this._handleInitialItemChange,
              onKeyDown: this._handleKeyDown,
              onMenuItemClick: this._handleMenuItemSelect,
              onRemove: this._handleSelectionRemove,
              results: p,
              setItem: this.setItem,
              toggleMenu: this.toggleMenu,
            })
          );
        },
      },
    ]),
    n
  );
})(k.Component);
be(TC, "propTypes", $V);
be(TC, "defaultProps", KV);
var GV = ["className", "label", "onClick", "onKeyDown", "size"],
  WV = { label: N.string, onClick: N.func, onKeyDown: N.func, size: fj },
  IC = function (e) {
    var n = e.className,
      r = e.label,
      i = r === void 0 ? "Clear" : r,
      o = e.onClick,
      a = e.onKeyDown,
      l = e.size,
      c = sn(e, GV);
    return k.createElement(
      "button",
      vt({}, c, {
        "aria-label": i,
        className: J(
          "close",
          "btn-close",
          "rbt-close",
          { "rbt-close-lg": EC(l), "rbt-close-sm": dj(l) },
          n
        ),
        onClick: function (d) {
          d.stopPropagation(), o && o(d);
        },
        onKeyDown: function (d) {
          d.key === "Backspace" && d.preventDefault(), a && a(d);
        },
        type: "button",
      }),
      k.createElement(
        "span",
        { "aria-hidden": "true", className: "rbt-close-content" },
        "×"
      ),
      k.createElement("span", { className: "sr-only visually-hidden" }, i)
    );
  };
IC.propTypes = WV;
var VV = { label: N.string },
  wj = function (e) {
    var n = e.label,
      r = n === void 0 ? "Loading..." : n;
    return k.createElement(
      "div",
      {
        className: "rbt-loader spinner-border spinner-border-sm",
        role: "status",
      },
      k.createElement("span", { className: "sr-only visually-hidden" }, r)
    );
  };
wj.propTypes = VV;
function QV(t) {
  if (Array.isArray(t)) return t;
}
function YV(t, e) {
  var n =
    t == null
      ? null
      : (typeof Symbol < "u" && t[Symbol.iterator]) || t["@@iterator"];
  if (n != null) {
    var r,
      i,
      o,
      a,
      l = [],
      c = !0,
      u = !1;
    try {
      if (((o = (n = n.call(t)).next), e !== 0))
        for (
          ;
          !(c = (r = o.call(n)).done) && (l.push(r.value), l.length !== e);
          c = !0
        );
    } catch (d) {
      (u = !0), (i = d);
    } finally {
      try {
        if (!c && n.return != null && ((a = n.return()), Object(a) !== a))
          return;
      } finally {
        if (u) throw i;
      }
    }
    return l;
  }
}
function Fx(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, r = Array(e); n < e; n++) r[n] = t[n];
  return r;
}
function XV(t, e) {
  if (t) {
    if (typeof t == "string") return Fx(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return (
      n === "Object" && t.constructor && (n = t.constructor.name),
      n === "Map" || n === "Set"
        ? Array.from(t)
        : n === "Arguments" ||
          /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
        ? Fx(t, e)
        : void 0
    );
  }
}
function JV() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function gy(t, e) {
  return QV(t) || YV(t, e) || XV(t, e) || JV();
}
var Bx = function (e) {
    return e.reduce(function (n, r) {
      var i = r[0],
        o = r[1];
      return (n[i] = o), n;
    }, {});
  },
  Ux =
    typeof window < "u" && window.document && window.document.createElement
      ? x.useLayoutEffect
      : x.useEffect;
function ZV(t) {
  var e = t.state;
  Object.keys(e.elements).forEach(function (n) {
    var r = e.styles[n] || {},
      i = e.attributes[n] || {},
      o = e.elements[n];
    !cr(o) ||
      !ai(o) ||
      (Object.assign(o.style, r),
      Object.keys(i).forEach(function (a) {
        var l = i[a];
        l === !1 ? o.removeAttribute(a) : o.setAttribute(a, l === !0 ? "" : l);
      }));
  });
}
function eQ(t) {
  var e = t.state,
    n = {
      popper: {
        position: e.options.strategy,
        left: "0",
        top: "0",
        margin: "0",
      },
      arrow: { position: "absolute" },
      reference: {},
    };
  return (
    Object.assign(e.elements.popper.style, n.popper),
    (e.styles = n),
    e.elements.arrow && Object.assign(e.elements.arrow.style, n.arrow),
    function () {
      Object.keys(e.elements).forEach(function (r) {
        var i = e.elements[r],
          o = e.attributes[r] || {},
          a = Object.keys(e.styles.hasOwnProperty(r) ? e.styles[r] : n[r]),
          l = a.reduce(function (c, u) {
            return (c[u] = ""), c;
          }, {});
        !cr(i) ||
          !ai(i) ||
          (Object.assign(i.style, l),
          Object.keys(o).forEach(function (c) {
            i.removeAttribute(c);
          }));
      });
    }
  );
}
const tQ = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: ZV,
  effect: eQ,
  requires: ["computeStyles"],
};
var nQ = [Ek, Ak, xk, tQ, Rk, Nk, jk, Sk, kk],
  rQ = Ok({ defaultModifiers: nQ }),
  iQ = typeof Element < "u",
  oQ = typeof Map == "function",
  aQ = typeof Set == "function",
  sQ = typeof ArrayBuffer == "function" && !!ArrayBuffer.isView;
function Id(t, e) {
  if (t === e) return !0;
  if (t && e && typeof t == "object" && typeof e == "object") {
    if (t.constructor !== e.constructor) return !1;
    var n, r, i;
    if (Array.isArray(t)) {
      if (((n = t.length), n != e.length)) return !1;
      for (r = n; r-- !== 0; ) if (!Id(t[r], e[r])) return !1;
      return !0;
    }
    var o;
    if (oQ && t instanceof Map && e instanceof Map) {
      if (t.size !== e.size) return !1;
      for (o = t.entries(); !(r = o.next()).done; )
        if (!e.has(r.value[0])) return !1;
      for (o = t.entries(); !(r = o.next()).done; )
        if (!Id(r.value[1], e.get(r.value[0]))) return !1;
      return !0;
    }
    if (aQ && t instanceof Set && e instanceof Set) {
      if (t.size !== e.size) return !1;
      for (o = t.entries(); !(r = o.next()).done; )
        if (!e.has(r.value[0])) return !1;
      return !0;
    }
    if (sQ && ArrayBuffer.isView(t) && ArrayBuffer.isView(e)) {
      if (((n = t.length), n != e.length)) return !1;
      for (r = n; r-- !== 0; ) if (t[r] !== e[r]) return !1;
      return !0;
    }
    if (t.constructor === RegExp)
      return t.source === e.source && t.flags === e.flags;
    if (
      t.valueOf !== Object.prototype.valueOf &&
      typeof t.valueOf == "function" &&
      typeof e.valueOf == "function"
    )
      return t.valueOf() === e.valueOf();
    if (
      t.toString !== Object.prototype.toString &&
      typeof t.toString == "function" &&
      typeof e.toString == "function"
    )
      return t.toString() === e.toString();
    if (((i = Object.keys(t)), (n = i.length), n !== Object.keys(e).length))
      return !1;
    for (r = n; r-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(e, i[r])) return !1;
    if (iQ && t instanceof Element) return !1;
    for (r = n; r-- !== 0; )
      if (
        !(
          (i[r] === "_owner" || i[r] === "__v" || i[r] === "__o") &&
          t.$$typeof
        ) &&
        !Id(t[i[r]], e[i[r]])
      )
        return !1;
    return !0;
  }
  return t !== t && e !== e;
}
var lQ = function (e, n) {
  try {
    return Id(e, n);
  } catch (r) {
    if ((r.message || "").match(/stack|recursion/i))
      return console.warn("react-fast-compare cannot handle circular refs"), !1;
    throw r;
  }
};
const cQ = Hi(lQ);
var uQ = [],
  dQ = function (e, n, r) {
    r === void 0 && (r = {});
    var i = x.useRef(null),
      o = {
        onFirstUpdate: r.onFirstUpdate,
        placement: r.placement || "bottom",
        strategy: r.strategy || "absolute",
        modifiers: r.modifiers || uQ,
      },
      a = x.useState({
        styles: {
          popper: { position: o.strategy, left: "0", top: "0" },
          arrow: { position: "absolute" },
        },
        attributes: {},
      }),
      l = a[0],
      c = a[1],
      u = x.useMemo(function () {
        return {
          name: "updateState",
          enabled: !0,
          phase: "write",
          fn: function (p) {
            var m = p.state,
              v = Object.keys(m.elements);
            Qh.flushSync(function () {
              c({
                styles: Bx(
                  v.map(function (C) {
                    return [C, m.styles[C] || {}];
                  })
                ),
                attributes: Bx(
                  v.map(function (C) {
                    return [C, m.attributes[C]];
                  })
                ),
              });
            });
          },
          requires: ["computeStyles"],
        };
      }, []),
      d = x.useMemo(
        function () {
          var f = {
            onFirstUpdate: o.onFirstUpdate,
            placement: o.placement,
            strategy: o.strategy,
            modifiers: [].concat(o.modifiers, [
              u,
              { name: "applyStyles", enabled: !1 },
            ]),
          };
          return cQ(i.current, f) ? i.current || f : ((i.current = f), f);
        },
        [o.onFirstUpdate, o.placement, o.strategy, o.modifiers, u]
      ),
      h = x.useRef();
    return (
      Ux(
        function () {
          h.current && h.current.setOptions(d);
        },
        [d]
      ),
      Ux(
        function () {
          if (!(e == null || n == null)) {
            var f = r.createPopper || rQ,
              p = f(e, n, d);
            return (
              (h.current = p),
              function () {
                p.destroy(), (h.current = null);
              }
            );
          }
        },
        [e, n, r.createPopper]
      ),
      {
        state: h.current ? h.current.state : null,
        styles: l.styles,
        attributes: l.attributes,
        update: h.current ? h.current.update : null,
        forceUpdate: h.current ? h.current.forceUpdate : null,
      }
    );
  };
function zx(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function Hx(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? zx(Object(n), !0).forEach(function (r) {
          be(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : zx(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
var hQ = {
  enabled: !0,
  fn: function (e) {
    e.state.styles.popper.width = "".concat(
      e.state.rects.reference.width,
      "px"
    );
  },
  name: "setPopperWidth",
  phase: "write",
};
function fQ(t) {
  var e = [{ enabled: !!t.flip, name: "flip" }];
  return t.align !== "right" && t.align !== "left" && e.push(hQ), e;
}
function pQ(t) {
  var e = t.align === "right" ? "end" : "start",
    n = t.dropup ? "top" : "bottom";
  return "".concat(n, "-").concat(e);
}
function mQ(t, e) {
  var n = x.useState(null),
    r = gy(n, 2),
    i = r[0],
    o = r[1],
    a = dQ(t, i, {
      modifiers: fQ(e),
      placement: pQ(e),
      strategy: e.positionFixed ? "fixed" : "absolute",
    }),
    l = a.attributes,
    c = a.styles,
    u = a.forceUpdate,
    d = t == null ? void 0 : t.offsetHeight;
  return (
    x.useEffect(
      function () {
        u && u();
      },
      [d]
    ),
    Hx(Hx({}, l.popper), {}, { innerRef: o, style: c.popper })
  );
}
var gQ = ["referenceElement", "isMenuShown"],
  yQ = typeof Element > "u" ? rr : Element,
  vQ = {
    align: N.oneOf(eV),
    children: N.func.isRequired,
    dropup: N.bool,
    flip: N.bool,
    isMenuShown: N.bool,
    positionFixed: N.bool,
    referenceElement: N.instanceOf(yQ),
  },
  Sj = function (e) {
    var n = e.referenceElement,
      r = e.isMenuShown,
      i = sn(e, gQ),
      o = mQ(n, i);
    return r ? i.children(o) : null;
  };
Sj.propTypes = vQ;
function bQ(t) {
  return t && "setState" in t ? Ti.findDOMNode(t) : t ?? null;
}
const CQ = function (t) {
  return wa(bQ(t));
};
var wQ = 27,
  $x = function () {};
function SQ(t) {
  return t.button === 0;
}
function xQ(t) {
  return !!(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey);
}
var Kx = function (e) {
  return e && ("current" in e ? e.current : e);
};
function xj(t, e, n) {
  var r = n === void 0 ? {} : n,
    i = r.disabled,
    o = r.clickTrigger,
    a = o === void 0 ? "click" : o,
    l = x.useRef(!1),
    c = e || $x,
    u = x.useCallback(
      function (f) {
        var p,
          m = Kx(t);
        kb(
          !!m,
          "RootClose captured a close event but does not have a ref to compare it to. useRootClose(), should be passed a ref that resolves to a DOM node"
        ),
          (l.current =
            !m ||
            xQ(f) ||
            !SQ(f) ||
            !!vc(
              m,
              (p = f.composedPath == null ? void 0 : f.composedPath()[0]) !=
                null
                ? p
                : f.target
            ));
      },
      [t]
    ),
    d = nt(function (f) {
      l.current || c(f);
    }),
    h = nt(function (f) {
      f.keyCode === wQ && c(f);
    });
  x.useEffect(
    function () {
      if (!(i || t == null)) {
        var f = window.event,
          p = CQ(Kx(t)),
          m = Hn(p, a, u, !0),
          v = Hn(p, a, function (g) {
            if (g === f) {
              f = void 0;
              return;
            }
            d(g);
          }),
          C = Hn(p, "keyup", function (g) {
            if (g === f) {
              f = void 0;
              return;
            }
            h(g);
          }),
          b = [];
        return (
          "ontouchstart" in p.documentElement &&
            (b = [].slice.call(p.body.children).map(function (g) {
              return Hn(g, "mousemove", $x);
            })),
          function () {
            m(),
              v(),
              C(),
              b.forEach(function (g) {
                return g();
              });
          }
        );
      }
    },
    [t, i, a, u, d, h]
  );
}
function EQ(t, e) {
  var n = x.useRef(null);
  return xj(n.current, t, e), n;
}
var TQ = ["children", "onRootClose"];
function IQ(t) {
  var e = t.children,
    n = t.onRootClose,
    r = sn(t, TQ),
    i = EQ(n, r);
  return e(i);
}
var NQ = ["onBlur", "onClick", "onFocus", "onRemove", "option"];
function qx(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function Gx(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? qx(Object(n), !0).forEach(function (r) {
          be(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : qx(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
N.func, N.func, N.func, N.func, ys.isRequired;
function kQ(t) {
  var e = t.onBlur,
    n = t.onClick,
    r = t.onFocus,
    i = t.onRemove,
    o = t.option,
    a = sn(t, NQ),
    l = x.useState(!1),
    c = gy(l, 2),
    u = c[0],
    d = c[1],
    h = x.useState(null),
    f = gy(h, 2),
    p = f[0],
    m = f[1],
    v = function (E) {
      d(!1), e && e(E);
    },
    C = function (E) {
      d(!0), n && n(E);
    },
    b = function (E) {
      d(!0), r && r(E);
    },
    g = function () {
      i && i(o);
    },
    y = function (E) {
      E.key === "Backspace" && u && (E.preventDefault(), g());
    };
  return (
    xj(p, v, Gx(Gx({}, a), {}, { disabled: !u })),
    {
      active: u,
      onBlur: v,
      onClick: C,
      onFocus: b,
      onKeyDown: y,
      onRemove: On(i) ? g : void 0,
      ref: m,
    }
  );
}
var RQ = ["active", "children", "className", "onRemove", "tabIndex"],
  AQ = ["children", "option", "readOnly"],
  jQ = ["ref"];
function Wx(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function Vx(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Wx(Object(n), !0).forEach(function (r) {
          be(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : Wx(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
var OQ = x.forwardRef(function (t, e) {
    var n = t.active,
      r = t.children,
      i = t.className,
      o = t.onRemove,
      a = t.tabIndex,
      l = sn(t, RQ);
    return k.createElement(
      "div",
      vt({}, l, {
        className: J(
          "rbt-token",
          "rbt-token-removeable",
          { "rbt-token-active": !!n },
          i
        ),
        ref: e,
        tabIndex: a || 0,
      }),
      r,
      k.createElement(IC, {
        className: "rbt-token-remove-button",
        label: "Remove",
        onClick: o,
        tabIndex: -1,
      })
    );
  }),
  DQ = function (e) {
    var n = e.children,
      r = e.className,
      i = e.disabled,
      o = e.href,
      a = J("rbt-token", { "rbt-token-disabled": i }, r);
    return o && !i
      ? k.createElement("a", { className: a, href: o }, n)
      : k.createElement("div", { className: a }, n);
  },
  LQ = function (e) {
    var n = e.children,
      r = e.option,
      i = e.readOnly,
      o = sn(e, AQ),
      a = kQ(Vx(Vx({}, o), {}, { option: r })),
      l = a.ref,
      c = sn(a, jQ),
      u = k.createElement("div", { className: "rbt-token-label" }, n);
    return !o.disabled && !i && On(c.onRemove)
      ? k.createElement(OQ, vt({}, o, c, { ref: l }), u)
      : k.createElement(DQ, o, u);
  };
function zu(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
  return (
    n && (n = n.replace(n[0], n[0].toUpperCase())),
    ["Top", "Right", "Bottom", "Left"]
      .map(function (r) {
        return t["".concat(e).concat(r).concat(n)];
      })
      .join(" ")
  );
}
function PQ(t, e) {
  var n = window.getComputedStyle(t);
  (e.style.borderStyle = zu(n, "border", "style")),
    (e.style.borderWidth = zu(n, "border", "width")),
    (e.style.fontSize = n.fontSize),
    (e.style.fontWeight = n.fontWeight),
    (e.style.height = n.height),
    (e.style.lineHeight = n.lineHeight),
    (e.style.margin = zu(n, "margin")),
    (e.style.padding = zu(n, "padding"));
}
var _Q = function () {
    var e = Cj(),
      n = e.hintText,
      r = e.inputNode,
      i = x.useRef(null);
    return (
      x.useEffect(function () {
        r && i.current && PQ(r, i.current);
      }),
      { hintRef: i, hintText: n }
    );
  },
  Ej = function (e) {
    var n = e.children,
      r = e.className,
      i = _Q(),
      o = i.hintRef,
      a = i.hintText;
    return k.createElement(
      "div",
      {
        className: r,
        style: {
          display: "flex",
          flex: 1,
          height: "100%",
          position: "relative",
        },
      },
      n,
      k.createElement("input", {
        "aria-hidden": !0,
        className: "rbt-input-hint",
        ref: o,
        readOnly: !0,
        style: {
          backgroundColor: "transparent",
          borderColor: "transparent",
          boxShadow: "none",
          color: "rgba(0, 0, 0, 0.54)",
          left: 0,
          pointerEvents: "none",
          position: "absolute",
          top: 0,
          width: "100%",
        },
        tabIndex: -1,
        value: a,
      })
    );
  },
  Tj = x.forwardRef(function (t, e) {
    return k.createElement(
      "input",
      vt({}, t, { className: J("rbt-input-main", t.className), ref: e })
    );
  }),
  MQ = [
    "children",
    "className",
    "inputClassName",
    "inputRef",
    "referenceElementRef",
    "selected",
  ];
function FQ(t) {
  var e = k.useRef(null),
    n = k.useRef(null),
    r = hj(t),
    i = r.children,
    o = r.className,
    a = r.inputClassName;
  r.inputRef;
  var l = r.referenceElementRef,
    c = r.selected,
    u = sn(r, MQ);
  function d(p) {
    (n.current = p), t.inputRef(p);
  }
  function h(p) {
    if (t.disabled) {
      p.currentTarget.blur();
      return;
    }
    var m = n.current;
    !m ||
      (p.currentTarget.contains(p.target) && p.currentTarget !== p.target) ||
      (lj(m) && (m.selectionStart = m.value.length), m.focus());
  }
  function f(p) {
    if (p.key === "Backspace" && c.length && !t.value) {
      var m;
      p.preventDefault();
      var v = (m = e.current) === null || m === void 0 ? void 0 : m.children;
      if (v != null && v.length) {
        var C = v[v.length - 2];
        C == null || C.focus();
      }
    }
    t.onKeyDown && t.onKeyDown(p);
  }
  return k.createElement(
    "div",
    {
      className: J("rbt-input-multi", { disabled: t.disabled }, o),
      onClick: h,
      onFocus: h,
      ref: l,
      tabIndex: -1,
    },
    k.createElement(
      "div",
      { className: "rbt-input-wrapper", ref: e },
      i,
      k.createElement(
        Ej,
        null,
        k.createElement(
          Tj,
          vt({}, u, {
            className: a,
            onKeyDown: f,
            ref: d,
            style: {
              backgroundColor: "transparent",
              border: 0,
              boxShadow: "none",
              cursor: "inherit",
              outline: "none",
              padding: 0,
              width: "100%",
              zIndex: 1,
            },
          })
        )
      )
    )
  );
}
var BQ = ["inputRef", "referenceElementRef"],
  UQ = function (e) {
    var n = e.inputRef,
      r = e.referenceElementRef,
      i = sn(e, BQ);
    return k.createElement(
      Ej,
      null,
      k.createElement(
        Tj,
        vt({}, hj(i), {
          ref: function (a) {
            n(a), r(a);
          },
        })
      )
    );
  },
  zQ = {
    children: N.string.isRequired,
    highlightClassName: N.string,
    search: N.string.isRequired,
  },
  NC = function (e) {
    var n = e.children,
      r = e.highlightClassName,
      i = r === void 0 ? "rbt-highlight-text" : r,
      o = e.search;
    if (!o || !n) return k.createElement(k.Fragment, null, n);
    for (var a = 0, l = n, c = []; l; ) {
      var u = cj(l, o);
      if (!u) {
        c.push(l);
        break;
      }
      var d = l.slice(0, u.start);
      d && c.push(d);
      var h = l.slice(u.start, u.end);
      c.push(k.createElement("mark", { className: i, key: a }, h)),
        (a += 1),
        (l = l.slice(u.end));
    }
    return k.createElement(k.Fragment, null, c);
  };
NC.propTypes = zQ;
const Qx = (t) => typeof t == "object" && t != null && t.nodeType === 1,
  Yx = (t, e) => (!e || t !== "hidden") && t !== "visible" && t !== "clip",
  Jp = (t, e) => {
    if (t.clientHeight < t.scrollHeight || t.clientWidth < t.scrollWidth) {
      const n = getComputedStyle(t, null);
      return (
        Yx(n.overflowY, e) ||
        Yx(n.overflowX, e) ||
        ((r) => {
          const i = ((o) => {
            if (!o.ownerDocument || !o.ownerDocument.defaultView) return null;
            try {
              return o.ownerDocument.defaultView.frameElement;
            } catch {
              return null;
            }
          })(r);
          return (
            !!i &&
            (i.clientHeight < r.scrollHeight || i.clientWidth < r.scrollWidth)
          );
        })(t)
      );
    }
    return !1;
  },
  Hu = (t, e, n, r, i, o, a, l) =>
    (o < t && a > e) || (o > t && a < e)
      ? 0
      : (o <= t && l <= n) || (a >= e && l >= n)
      ? o - t - r
      : (a > e && l < n) || (o < t && l > n)
      ? a - e + i
      : 0,
  HQ = (t) => {
    const e = t.parentElement;
    return e ?? (t.getRootNode().host || null);
  },
  Xx = (t, e) => {
    var n, r, i, o;
    if (typeof document > "u") return [];
    const {
        scrollMode: a,
        block: l,
        inline: c,
        boundary: u,
        skipOverflowHiddenElements: d,
      } = e,
      h = typeof u == "function" ? u : (X) => X !== u;
    if (!Qx(t)) throw new TypeError("Invalid target");
    const f = document.scrollingElement || document.documentElement,
      p = [];
    let m = t;
    for (; Qx(m) && h(m); ) {
      if (((m = HQ(m)), m === f)) {
        p.push(m);
        break;
      }
      (m != null &&
        m === document.body &&
        Jp(m) &&
        !Jp(document.documentElement)) ||
        (m != null && Jp(m, d) && p.push(m));
    }
    const v =
        (r = (n = window.visualViewport) == null ? void 0 : n.width) != null
          ? r
          : innerWidth,
      C =
        (o = (i = window.visualViewport) == null ? void 0 : i.height) != null
          ? o
          : innerHeight,
      { scrollX: b, scrollY: g } = window,
      {
        height: y,
        width: w,
        top: E,
        right: S,
        bottom: T,
        left: I,
      } = t.getBoundingClientRect(),
      {
        top: R,
        right: A,
        bottom: O,
        left: _,
      } = ((X) => {
        const W = window.getComputedStyle(X);
        return {
          top: parseFloat(W.scrollMarginTop) || 0,
          right: parseFloat(W.scrollMarginRight) || 0,
          bottom: parseFloat(W.scrollMarginBottom) || 0,
          left: parseFloat(W.scrollMarginLeft) || 0,
        };
      })(t);
    let F =
        l === "start" || l === "nearest"
          ? E - R
          : l === "end"
          ? T + O
          : E + y / 2 - R + O,
      $ = c === "center" ? I + w / 2 - _ + A : c === "end" ? S + A : I - _;
    const Z = [];
    for (let X = 0; X < p.length; X++) {
      const W = p[X],
        {
          height: z,
          width: Q,
          top: q,
          right: ie,
          bottom: oe,
          left: pe,
        } = W.getBoundingClientRect();
      if (
        a === "if-needed" &&
        E >= 0 &&
        I >= 0 &&
        T <= C &&
        S <= v &&
        E >= q &&
        T <= oe &&
        I >= pe &&
        S <= ie
      )
        return Z;
      const Ee = getComputedStyle(W),
        ee = parseInt(Ee.borderLeftWidth, 10),
        me = parseInt(Ee.borderTopWidth, 10),
        Pe = parseInt(Ee.borderRightWidth, 10),
        it = parseInt(Ee.borderBottomWidth, 10);
      let wt = 0,
        Rt = 0;
      const St =
          "offsetWidth" in W ? W.offsetWidth - W.clientWidth - ee - Pe : 0,
        He =
          "offsetHeight" in W ? W.offsetHeight - W.clientHeight - me - it : 0,
        Bt =
          "offsetWidth" in W
            ? W.offsetWidth === 0
              ? 0
              : Q / W.offsetWidth
            : 0,
        gn =
          "offsetHeight" in W
            ? W.offsetHeight === 0
              ? 0
              : z / W.offsetHeight
            : 0;
      if (f === W)
        (wt =
          l === "start"
            ? F
            : l === "end"
            ? F - C
            : l === "nearest"
            ? Hu(g, g + C, C, me, it, g + F, g + F + y, y)
            : F - C / 2),
          (Rt =
            c === "start"
              ? $
              : c === "center"
              ? $ - v / 2
              : c === "end"
              ? $ - v
              : Hu(b, b + v, v, ee, Pe, b + $, b + $ + w, w)),
          (wt = Math.max(0, wt + g)),
          (Rt = Math.max(0, Rt + b));
      else {
        (wt =
          l === "start"
            ? F - q - me
            : l === "end"
            ? F - oe + it + He
            : l === "nearest"
            ? Hu(q, oe, z, me, it + He, F, F + y, y)
            : F - (q + z / 2) + He / 2),
          (Rt =
            c === "start"
              ? $ - pe - ee
              : c === "center"
              ? $ - (pe + Q / 2) + St / 2
              : c === "end"
              ? $ - ie + Pe + St
              : Hu(pe, ie, Q, ee, Pe + St, $, $ + w, w));
        const { scrollLeft: Me, scrollTop: Gt } = W;
        (wt =
          gn === 0
            ? 0
            : Math.max(
                0,
                Math.min(Gt + wt / gn, W.scrollHeight - z / gn + He)
              )),
          (Rt =
            Bt === 0
              ? 0
              : Math.max(
                  0,
                  Math.min(Me + Rt / Bt, W.scrollWidth - Q / Bt + St)
                )),
          (F += Gt - wt),
          ($ += Me - Rt);
      }
      Z.push({ el: W, top: wt, left: Rt });
    }
    return Z;
  },
  $Q = (t) =>
    t === !1
      ? { block: "end", inline: "nearest" }
      : ((e) => e === Object(e) && Object.keys(e).length !== 0)(t)
      ? t
      : { block: "start", inline: "nearest" };
function KQ(t, e) {
  if (
    !t.isConnected ||
    !((i) => {
      let o = i;
      for (; o && o.parentNode; ) {
        if (o.parentNode === document) return !0;
        o =
          o.parentNode instanceof ShadowRoot ? o.parentNode.host : o.parentNode;
      }
      return !1;
    })(t)
  )
    return;
  const n = ((i) => {
    const o = window.getComputedStyle(i);
    return {
      top: parseFloat(o.scrollMarginTop) || 0,
      right: parseFloat(o.scrollMarginRight) || 0,
      bottom: parseFloat(o.scrollMarginBottom) || 0,
      left: parseFloat(o.scrollMarginLeft) || 0,
    };
  })(t);
  if (((i) => typeof i == "object" && typeof i.behavior == "function")(e))
    return e.behavior(Xx(t, e));
  const r = typeof e == "boolean" || e == null ? void 0 : e.behavior;
  for (const { el: i, top: o, left: a } of Xx(t, $Q(e))) {
    const l = o - n.top + n.bottom,
      c = a - n.left + n.right;
    i.scroll({ top: l, left: c, behavior: r });
  }
}
var qQ = ["label", "onClick", "option", "position"];
function Jx(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function Zx(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? Jx(Object(n), !0).forEach(function (r) {
          be(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : Jx(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
ys.isRequired, N.number;
function GQ(t) {
  var e = t.label,
    n = t.onClick,
    r = t.option,
    i = t.position,
    o = sn(t, qQ),
    a = Cj(),
    l = a.activeIndex,
    c = a.id,
    u = a.isOnlyResult,
    d = a.onActiveItemChange,
    h = a.onInitialItemChange,
    f = a.onMenuItemClick,
    p = a.setItem,
    m = x.useRef(null);
  x.useEffect(function () {
    i === 0 && h(r);
  }),
    x.useEffect(
      function () {
        if (i === l) {
          d(r);
          var b = m.current;
          b && KQ(b, { boundary: b.parentNode, scrollMode: "if-needed" });
        }
      },
      [l, d, r, i]
    );
  var v = x.useCallback(
      function (b) {
        f(r, b), n && n(b);
      },
      [n, f, r]
    ),
    C = u || l === i;
  return (
    p(r, i),
    Zx(
      Zx({}, o),
      {},
      {
        active: C,
        "aria-label": e,
        "aria-selected": C,
        id: uj(c, i),
        onClick: v,
        onMouseDown: xC,
        ref: m,
        role: "option",
      }
    )
  );
}
var WQ = ["active", "children", "className", "disabled", "onClick"],
  Ij = x.forwardRef(function (t, e) {
    var n = t.active,
      r = t.children,
      i = t.className,
      o = t.disabled,
      a = t.onClick,
      l = sn(t, WQ);
    return k.createElement(
      "a",
      vt({}, l, {
        className: J("dropdown-item", { active: n, disabled: o }, i),
        href: l.href || "#",
        onClick: function (u) {
          u.preventDefault(), !o && a && a(u);
        },
        ref: e,
      }),
      r
    );
  });
function Zp(t) {
  return k.createElement(Ij, GQ(t));
}
var VQ = ["emptyLabel", "innerRef", "maxHeight", "style"];
function eE(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function tE(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? eE(Object(n), !0).forEach(function (r) {
          be(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : eE(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
var QQ = function () {
    return k.createElement("div", {
      className: "dropdown-divider",
      role: "separator",
    });
  },
  YQ = function (e) {
    return k.createElement(
      "div",
      vt({}, e, { className: "dropdown-header", role: "heading" })
    );
  },
  XQ = {
    "aria-label": N.string,
    emptyLabel: N.node,
    id: Kr(N.oneOfType([N.number, N.string]), pj),
    maxHeight: N.string,
  },
  kc = function (e) {
    var n = e.emptyLabel,
      r = n === void 0 ? "No matches found." : n,
      i = e.innerRef,
      o = e.maxHeight,
      a = o === void 0 ? "300px" : o,
      l = e.style,
      c = sn(e, VQ),
      u =
        x.Children.count(c.children) === 0
          ? k.createElement(Ij, { disabled: !0, role: "option" }, r)
          : c.children;
    return k.createElement(
      "div",
      vt({}, c, {
        "aria-label": c["aria-label"] || "menu-options",
        className: J("rbt-menu", "dropdown-menu", "show", c.className),
        onMouseDown: xC,
        ref: i,
        role: "listbox",
        style: tE(
          tE({}, l),
          {},
          { display: "block", maxHeight: a, overflow: "auto" }
        ),
      }),
      u
    );
  };
kc.propTypes = XQ;
kc.Divider = QQ;
kc.Header = YQ;
var JQ = [
    "labelKey",
    "newSelectionPrefix",
    "options",
    "paginationText",
    "renderMenuItemChildren",
    "text",
  ],
  ZQ = {
    newSelectionPrefix: N.node,
    paginationText: N.node,
    renderMenuItemChildren: N.func,
  };
function e9(t, e) {
  return k.createElement(NC, { search: e.text }, ui(t, e.labelKey));
}
var Nj = function (e) {
  var n = e.labelKey,
    r = e.newSelectionPrefix,
    i = r === void 0 ? "New selection: " : r,
    o = e.options,
    a = e.paginationText,
    l = a === void 0 ? "Display additional results..." : a,
    c = e.renderMenuItemChildren,
    u = c === void 0 ? e9 : c,
    d = e.text,
    h = sn(e, JQ),
    f = function (m, v) {
      var C = ui(m, n),
        b = { disabled: !!Zo(m, "disabled"), label: C, option: m, position: v };
      return Zo(m, "customOption")
        ? k.createElement(
            Zp,
            vt({}, b, {
              className: "rbt-menu-custom-option",
              key: v,
              label: C,
            }),
            i,
            k.createElement(NC, { search: d }, C)
          )
        : Zo(m, "paginationOption")
        ? k.createElement(
            k.Fragment,
            { key: "pagination-option-divider" },
            k.createElement(kc.Divider, null),
            k.createElement(
              Zp,
              vt({}, b, {
                className: "rbt-menu-pagination-option",
                label: ri(l) ? l : "",
              }),
              l
            )
          )
        : k.createElement(Zp, vt({}, b, { key: v }), u(m, e, v));
    };
  return k.createElement(kc, vt({}, h, { key: d }), o.map(f));
};
Nj.propTypes = ZQ;
function nE(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e &&
      (r = r.filter(function (i) {
        return Object.getOwnPropertyDescriptor(t, i).enumerable;
      })),
      n.push.apply(n, r);
  }
  return n;
}
function zr(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2
      ? nE(Object(n), !0).forEach(function (r) {
          be(t, r, n[r]);
        })
      : Object.getOwnPropertyDescriptors
      ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n))
      : nE(Object(n)).forEach(function (r) {
          Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
        });
  }
  return t;
}
function t9(t) {
  var e = n9();
  return function () {
    var r = Us(t),
      i;
    if (e) {
      var o = Us(this).constructor;
      i = Reflect.construct(r, arguments, o);
    } else i = r.apply(this, arguments);
    return vj(this, i);
  };
}
function n9() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function") return !0;
  try {
    return (
      Boolean.prototype.valueOf.call(
        Reflect.construct(Boolean, [], function () {})
      ),
      !0
    );
  } catch {
    return !1;
  }
}
var r9 = {
    clearButton: N.bool,
    inputProps: Kr(N.object, kV),
    isInvalid: N.bool,
    isLoading: N.bool,
    isValid: N.bool,
    renderInput: N.func,
    renderMenu: N.func,
    renderToken: N.func,
    size: fj,
  },
  i9 = { isLoading: !1 },
  o9 = function (e, n, r) {
    return k.createElement(
      Nj,
      vt({}, n, { labelKey: r.labelKey, options: e, text: r.text })
    );
  },
  a9 = function (e, n, r) {
    return k.createElement(
      LQ,
      {
        disabled: n.disabled,
        key: r,
        onRemove: n.onRemove,
        option: e,
        tabIndex: n.tabIndex,
      },
      ui(e, n.labelKey)
    );
  },
  s9 = ["align", "dropup", "flip", "positionFixed"];
function l9(t) {
  return Ed(t, s9);
}
var kC = (function (t) {
  yj(n, t);
  var e = t9(n);
  function n() {
    var r;
    mj(this, n);
    for (var i = arguments.length, o = new Array(i), a = 0; a < i; a++)
      o[a] = arguments[a];
    return (
      (r = e.call.apply(e, [this].concat(o))),
      be(_e(r), "_referenceElement", null),
      be(_e(r), "referenceElementRef", function (l) {
        r._referenceElement = l;
      }),
      be(_e(r), "_renderInput", function (l, c) {
        var u = r.props,
          d = u.isInvalid,
          h = u.isValid,
          f = u.multiple,
          p = u.renderInput,
          m = u.renderToken,
          v = u.size;
        if (On(p)) return p(l, c);
        var C = zr(zr({}, l), {}, { isInvalid: d, isValid: h, size: v });
        if (!f) return k.createElement(UQ, C);
        var b = c.labelKey,
          g = c.onRemove,
          y = c.selected;
        return k.createElement(
          FQ,
          vt({}, C, {
            placeholder: y.length ? "" : l.placeholder,
            selected: y,
          }),
          y.map(function (w, E) {
            return (
              m || a9
            )(w, zr(zr({}, C), {}, { labelKey: b, onRemove: g }), E);
          })
        );
      }),
      be(_e(r), "_renderMenu", function (l, c, u) {
        var d = r.props,
          h = d.emptyLabel,
          f = d.id,
          p = d.maxHeight,
          m = d.newSelectionPrefix,
          v = d.paginationText,
          C = d.renderMenu,
          b = d.renderMenuItemChildren;
        return (
          C || o9
        )(l, zr(zr({}, c), {}, { emptyLabel: h, id: f, maxHeight: p, newSelectionPrefix: m, paginationText: v, renderMenuItemChildren: b }), u);
      }),
      be(_e(r), "_renderAux", function (l) {
        var c = l.onClear,
          u = l.selected,
          d = r.props,
          h = d.clearButton,
          f = d.disabled,
          p = d.isLoading,
          m = d.size,
          v;
        return (
          p
            ? (v = k.createElement(wj, null))
            : h &&
              !f &&
              u.length &&
              (v = k.createElement(IC, {
                onClick: c,
                onMouseDown: xC,
                size: m,
              })),
          v
            ? k.createElement(
                "div",
                { className: J("rbt-aux", { "rbt-aux-lg": EC(m) }) },
                v
              )
            : null
        );
      }),
      r
    );
  }
  return (
    gj(n, [
      {
        key: "render",
        value: function () {
          var i = this,
            o = this.props,
            a = o.children,
            l = o.className,
            c = o.instanceRef,
            u = o.open,
            d = o.options,
            h = o.style;
          return k.createElement(
            TC,
            vt({}, this.props, { options: d, ref: c }),
            function (f) {
              var p = f.hideMenu,
                m = f.isMenuShown,
                v = f.results,
                C = i._renderAux(f);
              return k.createElement(
                IQ,
                { disabled: u || !m, onRootClose: p },
                function (b) {
                  return k.createElement(
                    "div",
                    {
                      className: J(
                        "rbt",
                        {
                          "has-aux": !!C,
                          "is-invalid": i.props.isInvalid,
                          "is-valid": i.props.isValid,
                        },
                        l
                      ),
                      ref: b,
                      style: zr(
                        zr({}, h),
                        {},
                        { outline: "none", position: "relative" }
                      ),
                      tabIndex: -1,
                    },
                    i._renderInput(
                      zr(
                        zr({}, f.getInputProps(i.props.inputProps)),
                        {},
                        { referenceElementRef: i.referenceElementRef }
                      ),
                      f
                    ),
                    k.createElement(
                      Sj,
                      vt({}, l9(i.props), {
                        isMenuShown: m,
                        referenceElement: i._referenceElement,
                      }),
                      function (g) {
                        return i._renderMenu(v, g, f);
                      }
                    ),
                    C,
                    On(a) ? a(f) : a
                  );
                }
              );
            }
          );
        },
      },
    ]),
    n
  );
})(k.Component);
be(kC, "propTypes", r9);
be(kC, "defaultProps", i9);
const kj = x.forwardRef(function (t, e) {
  return k.createElement(kC, vt({}, t, { instanceRef: e }));
});
var c9 = x.forwardRef(function (t, e) {
  return k.createElement(kj, vt({}, OV(t), { ref: e }));
});
const Mf = ({ wasSubmitted: t }) => {
    const [e, n] = k.useState(!0);
    k.useEffect(() => {
      t === !0 && n(!1);
    }, [t]);
    function r() {
      n(!1);
    }
    return { isPristine: e, setDirty: r };
  },
  ii = ({
    items: t,
    trigger: e = null,
    filterQuery: n = null,
    reducer: r,
    valueKey: i,
    labelKey: o,
    minLength: a,
    isWildcardSearchAllowed: l,
    value: c,
    isRequired: u = !1,
    addClassNames: d = "",
    wasSubmitted: h = !1,
  }) => {
    const f = k.useRef(null),
      { isPristine: p, setDirty: m } = Mf({ wasSubmitted: h }),
      [v, C] = k.useState([]),
      [b, g] = k.useState(!1),
      {
        dispatchReducer: y,
        localValue: w,
        setLocalValue: E,
      } = ma({ reducer: r, value: c }),
      S = async (ee) => {
        g(!0);
        try {
          if (e != null) {
            const me = await e(ee);
            C(me);
          } else C(t);
        } catch {
        } finally {
          g(!1);
        }
      },
      T = (ee) => {
        const me = n ? n(ee) : null;
        S(me), E(ee);
      },
      I = (ee) =>
        typeof ee == "string"
          ? ee
          : typeof ee == "object" && ee.hasOwnProperty(i)
          ? ee[i]
          : null,
      R = (ee) => {
        if (!ee.length) return;
        const me = ee[0],
          Pe = I(me);
        y(Pe);
      },
      A = (ee) => {
        var me;
        ee.key === "Enter" &&
          (_(ee.currentTarget.value), (me = f.current) == null || me.blur());
      },
      O = () => {
        var me, Pe;
        m();
        const ee =
          ((Pe = (me = f.current) == null ? void 0 : me.getInput()) == null
            ? void 0
            : Pe.value) ?? "";
        _(ee);
      },
      _ = (ee) => {
        if (ee == null) {
          l === !1 && F();
          return;
        }
        const me = Z.find(
          (Pe) => $(Pe).toString().toLowerCase() === ee.toString().toLowerCase()
        );
        if (me) {
          if (i in me) {
            const Pe = me[i];
            y(Pe);
          }
        } else l === !0 ? y(ee) : F();
      },
      F = k.useCallback(() => {
        var ee;
        (ee = f.current) == null || ee.clear(), y(null);
      }, []),
      $ = k.useCallback((ee) => (typeof o == "function" ? o(ee) : ee[o]), [o]),
      Z = k.useMemo(() => {
        const ee = t ? t.find((me) => me[i] === w) : null;
        return ee != null && ee.length !== 0 ? t ?? [] : v ?? [];
      }, [t, v, w, i]),
      X = (ee) => {
        ee.preventDefault(), F();
      };
    k.useEffect(() => {
      c === null && F();
    }, [c, F]);
    const W = k.useMemo(
      () => (Z ? Z.find((me) => me[i] === w) : null),
      [Z, i, w]
    );
    let Q = `form-control form-control-sm${d === "" ? "" : ` ${d}`}`;
    u && (Q = `${Q} input-secondary`);
    let q = d;
    u && (q = `${q} input-secondary`);
    let ie = d === "" ? "" : "m-1";
    const oe = u && !p && W == null,
      pe = l === !0 ? c ?? "" : void 0,
      Ee =
        l === !1 && W !== void 0 && W !== null ? [W] : l === !1 ? [] : void 0;
    return s.jsx("div", {
      className: ie,
      children: s.jsxs(si, {
        size: "sm",
        children: [
          s.jsx(c9, {
            ref: f,
            useCache: !1,
            id: "typeahead",
            delay: 200,
            emptyLabel: "No results found...",
            ignoreDiacritics: !0,
            labelKey: o,
            minLength: a,
            placeholder: "Search...",
            promptText: "Searching",
            searchText: "Searching",
            options: Z,
            isLoading: b,
            onSearch: T,
            onKeyDown: A,
            onChange: R,
            isInvalid: oe,
            onBlur: O,
            defaultInputValue: pe,
            selected: Ee,
            inputProps: { className: Q, autoComplete: "off" },
          }),
          s.jsx(si.Text, {
            className: `${q} clear-x`,
            onMouseDown: X,
            children: s.jsx(Xs, {}),
          }),
        ],
      }),
    });
  };
var Oi = ((t) => (
  (t[(t.None = 0)] = "None"),
  (t[(t.Asc = 1)] = "Asc"),
  (t[(t.Desc = 2)] = "Desc"),
  t
))(Oi || {});
function u9({ type: t = Oi.None }) {
  return t === Oi.Asc
    ? s.jsx(zb, {})
    : t === Oi.Desc
    ? s.jsx(Ub, {})
    : s.jsx(s.Fragment, {});
}
const d9 = (t, e) => ({ sortByDirection: t, sortByFieldName: e });
function h9(t) {
  if (t === null) return null;
  switch (t) {
    case Oi.Asc:
      return "asc";
    case Oi.Desc:
      return "desc";
    default:
      return null;
  }
}
const f9 = ({ value: t, onChange: e, ...n }) => {
    const r = () => {
      e(!t);
    };
    return s.jsx("span", {
      className: "me-2 clickable",
      onClick: r,
      ...n,
      children: t
        ? s.jsx(_b, {
            "data-title": "StartsWith",
            title: "Click this icon to switch to 'Contains' filtering.",
          })
        : s.jsx(Mb, {
            "data-title": "Contains",
            title: "Click this icon to switch to 'Starts with' filtering.",
          }),
    });
  },
  fe = ({
    headerText: t,
    sortByFieldName: e = null,
    children: n,
    width: r = null,
    className: i = null,
    value: o = null,
    reducer: a,
    isSortable: l = !0,
    hasSwitch: c = !1,
    switchReducer: u = null,
    switchValue: d = !1,
    ...h
  }) => {
    const { dispatchReducer: f, localValue: p } = ma({ reducer: a, value: o }),
      { dispatchReducer: m, localValue: v } = ma({ reducer: u, value: d }),
      C = () => {
        if (l === !1) return;
        let _ =
          (p == null ? void 0 : p.sortByDirection) === Oi.Asc &&
          p.sortByFieldName === e
            ? Oi.Desc
            : Oi.Asc;
        const F = d9(_, e);
        f(F);
      },
      b = () => {
        u !== null && m(!d);
      };
    i || (i = "");
    let g = r ? { width: r } : void 0;
    const y = k.useMemo(
        () =>
          l === !1
            ? null
            : (o == null ? void 0 : o.sortByFieldName) === e
            ? (p == null ? void 0 : p.sortByDirection) ?? null
            : null,
        [l, o, e, p == null ? void 0 : p.sortByDirection]
      ),
      w = l ? "clickable " : "",
      E = k.useMemo(() => `${c ? "" : w}header-content`, [c, w]),
      S = k.useMemo(() => `${c ? w : ""}ms-1`, [c, w]),
      T = l ? h9(y) : null,
      I = T === null ? {} : { "data-sort": T },
      R = l ? { "data-title": "sortable" } : {},
      A = !c && R,
      O = c && R;
    return s.jsxs("th", {
      style: g,
      className: `align-top ${i}`,
      ...I,
      ...h,
      children: [
        s.jsxs("div", {
          className: E,
          onClick: c ? void 0 : C,
          ...A,
          children: [
            s.jsxs("span", {
              className: S,
              onClick: C,
              ...O,
              children: [t, l && s.jsx(u9, { type: y })],
            }),
            c &&
              s.jsx(f9, {
                "data-title": "starts-with-indicator",
                value: v ?? !1,
                onChange: b,
              }),
          ],
        }),
        n,
      ],
    });
  },
  p9 = ({ licence: t, onDeleteLicence: e }) => {
    const n = Lt(),
      r = Ae(),
      i = (u) => {
        n("/edit-licence", { state: { licenceNumber: u } });
      },
      o = (u) => {
        n("/transfer-licence", { state: { licenceNumber: u } });
      },
      a = (u) => {
        r(MA()),
          n("/select-licence-replacement", {
            state: { licenceNumberFromRoute: u },
          });
      },
      l = (u, d) => {
        n("/change-licence-count", {
          state: { licenceNumber: u, licenceCountDirectionChange: d },
        });
      },
      c = t.licenceNumber;
    return t.isPending
      ? s.jsx("span", {
          className: "text-opacity-50 text-secondary",
          children: "Pending",
        })
      : s.jsxs(s.Fragment, {
          children: [
            s.jsx(Ui, {
              size: "18",
              "data-title": "Edit",
              className: "secondary ms-1",
              title: "Edit",
              onClick: () => i(c),
            }),
            s.jsx(Lb, {
              size: "18",
              "data-title": "Replace",
              className: "primary ms-1",
              title: "Replace",
              onClick: () => a(c),
            }),
            t.series == 1
              ? s.jsx(s.Fragment, {})
              : s.jsxs(s.Fragment, {
                  children: [
                    t.count > 1 &&
                      s.jsx($b, {
                        size: "18",
                        className: "color-brown ms-1",
                        title: "Decrease",
                        "data-licence": c,
                        "data-title": "Decrease",
                        onClick: () => l(c, Co.Decrease),
                      }),
                    s.jsx(Vb, {
                      size: "18",
                      className: "success ms-1",
                      title: "Increase",
                      "data-licence": c,
                      "data-title": "Increase",
                      onClick: () => l(c, Co.Increase),
                    }),
                  ],
                }),
            t.debtor.debtorGroupId &&
              s.jsx(Pb, {
                size: "18",
                "data-title": "Transfer",
                className: "color-prussian-blue ms-1",
                title: "Transfer",
                onClick: () => o(c),
              }),
            s.jsx($c, {
              size: "18",
              "data-title": "Delete",
              className: "danger ms-1",
              title: "Delete",
              onClick: () => e(t),
            }),
          ],
        });
  },
  L = ({
    label: t,
    id: e,
    isRequired: n = !1,
    labelColSize: r = 2,
    className: i = "",
  }) => {
    const o = `xs ${i}`;
    return s.jsx(s.Fragment, {
      children: s.jsxs(rt.Label, {
        id: e,
        column: !0,
        sm: r,
        className: o,
        children: [t, n ? "*" : ""],
      }),
    });
  },
  m9 = ({ licence: t, showModal: e, onModalClose: n, organisationId: r }) => {
    const i = Lt(),
      [o, a] = x.useState(null),
      [l, { isLoading: c, error: u }] = p$();
    x.useEffect(() => {
      e && a(null);
    }, [e]),
      x.useEffect(() => {
        var p;
        if (u) {
          const m =
            ((p = dy(u)) == null ? void 0 : p.message) ||
            "Failed to delete the licence.";
          a(m);
        }
      }, [u]);
    const d = () => {
        c === !1 && n();
      },
      h = () => {
        if (c === !1) {
          let p = {
            DebtNumber: t.debtor.code,
            LicenceNumber: t.licenceNumber,
            TransactionDate: t.transactionDate,
            KillDate: t.killDate,
            OrganisationId: r,
            Count: t.count,
            Name: t.client.name,
            Surname: t.client.surname,
            TelNo: t.client.tel,
          };
          l(p)
            .unwrap()
            .then((m) => {
              n(), i(`${Of}/${m.id}`);
            });
        }
      };
    let f;
    return (
      c
        ? (f = s.jsx(Ve, { animation: "border", variant: "danger" }))
        : o
        ? (f = s.jsx(Qe, { error: o }))
        : (f = s.jsx(Or, {
            children: s.jsxs(M, {
              children: [
                s.jsx(D, {
                  md: 6,
                  children: s.jsxs(G, {
                    className: "mb-3",
                    children: [
                      s.jsx(G.Header, { children: "Licence" }),
                      s.jsxs(G.Body, {
                        children: [
                          s.jsxs(M, {
                            children: [
                              s.jsx(L, {
                                id: "numberLabel",
                                label: "Number:",
                                labelColSize: 5,
                                className: "input-label",
                              }),
                              " ",
                              s.jsx(L, {
                                id: "numberValueLabel",
                                labelColSize: 7,
                                label: t.licenceNumber.toString(),
                              }),
                            ],
                          }),
                          s.jsxs(M, {
                            children: [
                              s.jsx(L, {
                                id: "transactionDateLabel",
                                label: "Transaction Date:",
                                labelColSize: 5,
                                className: "input-label",
                              }),
                              " ",
                              s.jsx(L, {
                                id: "transactionDateValueLabel",
                                labelColSize: 7,
                                label: dr(t.transactionDate),
                              }),
                            ],
                          }),
                          s.jsxs(M, {
                            children: [
                              s.jsx(L, {
                                id: "typeLabel",
                                label: "Type:",
                                labelColSize: 5,
                                className: "input-label",
                              }),
                              " ",
                              s.jsx(L, {
                                id: "typeValueLabel",
                                labelColSize: 7,
                                label: t.type,
                              }),
                            ],
                          }),
                          s.jsxs(M, {
                            children: [
                              s.jsx(L, {
                                id: "debtorNumberLabel",
                                label: "Debtor Number:",
                                labelColSize: 5,
                                className: "input-label",
                              }),
                              " ",
                              s.jsx(L, {
                                id: "debtorNumberValueLabel",
                                labelColSize: 7,
                                label: t.debtor.code,
                              }),
                            ],
                          }),
                          s.jsxs(M, {
                            children: [
                              s.jsx(L, {
                                id: "countLabel",
                                label: "Count:",
                                labelColSize: 5,
                                className: "input-label",
                              }),
                              " ",
                              s.jsx(L, {
                                id: "countValueLabel",
                                labelColSize: 7,
                                label: t.count.toString(),
                              }),
                            ],
                          }),
                          s.jsxs(M, {
                            children: [
                              s.jsx(L, {
                                id: "killDateLabel",
                                label: "Kill Date:",
                                labelColSize: 5,
                                className: "input-label",
                              }),
                              " ",
                              s.jsx(L, {
                                id: "killDateValueLabel",
                                labelColSize: 7,
                                label: dr(t.killDate),
                              }),
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                }),
                s.jsx(D, {
                  md: 6,
                  children: s.jsxs(G, {
                    className: "mb-3",
                    children: [
                      s.jsx(G.Header, { children: "Client" }),
                      s.jsxs(G.Body, {
                        children: [
                          s.jsxs(M, {
                            children: [
                              s.jsx(L, {
                                id: "titleLabel",
                                label: "Title:",
                                labelColSize: 5,
                                className: "input-label",
                              }),
                              " ",
                              s.jsx(L, {
                                id: "titleValueLabel",
                                labelColSize: 7,
                                label: t.client.title,
                              }),
                            ],
                          }),
                          s.jsxs(M, {
                            children: [
                              s.jsx(L, {
                                id: "nameLabel",
                                label: "Name:",
                                labelColSize: 5,
                                className: "input-label",
                              }),
                              " ",
                              s.jsx(L, {
                                id: "nameValueLabel",
                                labelColSize: 7,
                                label: t.client.name,
                              }),
                            ],
                          }),
                          s.jsxs(M, {
                            children: [
                              s.jsx(L, {
                                id: "surnameLabel",
                                label: "Surname:",
                                labelColSize: 5,
                                className: "input-label",
                              }),
                              " ",
                              s.jsx(L, {
                                id: "surnameValueLabel",
                                labelColSize: 7,
                                label: t.client.surname,
                              }),
                            ],
                          }),
                          s.jsxs(M, {
                            children: [
                              s.jsx(L, {
                                id: "telephoneNoLabel",
                                label: "Telephone No:",
                                labelColSize: 5,
                                className: "input-label",
                              }),
                              " ",
                              s.jsx(L, {
                                id: "telephoneNoValueLabel",
                                labelColSize: 7,
                                label: t.client.tel,
                              }),
                            ],
                          }),
                          s.jsxs(M, {
                            children: [
                              s.jsx(L, {
                                id: "mobileNoLabel",
                                label: "Mobile No:",
                                labelColSize: 5,
                                className: "input-label",
                              }),
                              " ",
                              s.jsx(L, {
                                id: "mobileNoValueLabel",
                                labelColSize: 7,
                                label: t.client.mobile,
                              }),
                            ],
                          }),
                          s.jsxs(M, {
                            children: [
                              s.jsx(L, {
                                id: "emailLabel",
                                label: "E-mail:",
                                labelColSize: 5,
                                className: "input-label",
                              }),
                              " ",
                              s.jsx(L, {
                                id: "emailValueLabel",
                                labelColSize: 7,
                                label: t.client.email,
                              }),
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                }),
              ],
            }),
          })),
      s.jsx(s.Fragment, {
        children: s.jsxs(or, {
          size: "xl",
          show: e,
          onHide: d,
          variant: "danger",
          className: "danger-modal",
          children: [
            s.jsx(or.Header, {
              closeButton: !0,
              children: s.jsx(or.Title, { children: "Licence Cancellation" }),
            }),
            s.jsxs(or.Body, {
              children: [
                f,
                s.jsxs("div", {
                  className: "text-center",
                  children: [
                    s.jsx(xe, {
                      size: "sm",
                      className: "ms-1 btn-min-100",
                      variant: "secondary",
                      onClick: d,
                      children: "Close",
                    }),
                    s.jsx(xe, {
                      size: "sm",
                      className: "ms-1 btn-min-100",
                      variant: "danger",
                      onClick: h,
                      children: "Delete",
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
      })
    );
  },
  RC = ({
    reducer: t,
    value: e,
    transformToLocal: n,
    transformToGlobal: r,
  }) => {
    const i = Ae(),
      [o, a] = k.useState(() => n(e));
    k.useEffect(() => {
      a(n(e));
    }, [e, n]);
    function l(c) {
      const u = r(c);
      i(t(u)), a(n(u));
    }
    return { localValue: o, setLocalValue: a, dispatchReducer: l };
  },
  g9 = ({
    value: t,
    reducer: e,
    inputRegex: n,
    transformToLocal: r,
    transformToGlobal: i,
  }) => {
    const {
        dispatchReducer: o,
        localValue: a,
        setLocalValue: l,
      } = RC({
        reducer: e,
        value: t,
        transformToLocal: r,
        transformToGlobal: i,
      }),
      c = () => {
        o(null);
      },
      u = (p) => {
        const m = p.target.value;
        (!n || n.test(m)) && l(m);
      },
      d = (p, m) => {
        p.preventDefault(), o(m);
      },
      h = () => {
        o(a);
      },
      f = a ?? "";
    return s.jsx(rt, {
      className: "m-1",
      onSubmit: (p) => d(p, a),
      children: s.jsxs(si, {
        size: "sm",
        className: "xs",
        children: [
          s.jsx(rt.Control, {
            size: "sm",
            className: "xs",
            onChange: u,
            onBlur: h,
            placeholder: "Search...",
            value: f,
          }),
          s.jsx(si.Text, {
            className: "xs clear-x",
            onMouseDown: c,
            children: s.jsx(Xs, {}),
          }),
        ],
      }),
    });
  },
  yy = ({ title: t, value: e, reducer: n }) => {
    const r = Ae(),
      [i, o] = k.useState(""),
      [a, l] = k.useState(!1),
      [c, u] = k.useState(null),
      d = k.useRef(null),
      h = k.useRef(null);
    function f(C) {
      l(!a), u(C.target);
    }
    function p(C) {
      const b = C.target.value;
      /^[0-9,\s]*$/.test(b) && o(b);
    }
    function m() {
      const C = h.current;
      r(n(ux((C == null ? void 0 : C.value) ?? null))), l(!1), o("");
    }
    function v() {
      l(!1), o("");
    }
    return s.jsxs("div", {
      className: "d-flex justify-content-center",
      children: [
        s.jsx(g9, {
          value: e,
          reducer: n,
          inputRegex: /^[0-9,\s]*$/,
          transformToGlobal: ux,
          transformToLocal: sK,
        }),
        s.jsx(xe, {
          size: "sm",
          variant: "default m-1 xs",
          onClick: f,
          children: s.jsx(gr, {}),
        }),
        s.jsx("div", { ref: d }),
        c &&
          s.jsx(CR, {
            show: a,
            target: c,
            placement: "bottom",
            container: d.current,
            containerPadding: 1,
            children: s.jsxs(od, {
              id: "popover-contained",
              children: [
                s.jsx(od.Header, {
                  as: "h6",
                  className: "text-secondary",
                  children: t,
                }),
                s.jsxs(od.Body, {
                  className: "p-1",
                  children: [
                    s.jsx(rt.Control, {
                      as: "textarea",
                      rows: 4,
                      className: "p-1 xs",
                      ref: h,
                      onChange: p,
                      value: i,
                    }),
                    s.jsxs("div", {
                      className: "d-flex flex-row-reverse mt-1",
                      children: [
                        s.jsx(xe, {
                          size: "sm",
                          onClick: m,
                          className: "btn-success",
                          variant: "success",
                          children: "Search",
                        }),
                        s.jsx(xe, {
                          size: "sm",
                          onClick: v,
                          className: "btn-danger me-1",
                          variant: "danger",
                          children: "Cancel",
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          }),
      ],
    });
  },
  y9 = ({
    initialPageSize: t = Jt,
    pageSize: e,
    items: n,
    lastRowRef: r,
    pageSizeReducer: i = null,
    isFetching: o,
    error: a,
    totalCount: l,
    autoScroll: c = !0,
  }) => {
    const [u, d] = k.useState(!1),
      h = Ae(),
      f = k.useCallback(() => {
        const m = e + Jt;
        i !== null && h(i(m));
      }, [Jt, e, i, h]),
      p = k.useCallback(() => {
        i && h(i(t));
      }, [t, i, h]);
    return (
      k.useEffect(() => {
        c === !0 &&
          r.current &&
          r.current.scrollIntoView({ behavior: "instant" });
        let m = a == null && !o;
        l !== null ? (m = m && n.length < l) : (m = m && n.length >= e), d(m);
      }, [n.length, e, r, a, o]),
      { showLoadMore: u, loadMoreItems: f, resetPagination: p }
    );
  },
  xa = ({
    pageSize: t,
    items: e,
    lastRowRef: n,
    pageSizeReducer: r,
    isFetching: i,
    error: o,
    totalCount: a = null,
    autoScroll: l = !0,
  }) => {
    const { showLoadMore: c, loadMoreItems: u } = y9({
        initialPageSize: Jt,
        pageSize: t,
        items: e,
        lastRowRef: n,
        pageSizeReducer: r,
        isFetching: i,
        error: o,
        totalCount: a,
        autoScroll: l,
      }),
      d = e.length;
    return s.jsxs("div", {
      className:
        "position-relative d-flex justify-content-center align-items-center",
      children: [
        !i &&
          d >= 1 &&
          a &&
          s.jsx("div", {
            className: "position-absolute start-0 pagination",
            children: s.jsxs("span", { children: ["Showing ", d, " of ", a] }),
          }),
        c &&
          s.jsx(xe, {
            variant: "outline-dark",
            size: "sm",
            onClick: u,
            children: "Load More",
          }),
      ],
    });
  },
  v9 = () => {
    const t = Ae(),
      e = Re((T) => T.licenceFilter),
      n = Re((T) => T.debtorFilter),
      [r, i] = x.useState(!1),
      [o, a] = x.useState(null),
      [l] = lA(),
      { data: c } = cA(),
      u = () => {
        i(!1);
      },
      d = (T) => {
        a(T), i(!0);
      },
      h = (T) => ({ ...n, code: T }),
      f = (T) => ({ ...n, name: T, concatenateCodeAndDescription: !1 }),
      p = (T) => {
        t(j6(T.target.checked));
      },
      {
        data: m,
        isFetching: v,
        error: C,
      } = h$(e, { skip: e.organisationId === 0 }),
      b = k.useRef(null),
      g = m ?? [];
    let y =
        m == null
          ? void 0
          : m.map((T, I) => {
              const R = I === m.length - Jt;
              return s.jsxs(
                "tr",
                {
                  ref: R ? b : null,
                  "data-licence": T.licenceNumber,
                  children: [
                    s.jsx("td", {
                      "data-title": "name",
                      children: T.client.name,
                    }),
                    s.jsx("td", {
                      "data-title": "surname",
                      children: T.client.surname,
                    }),
                    s.jsx("td", {
                      "data-title": "tel",
                      className: "tel",
                      children: T.client.tel,
                    }),
                    s.jsx("td", {
                      "data-title": "mobile",
                      className: "tel",
                      children: T.client.mobile,
                    }),
                    s.jsx("td", {
                      "data-title": "email",
                      className: "email-column",
                      children: T.client.email,
                    }),
                    s.jsx("td", {
                      "data-title": "debtor-name",
                      children: T.debtor.name,
                    }),
                    s.jsx("td", {
                      "data-title": "debtor-code",
                      children: T.debtor.code,
                    }),
                    s.jsx("td", {
                      "data-title": "debt-rating",
                      children: T.debtor.debtRatingDisplay,
                    }),
                    s.jsx("td", {
                      "data-title": "licence",
                      className:
                        "letter-space-3 text-end fw-500 pe-2 licence-number",
                      children: T.licenceNumber,
                    }),
                    s.jsx("td", {
                      "data-title": "count",
                      className: "text-end pe-2 number",
                      children: T.count,
                    }),
                    s.jsx("td", {
                      "data-title": "validation",
                      className: "text-center",
                      children: dr(T.validationDate),
                    }),
                    s.jsx("td", {
                      "data-title": "actions",
                      children: s.jsx(p9, { licence: T, onDeleteLicence: d }),
                    }),
                  ],
                },
                T.licenceNumber
              );
            }),
      w;
    v
      ? (w = s.jsx("tbody", {}))
      : C
      ? (w = s.jsx("tbody", {}))
      : (w = s.jsx("tbody", { children: y }));
    let E;
    v
      ? (E = s.jsx(Ve, { animation: "border", variant: "primary" }))
      : C
      ? (E = s.jsx(Qe, { error: "Failed to retrieve Licences." }))
      : (m == null ? void 0 : m.length) === 0
      ? (E = s.jsx("div", { children: "No data found." }))
      : (E = s.jsx(s.Fragment, {}));
    const S = { value: e.sortByParameters, reducer: R6 };
    return s.jsxs("div", {
      style: { height: Sa, overflowY: "auto" },
      children: [
        s.jsxs(Gi, {
          striped: !0,
          bordered: !0,
          hover: !0,
          size: "sm",
          children: [
            s.jsxs("thead", {
              children: [
                s.jsxs("tr", {
                  children: [
                    s.jsx("th", {
                      colSpan: 5,
                      className: "text-center",
                      children: "Client",
                    }),
                    s.jsx("th", {
                      colSpan: 3,
                      className: "text-center alt",
                      children: "Debtor",
                    }),
                    s.jsx("th", {
                      colSpan: 3,
                      className: "text-center",
                      children: "Licence",
                    }),
                    s.jsx("th", {
                      className: "text-center alt",
                      children: "Actions",
                    }),
                  ],
                }),
                s.jsxs("tr", {
                  children: [
                    s.jsx(fe, {
                      headerText: "Name",
                      width: "6%",
                      sortByFieldName: "clientName",
                      "data-title": "name",
                      ...S,
                      children: s.jsx(ze, {
                        id: "clientNameSearch",
                        value: e.clientName,
                        reducer: w6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Surname",
                      width: "6%",
                      sortByFieldName: "clientSurname",
                      "data-title": "surname",
                      ...S,
                      children: s.jsx(ze, {
                        id: "clientSurnameSearch",
                        value: e.clientSurname,
                        reducer: S6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Tel",
                      width: "6%",
                      sortByFieldName: "clientTel",
                      "data-title": "tel",
                      ...S,
                      children: s.jsx(ze, {
                        id: "clientTelSearch",
                        value: e.clientTel,
                        reducer: E6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Mobile",
                      width: "6%",
                      sortByFieldName: "clientMobile",
                      "data-title": "mobile",
                      ...S,
                      children: s.jsx(ze, {
                        id: "clientMobileSearch",
                        value: e.clientMobile,
                        reducer: T6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Email",
                      width: "7%",
                      sortByFieldName: "clientEmail",
                      "data-title": "email",
                      ...S,
                      children: s.jsx(ze, {
                        id: "clientEmailSearch",
                        value: e.clientEmail,
                        reducer: x6,
                      }),
                    }),
                    s.jsx(fe, {
                      className: "alt",
                      headerText: "Name",
                      sortByFieldName: "debtorName",
                      "data-title": "debtor-name",
                      width: "12%",
                      ...S,
                      children: s.jsx(ii, {
                        trigger: (T) => l(T).unwrap(),
                        filterQuery: f,
                        reducer: mC,
                        labelKey: "description",
                        valueKey: "description",
                        minLength: 2,
                        isWildcardSearchAllowed: !0,
                        value: e.debtorName,
                        addClassNames: "xs",
                      }),
                    }),
                    s.jsx(fe, {
                      className: "alt",
                      headerText: "Code",
                      sortByFieldName: "debtorCode",
                      width: "5%",
                      "data-title": "debtor-code",
                      hasSwitch: !0,
                      switchReducer: I6,
                      switchValue: e.debtorCodeStartsWithSwitch,
                      ...S,
                      children: s.jsx(ii, {
                        trigger: (T) => l(T).unwrap(),
                        filterQuery: h,
                        reducer: gC,
                        labelKey: "code",
                        valueKey: "code",
                        minLength: 2,
                        isWildcardSearchAllowed: !0,
                        value: e.debtorCode,
                        addClassNames: "xs",
                      }),
                    }),
                    s.jsx(fe, {
                      className: "alt",
                      headerText: "Rating",
                      sortByFieldName: "debtRating",
                      width: "5%",
                      "data-title": "debt-rating",
                      ...S,
                      children: s.jsx(ii, {
                        items: c,
                        reducer: pA,
                        labelKey: "description",
                        valueKey: "id",
                        minLength: 0,
                        isWildcardSearchAllowed: !1,
                        value: e.debtRating,
                        addClassNames: "xs",
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Number",
                      sortByFieldName: "licenceNumber",
                      width: "6%",
                      "data-title": "licence",
                      ...S,
                      children: s.jsx(yy, {
                        title: "Licence Number Search",
                        value: e.licenceNumber,
                        reducer: N6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Count",
                      sortByFieldName: "licenceCount",
                      width: "4%",
                      "data-title": "count",
                      ...S,
                      children: s.jsx(Qo, {
                        value: e.countComparison,
                        reducer: A6,
                        type: le.Number,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Validation Date",
                      sortByFieldName: "validationDate",
                      width: "4%",
                      "data-title": "validation",
                      ...S,
                      children: s.jsx(s.Fragment, {}),
                    }),
                    s.jsx("th", {
                      className: "text-center alt",
                      style: { width: "7%" },
                      "data-title": "actions",
                      children: s.jsx(rt, {
                        children: s.jsx(rt.Check, {
                          className: "left-check ms-1",
                          type: "switch",
                          id: "custom-switch",
                          label: "Pending",
                          "data-checked": e.showPending,
                          checked: e.showPending,
                          onChange: p,
                        }),
                      }),
                    }),
                  ],
                }),
              ],
            }),
            w,
          ],
        }),
        o
          ? s.jsx(m9, {
              organisationId: e.organisationId,
              licence: o,
              showModal: r,
              onModalClose: u,
            })
          : s.jsx(s.Fragment, {}),
        E,
        s.jsx(xa, {
          items: g,
          isFetching: v,
          error: C,
          lastRowRef: b,
          pageSize: e.pageSize,
          pageSizeReducer: k6,
        }),
      ],
    });
  };
var ar = ((t) => ((t.Get = "GET"), (t.Post = "POST"), t))(ar || {});
async function b9(t, e, n, r = "downloaded_file", i, o) {
  const a = o || ar.Get,
    l = e && a === ar.Get ? hC(e) : "",
    c = `${t}${l ? `?${l}` : ""}`,
    u = new Headers(n);
  a === ar.Post && e && u.set("Content-Type", "application/json");
  const d = {
    method: a,
    headers: u,
    body: a === ar.Post ? JSON.stringify(e) : void 0,
  };
  try {
    const h = await fetch(c, d);
    if (!h.ok)
      return { loading: !1, success: !1, error: (await h.json()).message };
    const f = await h.blob(),
      p = window.URL.createObjectURL(f),
      m = document.createElement("a");
    m.href = p;
    const v = h.headers.get("Content-Disposition"),
      C = v && v.match(/filename[^*]*=['"]?([^;\r\n"']*)['"]?/),
      b = C && C[1];
    return (
      (m.download = b || r),
      document.body.appendChild(m),
      m.click(),
      m.remove(),
      { loading: !1, success: !0 }
    );
  } catch (h) {
    return (
      console.error("Unexpected error fetching file:", h),
      { loading: !1, success: !1, error: h }
    );
  }
}
function Oh() {
  const t = { loading: !1 },
    [e, n] = k.useState(t);
  return {
    initiateDownload: k.useCallback(async (i, o, a = "downloaded_file", l) => {
      l === void 0 && (l = null), n({ loading: !0 });
      const c = new Headers();
      await ZR(c);
      const u = `${tC}${i}`,
        d = await b9(u, o, c, a, null, l);
      n(d);
    }, []),
    status: e,
  };
}
function rE() {
  const { initiateDownload: t, status: e } = Oh(),
    n = Lt(),
    r = Re((d) => d.licenceFilter),
    i = Re((d) => d.organisation),
    o = Ae(),
    a = () => {
      o(D6());
    },
    l = () => {
      o(O6());
    },
    c = () => {
      o(pq(i)), n("/save-pending-licence");
    },
    u = () => {
      t(e$, r, t$);
    };
  return s.jsxs(s.Fragment, {
    children: [
      s.jsxs(G, {
        className: "mb-3",
        children: [
          s.jsx(G.Header, { children: "Organisation" }),
          s.jsx(G.Body, {
            children: s.jsx(M, {
              children: s.jsx(D, { sm: 9, children: s.jsx(Xc, {}) }),
            }),
          }),
        ],
      }),
      s.jsxs(G, {
        children: [
          s.jsx(G.Header, { children: "Live Licences" }),
          s.jsxs(G.Body, {
            children: [
              s.jsx(M, {
                className: "mb-3",
                children: s.jsx(D, {
                  children: s.jsxs("div", {
                    className: "d-flex justify-content-between",
                    children: [
                      s.jsxs(xe, {
                        size: "sm",
                        variant: "success",
                        onClick: c,
                        children: [
                          s.jsx(Ys, { className: "me-1 mb-1" }),
                          s.jsx("span", { children: " New Licence" }),
                        ],
                      }),
                      s.jsxs("div", {
                        children: [
                          s.jsxs(xe, {
                            size: "sm",
                            variant: "outline-warning btn-min-100 ms-1",
                            onClick: a,
                            children: [
                              s.jsx(gr, { className: "me-1 mb-1" }),
                              s.jsx("span", { children: " Clear Filter" }),
                            ],
                          }),
                          s.jsxs(xe, {
                            size: "sm",
                            variant: "outline-secondary",
                            className: "ms-1 btn-min-100",
                            onClick: l,
                            children: [
                              s.jsx(fi, { className: "me-1 mb-1" }),
                              s.jsx("span", { children: " Clear Sort" }),
                            ],
                          }),
                          s.jsxs(xe, {
                            size: "sm",
                            className: "ms-1 btn-excel btn-min-100",
                            onClick: u,
                            children: [
                              s.jsx(Ps, { className: "me-1 mb-1" }),
                              s.jsx("span", { children: " Excel" }),
                              e.loading
                                ? s.jsx(Ve, {
                                    animation: "border",
                                    size: "sm",
                                    className: "ms-1",
                                  })
                                : s.jsx(s.Fragment, {}),
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                }),
              }),
              s.jsx(v9, {}),
            ],
          }),
        ],
      }),
    ],
  });
}
const C9 = ({ selectedBool: t, updateExternalState: e }) => {
    const n = [
        { label: "All", value: null },
        { label: "Yes", value: !0 },
        { label: "No", value: !1 },
      ],
      r = t === null ? n[0] : t ? n[1] : n[2],
      [i, o] = k.useState(r);
    k.useEffect(() => {
      i.value !== t && o(r);
    }, [r, i.value, t]);
    function a(l) {
      o(l), e(l);
    }
    return {
      selectedOption: i,
      handleOptionChange: a,
      nullableBoolSelection: n,
    };
  },
  Rj = ({ selectedBool: t, updateExternalState: e }) => {
    const {
      selectedOption: n,
      handleOptionChange: r,
      nullableBoolSelection: i,
    } = C9({ selectedBool: t, updateExternalState: e });
    return s.jsx(s.Fragment, {
      children: s.jsxs(Ge, {
        className: "m-1",
        children: [
          s.jsx(Ge.Toggle, {
            size: "sm",
            variant: "default",
            className: "xs",
            style: { minWidth: "40px" },
            children: n.label,
          }),
          s.jsx(Ge.Menu, {
            children: i.map((a) =>
              s.jsx(
                Ge.Item,
                { onClick: () => r(a), active: n === a, children: a.label },
                a.label
              )
            ),
          }),
        ],
      }),
    });
  },
  w9 = () => {
    const t = Ae(),
      e = Lt(),
      n = Re((C) => C.debtorFilter),
      {
        data: r,
        isFetching: i,
        error: o,
      } = E$(n, { skip: n.organisationId === 0 }),
      { data: a } = dA(),
      { data: l } = cA(),
      { data: c } = pC(),
      u = k.useRef(null),
      d = r ?? [];
    function h(C) {
      t(dK(C));
      const b = C.code;
      e("/save-debtor", { state: { debtorCode: b } });
    }
    let f =
        r == null
          ? void 0
          : r.map((C, b) => {
              var w, E, S;
              const g = b === r.length - Jt,
                y = C.code.trim();
              return s.jsxs(
                "tr",
                {
                  ref: g ? u : null,
                  "data-debtor": y,
                  children: [
                    s.jsx("td", { "data-title": "code", children: y }),
                    s.jsx("td", { "data-title": "name", children: C.name }),
                    s.jsx("td", {
                      "data-title": "tel",
                      className: "tel",
                      children: C.tel,
                    }),
                    s.jsx("td", { "data-title": "email", children: C.email }),
                    s.jsx("td", {
                      "data-title": "contact",
                      children: C.contact,
                    }),
                    s.jsx("td", {
                      "data-title": "currency-code",
                      className: "money",
                      children: C.currencyCode,
                    }),
                    s.jsx("td", {
                      "data-title": "licence-fee",
                      className: "money",
                      children:
                        (w = C.licenceFee) == null
                          ? void 0
                          : w.toLocaleString(),
                    }),
                    s.jsx("td", {
                      "data-title": "monthly-rental",
                      className: "money",
                      children:
                        (E = C.monthlyRental) == null
                          ? void 0
                          : E.toLocaleString(),
                    }),
                    s.jsx("td", {
                      "data-title": "billed-by",
                      children: C.billedBy,
                    }),
                    s.jsx("td", {
                      "data-title": "date",
                      className: "date",
                      children: dr(C.lastInvoice),
                    }),
                    s.jsx("td", {
                      "data-title": "is-invoiced",
                      className: "text-center",
                      children: s.jsx(rt.Check, {
                        disabled: !0,
                        checked: C.isInvoiced,
                      }),
                    }),
                    s.jsx("td", {
                      "data-title": "billing-type",
                      children:
                        (S = C.billingType) == null ? void 0 : S.description,
                    }),
                    s.jsx("td", {
                      "data-title": "licence-count",
                      className: "number",
                      children: C.licenceCount,
                    }),
                    s.jsx("td", {
                      "data-title": "new-sales",
                      className: "number",
                      children: C.newSales,
                    }),
                    s.jsx("td", {
                      "data-title": "debt-Rating",
                      children: C.debtRatingDisplay,
                    }),
                    s.jsx("td", {
                      "data-title": "actions",
                      children: s.jsx(Ui, {
                        size: "18",
                        "data-debtor-code": y,
                        "data-title": "Edit",
                        className: "secondary ms-1",
                        title: "Edit",
                        onClick: () => h(C),
                      }),
                    }),
                  ],
                },
                C.code
              );
            }),
      p;
    i
      ? (p = s.jsx("tbody", {}))
      : o
      ? (p = s.jsx("tbody", {}))
      : (p = s.jsx("tbody", { children: f }));
    let m;
    i
      ? (m = s.jsx(Ve, { animation: "border", variant: "primary" }))
      : o
      ? (m = s.jsx(Qe, { error: "Failed to retrieve Debtors." }))
      : (r == null ? void 0 : r.length) === 0
      ? (m = s.jsx("div", { children: "No data found." }))
      : (m = s.jsx(s.Fragment, {}));
    const v = { value: n.sortByParameters, reducer: o6 };
    return s.jsxs("div", {
      style: { height: Sa, overflowY: "auto" },
      children: [
        s.jsxs(Gi, {
          striped: !0,
          bordered: !0,
          hover: !0,
          size: "sm",
          children: [
            s.jsx("thead", {
              children: s.jsxs("tr", {
                children: [
                  s.jsx(fe, {
                    headerText: "Code",
                    width: "6%",
                    sortByFieldName: "number",
                    hasSwitch: !0,
                    switchReducer: r6,
                    switchValue: n.debtorCodeStartsWithSwitch,
                    ...v,
                    children: s.jsx(ze, {
                      id: "debtorCodeSearch",
                      value: n.code,
                      reducer: gC,
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "Name",
                    width: "7%",
                    sortByFieldName: "name",
                    ...v,
                    children: s.jsx(ze, {
                      id: "debtorNameSearch",
                      value: n.name,
                      reducer: mC,
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "Tel",
                    width: "5%",
                    sortByFieldName: "tel",
                    ...v,
                    children: s.jsx(ze, {
                      id: "debtorTelSearch",
                      value: n.tel,
                      reducer: l6,
                    }),
                  }),
                  s.jsx(fe, {
                    className: "email-column",
                    headerText: "Email",
                    width: "7%",
                    sortByFieldName: "email",
                    ...v,
                    children: s.jsx(ze, {
                      id: "debtorEmailSearch",
                      value: n.email,
                      reducer: s6,
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "Contact",
                    width: "7%",
                    sortByFieldName: "contact",
                    ...v,
                    children: s.jsx(ze, {
                      id: "debtorContactSearch",
                      value: n.contact,
                      reducer: a6,
                    }),
                  }),
                  s.jsx(fe, {
                    className: "alt",
                    headerText: "Currency",
                    width: "4.5%",
                    sortByFieldName: "currencyCode",
                    ...v,
                    children: s.jsx(ii, {
                      reducer: c6,
                      items: a,
                      labelKey: "description",
                      valueKey: "code",
                      minLength: 1,
                      isWildcardSearchAllowed: !1,
                      value: n.currencyCode,
                      addClassNames: "xs",
                    }),
                  }),
                  s.jsx(fe, {
                    className: "alt",
                    headerText: "Fee",
                    width: "4.5%",
                    sortByFieldName: "fee",
                    ...v,
                    children: s.jsx(Qo, {
                      value: n.feeComparison,
                      reducer: b6,
                      type: le.Currency,
                      step: 0.01,
                      maxLength: 10,
                    }),
                  }),
                  s.jsx(fe, {
                    className: "alt",
                    headerText: "Rate",
                    width: "4.5%",
                    sortByFieldName: "rate",
                    ...v,
                    children: s.jsx(Qo, {
                      value: n.rateComparison,
                      reducer: v6,
                      type: le.Currency,
                      step: 0.01,
                      maxLength: 10,
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "User",
                    sortByFieldName: "userName",
                    width: "6%",
                    ...v,
                    children: s.jsx(ze, {
                      id: "debtorUserSearch",
                      value: n.user,
                      reducer: m6,
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "Last Invoice",
                    sortByFieldName: "lastInvoice",
                    width: "6%",
                    ...v,
                    children: s.jsx(s.Fragment, {}),
                  }),
                  s.jsx(fe, {
                    headerText: "Invoice",
                    width: "3.5%",
                    sortByFieldName: "isInvoiced",
                    ...v,
                    children: s.jsx(Rj, {
                      selectedBool: n.isInvoiced,
                      updateExternalState: (C) => t(g6(C)),
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "Type",
                    width: "6%",
                    sortByFieldName: "billingType",
                    ...v,
                    children: s.jsx(ii, {
                      items: c,
                      reducer: u6,
                      labelKey: "description",
                      valueKey: "id",
                      minLength: 1,
                      isWildcardSearchAllowed: !1,
                      value: n.billingTypeId,
                      addClassNames: "xs",
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "Systems",
                    width: "4%",
                    sortByFieldName: "licenceCount",
                    ...v,
                    children: s.jsx(Qo, {
                      value: n.licenceCountComparison,
                      reducer: f6,
                      type: le.Number,
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "New Sales",
                    width: "4%",
                    sortByFieldName: "newSales",
                    ...v,
                    children: s.jsx(Qo, {
                      value: n.totalSystemsComparison,
                      reducer: p6,
                      type: le.Number,
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "Rating",
                    width: "6%",
                    sortByFieldName: "debtRating",
                    ...v,
                    children: s.jsx(ii, {
                      items: l,
                      reducer: pA,
                      labelKey: "description",
                      valueKey: "id",
                      minLength: 1,
                      isWildcardSearchAllowed: !1,
                      value: n.debtRatingId,
                      addClassNames: "xs",
                    }),
                  }),
                  s.jsx("th", {
                    className: "text-center alt align-top",
                    style: { width: "2%" },
                    children: "Actions",
                  }),
                ],
              }),
            }),
            p,
          ],
        }),
        m,
        s.jsx(xa, {
          items: d,
          isFetching: i,
          error: o,
          lastRowRef: u,
          pageSize: n.pageSize,
          pageSizeReducer: i6,
        }),
      ],
    });
  },
  sr = ({
    id: t,
    items: e,
    reducer: n,
    idKey: r,
    displayValue: i,
    value: o,
    isRequired: a = !1,
    error: l = void 0,
    isFetching: c,
    wasSubmitted: u = !1,
    onSelectedObjectChange: d,
  }) => {
    const { isPristine: h, setDirty: f } = Mf({ wasSubmitted: u }),
      { dispatchReducer: p } = Fs({ reducer: n });
    SC({ items: e, dispatchReducer: p, selectItem: (T) => T[0][r] });
    const m = x.useRef(null),
      v = (T) => {
        f();
        const I = T[0];
        if (typeof I != "string" && I && typeof I == "object" && r in I) {
          const R = I[r];
          if (R != null && e !== null && e !== void 0) {
            p(R);
            const A = e.find((O) => O[r] === R) ?? null;
            d == null || d(A);
          }
        } else p(null);
      },
      C = () => {
        var T;
        (o === null || o === "") && ((T = m.current) == null || T.clear()), f();
      },
      b = () => {
        var T;
        f(), (T = m.current) == null || T.clear(), p(null);
      },
      g = k.useMemo(() => (e ? e.find((T) => T[r] === o) : null), [e, r, o]),
      y = a && !h && g == null;
    let w,
      E = "form-control form-control-sm secondary";
    a && (E = `${E} input-secondary`);
    let S = "";
    return (
      a && (S = `${S} input-secondary`),
      l
        ? (w = s.jsx(Qe, { error: l, size: "sm" }))
        : (w = s.jsxs(si, {
            size: "sm",
            className: "",
            children: [
              s.jsx(kj, {
                ref: m,
                id: t,
                labelKey: i,
                isLoading: c,
                placeholder: "Search...",
                options: e || [],
                onBlur: C,
                onChange: v,
                selected: g ? [g] : [],
                isInvalid: y,
                inputProps: { className: E, autoComplete: "off" },
              }),
              s.jsx(si.Text, {
                className: `${S} clear-x`,
                onClick: b,
                children: s.jsx(Xs, {}),
              }),
            ],
          })),
      s.jsx(s.Fragment, { children: w })
    );
  };
function S9() {
  const t = Lt(),
    e = Re((d) => d.organisation),
    n = Re((d) => d.debtorFilter),
    { data: r, isFetching: i, error: o } = fA(),
    a = Ae(),
    l = () => {
      a(d6());
    },
    c = () => {
      a(h6());
    },
    u = () => {
      a(DA(e)), t("/save-debtor");
    };
  return s.jsxs(s.Fragment, {
    children: [
      s.jsxs(G, {
        className: "mb-3",
        children: [
          s.jsx(G.Header, { children: "Organisation" }),
          s.jsx(G.Body, {
            children: s.jsxs(M, {
              children: [
                s.jsx(D, { sm: 9, children: s.jsx(Xc, {}) }),
                s.jsx(L, {
                  id: "groupNameLabel",
                  labelColSize: 1,
                  label: "Group Name",
                  className: "input-label",
                }),
                s.jsx(D, {
                  sm: 2,
                  children: s.jsx(sr, {
                    id: "debtorGroupFilter",
                    value: n.debtorGroupId,
                    reducer: y6,
                    items: r ?? null,
                    displayValue: "description",
                    idKey: "id",
                    isFetching: i,
                    error: o,
                  }),
                }),
              ],
            }),
          }),
        ],
      }),
      s.jsxs(G, {
        children: [
          s.jsx(G.Header, { children: "Debtors" }),
          s.jsxs(G.Body, {
            children: [
              s.jsx(M, {
                className: "mb-3",
                children: s.jsx(D, {
                  children: s.jsxs("div", {
                    className: "d-flex justify-content-between",
                    children: [
                      s.jsxs(xe, {
                        size: "sm",
                        variant: "success",
                        onClick: u,
                        children: [
                          s.jsx(Ys, { className: "me-1 mb-1" }),
                          s.jsx("span", { children: " New Debtor" }),
                        ],
                      }),
                      s.jsxs("div", {
                        children: [
                          s.jsxs(xe, {
                            size: "sm",
                            variant: "outline-warning btn-min-100 ms-1 ",
                            onClick: l,
                            children: [
                              s.jsx(gr, { className: "me-1 mb-1" }),
                              s.jsx("span", { children: " Clear Filter" }),
                            ],
                          }),
                          s.jsxs(xe, {
                            size: "sm",
                            variant: "outline-secondary",
                            className: "ms-1 btn-min-100",
                            onClick: c,
                            children: [
                              s.jsx(fi, { className: "me-1 mb-1" }),
                              s.jsx("span", { children: " Clear Sort" }),
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                }),
              }),
              s.jsx(w9, {}),
            ],
          }),
        ],
      }),
    ],
  });
}
const x9 = () => {
    const t = Ae();
    return {
      invalidateDebtors: () => {
        t(Wl.util.invalidateTags(["Debtor"]));
      },
    };
  },
  E9 = ({ debtorGroup: t, showModal: e, onModalClose: n }) => {
    const [r, i] = x.useState(null),
      { invalidateDebtors: o } = x9(),
      [a, { isLoading: l, error: c }] = F$();
    x.useEffect(() => {
      e && i(null);
    }, [e]),
      x.useEffect(() => {
        c && i("Failed to delete the Debtor Group.");
      }, [c]);
    const u = () => {
        l === !1 && n();
      },
      d = () => {
        l === !1 &&
          a(t)
            .unwrap()
            .then(() => {
              o(), n();
            })
            .catch((f) => console.error(f));
      };
    let h;
    return (
      l
        ? (h = s.jsx(Ve, { animation: "border", variant: "danger" }))
        : r
        ? (h = s.jsx("p", { children: r }))
        : (h = s.jsxs(s.Fragment, {
            children: [
              s.jsxs(G, {
                className: "mb-3",
                children: [
                  s.jsx(G.Header, { children: "Debtor Group Name" }),
                  s.jsx(G.Body, {
                    children: s.jsx(L, {
                      id: "debtorGroupNameValueLabel",
                      labelColSize: 7,
                      label: t.name.toString(),
                    }),
                  }),
                ],
              }),
              s.jsxs(Cb, {
                variant: "warning",
                children: [
                  s.jsx(Gb, {}),
                  " ",
                  'Deleting this debtor group will automatically reassign all associated debtors to "No Group Name".',
                ],
              }),
            ],
          })),
      s.jsx(s.Fragment, {
        children: s.jsxs(or, {
          size: "lg",
          show: e,
          onHide: u,
          variant: "danger",
          className: "danger-modal",
          children: [
            s.jsx(or.Header, {
              closeButton: !0,
              children: s.jsx(or.Title, { children: "Delete Debtor Group" }),
            }),
            s.jsxs(or.Body, {
              children: [
                h,
                s.jsxs("div", {
                  className: "text-center",
                  children: [
                    s.jsx(xe, {
                      size: "sm",
                      className: "ms-1 btn-min-100",
                      variant: "secondary",
                      onClick: u,
                      children: "Close",
                    }),
                    s.jsx(xe, {
                      size: "sm",
                      className: "ms-1 btn-min-100",
                      variant: "danger",
                      onClick: d,
                      children: "Delete",
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
      })
    );
  },
  T9 = () => {
    const t = Ae(),
      e = Lt(),
      [n, r] = k.useState(!1),
      [i, o] = k.useState(null),
      a = Re((w) => w.debtorGroupFilter),
      l = a.filter,
      {
        data: c,
        isFetching: u,
        error: d,
      } = P$(l, { skip: l.organisationId === 0 || l.organisationId === null }),
      h = k.useRef(null),
      f = c ?? [];
    function p(w) {
      t(QK(w));
      const E = w.id;
      e("/save-debtor-group", { state: { debtorGroupId: E } });
    }
    function m(w) {
      o(w), r(!0);
    }
    const v = () => {
      r(!1);
    };
    let C =
        c == null
          ? void 0
          : c.map((w, E) => {
              const S = E === c.length - Jt;
              return s.jsxs(
                "tr",
                {
                  ref: S ? h : null,
                  children: [
                    s.jsx("td", { children: w.name }),
                    s.jsx("td", {
                      "data-title": "is-invoiced",
                      className: "text-center",
                      title: w.isInvoiceGroup ? l$ : "",
                      children: s.jsx(rt.Check, {
                        disabled: !0,
                        checked: w.isInvoiceGroup,
                      }),
                    }),
                    s.jsx("td", { children: w.invoiceDebtorCode }),
                    s.jsxs("td", {
                      children: [
                        s.jsx(Ui, {
                          size: "18",
                          className: "secondary ms-1",
                          title: "Edit",
                          onClick: () => p(w),
                        }),
                        s.jsx($c, {
                          size: "18",
                          className: "danger ms-1",
                          title: "Delete",
                          onClick: () => m(w),
                        }),
                      ],
                    }),
                  ],
                },
                w.id
              );
            }),
      b;
    u
      ? (b = s.jsx("tbody", {}))
      : d
      ? (b = s.jsx("tbody", {}))
      : (b = s.jsx("tbody", { children: C }));
    let g;
    u
      ? (g = s.jsx(Ve, { animation: "border", variant: "primary" }))
      : d
      ? (g = s.jsx(Qe, { error: "Failed to retrieve Debtor Groups." }))
      : (c == null ? void 0 : c.length) === 0
      ? (g = s.jsx("div", { children: "No data found." }))
      : (g = s.jsx(s.Fragment, {}));
    const y = { value: a.sortByParameters, reducer: i7 };
    return s.jsxs("div", {
      style: { height: Sa, overflowY: "auto" },
      children: [
        s.jsxs(Gi, {
          striped: !0,
          bordered: !0,
          hover: !0,
          size: "sm",
          children: [
            s.jsx("thead", {
              children: s.jsxs("tr", {
                children: [
                  s.jsx(fe, {
                    headerText: "Debtor Group Name",
                    sortByFieldName: "name",
                    ...y,
                    children: s.jsx(ze, {
                      id: "debtorGroupNameSearch",
                      value: l.name,
                      reducer: ix,
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "Invoices",
                    width: "4%",
                    sortByFieldName: "isInvoiceGroup",
                    ...y,
                    children: s.jsx(Rj, {
                      selectedBool: l.isInvoiceGroup,
                      updateExternalState: (w) => t(r7(w)),
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "Invoice Code",
                    width: "10%",
                    sortByFieldName: "invoiceDebtorCode",
                    ...y,
                    children: s.jsx(ze, {
                      id: "debtorInvoiceDebtNumberSearch",
                      value: l.invoiceDebtorCode,
                      reducer: ix,
                    }),
                  }),
                  s.jsx("th", {
                    className: "text-center alt align-top",
                    style: { width: "4%" },
                    children: "Actions",
                  }),
                ],
              }),
            }),
            b,
          ],
        }),
        i
          ? s.jsx(E9, { debtorGroup: i, showModal: n, onModalClose: v })
          : s.jsx(s.Fragment, {}),
        g,
        s.jsx(xa, {
          items: f,
          isFetching: u,
          error: d,
          lastRowRef: h,
          pageSize: l.pageSize,
          pageSizeReducer: o7,
        }),
      ],
    });
  };
function I9() {
  const t = Lt(),
    e = Ae(),
    n = Re((a) => a.organisation),
    r = () => {
      e(s7());
    },
    i = () => {
      e(a7());
    },
    o = () => {
      e(tq(n)), t("/save-debtor-group");
    };
  return s.jsxs(s.Fragment, {
    children: [
      s.jsxs(G, {
        className: "mb-3",
        children: [
          s.jsx(G.Header, { children: "Organisation" }),
          s.jsx(G.Body, { children: s.jsx(Xc, {}) }),
        ],
      }),
      s.jsxs(G, {
        children: [
          s.jsx(G.Header, { children: "Debtor Groups" }),
          s.jsxs(G.Body, {
            children: [
              s.jsx(M, {
                className: "mb-3",
                children: s.jsx(D, {
                  children: s.jsxs("div", {
                    className: "d-flex justify-content-between",
                    children: [
                      s.jsxs(xe, {
                        id: "addDebtorGroupButton",
                        size: "sm",
                        variant: "success",
                        onClick: o,
                        children: [
                          s.jsx(Ys, { className: "me-1 mb-1" }),
                          s.jsx("span", { children: " New Debtor Group" }),
                        ],
                      }),
                      s.jsxs("div", {
                        children: [
                          s.jsxs(xe, {
                            id: "clearDebtorGroupFiltersButton",
                            size: "sm",
                            variant: "outline-warning btn-min-100 ms-1 ",
                            onClick: r,
                            children: [
                              s.jsx(gr, { className: "me-1 mb-1" }),
                              s.jsx("span", { children: " Clear Filter" }),
                            ],
                          }),
                          s.jsxs(xe, {
                            id: "clearDebtorGroupSortButton",
                            size: "sm",
                            variant: "outline-secondary",
                            className: "ms-1 btn-min-100",
                            onClick: i,
                            children: [
                              s.jsx(fi, { className: "me-1 mb-1" }),
                              s.jsx("span", { children: " Clear Sort" }),
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                }),
              }),
              s.jsx(T9, {}),
            ],
          }),
        ],
      }),
    ],
  });
}
const AC = ({
    id: t,
    value: e,
    isRequired: n = !1,
    hasValidation: r = !1,
    isInvalid: i = !1,
    placeholder: o = "",
    type: a,
    maxLength: l,
    isReadonly: c = !1,
    wasSubmitted: u = !1,
    textAreaRows: d = 3,
    onBlur: h,
    onChange: f,
    onKeyDown: p,
    isFutureDateSelectable: m = !0,
    isPastDateSelectable: v = !0,
  }) => {
    const { isPristine: C, setDirty: b } = Mf({ wasSubmitted: u }),
      g = k.useRef(null);
    k.useEffect(() => {
      if (a === le.Date && g.current) {
        const A = new Date().toISOString().split("T")[0];
        m === !1 && g.current.setAttribute("max", A),
          v === !1 && g.current.setAttribute("min", A);
      }
    }, [a, m, v]);
    const y = (A) => {
        b(), h(A);
      },
      w = (r && i) || (n && !C && aK(e));
    let E = "sm";
    n && (E = `${E} input-secondary`);
    const S = oj(a),
      T = a === le.TextArea ? { rows: d } : {},
      I = (A) => {
        const O = g.current,
          _ = (O == null ? void 0 : O.value) ?? "";
        if (!(Df.includes(A.key) || !l)) {
          if (a === le.Percentage && O && A.key.length === 1) {
            if (!/[0-9.,]/.test(A.key)) {
              A.preventDefault();
              return;
            }
            const $ = O.selectionStart ?? _.length,
              Z = O.selectionEnd ?? _.length,
              X = _.substring(0, $) + A.key + _.substring(Z);
            if (jA(X) === null) {
              A.preventDefault();
              return;
            }
          } else if (a === le.Number && (A.key === "e" || _.length >= l)) {
            A.preventDefault();
            return;
          }
          p(A);
        }
      };
    return s.jsx(rt.Control, {
      ref: g,
      size: "sm",
      type: S,
      isInvalid: w,
      placeholder: o || "",
      onBlur: y,
      onKeyDown: I,
      value: e,
      onChange: f,
      className: E,
      id: t,
      maxLength: l,
      autoComplete: "off",
      as: a === le.TextArea ? "textarea" : "input",
      readOnly: c,
      ...T,
    });
  },
  re = ({
    id: t,
    value: e,
    reducer: n = null,
    isRequired: r = !1,
    hasValidation: i = !1,
    isInvalid: o = !1,
    placeholder: a = "",
    type: l = le.Text,
    maxLength: c,
    isReadonly: u = !1,
    wasSubmitted: d = !1,
    textAreaRows: h = 3,
    isFutureDateSelectable: f = !0,
    isPastDateSelectable: p = !0,
  }) => {
    const {
        dispatchReducer: m,
        localValue: v,
        setLocalValue: C,
      } = ma({ reducer: n, value: e }),
      [b, g] = k.useState(!1),
      y = async () => {
        navigator.clipboard &&
          v &&
          (await navigator.clipboard.writeText(dr(v)));
      },
      w = async () => {
        if (
          navigator.clipboard &&
          typeof navigator.clipboard.readText == "function"
        ) {
          const _ = await navigator.clipboard.readText();
          E(_);
        } else g(!0);
      },
      E = (_) => {
        const F = (X, W) => {
            const z = iK(X, W, new Date());
            return CA(z) ? z : null;
          },
          Z = ["yyyy-MM-dd", "dd/MM/yyyy", "yyyy/MM/dd"].reduce(
            (X, W) => (X !== null ? X : F(_, W)),
            null
          );
        if (Z !== null) {
          const X = pa(Z, Kc);
          C(X), m(X);
        } else console.log("No valid date found in clipboard content.");
      },
      S = (_) => {
        const F = _.target.value;
        l === le.Date && g(!1), C(F), m(F);
      },
      T = (v == null ? void 0 : v.toString()) ?? "",
      I = () => {
        m(T);
      },
      R = (_) => {
        _.key === fC && m(T);
      },
      A = l === le.TextArea ? { rows: h } : {},
      O = s.jsx(AC, {
        type: l,
        isInvalid: o,
        placeholder: a,
        onBlur: I,
        onKeyDown: R,
        value: T,
        onChange: S,
        id: t,
        maxLength: c,
        isReadonly: u,
        hasValidation: i,
        isRequired: r,
        wasSubmitted: d,
        isFutureDateSelectable: f,
        isPastDateSelectable: p,
        textAreaRows: h,
        ...A,
      });
    return s.jsxs(s.Fragment, {
      children: [
        s.jsxs("div", {
          style: { display: "flex", alignItems: "center", gap: "10px" },
          children: [
            O,
            l === le.Date &&
              u === !1 &&
              s.jsxs(s.Fragment, {
                children: [
                  s.jsx(Xb, {
                    size: "18",
                    title: "Copy",
                    onClick: y,
                    className: "primary",
                  }),
                  s.jsx(Hb, { size: "18", title: "Paste", onClick: w }),
                ],
              }),
          ],
        }),
        s.jsx("div", {
          children:
            b &&
            s.jsx(
              G,
              {
                bg: "warning",
                style: { fontSize: "0.82rem" },
                children: s.jsx(G.Body, {
                  children: s.jsx(G.Text, {
                    children:
                      "Paste functionality is unsupported in Firefox. Use Chrome to paste dates or manually select them in Firefox.",
                  }),
                }),
              },
              "warning"
            ),
        }),
      ],
    });
  },
  N9 = (t, e) => ({ value: t, checked: e }),
  di = ({
    id: t,
    label: e,
    checked: n,
    reducer: r,
    className: i,
    value: o = null,
  }) => {
    const { dispatchReducer: a } = Fs({ reducer: r });
    return s.jsx(rt.Check, {
      id: t,
      inline: !0,
      value: o ?? "",
      label: e,
      type: "checkbox",
      checked: n,
      onChange: (l) => a(N9(o, l.target.checked)),
      className: i,
    });
  },
  ot = ({
    id: t,
    value: e,
    items: n = null,
    reducer: r,
    isFetching: i,
    error: o,
    idKey: a,
    displayValue: l,
    isRequired: c = !1,
    showDefaultText: u = !0,
    isReadonly: d = !1,
    wasSubmitted: h = !1,
    alwaysSelectFirstCondition: f = null,
  }) => {
    const { isPristine: p, setDirty: m } = Mf({ wasSubmitted: h }),
      { dispatchReducer: v } = Fs({ reducer: r });
    SC({
      items: n,
      dispatchReducer: v,
      selectItem: (T) => T[0][a],
      alwaysSelectFirstCondition: f,
    });
    const C = (T) => {
      m(), v(T);
    };
    let b;
    const g = n ? n.find((T) => T[a] === e) ?? null : null,
      y = c && !p && (e === null || g === null),
      w = y ? "outline-danger" : g !== null ? "primary" : "outline-primary",
      E = typeof l == "string" ? (T) => String(T[l]) : l,
      S = g ? E(g) : null;
    return (
      i
        ? (b = s.jsx(Ve, {
            animation: "border",
            variant: "secondary",
            size: "sm",
          }))
        : o
        ? (b = s.jsx(Qe, { error: o, size: "sm" }))
        : (b = s.jsx(s.Fragment, {
            children: s.jsxs(Ge, {
              id: t,
              className: y ? "is-invalid" : "",
              children: [
                s.jsx(Ge.Toggle, {
                  size: "sm",
                  variant: w,
                  disabled: d,
                  children: S || (u ? "Please select" : ""),
                }),
                s.jsxs(Ge.Menu, {
                  className: "dropdown-menu",
                  children: [
                    u &&
                      s.jsx(Ge.Item, {
                        onClick: () => C(null),
                        children: "Please select",
                      }),
                    n &&
                      n.map((T) =>
                        s.jsx(
                          Ge.Item,
                          { onClick: () => C(T[a]), children: E(T) },
                          String(T[a])
                        )
                      ),
                  ],
                }),
              ],
            }),
          })),
      s.jsx(s.Fragment, { children: b })
    );
  },
  Aj = ({
    performMutation: t,
    clearEntityReducer: e = null,
    navigateTo: n = null,
    navigateWithIdParam: r = !1,
  }) => {
    const i = Lt(),
      o = Ae();
    return {
      handleSubmit: async (l) => {
        try {
          const c = await t(l);
          e !== null && o(e());
          let u = !0;
          if (n !== null) {
            let d = n;
            r &&
              typeof c == "object" &&
              c !== null &&
              "id" in c &&
              ((d = `${n}/${c.id}`), (u = !1)),
              i(d, { replace: u });
          }
        } catch (c) {
          console.error("An error occurred:", c);
        }
      },
    };
  },
  Pr = ({
    isSubmitting: t,
    submitError: e,
    entity: n,
    backRoute: r,
    children: i,
    isLoadingForm: o = !1,
    formLoadError: a = null,
    performMutation: l,
    clearEntityReducer: c = null,
    navigateTo: u = null,
    navigateWithIdParam: d = !1,
    setEntityAsSubmittedReducer: h = null,
    submitButtonContent: f = null,
  }) => {
    const { handleSubmit: p } = Aj({
        performMutation: l,
        clearEntityReducer: c,
        navigateTo: u,
        navigateWithIdParam: d,
      }),
      { dispatchReducer: m } = Fs({ reducer: c }),
      { dispatchReducer: v } = Fs({ reducer: h }),
      C = Lt(),
      b = () => {
        m(), C(r);
      },
      g = async () => {
        t || (v(), p(n));
      },
      y = t
        ? s.jsx(Ve, {
            as: "span",
            animation: "border",
            size: "sm",
            role: "status",
            "aria-hidden": "true",
          })
        : f !== null
        ? f
        : s.jsxs(s.Fragment, {
            children: [" ", s.jsx(If, { className: "me-1 mb-1" }), " Submit "],
          }),
      w = "ms-1 btn-min-100";
    return s.jsxs(rt, {
      onSubmit: (E) => {
        E.preventDefault(), g();
      },
      children: [
        e ? s.jsx(Qe, { error: e }) : s.jsx(s.Fragment, {}),
        a != null ? s.jsx(Qe, { error: a }) : i,
        s.jsx("br", {}),
        s.jsx("div", {
          className: "text-center",
          children:
            o === !0
              ? s.jsx(Ve, { animation: "border", variant: "primary" })
              : s.jsxs(s.Fragment, {
                  children: [
                    s.jsxs(xe, {
                      id: "backButton",
                      variant: "danger",
                      type: "button",
                      size: "sm",
                      className: w,
                      onClick: b,
                      disabled: t,
                      children: [
                        s.jsx(xf, { className: "me-1 mb-1" }),
                        " Back",
                      ],
                    }),
                    s.jsx(xe, {
                      id: "saveButton",
                      variant: "success",
                      type: "submit",
                      size: "sm",
                      className: w,
                      disabled: t,
                      children: y,
                    }),
                  ],
                }),
        }),
      ],
    });
  },
  jj = (t) => {
    if (t === null) return null;
    const e = t.replace(/[^\d.-]/g, "");
    let n = parseFloat(e);
    return Number.isNaN(n) ? null : n;
  },
  k9 = (t) => {
    let e = jj(t);
    return e !== null && (e = Math.floor(e)), e;
  },
  $a = (t, e) =>
    t === null || Number.isNaN(t)
      ? null
      : e === null
      ? t.toFixed(2)
      : t.toLocaleString("en-US", {
          style: "currency",
          currency: e,
          currencyDisplay: "narrowSymbol",
        }),
  iE = ({
    id: t,
    value: e,
    reducer: n,
    isRequired: r = !1,
    hasValidation: i = !1,
    isInvalid: o = !1,
    placeholder: a = "",
    maxLength: l,
    isReadonly: c = !1,
    wasSubmitted: u = !1,
    currency: d = null,
  }) => {
    const h = k.useCallback((w) => $a(w, d), [d]),
      {
        dispatchReducer: f,
        localValue: p,
        setLocalValue: m,
      } = RC({
        reducer: n,
        value: e,
        transformToLocal: h,
        transformToGlobal: jj,
      }),
      v = (w) => {
        const E = w.target.value;
        if (
          (E.includes(".") && E.split(".")[1].length > 2) ||
          E.split(".").length > 2
        )
          return;
        m(E || null);
      },
      C = p ?? "",
      b = () => {
        f(p);
      },
      g = (w) => {
        const E = /[0-9]|\./;
        if (Df.includes(w.key) || !l) return;
        const S = (k9(C) ?? "").toString();
        (!E.test(w.key) || S.length >= l) && w.preventDefault(),
          w.key === fC && f(p);
      };
    return s.jsx(AC, {
      type: le.Currency,
      isInvalid: o,
      placeholder: a,
      onBlur: b,
      onKeyDown: g,
      value: C,
      onChange: v,
      id: t,
      isRequired: r,
      maxLength: l,
      isReadonly: c,
      hasValidation: i,
      wasSubmitted: u,
    });
  },
  R9 = () => {
    const t = "/debtors",
      e = Re((St) => St.organisation),
      n = Re((St) => St.saveDebtor),
      { data: r, isFetching: i, error: o } = Zs(),
      { data: a, isFetching: l, error: c } = O$(),
      { data: u, isFetching: d, error: h } = uA({ includeAll: !1 }),
      { data: f, isFetching: p, error: m } = pC(),
      { data: v, isFetching: C, error: b } = D$(),
      { data: g, isFetching: y, error: w } = dA(),
      { data: E, isFetching: S, error: T } = eA(),
      { data: I, isFetching: R, error: A } = hA(),
      { data: O, isFetching: _, error: F } = L$(),
      { data: $, isFetching: Z, error: X } = fA(),
      { data: W, isFetching: z, error: Q } = B$(n.organisationId),
      [q, { error: ie, isLoading: oe }] = k$(),
      [pe, { error: Ee, isLoading: ee }] = A$(),
      me = ie ?? Ee,
      Pe = oe || ee,
      it = n.id === 0;
    let wt = s.jsxs(s.Fragment, {
      children: [
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "debtorCodeLabel",
              labelColSize: 2,
              label: "Debtor Code",
              isRequired: !0,
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "debtorCode",
                value: n.code,
                reducer: fK,
                isRequired: !0,
                maxLength: 10,
                isReadonly: !it,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
            s.jsx(L, {
              id: "debtorNameLabel",
              labelColSize: 2,
              label: "Debtor Name",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "name",
                value: n.name,
                reducer: pK,
                isRequired: !0,
                maxLength: 127,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "addressLabel",
              labelColSize: 2,
              label: "Address",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "address",
                value: n.address1,
                reducer: mK,
                maxLength: 55,
              }),
            }),
            s.jsx(L, {
              id: "emailLabel",
              labelColSize: 2,
              label: "Email",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "email",
                value: n.email,
                reducer: TK,
                maxLength: 55,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "address2Label",
              labelColSize: 2,
              label: "Address2",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "address2",
                value: n.address2,
                reducer: gK,
                maxLength: 55,
              }),
            }),
            s.jsx(L, {
              id: "contactLabel",
              labelColSize: 2,
              label: "Contact",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "contact",
                value: n.contact,
                reducer: MK,
                maxLength: 25,
                isRequired: !0,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "address3Label",
              labelColSize: 2,
              label: "Address3",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "address3",
                value: n.address3,
                reducer: yK,
                maxLength: 55,
              }),
            }),
            s.jsx(L, {
              id: "telNumberLabel",
              labelColSize: 2,
              label: "Tel. Number",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "telNumber",
                value: n.tel,
                reducer: PK,
                maxLength: 25,
                isRequired: !0,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "postalCodeLabel",
              labelColSize: 2,
              label: "Postal Code",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "postalCode",
                value: n.pCode,
                reducer: AK,
                maxLength: 10,
              }),
            }),
            s.jsx(L, {
              id: "faxNumberLabel",
              labelColSize: 2,
              label: "Fax Number",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "faxNumber",
                value: n.fax,
                reducer: IK,
                maxLength: 25,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "countryLabel",
              labelColSize: 2,
              label: "Country",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(sr, {
                id: "country",
                value: n.country,
                reducer: DK,
                items: I ?? null,
                displayValue: "description",
                idKey: "code",
                isRequired: !0,
                isFetching: R,
                error: A,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
            s.jsx(L, {
              id: "webAddressLabel",
              labelColSize: 2,
              label: "Web Address",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "webAddress",
                value: n.url,
                reducer: _K,
                maxLength: 55,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "vatNumberLabel",
              labelColSize: 2,
              label: "VAT Number",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "vatNumber",
                value: n.vatNo,
                reducer: FK,
              }),
            }),
            s.jsx(L, {
              id: "paysVatLabel",
              labelColSize: 2,
              label: "Pays VAT",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(di, {
                id: "paysVat",
                label: "",
                checked: n.paysVat,
                reducer: jK,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "organisationLabel",
              labelColSize: 2,
              label: "Organisation",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(ot, {
                id: "organisation",
                value: n.organisationId,
                reducer: hK,
                items: r,
                displayValue: "name",
                idKey: "id",
                isRequired: !0,
                isFetching: i,
                error: o,
                isReadonly: !it,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
            s.jsx(L, {
              id: "regionLabel",
              labelColSize: 2,
              label: "Region",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(ot, {
                id: "region",
                value: n.regionId,
                reducer: LK,
                items: W,
                displayValue: "description",
                idKey: "id",
                isRequired: !0,
                isFetching: z,
                error: Q,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "contractLedgerCodeLabel",
              labelColSize: 2,
              label: "Contract Ledger Code",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(ot, {
                id: "contractLedgerCode",
                value: n.gLCode,
                reducer: NK,
                items: v,
                displayValue: "description",
                isRequired: !0,
                idKey: "code",
                isFetching: C,
                error: b,
                showDefaultText: !1,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
            s.jsx(L, {
              id: "debtorControlCodeLabel",
              labelColSize: 2,
              label: "Debtor Control Code",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(ot, {
                id: "debtorControlCode",
                value: n.controlCode,
                reducer: CK,
                items: O,
                displayValue: "description",
                isRequired: !0,
                idKey: "code",
                isFetching: _,
                error: F,
                showDefaultText: !1,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "groupNameLabel",
              labelColSize: 2,
              label: "Group Name",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(sr, {
                id: "groupName",
                value: n.debtorGroupId,
                reducer: xK,
                items: $ ?? null,
                displayValue: "description",
                idKey: "id",
                isRequired: !0,
                isFetching: Z,
                error: X,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
            s.jsx(L, {
              id: "billedByLabel",
              labelColSize: 2,
              label: "Billed by",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(sr, {
                id: "billedBy",
                value: n.billedById,
                reducer: vK,
                items: E ?? null,
                displayValue: "description",
                idKey: "id",
                isRequired: !0,
                isFetching: S,
                error: T,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "billingTypeLabel",
              labelColSize: 2,
              label: "Billing Type",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(ot, {
                id: "billingType",
                value: n.billingTypeId,
                reducer: bK,
                items: f,
                displayValue: "description",
                idKey: "id",
                isRequired: !0,
                isFetching: p,
                error: m,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
            s.jsx(L, {
              id: "defaultRatingLabel",
              labelColSize: 2,
              label: "Default Rating",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(ot, {
                id: "defaultRating",
                value: n.debtRatingId,
                reducer: BK,
                items: a,
                displayValue: "description",
                idKey: "id",
                isRequired: !0,
                isFetching: l,
                error: c,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "discountTypeLabel",
              labelColSize: 2,
              label: "Discount Type",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(ot, {
                id: "discountType",
                value: n.discountTypeId,
                reducer: EK,
                items: u,
                displayValue: "description",
                idKey: "id",
                isRequired: !0,
                isFetching: d,
                error: h,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
            s.jsx(L, {
              id: "qualifyingLevelLabel",
              labelColSize: 2,
              label: "Qualifying Level",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "qualifyingLevel",
                value: n.qualifyingLevel,
                reducer: OK,
                type: le.Number,
                maxLength: 8,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "discountPercentageLabel",
              labelColSize: 2,
              label: "Discount Percentage",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "discountPercentage",
                value: n.discountPercentage,
                reducer: $K,
                type: le.Percentage,
                maxLength: 6,
              }),
            }),
            s.jsx(L, {
              id: "licenceFeeLabel",
              labelColSize: 2,
              label: "Licence Fee",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(iE, {
                id: "licenceFee",
                value: n.licenceFee,
                reducer: kK,
                isRequired: !0,
                wasSubmitted: n.wasSubmitted,
                currency: n.currencyCode,
                maxLength: 8,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "currencyLabel",
              labelColSize: 2,
              label: "Currency",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(sr, {
                id: "currency",
                value: n.currencyCode,
                reducer: SK,
                items: g ?? null,
                displayValue: "description",
                idKey: "code",
                isRequired: !0,
                isFetching: y,
                error: w,
                wasSubmitted: n.wasSubmitted,
              }),
            }),
            s.jsx(L, {
              id: "monthlyRentalLabel",
              labelColSize: 2,
              label: "Monthly Rental",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(iE, {
                id: "monthlyRental",
                value: n.monthlyRental,
                reducer: RK,
                isRequired: !0,
                wasSubmitted: n.wasSubmitted,
                currency: n.currencyCode,
                maxLength: 8,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "createInvoiceLabel",
              labelColSize: 2,
              label: "Create Invoice",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(di, {
                id: "isInvoiced",
                label: "",
                checked: n.isInvoiced,
                reducer: wK,
                className: "sm",
              }),
            }),
            s.jsx(L, {
              id: "lastInvoicedLabel",
              labelColSize: 2,
              label: "Last Invoiced",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(re, {
                id: "lastInvoice",
                value: n.lastInvoice,
                reducer: zK,
                type: le.Date,
                isRequired: !0,
                wasSubmitted: n.wasSubmitted,
                isReadonly: it,
                isFutureDateSelectable: !1,
              }),
            }),
          ],
        }),
        !it &&
          s.jsxs(s.Fragment, {
            children: [
              s.jsxs(M, {
                className: "mb-2",
                children: [
                  s.jsx(L, {
                    id: "ratingCommentsLabel",
                    labelColSize: 2,
                    label: "Rating Comments",
                    className: "input-label",
                    isRequired: !1,
                  }),
                  s.jsx(D, {
                    sm: 8,
                    children: s.jsx(re, {
                      id: "ratingComments",
                      value: n.debtComments,
                      reducer: UK,
                      maxLength: 100,
                    }),
                  }),
                ],
              }),
              s.jsxs(M, {
                className: "mb-2",
                children: [
                  s.jsx(L, {
                    id: "ratingCommentsHistoryLabel",
                    labelColSize: 2,
                    label: "Rating Comments History",
                    className: "input-label",
                    isRequired: !1,
                  }),
                  s.jsx(D, {
                    sm: 8,
                    children: s.jsx(re, {
                      id: "ratingCommentsHistory",
                      value: n.debtRatingComments,
                      isReadonly: !0,
                    }),
                  }),
                ],
              }),
            ],
          }),
      ],
    });
    const Rt = async (St) => {
      it === !0 ? await q(St).unwrap() : await pe(St).unwrap(), DA(e);
    };
    return s.jsx(Pr, {
      backRoute: t,
      performMutation: Rt,
      navigateTo: t,
      isSubmitting: Pe,
      submitError: me,
      entity: n,
      setEntityAsSubmittedReducer: HK,
      children: wt,
    });
  };
function A9() {
  const { state: t } = Dn(),
    { debtorCode: e } = t || {},
    n = e === void 0 ? "Add Debtor" : "Edit Debtor";
  return s.jsx(s.Fragment, {
    children: s.jsxs(G, {
      children: [
        s.jsx(G.Header, { children: n }),
        s.jsx(G.Body, { children: s.jsx(R9, {}) }),
      ],
    }),
  });
}
function j9() {
  return s.jsxs(s.Fragment, {
    children: [
      s.jsx(nC, {}),
      s.jsx(G, {
        children: s.jsxs(G.Body, {
          children: [
            s.jsx(G.Title, { children: "Successfully Signed Out" }),
            s.jsx(G.Text, { children: "Please close this window." }),
          ],
        }),
      }),
    ],
  });
}
const O9 = (t, e, n) => ({ id: t, code: e, description: n }),
  D9 = ({
    id: t,
    value: e,
    reducer: n,
    isRequired: r = !1,
    hasValidation: i = !1,
    isInvalid: o = !1,
    placeholder: a = "",
    type: l = le.Text,
    maxLength: c,
    isReadonly: u = !1,
    wasSubmitted: d = !1,
    textAreaRows: h = 3,
    isFutureDateSelectable: f = !0,
    transformToLocal: p,
    transformToGlobal: m,
  }) => {
    const {
        dispatchReducer: v,
        localValue: C,
        setLocalValue: b,
      } = RC({
        reducer: n,
        value: e,
        transformToLocal: p,
        transformToGlobal: m,
      }),
      g = (I) => {
        const R = I.target.value;
        b(R);
      },
      y = (C == null ? void 0 : C.toString()) ?? "",
      w = () => {
        v(y);
      },
      E = (I) => {
        if (l === le.Number) {
          if ((I.key === "e" && I.preventDefault(), Df.includes(I.key) || !c))
            return;
          y.length >= c && I.preventDefault();
        }
        I.key === fC && v(y);
      },
      S = l === le.TextArea ? { rows: h } : {};
    return s.jsx(AC, {
      type: l,
      isInvalid: o,
      placeholder: a,
      onBlur: w,
      onKeyDown: E,
      value: y,
      onChange: g,
      id: t,
      maxLength: c,
      isReadonly: u,
      hasValidation: i,
      isRequired: r,
      wasSubmitted: d,
      isFutureDateSelectable: f,
      ...S,
    });
  },
  L9 = ({
    licenceToEdit: t,
    wasSubmitted: e,
    licenceCountDirectionChange: n = null,
    isLoading: r,
  }) => {
    const i = Ae(),
      o = (m) => {
        i(kq(Number(m.target.value))), n && i(Rq(n));
      },
      [a, l] = k.useState([]);
    function c(m) {
      if (m != null) {
        let v = new Array(m.count);
        for (let C = 1; C <= m.count; C++)
          v[C - 1] = O9(C, C.toString(), C.toString());
        return v;
      }
      return [];
    }
    const {
      data: u,
      isFetching: d,
      error: h,
    } = w$(t.debtor.code, { skip: n === null });
    let f = k.useMemo(
      () =>
        u
          ? u.filter(
              (m) => m.licenceNumber != t.licenceNumber && m.series !== 1
            )
          : [],
      [u, t.licenceNumber]
    );
    k.useEffect(() => {
      if (t.licenceCountChange.migrateFromLicenceNumber != 0 && u) {
        const m = u.filter(
          (v) =>
            v.licenceNumber == t.licenceCountChange.migrateFromLicenceNumber
        )[0];
        l(c(m));
      } else t.licenceCountChange.migrateFromLicenceNumber == null && i(fx(0));
    }, [t.licenceCountChange.migrateFromLicenceNumber]);
    let p = s.jsx(s.Fragment, {});
    if (n === null) return s.jsx(s.Fragment, {});
    {
      const m = n == Co.Increase ? "Increase By" : "Decrease By";
      if (n == Co.Increase) {
        const v = s.jsx(L, {
          id: "replaceLicenceLabel",
          labelColSize: 4,
          label: "Replace Licence",
          className: "input-label",
        });
        p = s.jsxs(s.Fragment, {
          children: [
            s.jsxs(M, {
              className: "mb-2",
              style: { alignItems: "baseline" },
              children: [
                s.jsx(L, {
                  id: "changeMethodLabel",
                  labelColSize: 4,
                  label: "Change Method",
                  className: "input-label",
                  isRequired: !0,
                }),
                s.jsx(D, {
                  sm: 8,
                  children: s.jsxs(wc, {
                    direction: "vertical",
                    gap: 1,
                    className: "mb-1 mt-1",
                    children: [
                      s.jsx(rt.Check, {
                        inline: !0,
                        label: "New Sale",
                        name: "newLicenceType",
                        type: "radio",
                        id: "generateNewLicenceNumber",
                        checked: t.licenceCountChange.type === Vt.AddOrSubtract,
                        value: Vt.AddOrSubtract,
                        onChange: o,
                        className: "xs",
                        isInvalid: e && t.licenceCountChange.type === Vt.None,
                        disabled: r,
                      }),
                      s.jsx(rt.Check, {
                        inline: !0,
                        label: "Replacement",
                        name: "newLicenceType",
                        type: "radio",
                        id: "selectPendingLicence",
                        checked: t.licenceCountChange.type === Vt.Migrate,
                        value: Vt.Migrate,
                        onChange: o,
                        className: "xs",
                        isInvalid: e && t.licenceCountChange.type === Vt.None,
                        disabled: r,
                      }),
                    ],
                  }),
                }),
              ],
            }),
            t.licenceCountChange.type === Vt.AddOrSubtract &&
              s.jsxs(M, {
                className: "mb-2",
                children: [
                  s.jsx(L, {
                    id: "changeCountLabel",
                    labelColSize: 4,
                    label: m,
                    className: "input-label",
                  }),
                  s.jsx(D, {
                    sm: 8,
                    children: s.jsx(D9, {
                      type: le.Number,
                      id: "chageCountBy",
                      value: t.licenceCountChange.amount,
                      reducer: Kp,
                      maxLength: 10,
                      isReadonly: !1,
                      isRequired: !0,
                      transformToGlobal: lK,
                      transformToLocal: cK,
                    }),
                  }),
                ],
              }),
            t.licenceCountChange.type === Vt.Migrate
              ? f.length > 0
                ? s.jsxs(s.Fragment, {
                    children: [
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          v,
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(ot, {
                              id: "migrateOption",
                              value:
                                t.licenceCountChange.migrateFromLicenceNumber,
                              reducer: fx,
                              items: f,
                              displayValue: (C) =>
                                `${C.licenceNumber} - ${C.type} (${C.count})`,
                              idKey: "licenceNumber",
                              isRequired: !0,
                              isFetching: d,
                              error: h,
                              wasSubmitted: e,
                              showDefaultText: u != null && u.length > 1,
                            }),
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          s.jsx(L, {
                            id: "replaceLicenceCountLabel",
                            labelColSize: 4,
                            label: "Replace Count",
                            className: "input-label",
                          }),
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(ot, {
                              id: "transferCount",
                              items: a,
                              value: t.licenceCountChange.amount,
                              reducer: Kp,
                              idKey: "id",
                              displayValue: "code",
                              showDefaultText: !1,
                              alwaysSelectFirstCondition: () =>
                                t.licenceCountChange.amount === 0,
                            }),
                          }),
                        ],
                      }),
                    ],
                  })
                : s.jsx(s.Fragment, {
                    children: s.jsxs(M, {
                      className: "mb-2",
                      children: [
                        v,
                        s.jsx(D, {
                          sm: 8,
                          children: s.jsx(Qe, {
                            size: "sm",
                            error: "No licences available",
                          }),
                        }),
                      ],
                    }),
                  })
              : s.jsx(s.Fragment, {}),
          ],
        });
      } else
        n == Co.Decrease &&
          (p = s.jsxs(s.Fragment, {
            children: [
              s.jsxs(M, {
                className: "mb-2",
                style: { alignItems: "baseline" },
                children: [
                  s.jsx(L, {
                    id: "changeMethodLabel",
                    labelColSize: 4,
                    label: "Change Method",
                    className: "input-label",
                    isRequired: !0,
                  }),
                  s.jsx(D, {
                    sm: 8,
                    children: s.jsxs(wc, {
                      direction: "vertical",
                      gap: 1,
                      className: "mb-1 mt-1",
                      children: [
                        s.jsx(rt.Check, {
                          inline: !0,
                          label: "Cancellation",
                          name: "newLicenceType",
                          type: "radio",
                          id: "GenerateNewLicenceNumber",
                          checked:
                            t.licenceCountChange.type === Vt.AddOrSubtract,
                          value: Vt.AddOrSubtract,
                          onChange: o,
                          className: "xs",
                          isInvalid: e && t.licenceCountChange.type === Vt.None,
                          disabled: r,
                        }),
                        s.jsx(rt.Check, {
                          inline: !0,
                          label: "Move 1 Licence to Standalone",
                          name: "newLicenceType",
                          type: "radio",
                          id: "SelectPendingLicence",
                          checked: t.licenceCountChange.type === Vt.Migrate,
                          value: Vt.Migrate,
                          onChange: o,
                          className: "xs",
                          isInvalid: e && t.licenceCountChange.type === Vt.None,
                          disabled: r,
                        }),
                      ],
                    }),
                  }),
                ],
              }),
              t.licenceCountChange.type === Vt.AddOrSubtract &&
                s.jsxs(M, {
                  className: "mb-2",
                  children: [
                    s.jsx(L, {
                      id: "changeCountLabel",
                      labelColSize: 4,
                      label: m,
                      className: "input-label",
                    }),
                    s.jsx(D, {
                      sm: 8,
                      children: s.jsx(re, {
                        type: le.Number,
                        id: "chageCountBy",
                        value: t.licenceCountChange.amount,
                        reducer: Kp,
                        maxLength: 10,
                        isReadonly: !1,
                        isRequired: !0,
                      }),
                    }),
                  ],
                }),
              t.licenceCountChange.type === Vt.Migrate &&
                s.jsxs(M, {
                  className: "mb-2",
                  children: [
                    s.jsx(L, {
                      id: "isNewUserLabel",
                      labelColSize: 4,
                      label: "New User",
                      className: "input-label",
                    }),
                    s.jsx(D, {
                      sm: 8,
                      children: s.jsx(di, {
                        className: "xs",
                        label: "",
                        id: "chageCountBy",
                        checked: t.licenceCountChange.isNewUser,
                        reducer: Aq,
                      }),
                    }),
                  ],
                }),
            ],
          }));
    }
    return p;
  },
  jC = ({
    licenceToEdit: t,
    isLicenceCountReadonly: e,
    isLicenceActivation: n,
    isLicenceReplacement: r = !1,
    wasSubmitted: i,
    licenceCountDirectionChange: o = null,
    isLoading: a,
  }) => {
    var c;
    return s.jsxs(s.Fragment, {
      children: [
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "licenceNumberLabel",
              labelColSize: 4,
              label: r ? "New Licence Number" : "Licence Number",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                id: "licenceNumber",
                value: t.licenceNumber,
                isRequired: !0,
                maxLength: 127,
                wasSubmitted: i,
                isReadonly: e,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "transactionDateLabel",
              labelColSize: 4,
              label: "Transaction Date",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                type: le.Date,
                id: "transactionDate",
                value: t.transactionDate,
                maxLength: 127,
                wasSubmitted: i,
                isReadonly: !0,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "licenceTypeLabel",
              labelColSize: 4,
              label: "Licence Type",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                type: le.Text,
                id: "licenceType",
                value: t.type,
                maxLength: 127,
                wasSubmitted: i,
                isReadonly: !0,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "debtorCodeLabel",
              labelColSize: 4,
              label: "Debtor Code",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                type: le.Text,
                id: "debtorCode",
                value: t.debtor.code,
                maxLength: 127,
                wasSubmitted: i,
                isReadonly: !0,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "debtorNameLabel",
              labelColSize: 4,
              label: "Debtor Name",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                type: le.Text,
                id: "debtorName",
                value: t.debtor.name,
                maxLength: 127,
                wasSubmitted: i,
                isReadonly: !0,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "debtorCountryLabel",
              labelColSize: 4,
              label: "Debtor Country",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                type: le.Text,
                id: "debtorCountry",
                value: t.debtor.country,
                maxLength: 127,
                wasSubmitted: i,
                isReadonly: !0,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "debtRatingLabel",
              labelColSize: 4,
              label: "Debt Rating",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                type: le.Text,
                id: "debtRating",
                value:
                  ((c = t.debtor.debtRating) == null
                    ? void 0
                    : c.description) ?? "",
                reducer: kh,
                isReadonly: !0,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "licenceCountLabel",
              labelColSize: 4,
              label: "Licence Count",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                type: le.Number,
                id: "licenceCount",
                value: t.count,
                reducer: kh,
                maxLength: 10,
                isReadonly: !0,
                isRequired: n,
              }),
            }),
          ],
        }),
        s.jsx(L9, {
          licenceToEdit: t,
          wasSubmitted: i,
          licenceCountDirectionChange: o,
          isLoading: a,
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "validationDateLabel",
              labelColSize: 4,
              label: "Validation Date",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                type: le.Date,
                id: "validationDateInput",
                value: t.validationDate,
                reducer: HA,
                isRequired: !0,
                maxLength: 50,
                wasSubmitted: i,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "hardDriveNumberLabel",
              labelColSize: 4,
              label: "Hard Drive Number",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                type: le.Text,
                id: "hdNumber",
                value: t.hardDriveNumber,
                reducer: $A,
                maxLength: 25,
                wasSubmitted: i,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "licenceDriveLabel",
              labelColSize: 4,
              label: "Licence Drive",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                type: le.Text,
                id: "licenceDrive",
                value: t.licenceDrive,
                reducer: KA,
                maxLength: 50,
                wasSubmitted: i,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "licencePropertiesLabel",
              labelColSize: 4,
              label: "Licence Properties",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                id: "licenceProps",
                value: t.licenceProperties,
                reducer: qA,
                maxLength: 50,
                wasSubmitted: i,
              }),
            }),
          ],
        }),
      ],
    });
  },
  Ff = ({ licenceToEdit: t, wasSubmitted: e, textAreaRows: n = 7 }) => {
    const { data: r, isFetching: i, error: o } = hA();
    return s.jsxs(s.Fragment, {
      children: [
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "titleLabel",
              labelColSize: 4,
              label: "Title",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                id: "title",
                value: t.client.title,
                reducer: vq,
                maxLength: 4,
                wasSubmitted: e,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "nameLabel",
              labelColSize: 4,
              label: "Name",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                id: "name",
                value: t.client.name,
                reducer: bq,
                isRequired: !0,
                maxLength: 50,
                wasSubmitted: e,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "surnameLabel",
              labelColSize: 4,
              label: "Surname",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                id: "surname",
                value: t.client.surname,
                reducer: Cq,
                isRequired: !0,
                maxLength: 50,
                wasSubmitted: e,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "telephoneNoLabel",
              labelColSize: 4,
              label: "Telephone No",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                id: "telephone",
                value: t.client.tel,
                reducer: wq,
                maxLength: 50,
                wasSubmitted: e,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "mobileNoLabel",
              labelColSize: 4,
              label: "Mobile No",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                id: "mobile",
                value: t.client.mobile,
                reducer: Sq,
                maxLength: 50,
                wasSubmitted: e,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "emailLabel",
              labelColSize: 4,
              label: "Email",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                id: "email",
                value: t.client.email,
                reducer: xq,
                maxLength: 50,
                wasSubmitted: e,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "countryLabel",
              labelColSize: 4,
              label: "Country",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(sr, {
                id: "country",
                value: t.client.country,
                reducer: Eq,
                items: r ?? null,
                displayValue: "description",
                idKey: "code",
                isFetching: i,
                error: o,
                wasSubmitted: e,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "cityLabel",
              labelColSize: 4,
              label: "City",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                id: "city",
                value: t.client.city,
                reducer: Tq,
                maxLength: 50,
                wasSubmitted: e,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "remarksLabel",
              labelColSize: 4,
              label: "Remarks",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 8,
              children: s.jsx(re, {
                id: "remarks",
                value: t.remarks,
                textAreaRows: n,
                reducer: Iq,
                maxLength: 250,
                wasSubmitted: e,
                type: le.TextArea,
              }),
            }),
          ],
        }),
      ],
    });
  },
  P9 = ({ licenceNumber: t }) => {
    const e = Ae(),
      n = Lt(),
      r = Re((f) => f.editLicence),
      [i, { error: o, isLoading: a }] = v$(),
      {
        data: l,
        isFetching: c,
        error: u,
      } = Js(t, { skip: r.organisationId === null || r.organisationId === 0 });
    k.useEffect(() => {
      (r.organisationId === 0 || r.organisationId === null) && n(ur);
    }, [n, r.organisationId]),
      k.useEffect(() => {
        l != null && e(GA(l));
      }, [l, e]);
    let d = s.jsx(s.Fragment, {
      children: s.jsx(Or, {
        children: s.jsxs(M, {
          className: "card-row",
          children: [
            s.jsx(D, {
              children: s.jsxs(G, {
                children: [
                  s.jsx(Wn, { children: "Licence" }),
                  s.jsx(An, {
                    children: s.jsx(jC, {
                      licenceToEdit: r,
                      isLicenceCountReadonly: !0,
                      isLicenceActivation: !1,
                      wasSubmitted: r.wasSubmitted,
                      isLoading: c,
                    }),
                  }),
                ],
              }),
            }),
            s.jsx(D, {
              children: s.jsxs(G, {
                children: [
                  s.jsx(Wn, { children: "Client" }),
                  s.jsx(An, {
                    children: s.jsx(Ff, {
                      licenceToEdit: r,
                      wasSubmitted: r.wasSubmitted,
                    }),
                  }),
                ],
              }),
            }),
          ],
        }),
      }),
    });
    const h = async (f) => await i(f).unwrap();
    return s.jsx(Pr, {
      backRoute: ur,
      performMutation: h,
      navigateTo: ur,
      isSubmitting: a,
      submitError: o,
      entity: r,
      formLoadError: u,
      isLoadingForm: c,
      clearEntityReducer: _f,
      setEntityAsSubmittedReducer: Yc,
      children: d,
    });
  };
function _9() {
  const { state: t } = Dn(),
    { licenceNumber: e } = t || {};
  return s.jsx(s.Fragment, {
    children: s.jsxs(G, {
      children: [
        s.jsx(G.Header, { children: "Edit Licence" }),
        s.jsx(G.Body, { children: s.jsx(P9, { licenceNumber: e }) }),
      ],
    }),
  });
}
function Oj(t) {
  return t === void 0 ? null : t;
}
const Dj = ({ savePendingLicence: t }) => {
    const e = Lt(),
      n = Ae(),
      { data: r, isFetching: i, error: o } = Zs(),
      [a, { data: l, error: c, isLoading: u }] = m$(),
      [d, { data: h, error: f, isLoading: p }] = g$(),
      m = (g) => {
        n(hq(Number(g.target.value)));
      };
    let v;
    t.newLicenceType === gt.NewLicence && c
      ? (v = c)
      : t.newLicenceType === gt.PendingLicence && f && (v = f);
    const C = u || p,
      b = async (g) => {
        t.newLicenceType === gt.NewLicence
          ? await a(g).unwrap()
          : await d(g).unwrap();
      };
    return (
      k.useEffect(() => {
        (t.organisationId === 0 || t.organisationId === null) && e(ur);
      }, [e, t.organisationId]),
      {
        isFetchingOrganisations: i,
        organisationError: o,
        organisationsData: r,
        savePendingLicenceResponse: l,
        updatePendingLicenceResponse: h,
        handleNewLicenceTypeChange: m,
        combinedError: v,
        combinedLoadingState: C,
        performMutation: b,
      }
    );
  },
  M9 = () => {
    const t = Lt(),
      e = Ae(),
      n = "/activate-licence",
      r = Re((O) => O.savePendingLicence),
      i = k.useCallback(
        (O) => ({ organisationId: r.organisationId, searchTerm: O ?? "" }),
        [r.organisationId]
      ),
      {
        data: o,
        isFetching: a,
        error: l,
      } = f$(r.organisationId ?? 0, {
        skip: r.organisationId === null || r.organisationId === 0,
      }),
      {
        data: c,
        isFetching: u,
        error: d,
      } = sA(
        { organisationId: r.organisationId ?? 0, series: null },
        { skip: r.organisationId === null || r.organisationId === 0 }
      ),
      {
        data: h,
        error: f,
        isFetching: p,
      } = I$(i(r.debtNumber), { skip: r.debtNumber === null }),
      [m] = T$(),
      {
        isFetchingOrganisations: v,
        organisationError: C,
        organisationsData: b,
        savePendingLicenceResponse: g,
        updatePendingLicenceResponse: y,
        handleNewLicenceTypeChange: w,
        combinedError: E,
        combinedLoadingState: S,
        performMutation: T,
      } = Dj({ savePendingLicence: r });
    k.useEffect(() => {
      const O = Oj(g ?? y ?? void 0);
      if (O !== null) {
        const _ = O.id;
        t(n, { state: { licenceNumberFromRoute: _ } });
      }
    }, [g, y, t]);
    const I = (O) => {
      O !== null && e(hx(O.debtNumber ?? ""));
    };
    let R = s.jsxs(s.Fragment, {
      children: [
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "organisationLabel",
              labelColSize: 2,
              label: "Organisation",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsx(ot, {
                id: "organisation",
                value: r.organisationId,
                reducer: PA,
                items: b,
                displayValue: (O) => `${O.id} - ${O.name}`,
                idKey: "id",
                isRequired: !0,
                isFetching: v,
                error: C,
                isReadonly: !0,
              }),
            }),
          ],
        }),
        s.jsxs(M, {
          className: "mb-2",
          style: { alignItems: "baseline" },
          children: [
            s.jsx(L, {
              id: "newOrPendingLabel",
              labelColSize: 2,
              label: "New or Pending",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 3,
              children: s.jsxs(wc, {
                direction: "vertical",
                gap: 1,
                className: "mb-1 mt-1",
                children: [
                  s.jsx(rt.Check, {
                    inline: !0,
                    label: "Generate New Licence Number",
                    name: "newLicenceType",
                    type: "radio",
                    id: "GenerateNewLicenceNumber",
                    checked: r.newLicenceType === gt.NewLicence,
                    value: gt.NewLicence,
                    onChange: w,
                    className: "xs",
                    isInvalid: r.wasSubmitted && r.newLicenceType === gt.None,
                  }),
                  s.jsx(rt.Check, {
                    inline: !0,
                    label: "Select a Pending Licence",
                    name: "newLicenceType",
                    type: "radio",
                    id: "SelectPendingLicence",
                    checked: r.newLicenceType === gt.PendingLicence,
                    value: gt.PendingLicence,
                    onChange: w,
                    className: "xs",
                    isInvalid: r.wasSubmitted && r.newLicenceType === gt.None,
                  }),
                ],
              }),
            }),
          ],
        }),
        r.newLicenceType === gt.NewLicence &&
          s.jsx(s.Fragment, {
            children: s.jsxs(M, {
              className: "mb-2",
              children: [
                s.jsx(L, {
                  id: "licenceSeriesLabel",
                  labelColSize: 2,
                  label: "Licence Series",
                  className: "input-label",
                }),
                s.jsx(D, {
                  sm: 3,
                  children: s.jsx(ot, {
                    id: "licenceSeries",
                    value: r.series,
                    reducer: dq,
                    items: o,
                    displayValue: "description",
                    idKey: "id",
                    isRequired: !0,
                    isFetching: a,
                    error: l,
                    wasSubmitted: r.wasSubmitted,
                    showDefaultText: o != null && o.length > 1,
                  }),
                }),
              ],
            }),
          }),
        r.newLicenceType === gt.PendingLicence &&
          s.jsx(s.Fragment, {
            children: s.jsxs(M, {
              className: "mb-2",
              children: [
                s.jsx(L, {
                  id: "pendingLicencesLabel",
                  labelColSize: 2,
                  label: "Pending Licences",
                  className: "input-label",
                }),
                s.jsx(D, {
                  sm: 4,
                  children: s.jsx(sr, {
                    id: "pendingLicences",
                    value: r.licenceNumber,
                    reducer: _A,
                    items: c ?? null,
                    displayValue: "licenceDescription",
                    idKey: "licenceNumber",
                    isRequired: !0,
                    isFetching: u,
                    error: d,
                    wasSubmitted: r.wasSubmitted,
                    onSelectedObjectChange: (O) => I(O),
                  }),
                }),
              ],
            }),
          }),
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "debtorCodeLabel",
              labelColSize: 2,
              label: "Debtor Code",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 4,
              children: s.jsx(ii, {
                trigger: (O) => m(O).unwrap(),
                filterQuery: i,
                reducer: hx,
                items: h,
                labelKey: "description",
                valueKey: "code",
                minLength: 2,
                isWildcardSearchAllowed: !1,
                value: r.debtNumber,
                isRequired: !0,
                wasSubmitted: r.wasSubmitted,
              }),
            }),
          ],
        }),
      ],
    });
    const A = s.jsxs(s.Fragment, {
      children: [
        s.jsx(Ef, { className: "me-1 mb-1" }),
        s.jsx("span", { children: " Next " }),
      ],
    });
    return s.jsx(Pr, {
      backRoute: ur,
      performMutation: T,
      isSubmitting: S,
      submitError: E,
      entity: r,
      formLoadError: f,
      isLoadingForm: p,
      clearEntityReducer: MA,
      submitButtonContent: A,
      setEntityAsSubmittedReducer: FA,
      children: R,
    });
  };
function F9() {
  return s.jsx(s.Fragment, {
    children: s.jsxs(G, {
      children: [
        s.jsx(G.Header, { children: "Create Licence" }),
        s.jsx(G.Body, { children: s.jsx(M9, {}) }),
      ],
    }),
  });
}
const B9 = () => {
  const t = Lt(),
    e = "/debtor-groups",
    n = Re((T) => T.saveDebtorGroup),
    r = n.model,
    i = WK(r),
    o = r.id === -1,
    a = !o,
    { data: l, isFetching: c, error: u } = Zs(),
    { data: d, isFetching: h, error: f } = j$(i),
    [p, { error: m, isLoading: v }] = _$(),
    [C, { error: b, isLoading: g }] = M$(),
    y = m ?? b ?? f,
    w = v || g || c || h;
  k.useEffect(() => {
    (r.organisationId === 0 || r.organisationId === null) && t(e);
  }, [t, r.organisationId]),
    console.log("debtorGroupToSave", r);
  let E = s.jsxs(s.Fragment, {
    children: [
      s.jsxs(M, {
        className: "mb-2",
        children: [
          s.jsx(L, {
            id: "organizationLabel",
            labelColSize: 2,
            label: "Organisation",
            className: "input-label",
            isRequired: !0,
          }),
          s.jsx(D, {
            sm: 3,
            children: s.jsx(ot, {
              id: "organisation",
              value: r.organisationId,
              reducer: YK,
              items: l,
              displayValue: "name",
              idKey: "id",
              isRequired: !0,
              isFetching: c,
              error: u,
              isReadonly: a,
              showDefaultText: !1,
            }),
          }),
        ],
      }),
      s.jsxs(M, {
        className: "mb-2",
        children: [
          s.jsx(L, {
            id: "groupNameLabel",
            labelColSize: 2,
            label: "Group Name",
            className: "input-label",
            isRequired: !0,
          }),
          s.jsx(D, {
            sm: 3,
            children: s.jsx(re, {
              id: "groupName",
              value: r.name,
              reducer: XK,
              isRequired: !0,
              maxLength: 50,
              wasSubmitted: n.wasSubmitted,
            }),
          }),
        ],
      }),
      s.jsxs(M, {
        className: "mb-2",
        children: [
          s.jsx(L, {
            id: "isInvoiceGroupLabel",
            labelColSize: 2,
            label: "Invoice Group",
            className: "input-label",
          }),
          s.jsx(D, {
            sm: 1,
            children: s.jsx(di, {
              id: "isInvoiceGroup",
              label: "",
              checked: r.isInvoiceGroup,
              reducer: ZK,
              className: "sm",
            }),
          }),
        ],
      }),
      r.isInvoiceGroup &&
        s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "invoiceCodeLabel",
              labelColSize: 2,
              label: "Invoice Code",
              className: "input-label",
            }),
            s.jsx(D, {
              sm: 4,
              children: s.jsx(ot, {
                id: "invoiceCode",
                value: r.invoiceDebtId,
                reducer: eq,
                items: d,
                displayValue: "description",
                idKey: "id",
                isFetching: h,
                error: f,
                showDefaultText: !0,
              }),
            }),
          ],
        }),
    ],
  });
  const S = async (T) => {
    o === !0 ? await p(T).unwrap() : await C(T).unwrap();
  };
  return s.jsx(Pr, {
    backRoute: e,
    performMutation: S,
    navigateTo: e,
    isSubmitting: w,
    submitError: y,
    entity: r,
    clearEntityReducer: nq,
    setEntityAsSubmittedReducer: JK,
    children: E,
  });
};
function U9() {
  const { state: t } = Dn(),
    { debtorGroupId: e } = t || {},
    n = e === void 0 ? "Add Debtor Group" : "Edit Debtor Group";
  return s.jsx(s.Fragment, {
    children: s.jsxs(G, {
      children: [
        s.jsx(G.Header, { children: n }),
        s.jsx(G.Body, { children: s.jsx(B9, {}) }),
      ],
    }),
  });
}
const z9 = ({ oldLicenceNumber: t }) => {
  const e = Lt(),
    n = Ae(),
    r = "/replace-licence",
    i = Re((S) => S.savePendingLicence),
    {
      data: o,
      isFetching: a,
      error: l,
    } = Js(t, { skip: i.organisationId === null || i.organisationId === 0 }),
    {
      data: c,
      isFetching: u,
      error: d,
    } = sA(
      {
        organisationId: i.organisationId ?? 0,
        series: (o == null ? void 0 : o.series) ?? 0,
      },
      {
        skip:
          i.organisationId === null ||
          i.organisationId === 0 ||
          o === void 0 ||
          o === null,
      }
    ),
    {
      isFetchingOrganisations: h,
      organisationError: f,
      organisationsData: p,
      savePendingLicenceResponse: m,
      updatePendingLicenceResponse: v,
      handleNewLicenceTypeChange: C,
      combinedError: b,
      combinedLoadingState: g,
      performMutation: y,
    } = Dj({ savePendingLicence: i });
  k.useEffect(() => {
    (i.organisationId === 0 || i.organisationId === null) && e(ur);
  }, [e, i.organisationId]),
    k.useEffect(() => {
      const S = Oj(m ?? v ?? void 0);
      if (S !== null) {
        const T = S.id,
          I = aq(t, Number(T));
        n(lq(I)), e(r, { state: I });
      }
    }, [m, v, e, n, t]),
    k.useEffect(() => {
      o != null && n(fq(o));
    }, [o, n]);
  let w = s.jsxs(s.Fragment, {
    children: [
      s.jsxs(M, {
        className: "mb-2",
        children: [
          s.jsx(L, {
            id: "organisationLabel",
            labelColSize: 2,
            label: "Organisation",
            className: "input-label",
          }),
          s.jsx(D, {
            sm: 3,
            children: s.jsx(ot, {
              id: "organisation",
              value: i.organisationId,
              reducer: PA,
              items: p,
              displayValue: (S) => `${S.id} - ${S.name}`,
              idKey: "id",
              isRequired: !0,
              isFetching: h,
              error: f,
              isReadonly: !0,
            }),
          }),
        ],
      }),
      s.jsxs(M, {
        className: "mb-2",
        style: { alignItems: "baseline" },
        children: [
          s.jsx(L, {
            id: "newOrPendingLabel",
            labelColSize: 2,
            label: "New or Pending",
            className: "input-label",
          }),
          s.jsx(D, {
            sm: 3,
            children: s.jsxs(wc, {
              direction: "vertical",
              gap: 1,
              className: "mb-1 mt-1",
              children: [
                s.jsx(rt.Check, {
                  inline: !0,
                  label: "Replace with New Licence Number",
                  name: "newLicenceType",
                  type: "radio",
                  id: "ReplaceNewLicenceNumber",
                  checked: i.newLicenceType === gt.NewLicence,
                  value: gt.NewLicence,
                  onChange: C,
                  className: "xs",
                  isInvalid: i.wasSubmitted && i.newLicenceType === gt.None,
                }),
                s.jsx(rt.Check, {
                  inline: !0,
                  label: "Replace with Pending Licence",
                  name: "newLicenceType",
                  type: "radio",
                  id: "SelectPendingLicence",
                  checked: i.newLicenceType === gt.PendingLicence,
                  value: gt.PendingLicence,
                  onChange: C,
                  className: "xs",
                  isInvalid: i.wasSubmitted && i.newLicenceType === gt.None,
                }),
              ],
            }),
          }),
        ],
      }),
      i.newLicenceType === gt.NewLicence &&
        s.jsx(s.Fragment, {
          children: s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "licenceSeriesLabel",
                labelColSize: 2,
                label: "Licence Series",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children:
                  o &&
                  s.jsx(re, {
                    id: "licenceSeries",
                    value: o.licenceSeries.name,
                    isReadonly: !0,
                  }),
              }),
            ],
          }),
        }),
      i.newLicenceType === gt.PendingLicence &&
        s.jsx(s.Fragment, {
          children: s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "pendingLicenceLabel",
                labelColSize: 2,
                label: "Pending Licences",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 4,
                children: s.jsx(sr, {
                  id: "pendingLicences",
                  value: i.licenceNumber,
                  reducer: _A,
                  items: c ?? null,
                  displayValue: "licenceDescription",
                  idKey: "licenceNumber",
                  isRequired: !0,
                  isFetching: u,
                  error: d,
                  wasSubmitted: i.wasSubmitted,
                }),
              }),
            ],
          }),
        }),
      s.jsxs(M, {
        className: "mb-2",
        children: [
          s.jsx(L, {
            id: "debtorCodeLabel",
            labelColSize: 2,
            label: "Debtor Code",
            className: "input-label",
          }),
          s.jsx(D, {
            sm: 4,
            children:
              o &&
              s.jsx(re, {
                id: "debtorCode",
                value: `${o.debtor.code.trim()} - ${o.debtor.name}`,
                isReadonly: !0,
              }),
          }),
        ],
      }),
    ],
  });
  const E = s.jsxs(s.Fragment, {
    children: [
      s.jsx(Ef, { className: "me-1 mb-1" }),
      s.jsx("span", { children: " Next " }),
    ],
  });
  return s.jsx(Pr, {
    backRoute: ur,
    performMutation: y,
    isSubmitting: g,
    submitError: b,
    entity: i,
    formLoadError: l,
    isLoadingForm: a,
    submitButtonContent: E,
    setEntityAsSubmittedReducer: FA,
    children: w,
  });
};
function H9() {
  const t = Re((i) => i.replaceLicence),
    { state: e } = Dn(),
    { licenceNumberFromRoute: n } = e || {},
    r = n || (t.oldLicenceNumber ?? 0);
  return s.jsx(s.Fragment, {
    children: s.jsxs(G, {
      children: [
        s.jsx(G.Header, { children: "Select Licence to Replace" }),
        s.jsx(G.Body, { children: s.jsx(z9, { oldLicenceNumber: r }) }),
      ],
    }),
  });
}
const $9 = ({ oldLicenceNumber: t, newLicenceNumber: e }) => {
  const n = Ae(),
    r = Lt(),
    i = "/select-licence-replacement",
    o = Re((v) => v.editLicence),
    [a, { error: l, isLoading: c }] = b$(),
    {
      data: u,
      isFetching: d,
      error: h,
    } = Js(t, { skip: o.organisationId === null || o.organisationId === 0 });
  k.useEffect(() => {
    if (u != null) {
      const v = { ...UA(u), oldLicenceNumber: t, newLicenceNumber: e };
      n(cq(v));
    }
  }, [u, n, e, t]),
    k.useEffect(() => {
      (o.organisationId === 0 || o.organisationId === null) && r(ur);
    }, [r, o.organisationId]);
  let f = s.jsx(s.Fragment, {
    children: s.jsx(Or, {
      children: s.jsxs(M, {
        className: "card-row",
        children: [
          s.jsx(D, {
            children: s.jsxs(G, {
              children: [
                s.jsx(Wn, { children: "Licence" }),
                s.jsxs(An, {
                  children: [
                    s.jsxs(M, {
                      className: "mb-2",
                      children: [
                        s.jsx(L, {
                          id: "oldLicenceNumberLabel",
                          labelColSize: 4,
                          label: "Old Licence Number",
                          className: "input-label",
                        }),
                        s.jsx(D, {
                          sm: 8,
                          children: s.jsx(re, {
                            id: "oldLicenceNumber",
                            value: t,
                            isRequired: !0,
                            maxLength: 127,
                            wasSubmitted: o.wasSubmitted,
                            isReadonly: !0,
                          }),
                        }),
                      ],
                    }),
                    s.jsx(jC, {
                      licenceToEdit: o,
                      isLicenceCountReadonly: !0,
                      isLicenceActivation: !1,
                      isLicenceReplacement: !0,
                      wasSubmitted: o.wasSubmitted,
                      isLoading: d,
                    }),
                  ],
                }),
              ],
            }),
          }),
          s.jsx(D, {
            children: s.jsxs(G, {
              children: [
                s.jsx(Wn, { children: "Client" }),
                s.jsx(An, {
                  children: s.jsx(Ff, {
                    licenceToEdit: o,
                    wasSubmitted: o.wasSubmitted,
                    textAreaRows: 8,
                  }),
                }),
              ],
            }),
          }),
        ],
      }),
    }),
  });
  const p = { ...o, oldLicenceNumber: t, newLicenceNumber: e },
    m = async (v) => await a(v).unwrap();
  return s.jsx(Pr, {
    backRoute: i,
    performMutation: m,
    navigateTo: Of,
    navigateWithIdParam: !0,
    isSubmitting: c,
    submitError: l,
    entity: p,
    formLoadError: h,
    isLoadingForm: d,
    clearEntityReducer: _f,
    setEntityAsSubmittedReducer: Yc,
    children: f,
  });
};
function K9() {
  const { state: t } = Dn(),
    { oldLicenceNumber: e, newLicenceNumber: n } = t || {};
  return s.jsx(s.Fragment, {
    children: s.jsxs(G, {
      children: [
        s.jsx(G.Header, { children: "Replace Licence" }),
        s.jsx(G.Body, {
          children: s.jsx($9, { oldLicenceNumber: e, newLicenceNumber: n }),
        }),
      ],
    }),
  });
}
const q9 = ({ licenceNumber: t }) => {
    const e = Ae(),
      n = "/save-pending-licence",
      r = Re((p) => p.editLicence),
      [i, { error: o, isLoading: a }] = y$(),
      { data: l, isFetching: c, error: u } = Js(t);
    k.useEffect(() => {
      l !== void 0 && (e(Nq(l)), e(kh(1)));
    }, [l, e]);
    const d = r.series === 1;
    let h = s.jsx(s.Fragment, {
      children: s.jsx(Or, {
        children: s.jsxs(M, {
          className: "card-row",
          children: [
            s.jsx(D, {
              children: s.jsxs(G, {
                children: [
                  s.jsx(Wn, { children: "Licence" }),
                  s.jsxs(An, {
                    children: [
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          s.jsx(L, {
                            id: "licenceNumberLabel",
                            labelColSize: 4,
                            label: "Licence Number",
                            className: "input-label",
                          }),
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(re, {
                              id: "licenceNumber",
                              value: r.licenceNumber,
                              isRequired: !0,
                              maxLength: 127,
                              wasSubmitted: r.wasSubmitted,
                              isReadonly: !0,
                            }),
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          s.jsx(L, {
                            id: "transactionDateLabel",
                            labelColSize: 4,
                            label: "Transaction Date",
                            className: "input-label",
                          }),
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(re, {
                              type: le.Date,
                              id: "transactionDate",
                              value: r.transactionDate,
                              maxLength: 127,
                              wasSubmitted: r.wasSubmitted,
                              isReadonly: !0,
                            }),
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          s.jsx(L, {
                            id: "licenceTypeLabel",
                            labelColSize: 4,
                            label: "Licence Type",
                            className: "input-label",
                          }),
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(re, {
                              type: le.Text,
                              id: "licenceType",
                              value: r.type,
                              maxLength: 127,
                              wasSubmitted: r.wasSubmitted,
                              isReadonly: !0,
                            }),
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          s.jsx(L, {
                            id: "debtorCodeLabel",
                            labelColSize: 4,
                            label: "Debtor Code",
                            className: "input-label",
                          }),
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(re, {
                              type: le.Text,
                              id: "debtorCode",
                              value: r.debtor.code,
                              maxLength: 127,
                              wasSubmitted: r.wasSubmitted,
                              isReadonly: !0,
                            }),
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          s.jsx(L, {
                            id: "debtorNameLabel",
                            labelColSize: 4,
                            label: "Debtor Name",
                            className: "input-label",
                          }),
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(re, {
                              type: le.Text,
                              id: "debtorName",
                              value: r.debtor.name,
                              maxLength: 127,
                              wasSubmitted: r.wasSubmitted,
                              isReadonly: !0,
                            }),
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          s.jsx(L, {
                            id: "debtorCountryLabel",
                            labelColSize: 4,
                            label: "Debtor Country",
                            className: "input-label",
                          }),
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(re, {
                              type: le.Text,
                              id: "debtorCountry",
                              value: r.debtor.country,
                              maxLength: 127,
                              wasSubmitted: r.wasSubmitted,
                              isReadonly: !0,
                            }),
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          s.jsx(L, {
                            id: "licenceCountLabel",
                            labelColSize: 4,
                            label: "Licence Count",
                            className: "input-label",
                            isRequired: !0,
                          }),
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(re, {
                              type: le.Number,
                              id: "licenceCount",
                              value: r.count,
                              reducer: kh,
                              isRequired: !0,
                              maxLength: 10,
                              wasSubmitted: r.wasSubmitted,
                              isReadonly: d,
                            }),
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          s.jsx(L, {
                            id: "validationDateLabel",
                            labelColSize: 4,
                            label: "Validation Date",
                            className: "input-label",
                            isRequired: !0,
                          }),
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(re, {
                              type: le.Date,
                              id: "validationDate",
                              value: r.validationDate,
                              reducer: HA,
                              isRequired: !0,
                              maxLength: 50,
                              wasSubmitted: r.wasSubmitted,
                              isPastDateSelectable: !1,
                            }),
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          s.jsx(L, {
                            id: "hdNumberLabel",
                            labelColSize: 4,
                            label: "Hard Drive Number",
                            className: "input-label",
                          }),
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(re, {
                              type: le.Text,
                              id: "hdNumber",
                              value: r.hardDriveNumber,
                              reducer: $A,
                              maxLength: 25,
                              wasSubmitted: r.wasSubmitted,
                            }),
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          s.jsx(L, {
                            id: "licenceDriveLabel",
                            labelColSize: 4,
                            label: "Licence Drive",
                            className: "input-label",
                          }),
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(re, {
                              type: le.Text,
                              id: "licenceDrive",
                              value: r.licenceDrive,
                              reducer: KA,
                              maxLength: 50,
                              wasSubmitted: r.wasSubmitted,
                            }),
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        className: "mb-2",
                        children: [
                          s.jsx(L, {
                            id: "licencePropsLabel",
                            labelColSize: 4,
                            label: "Licence Properties",
                            className: "input-label",
                          }),
                          s.jsx(D, {
                            sm: 8,
                            children: s.jsx(re, {
                              id: "licenceProps",
                              value: r.licenceProperties,
                              reducer: qA,
                              maxLength: 50,
                              wasSubmitted: r.wasSubmitted,
                            }),
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
            }),
            s.jsx(D, {
              children: s.jsxs(G, {
                children: [
                  s.jsx(Wn, { children: "Client" }),
                  s.jsx(An, {
                    children: s.jsx(Ff, {
                      licenceToEdit: r,
                      wasSubmitted: r.wasSubmitted,
                    }),
                  }),
                ],
              }),
            }),
          ],
        }),
      }),
    });
    const f = async (p) => await i(p).unwrap();
    return s.jsx(Pr, {
      backRoute: n,
      performMutation: f,
      clearEntityReducer: _f,
      navigateTo: Of,
      navigateWithIdParam: !0,
      isSubmitting: a,
      submitError: o,
      entity: r,
      formLoadError: u,
      isLoadingForm: c,
      setEntityAsSubmittedReducer: Yc,
      children: h,
    });
  },
  G9 = () => {
    const { state: t } = Dn(),
      { licenceNumberFromRoute: e } = t || {},
      n = e;
    return s.jsx(s.Fragment, {
      children: s.jsxs(G, {
        children: [
          s.jsx(G.Header, { children: "Activate Licence" }),
          s.jsx(G.Body, { children: s.jsx(q9, { licenceNumber: n }) }),
        ],
      }),
    });
  },
  W9 = ({ licenceNumber: t }) => {
    var E;
    const e = Ae(),
      n = Re((S) => S.transferLicence),
      { data: r, isFetching: i, error: o } = Js(t),
      [a, { error: l, isLoading: c }] = C$(),
      u = k.useCallback(() => {
        const S = Lf();
        return (
          r &&
            ((S.debtorGroupId = r.debtor.debtorGroupId),
            (S.organisationId = r.organisationId),
            (S.pageSize = 1e3)),
          S
        );
      }, [r]);
    k.useEffect(() => {
      r !== void 0 && e(Dq(r));
    }, [r, e]);
    const { data: d, isFetching: h, error: f } = R$(u(), { skip: r == null });
    let p = k.useMemo(
      () => (d ? d.filter((S) => S.code != n.debtor.code) : []),
      [d, n.debtor.code]
    );
    const m = (S) => {
        S !== null && e(px(S.code ?? ""));
      },
      v = `${n.debtor.code.trimEnd()} - ${n.debtor.name}`;
    let C;
    h || i || c
      ? (C = s.jsx(Ve, { animation: "border", variant: "primary" }))
      : (C = s.jsxs(s.Fragment, {
          children: [
            s.jsxs(M, {
              className: "mb-2",
              children: [
                s.jsx(L, {
                  id: "licenceNumberLabel",
                  labelColSize: 2,
                  label: "Licence Number",
                  className: "input-label",
                }),
                s.jsx(D, {
                  sm: 4,
                  children: s.jsx(re, {
                    id: "licenceNumber",
                    value: n.licenceNumber,
                    isRequired: !0,
                    maxLength: 127,
                    wasSubmitted: n.wasSubmitted,
                    isReadonly: !0,
                  }),
                }),
              ],
            }),
            s.jsxs(M, {
              className: "mb-2",
              children: [
                s.jsx(L, {
                  id: "debtorGroupLabel",
                  labelColSize: 2,
                  label: "Debtor Group",
                  className: "input-label",
                }),
                s.jsx(D, {
                  sm: 4,
                  children: s.jsx(re, {
                    type: le.Text,
                    id: "debtorGroup",
                    value:
                      ((E = n.debtor.debtorGroup) == null ? void 0 : E.name) ??
                      "",
                    maxLength: 127,
                    wasSubmitted: n.wasSubmitted,
                    isReadonly: !0,
                  }),
                }),
              ],
            }),
            s.jsxs(M, {
              className: "mb-2",
              children: [
                s.jsx(L, {
                  id: "transferFromLabel",
                  labelColSize: 2,
                  label: "Transfer From Debtor",
                  className: "input-label",
                }),
                s.jsx(D, {
                  sm: 4,
                  children: s.jsx(re, {
                    type: le.Text,
                    id: "transferFrom",
                    value: v,
                    maxLength: 127,
                    wasSubmitted: n.wasSubmitted,
                    isReadonly: !0,
                  }),
                }),
              ],
            }),
            s.jsxs(M, {
              className: "mb-2",
              children: [
                s.jsx(L, {
                  id: "transferToDebtorLabel",
                  labelColSize: 2,
                  label: "Transfer To Debtor",
                  className: "input-label",
                }),
                s.jsx(D, {
                  sm: 4,
                  children: s.jsx(sr, {
                    id: "debtors",
                    value: n.newDebtorCode,
                    reducer: px,
                    items: p ?? null,
                    displayValue: "description",
                    idKey: "code",
                    isRequired: !0,
                    isFetching: h,
                    error: f,
                    wasSubmitted: n.wasSubmitted,
                    onSelectedObjectChange: (S) => m(S),
                  }),
                }),
              ],
            }),
            s.jsxs(M, {
              className: "mb-2",
              children: [
                s.jsx(L, {
                  id: "transactionDateLabel",
                  labelColSize: 2,
                  label: "Transaction Date",
                  className: "input-label",
                }),
                s.jsx(D, {
                  sm: 4,
                  children: s.jsx(re, {
                    type: le.Date,
                    id: "transactionDate",
                    value: n.transactionDate,
                    maxLength: 127,
                    wasSubmitted: n.wasSubmitted,
                    isReadonly: !0,
                  }),
                }),
              ],
            }),
          ],
        }));
    const b = async (S) => await a(S).unwrap(),
      g = o ?? f,
      y = i || h,
      w = s.jsxs(s.Fragment, {
        children: [
          s.jsx(If, { className: "me-1 mb-1" }),
          s.jsx("span", { children: " Save " }),
        ],
      });
    return s.jsx(Pr, {
      backRoute: ur,
      performMutation: b,
      navigateTo: ur,
      isSubmitting: c,
      submitError: l,
      submitButtonContent: w,
      entity: n,
      formLoadError: g,
      isLoadingForm: y,
      clearEntityReducer: Lq,
      setEntityAsSubmittedReducer: Pq,
      children: C,
    });
  };
function V9() {
  const { state: t } = Dn(),
    { licenceNumber: e } = t || {};
  return s.jsx(s.Fragment, {
    children: s.jsxs(G, {
      children: [
        s.jsx(G.Header, { children: "Transfer Licence" }),
        s.jsx(G.Body, { children: s.jsx(W9, { licenceNumber: e }) }),
      ],
    }),
  });
}
const Q9 = ({ licenceNumber: t, licenceCountDirectionChange: e }) => {
  const n = Ae(),
    r = Re((f) => f.editLicence),
    [i, { error: o, isLoading: a }] = S$(),
    {
      data: l,
      isFetching: c,
      error: u,
    } = Js(t, { skip: r.organisationId === null || r.organisationId === 0 });
  k.useEffect(() => {
    l != null && n(GA(l));
  }, [l, n]);
  let d = s.jsx(s.Fragment, {
    children: s.jsx(Or, {
      children: s.jsxs(M, {
        className: "card-row",
        children: [
          s.jsx(D, {
            children: s.jsxs(G, {
              children: [
                s.jsx(Wn, { children: "Licence" }),
                s.jsx(An, {
                  children: s.jsx(jC, {
                    licenceToEdit: r,
                    isLicenceCountReadonly: !0,
                    isLicenceActivation: !1,
                    wasSubmitted: r.wasSubmitted,
                    licenceCountDirectionChange: e,
                    isLoading: c,
                  }),
                }),
              ],
            }),
          }),
          s.jsx(D, {
            children: s.jsxs(G, {
              children: [
                s.jsx(Wn, { children: "Client" }),
                s.jsx(An, {
                  children: s.jsx(Ff, {
                    licenceToEdit: r,
                    wasSubmitted: r.wasSubmitted,
                  }),
                }),
              ],
            }),
          }),
        ],
      }),
    }),
  });
  const h = async (f) => await i(f).unwrap();
  return s.jsx(Pr, {
    backRoute: ur,
    performMutation: h,
    isSubmitting: a,
    submitError: o,
    navigateTo: Of,
    navigateWithIdParam: !0,
    entity: r,
    formLoadError: u,
    isLoadingForm: c,
    clearEntityReducer: _f,
    setEntityAsSubmittedReducer: Yc,
    children: d,
  });
};
function Y9() {
  const { state: t } = Dn(),
    { licenceNumber: e, licenceCountDirectionChange: n } = t || {},
    r = n == Co.Increase ? "Increase" : "Decrease";
  return s.jsxs(G, {
    children: [
      s.jsx(G.Header, { children: r }),
      s.jsx(G.Body, {
        children: s.jsx(Q9, {
          licenceNumber: e,
          licenceCountDirectionChange: n,
        }),
      }),
    ],
  });
}
function OC() {
  const t = k.useRef(null),
    [e, n] = k.useState(!1),
    [r, i] = k.useState(""),
    [o, a] = k.useState(null),
    [l, c] = k.useState(!1),
    u = k.useCallback(async (d, h, f) => {
      c(!0), a(null), n(!1);
      const p = f || ar.Get,
        m = h && p === ar.Get ? hC(h) : "",
        v = `${tC}${d}${m ? `?${m}` : ""}`;
      i(v);
      try {
        const C = await OH(),
          b = new Headers();
        b.append("Authorization", C),
          b.append("Accept", "application/pdf"),
          p === ar.Post && h && b.set("Content-Type", "application/json");
        const g = {
            method: p,
            headers: b,
            body: p === ar.Post ? JSON.stringify(h) : void 0,
          },
          y = await fetch(v, g);
        if (y.ok) {
          const w = await y.blob(),
            E = URL.createObjectURL(w);
          t.current &&
            ((t.current.data = E), (t.current.type = "application/pdf"), n(!0));
        } else {
          if (y.status === 403) a(rA);
          else {
            const w = await y.json();
            a(w.message);
          }
          n(!1);
        }
      } catch {
        a(iA), n(!1);
      } finally {
        c(!1);
      }
    }, []);
  return {
    objectRef: t,
    pdfLoaded: e,
    downloadPDF: u,
    pdfUrl: r,
    error: o,
    isLoading: l,
  };
}
const X9 = () => {
    const { id: t } = ob(),
      e = `/deliverynote/${t}`,
      {
        objectRef: n,
        pdfLoaded: r,
        isLoading: i,
        downloadPDF: o,
        error: a,
      } = OC(),
      l = k.useRef(!1);
    return (
      k.useEffect(() => {
        l.current || ((l.current = !0), o(e));
      }, [o]),
      s.jsxs("div", {
        children: [
          i && s.jsx(Ve, { animation: "border", variant: "primary" }),
          a && s.jsx(Qe, { error: a }),
          s.jsx("object", {
            ref: n,
            data: "",
            type: "application/pdf",
            height: "1000px",
            width: "100%",
            children:
              r &&
              s.jsxs("p", {
                children: [
                  "Your browser does not support embedded PDF files. You can ",
                  s.jsx("a", { href: e, children: "download the PDF" }),
                  " instead.",
                ],
              }),
          }),
        ],
      })
    );
  },
  vy = ({ value: t, reducer: e }) => {
    var f;
    const {
        dispatchReducer: n,
        localValue: r,
        setLocalValue: i,
      } = ma({ reducer: e, value: t }),
      o = () => {
        const p = Sd(
          (r == null ? void 0 : r.operator) ?? Je.EqualTo,
          (r == null ? void 0 : r.operand) ?? null
        );
        n(p);
      },
      a = (p) => {
        const m = p.target.value,
          v = Sd((r == null ? void 0 : r.operator) ?? Je.EqualTo, m);
        i(v), m !== "" && n(v);
      },
      l = (p) => {
        const m = Sd(p, (r == null ? void 0 : r.operand) ?? null);
        n(m);
      },
      c = (p) => {
        p.preventDefault(), o();
      },
      u = () => {
        o();
      },
      d =
        (r == null ? void 0 : r.operator) === Je.GreaterThan
          ? ">"
          : (r == null ? void 0 : r.operator) === Je.LessThan
          ? "<"
          : "=",
      h =
        ((f = r == null ? void 0 : r.operand) == null
          ? void 0
          : f.toString()) ?? "";
    return s.jsx(rt, {
      className: "m-1",
      onSubmit: (p) => c(p),
      onBlur: u,
      children: s.jsxs(si, {
        size: "sm",
        className: "xs",
        children: [
          s.jsx(rt.Control, {
            type: "Date",
            size: "sm",
            className: "xs",
            onChange: a,
            value: h,
          }),
          s.jsx("div", {
            className: "xs-split-button info",
            children: s.jsxs(Sf, {
              size: "sm",
              variant: "default",
              title: d,
              onClick: () => l((r == null ? void 0 : r.operator) ?? Je.EqualTo),
              children: [
                s.jsx(Ge.Item, {
                  onClick: () => {
                    l(Je.GreaterThan);
                  },
                  children: ">",
                }),
                s.jsx(Ge.Item, {
                  onClick: () => {
                    l(Je.EqualTo);
                  },
                  children: "=",
                }),
                s.jsx(Ge.Item, {
                  onClick: () => {
                    l(Je.LessThan);
                  },
                  children: "<",
                }),
              ],
            }),
          }),
        ],
      }),
    });
  },
  J9 = () => {
    const t = Lt(),
      e = Re((g) => g.licenceTransactionFilter),
      n = Re((g) => g.debtorFilter),
      [r] = lA(),
      i = (g) => ({ ...n, code: g }),
      o = (g) => ({ ...n, name: g, concatenateCodeAndDescription: !1 }),
      { data: a } = x$(),
      {
        data: l,
        isFetching: c,
        error: u,
      } = U$(e, { skip: e.organisationId === 0 }),
      d = k.useRef(null),
      h = l ?? [],
      f = (g) => {
        t(`/delivery-note/${g}`);
      },
      p = (g) => {
        t(`/edit-delivery-note/${g}`);
      };
    let m =
        l == null
          ? void 0
          : l.map((g, y) => {
              const w = y === l.length - Jt;
              return s.jsxs(
                "tr",
                {
                  ref: w ? d : null,
                  children: [
                    s.jsx("td", {
                      className: "date",
                      children: dr(g.transactionDate),
                    }),
                    s.jsx("td", {
                      className: "date",
                      children: dr(g.createDate),
                    }),
                    s.jsx("td", {
                      className:
                        "letter-space-3 text-end fw-500 pe-2 delivery-note",
                      children: g.deliveryNoteId,
                    }),
                    s.jsx("td", { children: g.licenceFrom }),
                    s.jsx("td", { children: g.licenceTo }),
                    s.jsx("td", {
                      className: "email-column",
                      children: g.clientEmail,
                    }),
                    s.jsx("td", {
                      className:
                        "letter-space-3 text-end fw-500 pe-2  licence-number",
                      children: g.licenceNumber,
                    }),
                    s.jsx("td", { children: g.licenceStatus }),
                    s.jsx("td", { children: g.deliveryNoteDetail }),
                    s.jsx("td", { children: g.detailedRemarks }),
                    s.jsx("td", {
                      className: "text-end pe-2 number",
                      children: g.systemSale,
                    }),
                    s.jsx("td", {
                      className: "text-end pe-2 number",
                      children: g.systemReturn,
                    }),
                    s.jsx("td", {
                      className: "text-center",
                      children: s.jsx(rt.Check, {
                        disabled: !0,
                        checked: g.processed ?? !1,
                      }),
                    }),
                    s.jsx("td", { children: g.debtor.name }),
                    s.jsx("td", { children: g.debtor.code }),
                    s.jsxs("td", {
                      children: [
                        s.jsx(Ui, {
                          size: "18",
                          className: "secondary ms-1",
                          title: "Edit",
                          onClick: () => p(g.id),
                        }),
                        s.jsx(Qb, {
                          size: "18",
                          className: "primary ms-1",
                          title: "Print Delivery Note",
                          onClick: () => f(g.deliveryNoteId),
                        }),
                      ],
                    }),
                  ],
                },
                g.id
              );
            }),
      v;
    c
      ? (v = s.jsx("tbody", {}))
      : u
      ? (v = s.jsx("tbody", {}))
      : (v = s.jsx("tbody", { children: m }));
    let C;
    c
      ? (C = s.jsx(Ve, { animation: "border", variant: "primary" }))
      : u
      ? (C = s.jsx(Qe, { error: u }))
      : (l == null ? void 0 : l.length) === 0
      ? (C = s.jsx("div", { children: "No data found." }))
      : (C = s.jsx(s.Fragment, {}));
    const b = { value: e.sortByParameters, reducer: Q6 };
    return s.jsxs("div", {
      style: { height: Sa, overflowY: "auto" },
      children: [
        s.jsxs(Gi, {
          striped: !0,
          bordered: !0,
          hover: !0,
          size: "sm",
          children: [
            s.jsxs("thead", {
              children: [
                s.jsxs("tr", {
                  children: [
                    s.jsx("th", {
                      colSpan: 10,
                      className: "text-center",
                      children: "Licence Transaction",
                    }),
                    s.jsx("th", {
                      colSpan: 3,
                      className: "text-center alt",
                      children: "System",
                    }),
                    s.jsx("th", {
                      colSpan: 2,
                      className: "text-center",
                      children: "Debtor",
                    }),
                    s.jsx("th", {
                      className: "text-center alt",
                      children: "Actions",
                    }),
                  ],
                }),
                s.jsxs("tr", {
                  children: [
                    s.jsx(fe, {
                      headerText: "Transaction Date",
                      width: "4%",
                      sortByFieldName: "transactionDate",
                      ...b,
                      children: s.jsx(vy, {
                        value: e.transactionDateComparison,
                        reducer: M6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Created Date",
                      width: "4%",
                      sortByFieldName: "createDate",
                      ...b,
                      children: s.jsx(vy, {
                        value: e.createdDateComparison,
                        reducer: F6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Delivery Note",
                      width: "8%",
                      sortByFieldName: "deliveryNoteId",
                      ...b,
                      children: s.jsx(yy, {
                        title: "Delivery Note Search",
                        value: e.deliveryNoteId,
                        reducer: B6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "From",
                      width: "6%",
                      sortByFieldName: "licenceFrom",
                      ...b,
                      children: s.jsx(ze, {
                        id: "fromSearch",
                        value: e.from,
                        reducer: U6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "To",
                      width: "6%",
                      sortByFieldName: "licenceTo",
                      ...b,
                      children: s.jsx(ze, {
                        id: "toSearch",
                        value: e.to,
                        reducer: z6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Client Email",
                      width: "4%",
                      sortByFieldName: "clientEmail",
                      ...b,
                      children: s.jsx(ze, {
                        id: "clientEmailSearch",
                        value: e.clientEmail,
                        reducer: H6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Licence Number",
                      sortByFieldName: "licenceNumber",
                      width: "7.5%",
                      ...b,
                      children: s.jsx(yy, {
                        title: "Licence Number Search",
                        value: e.licenceNumber,
                        reducer: $6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Status",
                      width: "5%",
                      sortByFieldName: "licenceStatus",
                      ...b,
                      children: s.jsx(ii, {
                        reducer: K6,
                        items: a,
                        labelKey: "code",
                        valueKey: "code",
                        minLength: 1,
                        isWildcardSearchAllowed: !1,
                        value: e.licenceStatus,
                        addClassNames: "xs",
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Detail",
                      width: "8%",
                      sortByFieldName: "detail",
                      ...b,
                      children: s.jsx(ze, {
                        id: "detailSearch",
                        value: e.deliveryNoteDetail,
                        reducer: q6,
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Remarks",
                      width: "8%",
                      sortByFieldName: "remarks",
                      ...b,
                      children: s.jsx(ze, {
                        id: "remarksSearch",
                        value: e.deliveryNoteRemarks,
                        reducer: G6,
                      }),
                    }),
                    s.jsx(fe, {
                      className: "alt",
                      headerText: "Sale",
                      sortByFieldName: "systemSale",
                      width: "5.5%",
                      ...b,
                      children: s.jsx(Qo, {
                        value: e.systemSalesComparison,
                        reducer: Y6,
                        type: le.Number,
                      }),
                    }),
                    s.jsx(fe, {
                      className: "alt",
                      headerText: "Return",
                      sortByFieldName: "licenceCount",
                      width: "5.5%",
                      ...b,
                      children: s.jsx(Qo, {
                        value: e.systemReturnsComparison,
                        reducer: X6,
                        type: le.Number,
                      }),
                    }),
                    s.jsx(fe, {
                      className: "alt",
                      headerText: "Processed",
                      width: "2%",
                      sortByFieldName: "processed",
                      ...b,
                      children: s.jsx(s.Fragment, {}),
                    }),
                    s.jsx(fe, {
                      headerText: "Name",
                      sortByFieldName: "debtorName",
                      width: "10%",
                      ...b,
                      children: s.jsx(ii, {
                        trigger: (g) => r(g).unwrap(),
                        filterQuery: o,
                        reducer: mC,
                        labelKey: "description",
                        valueKey: "description",
                        minLength: 2,
                        isWildcardSearchAllowed: !0,
                        value: e.debtorName,
                        addClassNames: "xs",
                      }),
                    }),
                    s.jsx(fe, {
                      headerText: "Code",
                      sortByFieldName: "debtorCode",
                      width: "5%",
                      ...b,
                      children: s.jsx(ii, {
                        trigger: (g) => r(g).unwrap(),
                        filterQuery: i,
                        reducer: gC,
                        labelKey: "code",
                        valueKey: "code",
                        minLength: 2,
                        isWildcardSearchAllowed: !0,
                        value: e.debtorCode,
                        addClassNames: "xs",
                      }),
                    }),
                    s.jsx("th", { className: "alt", style: { width: "5%" } }),
                  ],
                }),
              ],
            }),
            v,
          ],
        }),
        C,
        s.jsx(xa, {
          items: h,
          isFetching: c,
          error: u,
          lastRowRef: d,
          pageSize: e.pageSize,
          pageSizeReducer: _6,
        }),
      ],
    });
  },
  Lj = (t = !0) => {
    const e = Ae(),
      { data: n } = $$();
    k.useEffect(() => {
      n && e(wC(n));
    }, [n, t]);
  };
function Z9() {
  const { initiateDownload: t, status: e } = Oh(),
    n = Re((h) => h.deliveryNoteReportFilter),
    { initiateDownload: r, status: i } = Oh();
  Lj();
  const o = Ae(),
    a = Re((h) => h.licenceTransactionFilter),
    l = () => {
      o(W6());
    },
    c = () => {
      o(V6());
    },
    u = () => {
      r("/deliveryNote/listingExcelReport", n, "DeliveryNoteListing.xlsx");
    },
    d = () => {
      t(o$, a, a$, ar.Post);
    };
  return s.jsxs(s.Fragment, {
    children: [
      s.jsxs(G, {
        className: "mb-3",
        children: [
          s.jsx(G.Header, { children: "Organisation" }),
          s.jsxs(G.Body, {
            children: [
              s.jsxs(M, {
                children: [
                  s.jsx(D, {
                    sm: 7,
                    className: "ml-auto",
                    children: s.jsx(Xc, {}),
                  }),
                  s.jsx(D, {
                    sm: 2,
                    children: s.jsx(L, {
                      className: "w-100 text-end",
                      label: "Delivery Notes Range:",
                      id: "deliveryNoteLabelFrom",
                    }),
                  }),
                  s.jsx(D, {
                    sm: 1,
                    className: "text-end",
                    children: s.jsx(re, {
                      maxLength: 8,
                      reducer: JA,
                      type: le.Number,
                      id: "deliveryNoteFrom",
                      value: n.fromDeliveryNoteId ?? "",
                    }),
                  }),
                  s.jsx(D, {
                    sm: 1,
                    className: "text-end",
                    children: s.jsx(re, {
                      maxLength: 8,
                      reducer: wC,
                      type: le.Number,
                      id: "deliveryNoteTo",
                      value: n.toDeliveryNoteId ?? "",
                    }),
                  }),
                  s.jsx(D, {
                    sm: 1,
                    className: "text-end",
                    children: s.jsxs(xe, {
                      size: "sm",
                      variant: "success btn-min-100 ms-1",
                      id: "deliveryNoteListingButton",
                      onClick: u,
                      children: [
                        s.jsx(Ps, { className: "me-1 mb-1" }),
                        s.jsx("span", { children: " Listings" }),
                        i.loading
                          ? s.jsx(Ve, {
                              animation: "border",
                              size: "sm",
                              className: "ms-1 outline-excel",
                            })
                          : s.jsx(s.Fragment, {}),
                      ],
                    }),
                  }),
                ],
              }),
              i.error &&
                s.jsx(M, {
                  className: "mt-3",
                  children: s.jsx(Qe, { error: i.error }),
                }),
            ],
          }),
        ],
      }),
      s.jsxs(G, {
        children: [
          s.jsx(G.Header, {
            children: "Licence Transactions (Delivery Note Tracking)",
          }),
          s.jsxs(G.Body, {
            children: [
              s.jsx(M, {
                className: "mb-3",
                children: s.jsxs("div", {
                  className: "d-flex justify-content-between",
                  children: [
                    s.jsx("div", {}),
                    "  ",
                    s.jsxs("div", {
                      children: [
                        s.jsxs(xe, {
                          size: "sm",
                          variant: "outline-warning btn-min-100 ms-1",
                          onClick: l,
                          children: [
                            s.jsx(gr, { className: "me-1 mb-1" }),
                            s.jsx("span", { children: " Clear Filter" }),
                          ],
                        }),
                        s.jsxs(xe, {
                          size: "sm",
                          variant: "outline-secondary",
                          className: "ms-1 btn-min-100",
                          onClick: c,
                          children: [
                            s.jsx(fi, { className: "me-1 mb-1" }),
                            s.jsx("span", { children: " Clear Sort" }),
                          ],
                        }),
                        s.jsxs(xe, {
                          size: "sm",
                          className: "ms-1 btn-excel btn-min-100",
                          onClick: d,
                          children: [
                            s.jsx(Ps, { className: "me-1 mb-1" }),
                            s.jsx("span", { children: " Excel" }),
                            e.loading
                              ? s.jsx(Ve, {
                                  animation: "border",
                                  size: "sm",
                                  className: "ms-1 excel",
                                })
                              : s.jsx(s.Fragment, {}),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              }),
              e.error
                ? s.jsx(Qe, {
                    error: "Failed to download Delivery Note Export.",
                  })
                : s.jsx(s.Fragment, {}),
              s.jsx(J9, {}),
            ],
          }),
        ],
      }),
    ],
  });
}
function eY() {
  const t = Ae(),
    { data: e, isFetching: n, error: r } = eA(),
    { data: i, isFetching: o, error: a } = Zs(),
    l = Re((w) => w.deliveryNoteReportFilter),
    c = n || o,
    [u, d] = k.useState(!1);
  Lj(u);
  const h = () => {
      t(oG()), d(!u);
    },
    {
      objectRef: f,
      pdfLoaded: p,
      pdfUrl: m,
      downloadPDF: v,
      error: C,
      isLoading: b,
    } = OC(),
    g = b ? "Downloading" : "Download",
    y = async () => {
      f.current && (f.current.data = ""), await v("/deliveryNote/pdfReport", l);
    };
  return s.jsxs(s.Fragment, {
    children: [
      s.jsxs(G, {
        className: "mb-3",
        children: [
          s.jsx(G.Header, { children: "Delivery Notes Report Builder" }),
          s.jsxs(G.Body, {
            children: [
              s.jsxs(M, {
                className: "mb-2",
                children: [
                  s.jsx(D, {
                    sm: 2,
                    children: s.jsx(L, {
                      className: "w-100 text-end",
                      label: "Organisation",
                      id: "organisationLabel",
                    }),
                  }),
                  s.jsx(D, {
                    sm: 2,
                    className: "ml-auto",
                    children: s.jsx(sr, {
                      id: "organisations",
                      value: l.organisationId,
                      reducer: tG,
                      items: i ?? null,
                      displayValue: "description",
                      idKey: "id",
                      isRequired: !1,
                      isFetching: n,
                      error: a,
                      wasSubmitted: !1,
                    }),
                  }),
                ],
              }),
              s.jsxs(M, {
                className: "mb-2",
                children: [
                  s.jsx(D, {
                    sm: 2,
                    children: s.jsx(L, {
                      className: "w-100 text-end",
                      label: "Debtor Code",
                      id: "debtorCodeLabel",
                    }),
                  }),
                  s.jsx(D, {
                    sm: 2,
                    className: "text-end",
                    children: s.jsx(re, {
                      maxLength: 15,
                      id: "debtorCodeFilter",
                      value: l.debtorCode,
                      reducer: nG,
                    }),
                  }),
                ],
              }),
              s.jsxs(M, {
                className: "mb-2",
                children: [
                  s.jsx(D, {
                    sm: 2,
                    children: s.jsx(L, {
                      className: "w-100 text-end",
                      label: "From Delivery Note",
                      id: "deliveryNoteFromLabel",
                    }),
                  }),
                  s.jsx(D, {
                    sm: 2,
                    className: "text-end",
                    children: s.jsx(re, {
                      maxLength: 8,
                      type: le.Number,
                      id: "deliveryNoteFromFilter",
                      value: l.fromDeliveryNoteId,
                      reducer: JA,
                    }),
                  }),
                ],
              }),
              s.jsxs(M, {
                className: "mb-2",
                children: [
                  s.jsx(D, {
                    sm: 2,
                    children: s.jsx(L, {
                      className: "w-100 text-end",
                      label: "To Delivery Note",
                      id: "deliveryNoteToLabel",
                    }),
                  }),
                  s.jsx(D, {
                    sm: 2,
                    className: "text-end",
                    children: s.jsx(re, {
                      maxLength: 8,
                      type: le.Number,
                      id: "deliveryNoteToFilter",
                      value: l.toDeliveryNoteId,
                      reducer: wC,
                    }),
                  }),
                ],
              }),
              s.jsxs(M, {
                className: "mb-2",
                children: [
                  s.jsx(D, {
                    sm: 2,
                    children: s.jsx(L, {
                      className: "w-100 text-end",
                      label: "Billed By",
                      id: "deliveryNoteToLabel",
                    }),
                  }),
                  s.jsx(D, {
                    sm: 2,
                    className: "text-end",
                    children: s.jsx(sr, {
                      id: "billedBy",
                      value: l.billedByUserId,
                      reducer: rG,
                      items: e ?? null,
                      displayValue: "description",
                      idKey: "id",
                      isRequired: !1,
                      isFetching: n,
                      error: r,
                      wasSubmitted: !1,
                    }),
                  }),
                ],
              }),
              s.jsxs(M, {
                className: "mb-2",
                children: [
                  s.jsx(D, {
                    sm: 2,
                    children: s.jsx(L, {
                      className: "w-100 text-end",
                      label: "Set By",
                      id: "deliveryNoteToLabel",
                    }),
                  }),
                  s.jsx(D, {
                    sm: 2,
                    className: "text-end",
                    children: s.jsx(sr, {
                      id: "billedBy",
                      value: l.setByUserId,
                      reducer: iG,
                      items: e ?? null,
                      displayValue: "description",
                      idKey: "id",
                      isRequired: !1,
                      isFetching: n,
                      error: r,
                      wasSubmitted: !1,
                    }),
                  }),
                ],
              }),
              C
                ? s.jsx(M, {
                    className: "mb-2",
                    children: s.jsx(Qe, { error: C }),
                  })
                : s.jsx(s.Fragment, {}),
              s.jsx(M, {
                children: s.jsx(D, {
                  sm: 4,
                  children: s.jsxs("div", {
                    className: "mb-2 text-end",
                    children: [
                      s.jsxs(xe, {
                        size: "sm",
                        variant: "outline-warning btn-min-100 ms-1",
                        onClick: h,
                        children: [
                          s.jsx(gr, { className: "me-1 mb-1" }),
                          s.jsx("span", { children: " Clear Filter" }),
                        ],
                      }),
                      s.jsxs(xe, {
                        id: "saveButton",
                        variant: "outline-danger",
                        type: "button",
                        size: "sm",
                        className: "ms-1 btn-min-100",
                        disabled: c || b,
                        onClick: y,
                        children: [
                          s.jsx(Tf, { className: "me-1 mb-1" }),
                          g,
                          b
                            ? s.jsx(Ve, {
                                animation: "border",
                                size: "sm",
                                className: "ms-1 danger",
                              })
                            : s.jsx(s.Fragment, {}),
                        ],
                      }),
                    ],
                  }),
                }),
              }),
            ],
          }),
        ],
      }),
      s.jsx("object", {
        ref: f,
        data: "",
        type: "application/pdf",
        height: "1000px",
        width: "100%",
        children:
          p &&
          s.jsxs("p", {
            children: [
              "Your browser does not support embedded PDF files. You can ",
              s.jsx("a", { href: m, children: "download the PDF" }),
              " instead.",
            ],
          }),
      }),
    ],
  });
}
const tY = ({ transactionId: t }) => {
  const e = Ae(),
    { data: n, isFetching: r, error: i } = H$(t),
    [o, { error: a, isLoading: l }] = z$();
  k.useEffect(() => {
    n != null && e(Uq(n));
  }, [n, e]);
  const c = Re((h) => h.editLicenceTransaction);
  let u =
    n &&
    s.jsx(s.Fragment, {
      children: s.jsxs(Or, {
        children: [
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "deliveryNoteIdLabel",
                labelColSize: 2,
                label: "Delivery Note Number",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 6,
                children: s.jsx(re, {
                  id: "licenceNumber",
                  value: n.deliveryNoteId,
                  maxLength: 127,
                  wasSubmitted: !0,
                  isReadonly: !0,
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "transactionDateLabel",
                labelColSize: 2,
                label: "Transaction Date",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 6,
                children: s.jsx(re, {
                  id: "licenceNumber",
                  value: c.transactionDate,
                  reducer: zq,
                  type: le.Date,
                  wasSubmitted: c.wasSubmitted,
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "licenceNumberFromLabel",
                labelColSize: 2,
                label: "From",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 6,
                children: s.jsx(re, {
                  id: "licenceNumberFrom",
                  value: n.licenceFrom,
                  maxLength: 127,
                  wasSubmitted: !0,
                  isReadonly: !0,
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "licenceNumberToLabel",
                labelColSize: 2,
                label: "To",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 6,
                children: s.jsx(re, {
                  id: "licenceNumberTo",
                  value: n.licenceTo,
                  maxLength: 127,
                  wasSubmitted: !0,
                  isReadonly: !0,
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "remarksLabel",
                labelColSize: 2,
                label: "Remarks",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 6,
                children: s.jsx(re, {
                  id: "remarks",
                  value: n.remarks,
                  maxLength: 127,
                  wasSubmitted: !0,
                  isReadonly: !0,
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "deliveryNoteDetailLabel",
                labelColSize: 2,
                label: "Detail",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 6,
                children: s.jsx(re, {
                  id: "deliveryNoteDetail",
                  value: c.deliveryNoteDetail,
                  reducer: Fq,
                  maxLength: 127,
                  wasSubmitted: c.wasSubmitted,
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "systemSaleLabel",
                labelColSize: 2,
                label: "Sale",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 6,
                children: s.jsx(re, {
                  id: "systemSale",
                  value: n.systemSale,
                  maxLength: 127,
                  wasSubmitted: !0,
                  isReadonly: !0,
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "systemReturnLabel",
                labelColSize: 2,
                label: "Return",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 6,
                children: s.jsx(re, {
                  id: "systemReturn",
                  value: n.systemReturn,
                  maxLength: 127,
                  wasSubmitted: !0,
                  isReadonly: !0,
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "processedLabel",
                labelColSize: 2,
                label: "Processed",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 6,
                children: s.jsx(di, {
                  id: "processed",
                  checked: c.processed,
                  className: "sm",
                  label: "",
                  reducer: Bq,
                }),
              }),
            ],
          }),
        ],
      }),
    });
  const d = async (h) => await o(h).unwrap();
  return s.jsx(Pr, {
    backRoute: "/delivery-note-tracking",
    performMutation: d,
    isSubmitting: l,
    submitError: a,
    navigateTo: "/delivery-note-tracking",
    entity: c,
    formLoadError: i,
    isLoadingForm: r,
    clearEntityReducer: Hq,
    setEntityAsSubmittedReducer: Yc,
    children: u,
  });
};
function nY() {
  const { id: t } = ob(),
    e = parseInt((t == null ? void 0 : t.toString()) ?? "");
  return s.jsx(s.Fragment, {
    children: s.jsxs(G, {
      children: [
        s.jsx(G.Header, { children: "Edit Licence Transaction" }),
        s.jsx(G.Body, { children: s.jsx(tY, { transactionId: e }) }),
      ],
    }),
  });
}
const rY = () => {
  const t = Ae(),
    e = Re((u) => u.licenceListWithClientReport),
    {
      data: n,
      isFetching: r,
      error: i,
    } = N$(e.debtorFilter, { skip: e.organisationId === null });
  let o =
      n == null
        ? void 0
        : n.map((u, d) => {
            var f;
            const h =
              ((e.useDebtorFilter && !e.excludedDebtorCodes.includes(u.code)) ||
                ((f = e.debtorCodes) == null ? void 0 : f.includes(u.code))) ??
              !1;
            return s.jsxs(
              "tr",
              {
                children: [
                  s.jsx("td", { children: u.code }),
                  s.jsx("td", { children: u.name }),
                  s.jsx("td", {
                    children: s.jsx(rt.Check, {
                      id: `debtor-checkbox-${d}`,
                      inline: !0,
                      label: "",
                      type: "checkbox",
                      checked: h,
                      onChange: (p) => {
                        p.target.checked ? t(Vq(u.code)) : t(Qq(u.code));
                      },
                    }),
                  }),
                ],
              },
              u.code
            );
          }),
    a;
  r
    ? (a = s.jsx("tbody", {}))
    : i
    ? (a = s.jsx("tbody", {}))
    : (a = s.jsx("tbody", { children: o }));
  let l;
  r
    ? (l = s.jsx(Ve, { animation: "border", variant: "primary" }))
    : i
    ? (l = s.jsx(Qe, { error: "Failed to retrieve Debtors." }))
    : (n == null ? void 0 : n.length) === 0
    ? (l = s.jsx("div", { children: "No data found." }))
    : (l = s.jsx(s.Fragment, {}));
  const c = { value: e.debtorFilter.sortByParameters, reducer: Wq };
  return s.jsxs("div", {
    style: { height: Sa, overflowY: "auto" },
    children: [
      s.jsxs(Gi, {
        striped: !0,
        bordered: !0,
        hover: !0,
        size: "sm",
        children: [
          s.jsx("thead", {
            children: s.jsxs("tr", {
              children: [
                s.jsx(fe, {
                  headerText: "Debt Number",
                  width: "10%",
                  sortByFieldName: "number",
                  ...c,
                  children: s.jsx(ze, {
                    id: "debtorCodeSearch",
                    value: e.debtorFilter.code,
                    reducer: Gq,
                  }),
                }),
                s.jsx(fe, {
                  headerText: "Debt Name",
                  width: "87%",
                  sortByFieldName: "name",
                  ...c,
                  children: s.jsx(ze, {
                    id: "debtorNameSearch",
                    value: e.debtorFilter.name,
                    reducer: qq,
                  }),
                }),
                s.jsx("th", {
                  className: "text-center alt align-bottom",
                  style: { width: "3%" },
                  children: s.jsx(di, {
                    id: "debtor-checkbox-all",
                    label: "",
                    checked:
                      e.useDebtorFilter && e.excludedDebtorCodes.length === 0,
                    reducer: Xq,
                    className: "header-checkbox",
                  }),
                }),
              ],
            }),
          }),
          a,
        ],
      }),
      l,
    ],
  });
};
function iY() {
  const t = Lt(),
    e = Re((d) => d.licenceListWithClientReport),
    n = e.useDebtorFilter || (e.debtorCodes && e.debtorCodes.length > 0),
    { initiateDownload: r, status: i } = Oh(),
    o = Ae(),
    a = () => {
      o(Jq());
    },
    l = () => {
      o(Yq());
    },
    c = () => {
      t(nA);
    },
    u = () => {
      r(n$, e, r$, ar.Post);
    };
  return s.jsxs(s.Fragment, {
    children: [
      s.jsxs(G, {
        className: "mb-3",
        children: [
          s.jsx(G.Header, { children: "Organisation" }),
          s.jsx(G.Body, {
            children: s.jsx(M, {
              children: s.jsx(D, { sm: 9, children: s.jsx(Xc, {}) }),
            }),
          }),
        ],
      }),
      s.jsxs(G, {
        children: [
          s.jsx(G.Header, { children: "Debtor selection for report" }),
          s.jsxs(G.Body, {
            children: [
              s.jsx(M, {
                className: "mb-3",
                children: s.jsx(D, {
                  children: s.jsxs("div", {
                    className: "d-flex justify-content-between",
                    children: [
                      s.jsxs(xe, {
                        id: "viewPdf",
                        variant: "outline-danger",
                        type: "button",
                        size: "sm",
                        className: "ms-1 btn-min-100",
                        disabled: !n || i.loading,
                        onClick: c,
                        children: [
                          s.jsx(Tf, { className: "me-1 mb-1" }),
                          s.jsx("span", { children: " View PDF" }),
                        ],
                      }),
                      s.jsxs("div", {
                        children: [
                          s.jsxs(xe, {
                            id: "filter",
                            size: "sm",
                            variant: "outline-warning btn-min-100 ms-1 ",
                            onClick: a,
                            children: [
                              s.jsx(gr, { className: "me-1 mb-1" }),
                              s.jsx("span", { children: " Clear Filter" }),
                            ],
                          }),
                          s.jsxs(xe, {
                            id: "sort",
                            size: "sm",
                            variant: "outline-secondary",
                            className: "ms-1 btn-min-100",
                            onClick: l,
                            children: [
                              s.jsx(fi, { className: "me-1 mb-1" }),
                              s.jsx("span", { children: " Clear Sort" }),
                            ],
                          }),
                          s.jsxs(xe, {
                            id: "export",
                            size: "sm",
                            variant: "outline",
                            className: "ms-1 btn-excel btn-min-100",
                            onClick: u,
                            disabled: !n || i.loading,
                            children: [
                              s.jsx(Ps, { className: "me-1 mb-1" }),
                              s.jsx("span", { children: " Excel" }),
                              i.loading
                                ? s.jsx(Ve, {
                                    animation: "border",
                                    size: "sm",
                                    className: "ms-1",
                                  })
                                : s.jsx(s.Fragment, {}),
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                }),
              }),
              i.error
                ? s.jsx(Qe, { error: "Failed to download Excel report." })
                : s.jsx(s.Fragment, {}),
              s.jsx(rY, {}),
            ],
          }),
        ],
      }),
    ],
  });
}
function oY() {
  const { state: t } = Dn(),
    { message: e } = t || {};
  return s.jsx(s.Fragment, {
    children: s.jsx(D, { sm: 3, children: s.jsx(Qe, { error: e }) }),
  });
}
function aY() {
  const t = Re((l) => l.licenceListWithClientReport),
    {
      objectRef: e,
      pdfLoaded: n,
      isLoading: r,
      pdfUrl: i,
      downloadPDF: o,
    } = OC(),
    a = k.useRef(!1);
  return (
    k.useEffect(() => {
      a.current || ((a.current = !0), o(i$, t, ar.Post));
    }, [t, o]),
    s.jsxs("div", {
      children: [
        r && s.jsx(Ve, { animation: "border", variant: "primary" }),
        s.jsx("object", {
          ref: e,
          data: "",
          type: "application/pdf",
          height: "1000px",
          width: "100%",
          children:
            n &&
            s.jsxs("p", {
              children: [
                "Your browser does not support embedded PDF files. You can ",
                s.jsx("a", { href: i, children: "download the PDF" }),
                " instead.",
              ],
            }),
        }),
      ],
    })
  );
}
const sY = () => {
  const t = Lt(),
    e = Re((p) => p.systemInformationListFilter),
    { data: n, isFetching: r, error: i } = V$(e),
    o = k.useRef(null),
    a = n ?? [],
    l = (p) => {
      t(`/client-support/view-detail/${p.lookupId}`);
    };
  let c =
      n == null
        ? void 0
        : n.map((p, m) => {
            var C;
            const v = m === n.length - Jt;
            return s.jsxs(
              "tr",
              {
                ref: v ? o : null,
                children: [
                  s.jsx("td", { children: p.id }),
                  s.jsx("td", {
                    children: dr(
                      ((C = p.submitDate) == null ? void 0 : C.toString()) ?? ""
                    ),
                  }),
                  s.jsx("td", {
                    className:
                      "letter-space-3 text-end fw-500 pe-2 licence-number",
                    children: p.licenceSerialNumber,
                  }),
                  s.jsx("td", { children: p.userName }),
                  s.jsx("td", { children: p.userCompany }),
                  s.jsx("td", { children: p.version }),
                  s.jsx("td", { children: p.debtNumber }),
                  s.jsx("td", {
                    children: s.jsx(Kb, {
                      size: "18",
                      className: "secondary ms-1",
                      title: "Edit",
                      onClick: () => l(p),
                    }),
                  }),
                ],
              },
              p.id
            );
          }),
    u;
  r
    ? (u = s.jsx("tbody", {}))
    : i
    ? (u = s.jsx("tbody", {}))
    : (u = s.jsx("tbody", { children: c }));
  let d;
  r
    ? (d = s.jsx(Ve, { animation: "border", variant: "primary" }))
    : i
    ? (d = s.jsx(Qe, { error: i }))
    : (n == null ? void 0 : n.length) === 0
    ? (d = s.jsx("div", { children: "No data found." }))
    : (d = s.jsx(s.Fragment, {}));
  const h = { value: e.sortByParameters, reducer: mG },
    f = /^(?:0|[1-9]\d{0,8})$/;
  return s.jsxs("div", {
    style: { height: Sa, overflowY: "auto" },
    children: [
      s.jsxs(Gi, {
        striped: !0,
        bordered: !0,
        hover: !0,
        size: "sm",
        children: [
          s.jsx("thead", {
            children: s.jsxs("tr", {
              children: [
                s.jsx(fe, {
                  headerText: "ID",
                  width: "13.6%",
                  sortByFieldName: "id",
                  ...h,
                  children: s.jsx(ze, {
                    id: "exemptionId",
                    value: e.id,
                    reducer: lG,
                    inputRegex: f,
                  }),
                }),
                s.jsx(fe, {
                  headerText: "Submit date",
                  width: "13.6%",
                  sortByFieldName: "submitDate",
                  ...h,
                  children: s.jsx(vy, {
                    value: e.submitDateComparison,
                    reducer: cG,
                  }),
                }),
                s.jsx(fe, {
                  headerText: "Licence Serial Number",
                  width: "13.6%",
                  sortByFieldName: "licenceSerialNumber",
                  ...h,
                  children: s.jsx(ze, {
                    id: "licenceSerialNumber",
                    value: e.licenceSerialNumber,
                    reducer: uG,
                    inputRegex: f,
                  }),
                }),
                s.jsx(fe, {
                  headerText: "User Name",
                  width: "13.6%",
                  sortByFieldName: "userName",
                  ...h,
                  children: s.jsx(ze, {
                    id: "userName",
                    value: e.userName,
                    reducer: dG,
                  }),
                }),
                s.jsx(fe, {
                  headerText: "User Company",
                  width: "13.6%",
                  sortByFieldName: "userCompany",
                  ...h,
                  children: s.jsx(ze, {
                    id: "userCompany",
                    value: e.userCompany,
                    reducer: hG,
                  }),
                }),
                s.jsx(fe, {
                  headerText: "Version",
                  width: "13.6%",
                  sortByFieldName: "version",
                  ...h,
                  children: s.jsx(ze, {
                    id: "version",
                    value: e.version,
                    reducer: fG,
                  }),
                }),
                s.jsx(fe, {
                  headerText: "Debt Number",
                  width: "13.6%",
                  sortByFieldName: "debtNumber",
                  ...h,
                  children: s.jsx(ze, {
                    id: "debtNumber",
                    value: e.debtNumber,
                    reducer: pG,
                  }),
                }),
                s.jsx("th", {
                  className: "text-center alt align-top",
                  style: { width: "4%" },
                  children: "Actions",
                }),
              ],
            }),
          }),
          u,
        ],
      }),
      d,
      s.jsx(xa, {
        items: a,
        isFetching: r,
        error: i,
        lastRowRef: o,
        pageSize: e.pageSize,
        pageSizeReducer: gG,
      }),
    ],
  });
};
function lY() {
  const t = Ae(),
    e = () => {
      t(vG());
    },
    n = () => {
      t(yG());
    };
  return s.jsx(s.Fragment, {
    children: s.jsxs(G, {
      children: [
        s.jsx(G.Header, { children: "System Information List" }),
        s.jsxs(G.Body, {
          children: [
            s.jsx(M, {
              className: "mb-3",
              children: s.jsx(D, {
                children: s.jsxs("div", {
                  className: "d-flex justify-content-between",
                  children: [
                    s.jsx("div", { children: " " }),
                    s.jsxs("div", {
                      children: [
                        s.jsxs(xe, {
                          id: "filter",
                          size: "sm",
                          variant: "outline-warning btn-min-100 ms-1 ",
                          onClick: e,
                          children: [
                            s.jsx(gr, { className: "me-1 mb-1" }),
                            s.jsx("span", { children: " Clear Filter" }),
                          ],
                        }),
                        s.jsxs(xe, {
                          id: "sort",
                          size: "sm",
                          variant: "outline-secondary",
                          className: "ms-1 btn-min-100",
                          onClick: n,
                          children: [
                            s.jsx(fi, { className: "me-1 mb-1" }),
                            s.jsx("span", { children: " Clear Sort" }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              }),
            }),
            s.jsx(sY, {}),
          ],
        }),
      ],
    }),
  });
}
const cY = ({ ccisUser: t, showModal: e, onModalClose: n, userIsNew: r }) => {
    const i = Ae(),
      o = Re((b) => b.linkUser),
      [a, l] = x.useState(null),
      [c, { isLoading: u, error: d }] = PH(),
      [h, { isLoading: f, error: p }] = _H();
    x.useEffect(() => {
      e && (l(null), i(wG(t.ccisId)));
    }, [e]),
      x.useEffect(() => {
        (d || p) && l("Failed to link the user.");
      }, [d, p]);
    const m = () => {
        u === !1 && n();
      },
      v = () => {
        u === !1 &&
          f === !1 &&
          (r
            ? c(o)
                .unwrap()
                .then(() => {
                  n();
                })
            : h(o)
                .unwrap()
                .then(() => {
                  n();
                }));
      };
    let C;
    return (
      u || f
        ? (C = s.jsx(Ve, { animation: "border", variant: "primary" }))
        : a
        ? (C = s.jsx(Qe, { error: a }))
        : (C = s.jsxs(Or, {
            children: [
              s.jsxs(G, {
                className: "mb-3",
                children: [
                  s.jsx(G.Header, { children: "User" }),
                  s.jsxs(G.Body, {
                    children: [
                      s.jsxs(M, {
                        children: [
                          s.jsx(L, {
                            id: "email",
                            label: "Email:",
                            labelColSize: 5,
                            className: "input-label",
                          }),
                          " ",
                          s.jsx(L, {
                            id: "emailValueLabel",
                            labelColSize: 7,
                            label: t.email,
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        children: [
                          s.jsx(L, {
                            id: "userId",
                            label: "User Id:",
                            labelColSize: 5,
                            className: "input-label",
                          }),
                          " ",
                          s.jsx(L, {
                            id: "userIdValueLabel",
                            labelColSize: 7,
                            label: t.ccisId,
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        children: [
                          s.jsx(L, {
                            id: "isApproved",
                            label: "Approved:",
                            labelColSize: 5,
                            className: "input-label",
                          }),
                          " ",
                          s.jsx(L, {
                            id: "isApprovedValueLabel",
                            labelColSize: 7,
                            label: t.isApproved ? "True" : "False",
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        children: [
                          s.jsx(L, {
                            id: "isLockedOut",
                            label: "Locked Out:",
                            labelColSize: 5,
                            className: "input-label",
                          }),
                          " ",
                          s.jsx(L, {
                            id: "isLockedOutValueLabel",
                            labelColSize: 7,
                            label: t.isLockedOut ? "True" : "False",
                          }),
                        ],
                      }),
                      s.jsxs(M, {
                        children: [
                          s.jsx(L, {
                            id: "comment",
                            label: "Comment:",
                            labelColSize: 5,
                            className: "input-label",
                          }),
                          " ",
                          s.jsx(L, {
                            id: "commentValueLabel",
                            labelColSize: 7,
                            label: t.comment,
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
              s.jsxs(M, {
                children: [
                  s.jsx(L, {
                    id: "subLabel",
                    label: "Sub:",
                    labelColSize: 5,
                    className: "input-label",
                    isRequired: !0,
                  }),
                  s.jsx(D, {
                    sm: 5,
                    children: s.jsx(re, {
                      id: "sub",
                      value: o.sub,
                      reducer: SG,
                      isRequired: !0,
                      maxLength: 50,
                    }),
                  }),
                ],
              }),
              s.jsx("br", {}),
            ],
          })),
      s.jsx(s.Fragment, {
        children: s.jsxs(or, {
          size: "lg",
          show: e,
          onHide: m,
          variant: "primary",
          children: [
            s.jsx(or.Header, {
              closeButton: !0,
              children: s.jsx(or.Title, { children: "Link User" }),
            }),
            s.jsxs(or.Body, {
              children: [
                C,
                s.jsxs("div", {
                  className: "text-center",
                  children: [
                    s.jsx(xe, {
                      size: "sm",
                      className: "ms-1 btn-min-100",
                      variant: "secondary",
                      onClick: m,
                      children: "Close",
                    }),
                    s.jsx(xe, {
                      size: "sm",
                      className: "ms-1 btn-min-100",
                      variant: "primary",
                      onClick: v,
                      disabled: !uK(o.sub),
                      children: "Link User",
                    }),
                  ],
                }),
              ],
            }),
          ],
        }),
      })
    );
  },
  uY = () => {
    const t = Ae(),
      e = Re((b) => b.ccisUserFilter),
      { data: n, isFetching: r, error: i } = LH(e),
      [o, a] = k.useState(!1),
      [l, c] = k.useState(null),
      u = k.useRef(null),
      d = n ?? [],
      h = (b) => {
        t(xG()), c(b), a(!0);
      };
    let f =
        n == null
          ? void 0
          : n.map((b, g) => {
              const y = g === n.length - Jt;
              return s.jsxs(
                "tr",
                {
                  ref: y ? u : null,
                  children: [
                    s.jsx("td", { children: b.email }),
                    s.jsx("td", { children: b.ccisId }),
                    s.jsx("td", { children: b.sub }),
                    s.jsx("td", { children: b.isApproved ? "True" : "False" }),
                    s.jsx("td", { children: b.isLockedOut ? "True" : "False" }),
                    s.jsx("td", { children: b.comment }),
                    s.jsx("td", {
                      children:
                        b.isApproved && !b.isLockedOut
                          ? s.jsx(Wb, {
                              className: "me-1 mb-1",
                              title: "Link sub",
                              onClick: () => h(b),
                            })
                          : s.jsx(s.Fragment, {}),
                    }),
                  ],
                },
                b.ccisId
              );
            }),
      p;
    r
      ? (p = s.jsx("tbody", {}))
      : i
      ? (p = s.jsx("tbody", {}))
      : (p = s.jsx("tbody", { children: f }));
    let m;
    r
      ? (m = s.jsx(Ve, { animation: "border", variant: "primary" }))
      : i
      ? (m = s.jsx(Qe, { error: "Failed to retrieve CCIS Users." }))
      : (n == null ? void 0 : n.length) === 0
      ? (m = s.jsx("div", { children: "No data found." }))
      : (m = s.jsx(s.Fragment, {}));
    const v = { value: e.sortByParameters, reducer: MG };
    function C() {
      a(!1);
    }
    return s.jsxs("div", {
      style: { height: Sa, overflowY: "auto" },
      children: [
        s.jsxs(Gi, {
          striped: !0,
          bordered: !0,
          hover: !0,
          size: "sm",
          children: [
            s.jsx("thead", {
              children: s.jsxs("tr", {
                children: [
                  s.jsx(fe, {
                    headerText: "Email",
                    sortByFieldName: "email",
                    ...v,
                    children: s.jsx(ze, {
                      id: "emailSearch",
                      value: e.email,
                      reducer: LG,
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "User Id",
                    isSortable: !1,
                    ...v,
                    children: s.jsx(ze, {
                      id: "debtorGroupNameSearch",
                      value: e.ccisId,
                      reducer: DG,
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "Sub",
                    sortByFieldName: "sub",
                    ...v,
                    children: s.jsx(ze, {
                      id: "subSearch",
                      value: e.sub,
                      reducer: _G,
                    }),
                  }),
                  s.jsx(fe, {
                    headerText: "Approved",
                    sortByFieldName: "isApproved",
                    ...v,
                    children: s.jsx("div", {}),
                  }),
                  s.jsx(fe, {
                    headerText: "Locked Out",
                    sortByFieldName: "isLockedOut",
                    ...v,
                    children: s.jsx("div", {}),
                  }),
                  s.jsx(fe, {
                    headerText: "Comment",
                    isSortable: !1,
                    ...v,
                    children: s.jsx(ze, {
                      id: "commentSearch",
                      value: e.comment,
                      reducer: PG,
                    }),
                  }),
                  s.jsx("th", {
                    className: "text-center alt align-top",
                    style: { width: "4%" },
                    children: "Actions",
                  }),
                ],
              }),
            }),
            p,
          ],
        }),
        l
          ? s.jsx(cY, {
              ccisUser: l,
              showModal: o,
              onModalClose: C,
              userIsNew: l.sub === null,
            })
          : s.jsx(s.Fragment, {}),
        m,
        s.jsx(xa, {
          items: d,
          isFetching: r,
          error: i,
          lastRowRef: u,
          pageSize: e.pageSize,
          pageSizeReducer: FG,
        }),
      ],
    });
  };
function dY() {
  const t = Ae(),
    e = () => {
      t(UG());
    },
    n = () => {
      t(BG());
    },
    [r, { isLoading: i, error: o }] = FH();
  let a;
  i
    ? (a = s.jsx(Ve, { animation: "border", variant: "primary" }))
    : o
    ? (a = s.jsx(Qe, { error: "Failed to user cache." }))
    : (a = s.jsx(s.Fragment, {}));
  const l = () => {
    r();
  };
  return s.jsx(s.Fragment, {
    children: s.jsxs(G, {
      children: [
        s.jsx(G.Header, { children: "Users" }),
        s.jsxs(G.Body, {
          children: [
            s.jsx(M, {
              className: "mb-3",
              children: s.jsx(D, {
                children: s.jsxs("div", {
                  className: "d-flex justify-content-between",
                  children: [
                    s.jsx("div", {
                      children: s.jsxs(xe, {
                        size: "sm",
                        variant: "outline-warning",
                        onClick: l,
                        className: "btn-min-100 ms-1",
                        children: [
                          s.jsx(Jb, { className: "me-1 mb-1" }),
                          s.jsx("span", { children: " Clear Cache" }),
                        ],
                      }),
                    }),
                    s.jsxs("div", {
                      children: [
                        s.jsxs(xe, {
                          size: "sm",
                          variant: "outline-warning btn-min-100 ms-1",
                          onClick: e,
                          children: [
                            s.jsx(gr, { className: "me-1 mb-1" }),
                            s.jsx("span", { children: " Clear Filter" }),
                          ],
                        }),
                        s.jsxs(xe, {
                          size: "sm",
                          variant: "outline-secondary",
                          className: "ms-1 btn-min-100",
                          onClick: n,
                          children: [
                            s.jsx(fi, { className: "me-1 mb-1" }),
                            s.jsx("span", { children: " Clear Sort" }),
                          ],
                        }),
                      ],
                    }),
                  ],
                }),
              }),
            }),
            a,
            s.jsx(uY, {}),
          ],
        }),
      ],
    }),
  });
}
const oE = ({
    systemInformation: t,
    header: e,
    displayEditAction: n = !1,
    onEditClick: r = null,
  }) => {
    var i;
    return t
      ? s.jsxs(G, {
          children: [
            s.jsxs(Wn, { children: [e, " #", t.id] }),
            s.jsxs(An, {
              className: "sysinfo-panel-body",
              children: [
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "date",
                      labelColSize: 3,
                      label: "Date:",
                      className: "input-label",
                    }),
                    s.jsx(D, { children: t == null ? void 0 : t.date }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "time",
                      labelColSize: 3,
                      label: "Time:",
                      className: "input-label",
                    }),
                    s.jsx(D, { children: t == null ? void 0 : t.time }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "name",
                      labelColSize: 3,
                      label: "Name:",
                      className: "input-label",
                    }),
                    s.jsx(D, { children: t == null ? void 0 : t.userName }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "company",
                      labelColSize: 3,
                      label: "Company:",
                      className: "input-label",
                    }),
                    s.jsx(D, { children: t == null ? void 0 : t.userCompany }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "version",
                      labelColSize: 3,
                      label: "Version:",
                      className: "input-label",
                    }),
                    s.jsx(D, { children: t == null ? void 0 : t.version }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "licenceSerial",
                      labelColSize: 3,
                      label: "Serial Number:",
                      className: "input-label",
                    }),
                    s.jsx(D, {
                      className: "licence-number fw-500 letter-space-3",
                      children: t == null ? void 0 : t.licenceSerialNumber,
                    }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "userPhone",
                      labelColSize: 3,
                      label: "Phone Number:",
                      className: "input-label",
                    }),
                    s.jsx(D, { children: t == null ? void 0 : t.phone }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "userPhone",
                      labelColSize: 3,
                      label: "Email:",
                      className: "input-label",
                    }),
                    s.jsx(D, { children: t == null ? void 0 : t.email }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "regStatus",
                      labelColSize: 3,
                      label: "Registration Status:",
                      className: "input-label",
                    }),
                    s.jsx(D, {
                      children: t == null ? void 0 : t.registrationStatus,
                    }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "licenceType",
                      labelColSize: 3,
                      label: "Licence Type:",
                      className: "input-label",
                    }),
                    s.jsx(D, { children: t == null ? void 0 : t.licenceType }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "valDate",
                      labelColSize: 3,
                      label: "Licence Validation Date:",
                      className: "input-label",
                    }),
                    s.jsx(D, {
                      children:
                        ((i = t == null ? void 0 : t.validationDate) == null
                          ? void 0
                          : i.toString()) ?? "",
                    }),
                    s.jsx(D, {
                      children:
                        n &&
                        s.jsx(Ui, {
                          "data-licence": t.licenceNumber,
                          "data-title": "Edit",
                          size: "18",
                          className: "secondary ms-1",
                          title: "Edit",
                          onClick: () => (r == null ? void 0 : r()),
                        }),
                    }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "networkLicenceUserCount",
                      labelColSize: 3,
                      label: "Network Licence User Count:",
                      className: "input-label",
                    }),
                    s.jsx(D, { children: t == null ? void 0 : t.licenceCount }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "maxLicenceUserCount",
                      labelColSize: 3,
                      label: "Max User Licence Count Achieved:",
                      className: "input-label",
                    }),
                    s.jsx(D, {
                      children: t == null ? void 0 : t.licenceCountMax,
                    }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "currentUserIdentifier",
                      labelColSize: 3,
                      label: "Current User Identifier:",
                      className: "input-label",
                    }),
                    s.jsx(D, {
                      children: t == null ? void 0 : t.currentUserIdentifier,
                    }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "licencePathFolder",
                      labelColSize: 3,
                      label: "Licence Path Folder:",
                      className: "input-label",
                    }),
                    s.jsx(D, {
                      className: "small",
                      children: t == null ? void 0 : t.licencePath,
                    }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "licenceLastGood",
                      labelColSize: 3,
                      label: "Licence Last Good:",
                      className: "input-label",
                    }),
                    s.jsx(D, { children: t == null ? void 0 : t.lastGood }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "hddSerial",
                      labelColSize: 3,
                      label: "HDD Serial#:",
                      className: "input-label",
                    }),
                    s.jsx(D, { children: t == null ? void 0 : t.hddSerial }),
                  ],
                }),
                s.jsxs(M, {
                  children: [
                    s.jsx(L, {
                      id: "hddInfo",
                      labelColSize: 3,
                      label: "HDD Info:",
                      className: "input-label",
                    }),
                    s.jsx(D, { children: t == null ? void 0 : t.hddInfo }),
                  ],
                }),
              ],
            }),
          ],
        })
      : s.jsx(s.Fragment, {});
  },
  hY = () => {
    const { id: t } = ob(),
      e = Lt(),
      n = () => {
        e("/client-support/system-info-list");
      },
      r = (t == null ? void 0 : t.toString()) ?? "",
      { data: i, isFetching: o, error: a } = Q$(r);
    let l = null,
      c = null;
    i && ((l = i[0]), (c = i[1]));
    const u = () => {
      e("/client-support/view-exemption", { state: l });
    };
    let d = s.jsx(s.Fragment, {});
    return (
      o
        ? (d = s.jsx(Ve, { animation: "border", variant: "primary" }))
        : a
        ? (d = s.jsx(Qe, { error: a }))
        : (d = s.jsx(s.Fragment, {
            children: s.jsx(M, {
              className: "card-row",
              children: s.jsx(D, {
                children: s.jsxs(G, {
                  children: [
                    s.jsx(Wn, { children: "Client Information" }),
                    s.jsxs(An, {
                      children: [
                        s.jsxs(M, {
                          className: "card-row",
                          children: [
                            s.jsx(D, {
                              children:
                                c &&
                                s.jsx(oE, {
                                  systemInformation: c,
                                  header: "Current",
                                  onEditClick: u,
                                  displayEditAction: !0,
                                }),
                            }),
                            s.jsx(D, {
                              children:
                                l &&
                                s.jsx(oE, {
                                  systemInformation: l,
                                  header: "Selected",
                                }),
                            }),
                          ],
                        }),
                        s.jsx("br", {}),
                        s.jsx("div", {
                          className: "text-center",
                          children: s.jsx(s.Fragment, {
                            children: s.jsxs(xe, {
                              id: "backButton",
                              variant: "danger",
                              type: "button",
                              size: "sm",
                              className: "ms-1 btn-min-100",
                              onClick: n,
                              children: [
                                s.jsx(xf, { className: "me-1 mb-1" }),
                                " Back",
                              ],
                            }),
                          }),
                        }),
                      ],
                    }),
                  ],
                }),
              }),
            }),
          })),
      s.jsx(s.Fragment, { children: d })
    );
  },
  fY = ({ systemInformation: t }) => {
    const e = Ae(),
      { data: n, isFetching: r, error: i } = K$(t.licenceNumber),
      o = n ?? [],
      [a, { error: l, isLoading: c }] = q$(),
      [u, { error: d, isLoading: h }] = G$(),
      [f] = W$(),
      p = Re((F) => F.saveLicenceValidationExemption),
      [m, v] = k.useState(!0),
      C = `/client-support/view-detail/${t.lookupId}`,
      b = t.licenceNumber,
      g = l ?? d,
      y = c || h;
    k.useEffect(() => {
      e(NG(b));
    }, [b]),
      k.useEffect(() => {
        p.wasSubmitted === !0 && T();
      }, [p.wasSubmitted]);
    const w = (F) => {
        v(!1), e(RG(F));
      },
      E = (F) => {
        const $ = {
          id: F.id,
          exemptionDate: p.exemptionDate,
          licenceNumber: F.licenceNumber,
          wasSubmitted: !1,
        };
        f($).unwrap();
      },
      S = () => {
        T();
      },
      T = () => {
        v(!0), e(AG(t.licenceNumber));
      },
      I = s.jsx(s.Fragment, {
        children: s.jsxs(M, {
          className: "mb-2",
          children: [
            s.jsx(L, {
              id: "exemptDateLabel",
              labelColSize: 3,
              label: "Validation Exempt Date",
              className: "input-label",
              isRequired: !0,
            }),
            s.jsx(D, {
              sm: 4,
              children: s.jsx(re, {
                id: "valExemptDate",
                value: p.exemptionDate,
                reducer: IG,
                type: le.Date,
                isRequired: !0,
              }),
            }),
            m === !1 &&
              s.jsx(D, {
                sm: 5,
                children: s.jsxs(xe, {
                  id: "cancelButton",
                  variant: "primary",
                  type: "button",
                  size: "sm",
                  className: "ms-1 btn-min-100",
                  onClick: S,
                  children: [s.jsx(Zb, { className: "me-1 mb-1" }), " Cancel"],
                }),
              }),
          ],
        }),
      });
    let R = o.map((F) => {
        var X, W, z;
        let $ = F.id == p.id;
        const Z = $ ? "selected-row" : "";
        return s.jsxs(
          "tr",
          {
            className: Z,
            children: [
              s.jsx("td", {
                children: dr(
                  ((X = F.createDate) == null ? void 0 : X.toString()) ?? ""
                ),
              }),
              s.jsx("td", { children: F.ccisUsername }),
              s.jsx("td", {
                children: dr(
                  ((W = F.exemptionDate) == null ? void 0 : W.toString()) ?? ""
                ),
              }),
              s.jsx("td", { children: F.used ? "true" : "false" }),
              s.jsx("td", {
                children:
                  F.dateUse !== null
                    ? dr(
                        ((z = F.dateUse) == null ? void 0 : z.toString()) ?? ""
                      )
                    : "-",
              }),
              s.jsx("td", {
                children:
                  $ === !1 &&
                  s.jsxs(s.Fragment, {
                    children: [
                      s.jsx(Ui, {
                        size: "18",
                        "data-id": F.id,
                        "data-title": "Edit",
                        className: "secondary ms-1",
                        title: "Edit",
                        onClick: () => w(F),
                      }),
                      s.jsx($c, {
                        size: "18",
                        "data-id": F.id,
                        "data-title": "Delete",
                        className: "danger ms-1",
                        title: "Delete",
                        onClick: () => E(F),
                      }),
                    ],
                  }),
              }),
            ],
          },
          F.id
        );
      }),
      A;
    r
      ? (A = s.jsx("tbody", {
          children: s.jsx("tr", {
            children: s.jsx("td", {
              colSpan: 7,
              className: "text-center",
              children: s.jsx(Ve, { animation: "border", variant: "primary" }),
            }),
          }),
        }))
      : i
      ? (A = s.jsx("tbody", {}))
      : (A = s.jsx("tbody", {
          children:
            R.length > 0
              ? R
              : s.jsx("tr", {
                  children: s.jsx("td", {
                    colSpan: 7,
                    className: "text-center",
                    children: "No records found",
                  }),
                }),
        }));
    const O = s.jsxs(s.Fragment, {
        children: [
          m === !0
            ? s.jsx(Ys, { className: "me-1 mb-1" })
            : s.jsx(Ui, { className: "me-1 mb-1" }),
          s.jsxs("span", { children: [m === !0 ? " Add" : " Update", " "] }),
        ],
      }),
      _ = async (F) => {
        m === !0 ? await a(F).unwrap() : await u(F).unwrap();
      };
    return s.jsx(s.Fragment, {
      children: s.jsx(Or, {
        children: s.jsx(M, {
          className: "card-row",
          children: s.jsx(D, {
            children: s.jsxs(G, {
              children: [
                s.jsxs(Wn, { children: ["Add Exemption for Licence: ", b] }),
                s.jsxs(An, {
                  children: [
                    s.jsx(M, {
                      className: "card-row",
                      children: s.jsx(Pr, {
                        backRoute: C,
                        performMutation: _,
                        isSubmitting: y,
                        submitError: g,
                        entity: p,
                        setEntityAsSubmittedReducer: kG,
                        submitButtonContent: O,
                        children: I,
                      }),
                    }),
                    s.jsxs(Or, {
                      children: [
                        s.jsx("br", {}),
                        "Previous Validation Exemption Dates",
                        s.jsx(M, {
                          className: "card-row",
                          children: s.jsx(D, {
                            sm: 12,
                            className: "text-center",
                            children: s.jsxs(Gi, {
                              striped: !0,
                              bordered: !0,
                              hover: !0,
                              size: "sm",
                              className: "historical-exemptions",
                              children: [
                                s.jsx("thead", {
                                  children: s.jsxs("tr", {
                                    children: [
                                      s.jsx("th", { children: "Create Date" }),
                                      s.jsx("th", { children: "User" }),
                                      s.jsx("th", {
                                        children: "Exemption Date",
                                      }),
                                      s.jsx("th", { children: "Used" }),
                                      s.jsx("th", { children: "Date Used" }),
                                      s.jsx("th", {
                                        className: "text-center alt align-top",
                                        style: { width: "12%" },
                                        children: "Actions",
                                      }),
                                    ],
                                  }),
                                }),
                                A,
                              ],
                            }),
                          }),
                        }),
                      ],
                    }),
                  ],
                }),
              ],
            }),
          }),
        }),
      }),
    });
  };
function pY() {
  const { state: t } = Dn();
  return s.jsx(fY, { systemInformation: t });
}
const mY = ({ headers: t, sortByProps: e, ...n }) =>
    s.jsx(s.Fragment, {
      children: t.map((r, i) =>
        s.jsx(
          fe,
          {
            width: `${r.width}%`,
            headerText: r.headerText,
            sortByFieldName: r.headerText.toLowerCase().replace(/ /g, ""),
            ...e,
            ...n,
            children: s.jsx(s.Fragment, {}),
          },
          i
        )
      ),
    }),
  gY = ({ onClearFilterClick: t, onClearSortClick: e }) =>
    s.jsxs(s.Fragment, {
      children: [
        s.jsxs(xe, {
          id: "filter",
          size: "sm",
          variant: "outline-warning btn-min-100 ms-1 ",
          onClick: t,
          children: [
            s.jsx(gr, { className: "me-1 mb-1" }),
            s.jsx("span", { children: " Clear Filter" }),
          ],
        }),
        s.jsxs(xe, {
          id: "sort",
          size: "sm",
          variant: "outline-secondary",
          className: "ms-1 btn-min-100",
          onClick: e,
          children: [
            s.jsx(fi, { className: "me-1 mb-1" }),
            s.jsx("span", { children: " Clear Sort" }),
          ],
        }),
      ],
    }),
  yY = () => {
    const t = Ae(),
      e = Re((R) => R.quickInvoice),
      n = e.filter,
      r = e.debtorSelection,
      { data: i, error: o, isFetching: a } = xW(n),
      [l, { error: c, isLoading: u }] = EW(),
      d = o ?? c,
      h = a || u,
      f = k.useRef(null),
      p = (i == null ? void 0 : i.items) || [],
      m = (i == null ? void 0 : i.pagination.total) || 0,
      v = r.excludedDebtorCodes.length,
      C = r.useDebtorFilter ? m - v : r.debtorCodes.length,
      b =
        p == null
          ? void 0
          : p.map((R, A) => {
              var F, $;
              const O =
                  ((r.useDebtorFilter &&
                    !r.excludedDebtorCodes.includes(R.debtNumber)) ||
                    ((F = r.debtorCodes) == null
                      ? void 0
                      : F.includes(R.debtNumber))) ??
                  !1,
                _ = A === p.length - Jt;
              return s.jsxs(
                "tr",
                {
                  ref: _ ? f : null,
                  children: [
                    s.jsx("td", { children: R.debtNumber }),
                    s.jsx("td", { children: R.debtName }),
                    s.jsx("td", { className: "money", children: R.currency }),
                    s.jsx("td", { children: R.discount }),
                    s.jsx("td", { children: R.lastRecur }),
                    s.jsx("td", { children: R.recur }),
                    s.jsx("td", { children: R.nextRecur }),
                    s.jsx("td", {
                      children: dr(
                        (($ = R.lastInvoiceDate) == null
                          ? void 0
                          : $.toString()) ?? ""
                      ),
                    }),
                    s.jsx("td", { children: R.licenceCount }),
                    s.jsx("td", {
                      className: "money",
                      children: $a(R.fee, R.currency),
                    }),
                    s.jsx("td", { children: R.newLicence }),
                    s.jsx("td", {
                      className: "money",
                      children: $a(R.initFee, R.currency),
                    }),
                    s.jsx("td", { children: R.clerkLicenceCount }),
                    s.jsx("td", {
                      className: "money",
                      children: $a(R.clerkFee, R.currency),
                    }),
                    s.jsx("td", { children: R.clerkNewLicence }),
                    s.jsx("td", {
                      className: "money",
                      children: $a(R.clerkInitFee, R.currency),
                    }),
                    s.jsx("td", {
                      className: "money",
                      children: $a(R.total, R.currency),
                    }),
                    s.jsx("td", {
                      children: s.jsx(di, {
                        id: `debtor-checkbox-${A}`,
                        label: "",
                        value: R.debtNumber,
                        checked: O,
                        reducer: XG,
                      }),
                    }),
                  ],
                },
                R.debtNumber
              );
            });
    let g;
    h
      ? (g = s.jsx(Ve, { animation: "border", variant: "primary" }))
      : d
      ? (g = s.jsx(Qe, { error: d }))
      : p.length === 0
      ? (g = s.jsx("div", { children: "No data found." }))
      : (g = s.jsx(s.Fragment, {}));
    const y = [
        { headerText: "Debt Number", width: 7 },
        { headerText: "Debt Name", width: 13 },
        { headerText: "Currency", width: 5 },
        { headerText: "Discount", width: 7 },
        { headerText: "Last Recur", width: 4 },
        { headerText: "Recur", width: 4 },
        { headerText: "Next Recur", width: 4 },
        { headerText: "Last Invoice Date", width: 8 },
        { headerText: "Licence Count", width: 5 },
        { headerText: "Fee", width: 5 },
        { headerText: "New Licence", width: 5 },
        { headerText: "Init Fee", width: 5 },
        { headerText: "Clerk Licence Count", width: 5 },
        { headerText: "Clerk Fee", width: 5 },
        { headerText: "Clerk New Licence", width: 5 },
        { headerText: "Clerk Init Fee", width: 5 },
        { headerText: "Total", width: 5 },
      ],
      w = { value: e.sortByParameters, reducer: GG },
      E = () => {
        t(WG());
      },
      S = () => {
        t(VG()), t(DW(["QuickInvoiceSearchDefaults"]));
      },
      { handleSubmit: T } = Aj({ performMutation: l, clearEntityReducer: JG }),
      I = () => {
        h || (t(ZG()), T(e));
      };
    return s.jsxs(s.Fragment, {
      children: [
        s.jsx(M, {
          className: "mb-3",
          children: s.jsx(D, {
            children: s.jsxs("div", {
              className: "d-flex justify-content-between",
              children: [
                s.jsxs("div", {
                  className: "d-flex align-items-center",
                  children: [
                    s.jsxs(xe, {
                      id: "filter",
                      size: "sm",
                      variant: "outline-primary btn-min-100 ms-1",
                      onClick: I,
                      disabled: C === 0 || h,
                      children: [
                        s.jsx(Yb, { className: "me-1 mb-1" }),
                        s.jsx("span", { children: " Create Invoices" }),
                      ],
                    }),
                    s.jsxs("div", {
                      className: "ms-3 small-font",
                      children: [
                        s.jsxs("span", {
                          className: "number-text",
                          children: [C, " "],
                        }),
                        "invoices will be created",
                      ],
                    }),
                  ],
                }),
                s.jsx("div", {
                  children: s.jsx(gY, {
                    onClearFilterClick: S,
                    onClearSortClick: E,
                  }),
                }),
              ],
            }),
          }),
        }),
        s.jsxs("div", {
          style: { paddingBottom: "1em" },
          children: [
            s.jsxs(Gi, {
              striped: !0,
              bordered: !0,
              hover: !0,
              size: "sm",
              children: [
                s.jsx("thead", {
                  children: s.jsxs("tr", {
                    children: [
                      s.jsx(mY, { headers: y, sortByProps: w }),
                      s.jsx("th", {
                        className: "text-center alt align-bottom",
                        style: { width: "3%" },
                        children: s.jsx(di, {
                          id: "all-quick-invoices",
                          label: "",
                          checked:
                            r.useDebtorFilter &&
                            r.excludedDebtorCodes.length === 0,
                          reducer: YG,
                          className: "header-checkbox",
                        }),
                      }),
                    ],
                  }),
                }),
                s.jsx("tbody", { children: !a && !o && b }),
              ],
            }),
            g,
            s.jsx(xa, {
              items: p,
              isFetching: a,
              error: o,
              lastRowRef: f,
              pageSize: n.pageSize,
              pageSizeReducer: QG,
              totalCount: i == null ? void 0 : i.pagination.total,
              autoScroll: !1,
            }),
          ],
        }),
      ],
    });
  },
  vY = () => {
    const t = Ae(),
      n = Re((C) => C.quickInvoice).filter,
      { data: r, isFetching: i, error: o } = Zs(),
      { data: a, isFetching: l, error: c } = uA({ includeAll: !0 }),
      { data: u, isFetching: d, error: h } = pC(),
      { data: f, isFetching: p, error: m } = TW(n.organisationId),
      v = c ?? o ?? h ?? m;
    return (
      k.useEffect(() => {
        f && t(lW(f));
      }, [n.organisationId, p, f]),
      s.jsxs(s.Fragment, {
        children: [
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "organizationLabel",
                labelColSize: 1,
                label: "Organisation",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 2,
                children: s.jsx(ot, {
                  id: "organisation",
                  value: n.organisationId,
                  reducer: eW,
                  items: r,
                  displayValue: "name",
                  idKey: "id",
                  isFetching: i,
                  error: o,
                  showDefaultText: !1,
                }),
              }),
              s.jsx(L, {
                id: "miscellaneousLabel",
                labelColSize: 2,
                label: "Miscellaneous",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(di, {
                  id: "miscellaneous",
                  label: "",
                  checked: n.doNewOnly,
                  reducer: oW,
                  className: "sm",
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "transactionDateLabel",
                labelColSize: 1,
                label: "Transaction Date",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 2,
                children: s.jsx(re, {
                  id: "transactionDate",
                  value: n.transactionDate,
                  reducer: nW,
                  type: le.Date,
                }),
              }),
              s.jsx(L, {
                id: "fromDebtorLabel",
                labelColSize: 2,
                label: "From Debtor",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 1,
                children: s.jsx(re, {
                  id: "fromDebtor",
                  value: n.fromDebtor,
                  reducer: rW,
                  type: le.Text,
                }),
              }),
              s.jsx(L, {
                id: "toDebtorLabel",
                labelColSize: 3,
                label: "To Debtor",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 1,
                children: s.jsx(re, {
                  id: "toDebtor",
                  value: n.toDebtor,
                  reducer: iW,
                  type: le.Text,
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "billingTypeLabel",
                labelColSize: 1,
                label: "Billing Type",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(ot, {
                  id: "billingType",
                  value: n.billingType,
                  reducer: aW,
                  items: u,
                  displayValue: "description",
                  idKey: "id",
                  isFetching: d,
                  error: h,
                }),
              }),
              s.jsx(L, {
                id: "discountTypeLabel",
                labelColSize: 1,
                label: "Discount Type",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(ot, {
                  id: "discountType",
                  value: n.discountType,
                  reducer: tW,
                  items: a,
                  displayValue: "description",
                  idKey: "id",
                  isFetching: l,
                  showDefaultText: !1,
                  error: c,
                }),
              }),
              s.jsx(L, {
                id: "vatLabel",
                labelColSize: 1,
                label: "Pays Vat",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(di, {
                  id: "paysVat",
                  label: "",
                  checked: n.paysVat,
                  reducer: sW,
                  className: "sm",
                }),
              }),
            ],
          }),
          v && s.jsx(Qe, { error: v }),
        ],
      })
    );
  },
  bY = () => {
    const t = Ae(),
      e = Re((A) => A.quickInvoice),
      n = e.filter,
      r = e.header,
      { data: i, isFetching: o, error: a } = kW(),
      { data: l, isFetching: c, error: u } = RW(n.organisationId),
      { data: d, isFetching: h, error: f } = NW(),
      { data: p, isFetching: m, error: v } = IW(n),
      { data: C, isFetching: b, error: g } = AW(n.organisationId),
      { data: y, isFetching: w, error: E } = jW(),
      { data: S, isFetching: T, error: I } = OW(n.organisationId),
      R = a || f || v || u || g || E || I;
    return (
      k.useEffect(() => {
        p && t(cW(p));
      }, [n.organisationId, m, p]),
      s.jsxs(s.Fragment, {
        children: [
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "headerLabel",
                labelColSize: 1,
                label: "Header",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 2,
                children: s.jsx(re, {
                  id: "header",
                  value: r.header,
                  reducer: uW,
                  type: le.Text,
                }),
              }),
              s.jsx(L, {
                id: "invoiceTypeLabel",
                labelColSize: 2,
                label: "Invoice Type",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(ot, {
                  id: "invoiceType",
                  value: r.invoiceType,
                  reducer: dW,
                  items: d,
                  displayValue: "description",
                  idKey: "id",
                  isFetching: h,
                  error: f,
                  showDefaultText: !1,
                }),
              }),
              s.jsx(L, {
                id: "standingRentalsLabel",
                labelColSize: 1,
                label: "Standing Rentals",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(ot, {
                  id: "standingRentals",
                  value: r.standingRental,
                  reducer: hW,
                  items: i,
                  displayValue: "description",
                  idKey: "code",
                  isFetching: o,
                  error: a,
                  showDefaultText: !1,
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "dateLabel",
                labelColSize: 1,
                label: "Date",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 2,
                children: s.jsx(re, {
                  id: "date",
                  value: r.date,
                  reducer: fW,
                  type: le.Date,
                }),
              }),
              s.jsx(L, {
                id: "forFinancialPeriodLabel",
                labelColSize: 2,
                label: "For Financial Period",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(ot, {
                  id: "forFinancialPeriod",
                  value: r.forFinancialPeriod,
                  reducer: mW,
                  items: l,
                  displayValue: "description",
                  idKey: "id",
                  isFetching: c,
                  error: u,
                  showDefaultText: !1,
                }),
              }),
              s.jsx(L, {
                id: "rentalsDuringMonthLabel",
                labelColSize: 1,
                label: "Rentals During Month",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(ot, {
                  id: "rentalsDuringMonth",
                  value: r.rentalsDuringMonth,
                  reducer: pW,
                  items: i,
                  displayValue: "description",
                  idKey: "code",
                  isFetching: o,
                  error: a,
                  showDefaultText: !1,
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "vatTypeLabel",
                labelColSize: 1,
                label: "VAT Type",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(ot, {
                  id: "vatType",
                  value: r.vatType,
                  reducer: gW,
                  items: C,
                  displayValue: "description",
                  idKey: "code",
                  isFetching: b,
                  error: g,
                  showDefaultText: !1,
                }),
              }),
              s.jsx(L, {
                id: "forFinancialYearLabel",
                labelColSize: 1,
                label: "For Financial Year",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(ot, {
                  id: "forFinancialYear",
                  value: r.forFinancialYear,
                  reducer: vW,
                  items: y,
                  displayValue: "description",
                  idKey: "id",
                  isFetching: w,
                  error: E,
                  showDefaultText: !1,
                }),
              }),
              s.jsx(L, {
                id: "advancedRentalsLabel",
                labelColSize: 1,
                label: "Advanced Rentals",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(ot, {
                  id: "advancedRentals",
                  value: r.advancedRentals,
                  reducer: yW,
                  items: i,
                  displayValue: "description",
                  idKey: "code",
                  isFetching: o,
                  error: a,
                  showDefaultText: !1,
                }),
              }),
            ],
          }),
          s.jsxs(M, {
            className: "mb-2",
            children: [
              s.jsx(L, {
                id: "divisionLabel",
                labelColSize: 1,
                label: "Division",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(ot, {
                  id: "division",
                  value: r.division,
                  reducer: bW,
                  items: S,
                  displayValue: "description",
                  idKey: "id",
                  isFetching: T,
                  error: I,
                  showDefaultText: !1,
                }),
              }),
              s.jsx(L, {
                id: "orderNumberLabel",
                labelColSize: 1,
                label: "Order Number",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 1,
                children: s.jsx(re, {
                  id: "orderNumber",
                  value: r.orderNumber,
                  reducer: wW,
                  type: le.Text,
                }),
              }),
              s.jsx(L, {
                id: "licenceSalesLabel",
                labelColSize: 3,
                label: "Licence Sales",
                className: "input-label",
              }),
              s.jsx(D, {
                sm: 3,
                children: s.jsx(ot, {
                  id: "licenceSales",
                  value: r.licenceSales,
                  reducer: CW,
                  items: i,
                  displayValue: "description",
                  idKey: "code",
                  isFetching: o,
                  error: a,
                  showDefaultText: !1,
                }),
              }),
            ],
          }),
          R && s.jsx(Qe, { error: R }),
        ],
      })
    );
  },
  CY = () =>
    s.jsxs(s.Fragment, {
      children: [
        s.jsxs(G, {
          className: "mb-3",
          children: [
            s.jsx(G.Header, { children: "Search Filter" }),
            s.jsx(G.Body, { children: s.jsx(vY, {}) }),
          ],
        }),
        s.jsxs(G, {
          className: "mb-3",
          children: [
            s.jsx(G.Header, { children: "Invoice Header Details" }),
            s.jsx(G.Body, { children: s.jsx(bY, {}) }),
          ],
        }),
        s.jsxs(G, {
          className: "mb-3",
          children: [
            s.jsx(G.Header, { children: "Generate Invoices" }),
            s.jsx(G.Body, { children: s.jsx(yY, {}) }),
          ],
        }),
      ],
    }),
  wY = tm.createRoot(document.getElementById("root")),
  SY = l2(
    ug(
      s.jsxs(Ue, {
        path: "/",
        element: s.jsx(d$, {}),
        errorElement: s.jsx(Qe, { error: "Something went wrong..." }),
        children: [
          s.jsx(Ue, { index: !0, element: s.jsx(rE, {}) }),
          s.jsx(Ue, { path: "login", element: s.jsx(aA, {}) }),
          s.jsx(Ue, { path: "signout-callback-oidc", element: s.jsx(j9, {}) }),
          s.jsx(Ue, { path: ur, element: s.jsx(rE, {}) }),
          s.jsx(Ue, { path: "debtors", element: s.jsx(S9, {}) }),
          s.jsx(Ue, { path: "debtor-groups", element: s.jsx(I9, {}) }),
          s.jsx(Ue, { path: "save-debtor-group", element: s.jsx(U9, {}) }),
          s.jsx(Ue, { path: "save-debtor", element: s.jsx(A9, {}) }),
          s.jsx(Ue, { path: "edit-licence", element: s.jsx(_9, {}) }),
          s.jsx(Ue, { path: "save-pending-licence", element: s.jsx(F9, {}) }),
          s.jsx(Ue, {
            path: "select-licence-replacement",
            element: s.jsx(H9, {}),
          }),
          s.jsx(Ue, { path: "replace-licence", element: s.jsx(K9, {}) }),
          s.jsx(Ue, { path: "activate-licence", element: s.jsx(G9, {}) }),
          s.jsx(Ue, { path: "transfer-licence", element: s.jsx(V9, {}) }),
          s.jsx(Ue, { path: "change-licence-count", element: s.jsx(Y9, {}) }),
          s.jsx(Ue, { path: "/delivery-note/:id", element: s.jsx(X9, {}) }),
          s.jsx(Ue, {
            path: "/delivery-note-tracking",
            element: s.jsx(Z9, {}),
          }),
          s.jsx(Ue, { path: "/delivery-note-report", element: s.jsx(eY, {}) }),
          s.jsx(Ue, {
            path: "/edit-delivery-note/:id",
            element: s.jsx(nY, {}),
          }),
          s.jsx(Ue, { path: "quick-invoice", element: s.jsx(CY, {}) }),
          s.jsx(Ue, { path: "reports/licence-list", element: s.jsx(iY, {}) }),
          s.jsx(Ue, {
            path: "client-support/system-info-list",
            element: s.jsx(lY, {}),
          }),
          s.jsx(Ue, {
            path: "client-support/view-detail/:id",
            element: s.jsx(hY, {}),
          }),
          s.jsx(Ue, {
            path: "client-support/view-exemption",
            element: s.jsx(pY, {}),
          }),
          s.jsx(Ue, { path: "unauthorized", element: s.jsx(oY, {}) }),
          s.jsx(Ue, { path: nA, element: s.jsx(aY, {}) }),
          s.jsx(Ue, { path: "/admin/users", element: s.jsx(dY, {}) }),
          s.jsx(Ue, {
            path: "*",
            element: s.jsx(Qe, { error: "Page not found." }),
          }),
        ],
      })
    )
  );
wY.render(
  s.jsx(k.StrictMode, {
    children: s.jsx(BM, {
      instance: ad,
      children: s.jsx(gH, {
        store: ij,
        children: s.jsx(Or, { fluid: !0, children: s.jsx(y2, { router: SY }) }),
      }),
    }),
  })
);
